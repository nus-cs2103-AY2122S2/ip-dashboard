[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"shittake"},"content":"    private String dueDate; // stores when this task is due by","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"shittake"},"content":"    // Constructor for Deadline class","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"shittake"},"content":"    public Deadline(String name, String dueDate) {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"shittake"},"content":"        // Calls Task\u0027s constructor and passes in the name of the task being done","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"shittake"},"content":"    // Overrides the toString() method to include its type \"[D]\" and the due date","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"shittake"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"shittake"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"shittake"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate + \")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"shittake"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"        // Initializes the Interactor object which will interact with the user","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"        Interactor interactor \u003d new Interactor();","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"        // Kickstarts the Interactor","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"        interactor.act();","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shittake":4,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"public class DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"shittake"},"content":"    private String customMessage;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"shittake"},"content":"    // Constructor for the DukeException class","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"shittake"},"content":"    // The customMessage field allows for different error messages to be printed","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"shittake"},"content":"    // This depends on the type of error encountered by the user","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"shittake"},"content":"    public DukeException(String customMessage) {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"shittake"},"content":"        this.customMessage \u003d customMessage;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"    // The toString() method of an Object is overriden","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"shittake"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"shittake"},"content":"        return this.customMessage;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"shittake"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":16}},{"path":"src/main/java/EmptyField.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"public class EmptyField extends DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"shittake"},"content":"    private String field; // stores the field which has no corresponding valid input","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"shittake"},"content":"    // Constructor for EmptyField class","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"shittake"},"content":"    // The field can range from ToDo, Event or Deadline","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"shittake"},"content":"    public EmptyField(String field) {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"        // Calls the DukeException constructor with custom error message","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"        super(\":-( OOPS!!!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"shittake"},"content":"    // Overrides the toString() method for a more specific error message","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"shittake"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"shittake"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"shittake"},"content":"        return super.toString() + \" The description of a \" + this.field + \" cannot be empty.\";","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"shittake"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"shittake"},"content":"    private String period; // stores the period in which the Event will be carried out","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"shittake"},"content":"    // Constructor for Event class","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"shittake"},"content":"    public Event(String name, String period) {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"shittake"},"content":"        // Calls Task\u0027s constructor and passes in the name of the task being done","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"        this.period \u003d period;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"shittake"},"content":"    // Overrides the toString() method to include its type \"[E]\" and the period","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"shittake"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"shittake"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"shittake"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.period + \")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"shittake"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":18}},{"path":"src/main/java/Interactor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"shittake"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"shittake"},"content":"public class Interactor {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"shittake"},"content":"    // lstOfTasks will store a list of things that need to be done","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"shittake"},"content":"    private ArrayList\u003cTask\u003e lstOfTasks;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"shittake"},"content":"    // Constructor for the Interactor object","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"    public Interactor() {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"        this.lstOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"shittake"},"content":"    public void act() {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"shittake"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"shittake"},"content":"        // Prints out a welcome message","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"shittake"},"content":"        welcome();","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"shittake"},"content":"        // Interacts with the user","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"shittake"},"content":"        interact(sc);","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"shittake"},"content":"    // This method gets the bot to interact with the user","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"shittake"},"content":"    public void interact(Scanner sc) {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"shittake"},"content":"        String userLine \u003d sc.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"shittake"},"content":"        // Repeat as long as the user does not exit","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"shittake"},"content":"        while (!userLine.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"shittake"},"content":"            // Echos the input back to the user with a border around the input","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"shittake"},"content":"            String[] splitUp \u003d userLine.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"shittake"},"content":"            // Depending on the command issued by the user, that specific method is called","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"shittake"},"content":"            if (userLine.equals(\"list\")) { // prints out the list of Tasks","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"shittake"},"content":"                printList();","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"shittake"},"content":"            } else if (splitUp.length \u003d\u003d 2 \u0026\u0026 splitUp[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"shittake"},"content":"                markTask(splitUp);","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"shittake"},"content":"            } else if (splitUp.length \u003d\u003d 2 \u0026\u0026 splitUp[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"shittake"},"content":"                unmarkTask(splitUp);","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"shittake"},"content":"            } else if (splitUp.length \u003d\u003d 2 \u0026\u0026 splitUp[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"shittake"},"content":"                deleteTask(splitUp);","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"shittake"},"content":"            } else { // Otherwise, add the event into the To-do list","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"shittake"},"content":"                addTask(userLine);","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"shittake"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"shittake"},"content":"            // Get the next input added by the user","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"shittake"},"content":"            userLine \u003d sc.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"shittake"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"shittake"},"content":"        // Sent when the user wishes to exit from the bot","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"shittake"},"content":"        goodByeMessage();","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"shittake"},"content":"    public void markTask(String[] splitUp) {","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"shittake"},"content":"        int index \u003d Integer.parseInt(splitUp[1]) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"shittake"},"content":"        // Index Error if the number provided by the user is too small/large","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"shittake"},"content":"        if (index \u003e\u003d this.lstOfTasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Item not found!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"shittake"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"shittake"},"content":"            this.lstOfTasks.get(index).mark(); // mark as done","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"shittake"},"content":"            System.out.println(this.lstOfTasks.get(index));","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"shittake"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"shittake"},"content":"    public void unmarkTask(String[] splitUp) {","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"shittake"},"content":"        int index \u003d Integer.parseInt(splitUp[1]) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"shittake"},"content":"        // Index Error if the number provided by the user is too small/large","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"shittake"},"content":"        if (index \u003e\u003d this.lstOfTasks.size() || index \u003c 0) {","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Item not found!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"shittake"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"shittake"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"shittake"},"content":"            this.lstOfTasks.get(index).unmark(); // mark as undone","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"shittake"},"content":"            System.out.println(this.lstOfTasks.get(index));","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"shittake"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"shittake"},"content":"    // This method prints out the welcome message by the chatbot","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"shittake"},"content":"    public void welcome() {","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"shittake"},"content":"        System.out.println(\"Hello! I\u0027m shittake\");","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"shittake"},"content":"        System.out.println(\"What can I do for you? (You may type \u0027bye\u0027 to exit)\");","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"shittake"},"content":"    // This method prints out the GoodBye message by the chatbot","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"shittake"},"content":"    public void goodByeMessage() {","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"shittake"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"shittake"},"content":"    // This method prints out everything that needs to be done now (if any)","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"shittake"},"content":"    public void printList() {","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"shittake"},"content":"        if (this.lstOfTasks.size() \u003d\u003d 0) { // nothing to be done now","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"shittake"},"content":"            System.out.println(\"There are no tasks at the moment.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"shittake"},"content":"        } else { // There is at least one thing to do currently","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"shittake"},"content":"            int noOfItems \u003d this.lstOfTasks.size();","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"shittake"},"content":"            for (int i \u003d 0; i \u003c noOfItems; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"shittake"},"content":"                System.out.print((i+1) + \".\");","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"shittake"},"content":"                // Call the toString() method of each of the Tasks stored in the ArrayList","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"shittake"},"content":"                System.out.println(this.lstOfTasks.get(i));","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"shittake"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"shittake"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"shittake"},"content":"    public void addTask(String userLine) {","lastModifiedDate":"2022-01-19"},{"lineNumber":102,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":103,"author":{"gitId":"shittake"},"content":"        String[] line \u003d userLine.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":104,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":105,"author":{"gitId":"shittake"},"content":"        // Create a new instance of the Event to be added","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"shittake"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-01-19"},{"lineNumber":107,"author":{"gitId":"shittake"},"content":"        if (line[0].equals(\"event\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":108,"author":{"gitId":"shittake"},"content":"            // First, the position of the \"/\" symbol is located","lastModifiedDate":"2022-01-19"},{"lineNumber":109,"author":{"gitId":"shittake"},"content":"            int position \u003d userLine.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-01-19"},{"lineNumber":110,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"shittake"},"content":"            // The name of the activity is sliced out","lastModifiedDate":"2022-01-19"},{"lineNumber":112,"author":{"gitId":"shittake"},"content":"            String name \u003d userLine.substring(6, position - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":113,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":114,"author":{"gitId":"shittake"},"content":"            // The period of the activity is sliced out","lastModifiedDate":"2022-01-19"},{"lineNumber":115,"author":{"gitId":"shittake"},"content":"            String period \u003d userLine.substring(position + 4);","lastModifiedDate":"2022-01-19"},{"lineNumber":116,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"shittake"},"content":"            // An Event instance is created","lastModifiedDate":"2022-01-19"},{"lineNumber":118,"author":{"gitId":"shittake"},"content":"            newTask \u003d new Event(name, period);","lastModifiedDate":"2022-01-19"},{"lineNumber":119,"author":{"gitId":"shittake"},"content":"        } else if (line[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":120,"author":{"gitId":"shittake"},"content":"            if (line.length \u003d\u003d 1) { // if there is nothing else after that","lastModifiedDate":"2022-01-19"},{"lineNumber":121,"author":{"gitId":"shittake"},"content":"                DukeException error \u003d new EmptyField(line[0]);","lastModifiedDate":"2022-01-19"},{"lineNumber":122,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":123,"author":{"gitId":"shittake"},"content":"                // The error is called and the error message is printed","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"shittake"},"content":"                System.out.println(error);","lastModifiedDate":"2022-01-19"},{"lineNumber":125,"author":{"gitId":"shittake"},"content":"            } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"shittake"},"content":"                // Otherwise, the name of the event is sliced out","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"shittake"},"content":"                // A ToDo instance is created","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"shittake"},"content":"                String name \u003d userLine.substring(5);","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"shittake"},"content":"                newTask \u003d new ToDo(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":130,"author":{"gitId":"shittake"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"shittake"},"content":"        } else if (line[0].equals(\"deadline\")){","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"shittake"},"content":"            // First, the position of the \"/\" symbol is located","lastModifiedDate":"2022-01-19"},{"lineNumber":134,"author":{"gitId":"shittake"},"content":"            int position \u003d userLine.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"shittake"},"content":"            // The name of the task is sliced out","lastModifiedDate":"2022-01-19"},{"lineNumber":137,"author":{"gitId":"shittake"},"content":"            String name \u003d userLine.substring(9, position - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":138,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":139,"author":{"gitId":"shittake"},"content":"            // The dueDate (by when) of the task is sliced out","lastModifiedDate":"2022-01-19"},{"lineNumber":140,"author":{"gitId":"shittake"},"content":"            String dueDate \u003d userLine.substring(position + 4);","lastModifiedDate":"2022-01-19"},{"lineNumber":141,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":142,"author":{"gitId":"shittake"},"content":"            // A Deadline instance is created","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"shittake"},"content":"            newTask \u003d new Deadline(name, dueDate);","lastModifiedDate":"2022-01-19"},{"lineNumber":144,"author":{"gitId":"shittake"},"content":"        }  else {","lastModifiedDate":"2022-01-19"},{"lineNumber":145,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":146,"author":{"gitId":"shittake"},"content":"            // Otherwise, the instruction is unknown and cannot be parsed.","lastModifiedDate":"2022-01-19"},{"lineNumber":147,"author":{"gitId":"shittake"},"content":"            DukeException error \u003d new UnknownCall();","lastModifiedDate":"2022-01-19"},{"lineNumber":148,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":149,"author":{"gitId":"shittake"},"content":"            // An UnknownCall error is called and error message is printed out.","lastModifiedDate":"2022-01-19"},{"lineNumber":150,"author":{"gitId":"shittake"},"content":"            System.out.println(error);","lastModifiedDate":"2022-01-19"},{"lineNumber":151,"author":{"gitId":"shittake"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":152,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":153,"author":{"gitId":"shittake"},"content":"        // Add the Task to the ArrayList","lastModifiedDate":"2022-01-19"},{"lineNumber":154,"author":{"gitId":"shittake"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"shittake"},"content":"            this.lstOfTasks.add(newTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":157,"author":{"gitId":"shittake"},"content":"            System.out.println(\"\\t\" + newTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Now you have \" + lstOfTasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":159,"author":{"gitId":"shittake"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":160,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":161,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":162,"author":{"gitId":"shittake"},"content":"    // This method removes a task from the ArrayList","lastModifiedDate":"2022-01-19"},{"lineNumber":163,"author":{"gitId":"shittake"},"content":"    public void deleteTask(String[] splitUp) {","lastModifiedDate":"2022-01-19"},{"lineNumber":164,"author":{"gitId":"shittake"},"content":"        int index \u003d Integer.parseInt(splitUp[1]) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":166,"author":{"gitId":"shittake"},"content":"        // If the index provided is too small/large","lastModifiedDate":"2022-01-19"},{"lineNumber":167,"author":{"gitId":"shittake"},"content":"        if (index \u003c 0 || index \u003e\u003d this.lstOfTasks.size()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Task does not exist!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":169,"author":{"gitId":"shittake"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":170,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":171,"author":{"gitId":"shittake"},"content":"            System.out.println(\"\\t\" + this.lstOfTasks.get(index));","lastModifiedDate":"2022-01-19"},{"lineNumber":172,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":173,"author":{"gitId":"shittake"},"content":"            // Task is removed","lastModifiedDate":"2022-01-19"},{"lineNumber":174,"author":{"gitId":"shittake"},"content":"            this.lstOfTasks.remove(index);","lastModifiedDate":"2022-01-19"},{"lineNumber":175,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":176,"author":{"gitId":"shittake"},"content":"            // The new size of the list is printed out.","lastModifiedDate":"2022-01-19"},{"lineNumber":177,"author":{"gitId":"shittake"},"content":"            int leftOver \u003d this.lstOfTasks.size();","lastModifiedDate":"2022-01-19"},{"lineNumber":178,"author":{"gitId":"shittake"},"content":"            System.out.println(\"Now you have \" + leftOver + \" task(s) in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":179,"author":{"gitId":"shittake"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":180,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":181,"author":{"gitId":"shittake"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":181}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"shittake"},"content":"    private String nameOfTask; // stores the name of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"shittake"},"content":"    private boolean isDone; // stores whether the task is completed or not","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"shittake"},"content":"    // Initializes the to-do event with its name as a String","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"shittake"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"shittake"},"content":"        this.nameOfTask \u003d name;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"shittake"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"    // Sets the task as completed","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"    public void mark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"shittake"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"shittake"},"content":"    // Sets the task as uncompleted","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"shittake"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"shittake"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"shittake"},"content":"    // Obtains the status of the task currently","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"shittake"},"content":"    // If the task is completed, \u0027true\u0027 is returned. Otherwise, \u0027false\u0027 is returned.","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"shittake"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"shittake"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"shittake"},"content":"    // Overrides the toString() method of an object","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"shittake"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"shittake"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"shittake"},"content":"        String fullTerm \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"shittake"},"content":"        // This depends on whether the task is completed yet or not.","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"shittake"},"content":"        // The task is crossed out if it is completed, otherwise, it is not crossed out.","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"shittake"},"content":"        if (this.isDone){","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"shittake"},"content":"            fullTerm +\u003d \"[X] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"shittake"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"shittake"},"content":"            fullTerm +\u003d \"[ ] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"shittake"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"shittake"},"content":"        fullTerm +\u003d this.nameOfTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"shittake"},"content":"        return fullTerm;","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"shittake"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":42}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"shittake"},"content":"    // Constructor for ToDo class","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"shittake"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"shittake"},"content":"        // Calls Task\u0027s constructor and passes in the name of the task being done","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"shittake"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"    // Overrides the toString() method to include its type \"[T]\"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"shittake"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"shittake"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":15}},{"path":"src/main/java/UnknownCall.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"public class UnknownCall extends DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"shittake"},"content":"    // Constructor for UnknownCall class","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"shittake"},"content":"    public UnknownCall() {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"shittake"},"content":"        // Calls DukeException\u0027s constructor with custom error message","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"shittake"},"content":"        super(\":-( OOPS!!!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"shittake"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"shittake"},"content":"    // Overrides the toString() method for a more specific error message to be printed","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"shittake"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"shittake"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"shittake"},"content":"        return super.toString() + \" I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"shittake"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"shittake"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shittake"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"shittake":1}}]
