[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"# Duke.Duke project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zzhikai":2,"-":22}},{"path":"src/main/java/Duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":" * Represents a command.","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    protected String input;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"     * Create a command.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * @param input Input from user.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    public Command(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * Execute command on a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If command not recognized.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"        throw new DukeException(\"Command not supported\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    };","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":29}},{"path":"src/main/java/Duke/Command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.EmptyByException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":" * Represents a command to add deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     * Creates a DeadlineCommand with deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If description is empty or is of an invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    public DeadlineCommand(String description) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        int deadlineMarker \u003d description.indexOf(\"/by\");","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        String[] deadlineInfo \u003d description.split(\"/by \");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"        if (deadlineInfo[0].trim().length() \u003d\u003d 0 ) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please enter Task Description\");","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        if (deadlineMarker \u003d\u003d -1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyByException(\"Please remember to include deadline time with /by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"            this.task \u003d new Deadline(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"        } catch (DateTimeException d) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"invalid date input, use yyyy-MM-dd or dd-MM-yyyy or dd/MM/yyyy or dd:MM:yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please include correct deadline time\");","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"     * Executes DeadlineCommand to add deadline task to a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to add task to.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":51}},{"path":"src/main/java/Duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.EmptyDescriptionException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents a command to delete task.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * Creates a DeleteCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     * @param description Task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If description is empty or is of an invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public DeleteCommand(String description) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            int taskNumber \u003d Integer.valueOf(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input number after unmark\");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"     * Executes DeleteCommand to delete task from a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to delete task from.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList does not contain task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"        taskList.deleteTask(this.taskIndex);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":43}},{"path":"src/main/java/Duke/Command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.EmptyByException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":" * Represents a command to add event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    // private TaskList taskDataList;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * Creates a EventCommand with event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If description is empty or is of an invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    public EventCommand(String description) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        int eventMarker \u003d description.indexOf(\"/at\");","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        String[] eventInfo \u003d description.split(\"/at \");","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        if (eventInfo[0].trim().length() \u003d\u003d 0 ) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please enter Task Description\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        if (eventMarker \u003d\u003d -1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyByException(\"Please remember to include event date with /at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"        this.task \u003d new Event(eventInfo[0], eventInfo[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     * Executes EventCommand to add event task to a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to add Task to.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":44}},{"path":"src/main/java/Duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"    public FindCommand(String searchWord) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"        super(searchWord);","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"        taskList.findTask(this.input);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzhikai":16}},{"path":"src/main/java/Duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":" * Represents a command that list all tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"     * Creates a ListCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * @param description .","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    public ListCommand(String description) {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * Execute ListCommand to list out all tasks of a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList is empty.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        taskList.printOutTaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":30}},{"path":"src/main/java/Duke/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.EmptyDescriptionException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents a command to mark task as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * Creates a MarkCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     * @param taskPosition Position of task in the list of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskPosition is empty or of invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public MarkCommand(String taskPosition) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        super(taskPosition);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        if (taskPosition \u003d\u003d \"\") {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The taskPosition cannot be empty.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            int taskNumber \u003d Integer.valueOf(taskPosition);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input number after mark\");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"     * Execute MarkCommand to mark task as done in a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList does not contain the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"        taskList.mark(this.taskIndex);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":43}},{"path":"src/main/java/Duke/Command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.EmptyDescriptionException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":" * Represents a command to add todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    private TaskList taskListCopy;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * Creates a TodoCommand with todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If description is empty.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    public TodoCommand(String description) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"     * Executes TodoCommand to add todo task to a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to add Task to.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        this.taskListCopy \u003d taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"        this.taskListCopy.addTask(this.task);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":41}},{"path":"src/main/java/Duke/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.EmptyDescriptionException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents a command to mark task as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     * Creates a UnmarkCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * @param taskPosition Position of task in the list of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskPosition is empty or of invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    public UnmarkCommand(String taskPosition) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"        super(taskPosition);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        if (taskPosition \u003d\u003d \"\") {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            int taskNumber \u003d Integer.valueOf(taskPosition);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"            taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input number after unmark\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     * Execute UnmarkCommand to mark task as done in a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList does not contain the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    public void callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"        taskList.unMark(this.taskIndex);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":45}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Command.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import Duke.TaskList.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"import java.io.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"public class Duke {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    private static Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    private Ui uiDuke;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    private TaskList taskDataList;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    public Duke() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        ArrayList\u003cTask\u003e inputDatabase \u003d (ArrayList\u003cTask\u003e) Storage.readFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        taskDataList \u003d new TaskList(inputDatabase);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    private static void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"    public void run() {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"        ui.hello();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"        Scanner chatInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"        String input \u003d chatInput.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"                Parser inputParser \u003d new Parser(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"                Command currCommand \u003d inputParser.parse();","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"                currCommand.callCommand(this.taskDataList);","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"                ui.showError(e);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"            input \u003d chatInput.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"        Storage.saveToFile(this.taskDataList.getTaskStore());","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"        ui.bye();","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"        chatInput.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zzhikai"},"content":"        Duke chatBot \u003d new Duke();","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zzhikai"},"content":"        chatBot.run();","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zzhikai"},"content":"    public static void writeDataInputToDisk(ArrayList\u003cTask\u003e inputTaskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"zzhikai"},"content":"            FileOutputStream writeDatabaseInput \u003d new FileOutputStream(\"src/main/java/TaskDatabase.ser\");","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"zzhikai"},"content":"            ObjectOutputStream writeDatabaseStream \u003d new ObjectOutputStream(writeDatabaseInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"zzhikai"},"content":"            writeDatabaseStream.writeObject(inputTaskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"zzhikai"},"content":"            writeDatabaseStream.flush();","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"zzhikai"},"content":"            writeDatabaseStream.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"zzhikai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"zzhikai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"zzhikai"},"content":"    public static int indexOfTask(String command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"zzhikai"},"content":"        int index \u003d command.length() + 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"zzhikai"},"content":"        return index;","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"zzhikai"},"content":"    public static int endIndexOfTask(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"zzhikai"},"content":"        int index \u003d input.indexOf(\"/\");","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"zzhikai"},"content":"        return index;","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":84}},{"path":"src/main/java/Duke/Exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception that can be thrown by the Duke Application.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class DukeException extends java.lang.Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/Duke/Exception/EmptyByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when Deadline task does not have date.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class EmptyByException extends DukeException{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public EmptyByException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/Duke/Exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when Event, Todo, Deadline task does not have description.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class EmptyDescriptionException extends DukeException{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public EmptyDescriptionException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/Duke/Exception/EmptyEventAtException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when Event task does not have date.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class EmptyEventAtException extends DukeException{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public EmptyEventAtException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/Duke/Exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when an empty list is requested.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class EmptyListException extends DukeException{","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public EmptyListException(String errorMessage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/Duke/Exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Exception;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when command given is not recognised.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class InvalidCommandException extends DukeException{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":11}},{"path":"src/main/java/Duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Command.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.InvalidCommandException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents the parser for program to parse input.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    // Parser to return the action to do maybe the command to do","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    // input : String","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    // from that input we will split the words into command / description / datetime","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    private String userInputLine;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * Creates new Parser.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     * @param userInputLine UserInputLine given for parser to parse.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    public Parser(String userInputLine) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        this.userInputLine \u003d userInputLine;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     * Returns Command that user wants to execute.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"     * @return Command to be executed on a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If userInputLine invalid for the command.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"        // split command away","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        String[] inputStrings \u003d this.userInputLine.trim().split(\" \",2);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"        String inputCommand \u003d inputStrings[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"        // has command and body","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"        String inputBody \u003d inputStrings.length \u003d\u003d 2 ? inputStrings[1] : \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"        switch (inputCommand) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"            return new ListCommand(\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"            return new DeadlineCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"            return new TodoCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"        case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"            return new EventCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"            return new MarkCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"            return new UnmarkCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"            return new DeleteCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"        case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"            return new FindCommand(inputBody);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"        default:","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"            throw new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but i don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":59}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import java.io.*;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"    private static String filePath \u003d \"src/main/java/TaskDatabase.ser\";","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"        filePath \u003d path;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    public static ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"        // reading data file into current list","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"            FileInputStream databaseInputStream \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"            ObjectInputStream readDataBaseStream \u003d new ObjectInputStream(databaseInputStream);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"            ArrayList inputDatabase \u003d (ArrayList\u003cTask\u003e) readDataBaseStream.readObject();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"            readDataBaseStream.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            return inputDatabase;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    public static void saveToFile(ArrayList\u003cTask\u003e inputTaskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"            FileOutputStream writeDatabaseInput \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"            ObjectOutputStream writeDatabaseStream \u003d new ObjectOutputStream(writeDatabaseInput);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"            writeDatabaseStream.writeObject(inputTaskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"            writeDatabaseStream.flush();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"            writeDatabaseStream.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zzhikai":40}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import java.util.List;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    protected String by;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     * Create a Deadline task with a date as deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * @param by Date as deadline of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        List\u003cString\u003e dateFormats \u003d Arrays.asList(\"yyyy-MM-dd\",\"dd-MM-yyyy\", \"dd/MM/yyyy\", \"dd:MM:yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        DateTimeFormatter formatToParse;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            for (int i \u003d 0; i \u003c\u003d dateFormats.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"                    formatToParse \u003d DateTimeFormatter.ofPattern(dateFormats.get(i));","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"                    this.date \u003d LocalDate.parse(by, formatToParse);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"                } catch (Exception wrongFormat) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"                    // resolve issue about not catch DateTimeException","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"                    if (i \u003d\u003d dateFormats.size()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"                        throw new DateTimeException(\"Date invalid\");","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"                    continue;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"     * Returns formatted string representation of deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"     * @return String representation of deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))  + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":54}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    protected String at;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"     * Create a event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":23}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":" * Represents a task with description and if the task is done.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"public class Task implements Serializable {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     * Create a task with description and task not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     * Returns status icon of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"     * @return the string representation of status icon of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    /** Change task to done */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"    /** Change task to not done */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"    public void unMark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"     * Returns formatted string representation of task.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":50}},{"path":"src/main/java/Duke/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents a todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"     * Create a todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     * Returns formatted string representation of todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @return String representation of todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":26}},{"path":"src/main/java/Duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.*;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" * Represents a List of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    private ArrayList\u003cTask\u003e taskStore;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     * Creates TaskList with an ArrayList of Task stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     * @param taskDatabase ArrayList of Task stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    // read from file first then pass to Duke.TaskList.Duke.TaskList to finalised in a sense and work with list from here","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskDatabase) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        this.taskStore \u003d taskDatabase;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     * Returns ArrayList of Task stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"     * @return ArrayList of Task stored within TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"    public ArrayList\u003cTask\u003e getTaskStore() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        return taskStore;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     * Mark task within the TaskList as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to be marked as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    public void mark(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"        checkTaskIndex(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"        this.taskStore.get(taskIndex).markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"        System.out.println(taskStore.get(taskIndex).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"     * Mark task within the TaskList as not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to be marked as not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"    public void unMark(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"        checkTaskIndex(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"        this.taskStore.get(taskIndex).unMark();","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"zzhikai"},"content":"        System.out.println(taskStore.get(taskIndex).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"zzhikai"},"content":"        // need to catch error when taskIndex is invalid;","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"zzhikai"},"content":"     * Delete task within the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to delete.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"zzhikai"},"content":"    public void deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"zzhikai"},"content":"        checkTaskIndex(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"zzhikai"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"zzhikai"},"content":"        System.out.println(taskStore.get(taskIndex).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"zzhikai"},"content":"        taskStore.remove(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"zzhikai"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list\", this.getSizeOfTaskList()));","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"zzhikai"},"content":"     * Checks if position of task given is valid.","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to check.","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"zzhikai"},"content":"    public void checkTaskIndex(int taskIndex) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"zzhikai"},"content":"        if (taskIndex \u003e\u003d this.getSizeOfTaskList() || taskIndex \u003c 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"No task at this number, please try again\");","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"zzhikai"},"content":"     * Return size of A ja/rrayList within the TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"zzhikai"},"content":"     * @return Integer representation of size of ArrayList inside TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"zzhikai"},"content":"    public int getSizeOfTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"zzhikai"},"content":"        return taskStore.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"zzhikai"},"content":"     * Prints out all task of the ArrayList if not empty,","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If existing ArrayList in TaskList is empty.","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"zzhikai"},"content":"    public void printOutTaskList() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"zzhikai"},"content":"        if (taskStore.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyListException(\"List is empty, please add task\");","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"zzhikai"},"content":"        for (int i \u003d 0; i \u003c taskStore.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"zzhikai"},"content":"            System.out.println((i + 1) + \".\" + taskStore.get(i).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"zzhikai"},"content":"     * Adds new task into ArrayList inside TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"zzhikai"},"content":"     * @param newTask Task that will be added to the ArrayList of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"zzhikai"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"zzhikai"},"content":"        this.taskStore.add(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"zzhikai"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"zzhikai"},"content":"        System.out.println(\"  \" + newTask.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"zzhikai"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list\", this.getSizeOfTaskList()));","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"zzhikai"},"content":"     * Prints list of tasks which contains matching words.","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"zzhikai"},"content":"     * @param searchWord Word to find within task.","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If searchWord is empty or tasks with matching words not found.","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"zzhikai"},"content":"    public void findTask(String searchWord) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"zzhikai"},"content":"        ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"zzhikai"},"content":"        if (searchWord.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input word to find\");","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":136,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"zzhikai"},"content":"        for (int i \u003d 0; i \u003c taskStore.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"zzhikai"},"content":"            if (taskStore.get(i).toString().contains(searchWord)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"zzhikai"},"content":"                searchResult.add(taskStore.get(i));","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"zzhikai"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"zzhikai"},"content":"        if (searchResult.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyListException(\"No results found!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":145,"author":{"gitId":"zzhikai"},"content":"        for (int i \u003d 0; i \u003c searchResult.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"zzhikai"},"content":"            System.out.println((i + 1) + \".\" + searchResult.get(i).toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":147,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzhikai":150}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke.Ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"    public Ui() { }","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"    public void hello() {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"        System.out.println(\"Hello! Welcome, I\u0027m Duke\");","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    public void bye() {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zzhikai":18}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"T | 1 | read book","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zzhikai":4}},{"path":"src/test/java/Duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Command.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public void ParserTestWithDeadlineEmptyDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        String input \u003d \"deadline\";","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"        Parser inputParser \u003d new Parser(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        Command currCommand \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"            currCommand \u003d inputParser.parse();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            assertEquals(\"Please enter Task Description\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"    public void ParserTestWithInvalidCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        String input \u003d \"gibberish\";","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"        Parser inputParser \u003d new Parser(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        Command currCommand \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"            currCommand \u003d inputParser.parse();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but i don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":40}},{"path":"src/test/java/Duke/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package Duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import Duke.Command.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import Duke.Command.TodoCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import Duke.Task.Todo;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    public void TodoEmptyDescriptionTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"            String input \u003d \"todo\";","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            Command currCommand \u003d new TodoCommand(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"    public void TodoTaskStringTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        Task task \u003d new Todo(\"Run\");","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"        assertEquals(\"[T][ ] Run\", task.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"todo","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"deadline","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"event","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"mark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"deadline do something /by 11/11/2020","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"deadline do that /by 12-12-2022","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"event do this /at 2020-12-22","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"mark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"mark 2","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"unmark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"unmark 2","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"unmark 3","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"todo do this thing","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"mark 3","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"unmark 3","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zzhikai":1,"-":20}}]
