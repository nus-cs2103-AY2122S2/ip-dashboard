[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"# duke.duke project template","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zzhikai":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"    mainClassName\u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zzhikai":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"## Quick Start","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"1. Ensure you have Java `11` installed on your computer.","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"2. Download latest `duke.jar` from [here.](https://github.com/zzhikai/ip/releases/tag/A-Release)","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"3. Copy the jar file into an empty folder.","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"4. Open a command/terminal window in that folder.","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"5. Run the command `java -jar duke.jar`.","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"6. Type any command in the command box, and press Enter to execute it.","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"7.  Refer to the [Features](#Features) below for details of each command.","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"#### `List` - Displays a list of all task.","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    Format: `list`","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"#### `todo` - Add a Todo Task to list.","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    Format: `todo DESCRIPTION`","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"- Provide Task `DESCRIPTION`. The description cannot be empty.","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"- List will be updated with todo Task with description given.","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"#### `event` - Add an Event Task to list.","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    Format: `event DESCRIPTION /at DATE`","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"- Provide Task `DESCRIPTION`. The description cannot be empty.","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"- `DATE` refers to the date the event is on.","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"#### `deadline` - Add a Deadline Task to list.","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    Format: `event DESCRIPTION /by DATE`","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"- Provide Task `DESCRIPTION`. The description cannot be empty.","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"- `DATE` refers to the date the event is on, formats: \"yyyy-MM-dd\", \"dd-MM-yyyy\", \"dd/MM/yyyy\", \"dd:MM:yyyy\".","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"#### `mark` - Marks a Task in the list as done.","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"    Format: `mark INDEX`","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"- Marks Task at the specified `INDEX` as done. The index refers to the index number shown in the displayed list. The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    Example:","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"    ```","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"    [T][X] fun","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"    ```","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"#### `unmark` - Marks a Task in the list as not done.","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"    Format: `mark INDEX`","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"- Marks Task at the specified `INDEX` as done. The index refers to the index number shown in the displayed list. The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"    Example:","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"    OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"    [T][ ] fun","lastModifiedDate":"2022-02-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2021-07-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":60,"author":{"gitId":"zzhikai"},"content":"#### `delete` - Delete a Task from the list.","lastModifiedDate":"2022-02-21"},{"lineNumber":61,"author":{"gitId":"zzhikai"},"content":"    Format: `delete INDEX`","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"zzhikai"},"content":"- Delete Task at the specified `INDEX` The index refers to the index number shown in the displayed list. The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"zzhikai"},"content":"#### `find` - Find all the Tasks in the list containing the keyword.","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"zzhikai"},"content":"    Format: `find KEYWORD`","lastModifiedDate":"2022-02-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"zzhikai"},"content":"- A list of task that contains the `KEYWORD` will be displayed. Keyword cannot be empty.","lastModifiedDate":"2022-02-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":70,"author":{"gitId":"zzhikai"},"content":"#### `update` - Update the description of the Task in the list.","lastModifiedDate":"2022-02-21"},{"lineNumber":71,"author":{"gitId":"zzhikai"},"content":"    Format: `update INDEX DESCRIPTION`","lastModifiedDate":"2022-02-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"zzhikai"},"content":"- Update the `DESCRIPTION` of Task at the specified `INDEX`. The index refers to the index number shown in the displayed list. The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-02-21"},{"lineNumber":74,"author":{"gitId":"zzhikai"},"content":"- The description cannot be empty.","lastModifiedDate":"2022-02-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"zzhikai"},"content":"#### `bye` - Exits duke","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"zzhikai"},"content":"    Format: `bye`","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"zzhikai":52,"-":27}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"T | 1 | read book","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zzhikai":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"public class Duke {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    private static Ui ui;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    private TaskList taskDataList;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    /** Constructor of Duke Object*/","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    public Duke() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        ArrayList\u003cTask\u003e inputDatabase \u003d (ArrayList\u003cTask\u003e) Storage.readFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        taskDataList \u003d new TaskList(inputDatabase);","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"     * Main method.","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException Throws DukeException when input causes exception to the chatBot.","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"        Duke chatBot \u003d new Duke();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        chatBot.run();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"    private void run() {","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        ui.hello();","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"        Scanner chatInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"        String input \u003d chatInput.nextLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"            try {","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"                Parser inputParser \u003d new Parser(input);","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"                Command currCommand \u003d inputParser.parse();","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"                currCommand.callCommand(this.taskDataList);","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"                ui.showError(e);","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"            input \u003d chatInput.nextLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"        Storage.saveToFile(this.taskDataList.getTaskStore());","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"        ui.bye();","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"        chatInput.close();","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"zzhikai"},"content":"            Parser inputParser \u003d new Parser(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"zzhikai"},"content":"            Command currCommand \u003d inputParser.parse();","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"zzhikai"},"content":"            return currCommand.callCommand(this.taskDataList);","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"zzhikai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"zzhikai"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":65}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.javafx.Main;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zzhikai":13}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents a command that list all tasks.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     * Creates a ListCommand.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     * @param description .","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    public ByeCommand(String description) {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     * Execute ByeCommand to list out all tasks of a TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList is empty.","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        Storage.saveToFile(taskList.getTaskStore());","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zzhikai":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":" * Represents a command.","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    protected String input;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"     * Creates a command.","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * @param input Input from user.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    public Command(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * Executes command on a TaskList.","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"     * @return String Nothing.","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If command not recognized.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        throw new DukeException(\"Command not supported\");","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    };","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":30}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import duke.exception.EmptyByException;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":" * Represents a command to add deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     * Creates a DeadlineCommand with deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If description is empty or is of an invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"    public DeadlineCommand(String description) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        int deadlineMarker \u003d description.indexOf(\"/by\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"        String[] deadlineInfo \u003d description.split(\"/by \");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        if (deadlineInfo[0].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please enter Task Description\");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        if (deadlineMarker \u003d\u003d -1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyByException(\"Please remember to include deadline time with /by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"            this.task \u003d new Deadline(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"        } catch (DateTimeException d) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"invalid date input, use yyyy-MM-dd or dd-MM-yyyy or dd/MM/yyyy or dd:MM:yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please include correct deadline time\");","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"     * Executes DeadlineCommand to add deadline task to a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to add task to.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"        return taskList.addTask(this.task);","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":53}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents a command to delete task.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * Creates a DeleteCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     * @param description Task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If description is empty or is of an invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public DeleteCommand(String description) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            int taskNumber \u003d Integer.valueOf(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input number after delete\");","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"     * Executes DeleteCommand to delete task from a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to delete task from.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList does not contain task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"        return taskList.deleteTask(this.taskIndex);","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":44}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import duke.exception.EmptyByException;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":" * Represents a command to add event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    // private TaskList taskDataList;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     * Creates a EventCommand with event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If description is empty or is of an invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"    public EventCommand(String description) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        int eventMarker \u003d description.indexOf(\"/at\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"        String[] eventInfo \u003d description.split(\"/at \");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        if (eventInfo[0].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please enter Task Description\");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        if (eventMarker \u003d\u003d -1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyByException(\"Please remember to include event date with /at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"            this.task \u003d new Event(eventInfo[0], eventInfo[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"        } catch (DateTimeException d) {","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"invalid date input, use yyyy-MM-dd or dd-MM-yyyy or dd/MM/yyyy or dd:MM:yyyy\");","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please include correct deadline time\");","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"     * Executes EventCommand to add event task to a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to add Task to.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"        return taskList.addTask(this.task);","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":53}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":" * Represents a command to find tasks.","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"     * Creates a FindCommand with event task.","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * @param searchWord The word to search within the tasks.","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If searchWord is empty.","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    public FindCommand(String searchWord) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"        super(searchWord);","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     * Executes FindCommand to find all matching tasks in the TaskList.","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to search for Task.","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        return taskList.findTask(this.input);","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzhikai":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":" * Represents a command that list all tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"     * Creates a ListCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * @param description .","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    public ListCommand(String description) {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * Execute ListCommand to list out all tasks of a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList is empty.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        return taskList.printOutTaskList();","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":31}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents a command to mark task as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * Creates a MarkCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     * @param taskPosition Position of task in the list of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskPosition is empty or of invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public MarkCommand(String taskPosition) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        super(taskPosition);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        if (taskPosition \u003d\u003d \"\") {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The taskPosition cannot be empty.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            int taskNumber \u003d Integer.valueOf(taskPosition);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input number after mark\");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"     * Execute MarkCommand to mark task as done in a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList does not contain the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"        return taskList.mark(this.taskIndex);","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":44}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":" * Represents a command to add todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    private Task task;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    private TaskList taskListCopy;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * Creates a TodoCommand with todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If description is empty.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    public TodoCommand(String description) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"     * Executes TodoCommand to add todo task to a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"     * @param taskList TaskList for command to add Task to.","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"        // this.taskListCopy \u003d taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"        return taskList.addTask(this.task);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":42}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents a command to mark task as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    private int taskIndex;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * Creates a UnmarkCommand.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     * @param taskPosition Position of task in the list of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskPosition is empty or of invalid format.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public UnmarkCommand(String taskPosition) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        super(taskPosition);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        if (taskPosition \u003d\u003d \"\") {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            int taskNumber \u003d Integer.valueOf(taskPosition);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input number after unmark\");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"     * Execute UnmarkCommand to mark task as done in a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList does not contain the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"        return taskList.unMark(this.taskIndex);","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":45}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.command;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":" * Represents a command to mark task as done.","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    private int taskIndex;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    private String newTaskDescription;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     * Creates a MarkCommand.","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     * @param updateInfo Position of task in the list of task.","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskPosition is empty or of invalid format.","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public UpdateCommand(String updateInfo) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        super(updateInfo);","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"        //updateInfo: taskNumber + newDescription","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        String[] updateInfoStrings \u003d updateInfo.trim().split(\" \", 2);","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        String taskPosition \u003d updateInfoStrings[0];","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        String taskDescription \u003d updateInfoStrings.length \u003d\u003d 2 ? updateInfoStrings[1] : \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        if (taskPosition \u003d\u003d \"\" || taskDescription \u003d\u003d \"\") {","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyDescriptionException(\"OOPS!!! The update description must include\"","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"                    + \"{task number} and {new description}.\");","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"            this.newTaskDescription \u003d taskDescription;","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"            int taskNumber \u003d Integer.valueOf(taskPosition);","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"            this.taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input number after update\");","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     * Execute MarkCommand to mark task as done in a TaskList.","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"     * @param taskList The TaskList for command act on.","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If taskList does not contain the task.","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"     * @return a String when command is called.","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"    public String callCommand(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"        return taskList.updateTask(this.taskIndex, this.newTaskDescription);","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"zzhikai":49}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.exception;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception that can be thrown by the Duke Application.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class DukeException extends java.lang.Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/duke/exception/EmptyByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.exception;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when Deadline task does not have date.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class EmptyByException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public EmptyByException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.exception;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when Event, Todo, Deadline task does not have description.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public EmptyDescriptionException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/duke/exception/EmptyEventAtException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.exception;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when Event task does not have date.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class EmptyEventAtException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public EmptyEventAtException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/duke/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.exception;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when an empty list is requested.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class EmptyListException extends DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    public EmptyListException(String errorMessage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"zzhikai":10}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.exception;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents an exception thrown when command given is not recognised.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"     * @param errorMessage The String that will be printed when Exception is thrown.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":13}},{"path":"src/main/java/duke/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.javafx;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"    private Circle circleContainer \u003d new Circle(44, 44, 44);","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"    private Rectangle dialogContainer \u003d new Rectangle(300, 50);","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"        dialog.setBackground(new Background(new BackgroundFill(Color.BEIGE, new CornerRadii(5.0), Insets.EMPTY)));","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"        displayPicture.setClip(circleContainer);","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"zzhikai"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"zzhikai"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"zzhikai"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"zzhikai"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"zzhikai"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"zzhikai"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"zzhikai"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"zzhikai"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"zzhikai"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"zzhikai"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"zzhikai"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"zzhikai"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zzhikai":76}},{"path":"src/main/java/duke/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.javafx;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"            stage.setTitle(\"Look at Gong Yoo\");","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zzhikai":33}},{"path":"src/main/java/duke/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.javafx;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/GongYoo.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/iu.png\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"     * Initialise ChatBot with greetings in the dialog box.","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        String hello \u003d (\"Hello! Welcome, I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(hello, dukeImage));","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"zzhikai"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"zzhikai"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"zzhikai"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":61,"author":{"gitId":"zzhikai"},"content":"            PauseTransition exitLag \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"zzhikai"},"content":"            exitLag.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"zzhikai"},"content":"            exitLag.play();","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zzhikai":66}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"import duke.command.UpdateCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":" * Represents the parser for program to parse input.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"    // Parser to return the action to do maybe the command to do","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    // input : String","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    // from that input we will split the words into command / description / datetime","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"    private String userInputLine;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"     * Creates new Parser.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"     * @param userInputLine UserInputLine given for parser to parse.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    public Parser(String userInputLine) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"        this.userInputLine \u003d userInputLine;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"     * Returns Command that user wants to execute.","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     * @return Command to be executed on a TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If userInputLine invalid for the command.","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"        // split command away","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"        String[] inputStrings \u003d this.userInputLine.trim().split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"        String inputCommand \u003d inputStrings[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"        // has command and body","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"        String inputBody \u003d inputStrings.length \u003d\u003d 2 ? inputStrings[1] : \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"        switch (inputCommand) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"        case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"            return new ListCommand(\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"            return new DeadlineCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"            return new TodoCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"        case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"            return new EventCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"            return new MarkCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zzhikai"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zzhikai"},"content":"            return new UnmarkCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zzhikai"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"zzhikai"},"content":"            return new DeleteCommand(inputBody);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zzhikai"},"content":"        case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zzhikai"},"content":"            return new FindCommand(inputBody);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"zzhikai"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"zzhikai"},"content":"            return new ByeCommand(inputBody);","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"zzhikai"},"content":"        case \"update\":","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"zzhikai"},"content":"            // input Body should be update + taskNumber + new description","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"zzhikai"},"content":"            return new UpdateCommand(inputBody);","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"zzhikai"},"content":"        default:","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"zzhikai"},"content":"            throw new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but i don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":74}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.io.File;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    private static String filePath \u003d \"db/TaskDatabase.ser\";","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"        filePath \u003d path;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     * @return ArrayList of Task from the an existing file, else return an empty ArrayList.","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    //@@author zzhikai-reused","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    //Reused from https://samderlust.com/dev-blog/java/write-read-arraylist-object-file-java","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // with minor modification","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // reading data file into current list","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            FileInputStream databaseInputStream \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            ObjectInputStream readDataBaseStream \u003d new ObjectInputStream(databaseInputStream);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            ArrayList\u003cTask\u003e inputDatabase \u003d (ArrayList\u003cTask\u003e) readDataBaseStream.readObject();","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            readDataBaseStream.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return inputDatabase;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param inputTaskList The new ArrayList of task to be saved.","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //@@author zzhikai-reused","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //Reused from https://samderlust.com/dev-blog/java/write-read-arraylist-object-file-java","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // with minor modification","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void saveToFile(ArrayList\u003cTask\u003e inputTaskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        File directory \u003d new File(\"db\");","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            directory.mkdir();","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            FileOutputStream writeDatabaseInput \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            ObjectOutputStream writeDatabaseStream \u003d new ObjectOutputStream(writeDatabaseInput);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            writeDatabaseStream.writeObject(inputTaskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            writeDatabaseStream.flush();","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            writeDatabaseStream.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zzhikai":27,"-":39}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.task;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import java.util.List;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    protected String by;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     * Creates a Deadline task with a date as deadline.","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * @param by Date as deadline of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"        List\u003cString\u003e dateFormats \u003d Arrays.asList(\"yyyy-MM-dd\", \"dd-MM-yyyy\", \"dd/MM/yyyy\", \"dd:MM:yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        DateTimeFormatter formatToParse;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"        for (int i \u003d 0; i \u003c\u003d dateFormats.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"                formatToParse \u003d DateTimeFormatter.ofPattern(dateFormats.get(i));","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"                this.date \u003d LocalDate.parse(by, formatToParse);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"            } catch (Exception wrongFormat) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"                // resolve issue about not catch DateTimeException","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"                if (i \u003d\u003d dateFormats.size()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"                    throw new DateTimeException(\"Date invalid\");","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"                continue;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"     * Returns formatted string representation of deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"     * @return String representation of deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":54}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.task;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import java.util.List;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":" * Represents an event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    protected String at;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"     * Create a event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @param at The String representation of the date of the event task.","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        List\u003cString\u003e dateFormats \u003d Arrays.asList(\"yyyy-MM-dd\", \"dd-MM-yyyy\", \"dd/MM/yyyy\", \"dd:MM:yyyy\");","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"        DateTimeFormatter formatToParse;","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        for (int i \u003d 0; i \u003c\u003d dateFormats.size(); i++) {","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"            try {","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"                formatToParse \u003d DateTimeFormatter.ofPattern(dateFormats.get(i));","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"                this.date \u003d LocalDate.parse(at, formatToParse);","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"                break;","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"            } catch (Exception wrongFormat) {","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"                // resolve issue about not catch DateTimeException","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"                if (i \u003d\u003d dateFormats.size()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"                    throw new DateTimeException(\"Date invalid\");","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"                }","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"                continue;","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.task;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":" * Represents a task with description and if the task is done.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"public class Task implements Serializable {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"     * Create a task with description and task not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"     * Returns status icon of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"     * @return the string representation of status icon of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"    /** Change task to done */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"    /** Change task to not done */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"    public void unMark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"     * @param newDescription Updates Task description to newDescription.","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"    public void updateDescription(String newDescription) {","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"     * Returns formatted string representation of task.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"     * @return String representation of task.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":56}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.task;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":" * Represents a todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"     * Create a todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     * Returns formatted string representation of todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     * @return String representation of todo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":26}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.tasklist;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import duke.exception.EmptyListException;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":" * Represents a List of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    private ArrayList\u003cTask\u003e taskStore;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"     * Creates TaskList with","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"     * an ArrayList of Task stored.","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"     * @param taskDatabase ArrayList of Task stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskDatabase) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"        this.taskStore \u003d taskDatabase;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"     * Returns ArrayList of Task stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"     * @return ArrayList of Task stored within TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    public ArrayList\u003cTask\u003e getTaskStore() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        return taskStore;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"     * Mark task within the TaskList as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to be marked as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"zzhikai"},"content":"     * @return String statement when task is marked.","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zzhikai"},"content":"    public String mark(int taskIndex) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zzhikai"},"content":"        checkTaskIndex(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zzhikai"},"content":"        if (this.taskStore.get(taskIndex).getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Task already Marked\");","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"zzhikai"},"content":"        assert this.taskStore.get(taskIndex).getStatusIcon() !\u003d \"X\"","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"zzhikai"},"content":"                : \"No Task at this Index to unmark Assertion error\";","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"zzhikai"},"content":"        this.taskStore.get(taskIndex).markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"zzhikai"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\" + taskStore.get(taskIndex).toString());","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zzhikai"},"content":"     * Mark task within the TaskList as not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to be marked as not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zzhikai"},"content":"     * @return String statement when task is unmarked.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zzhikai"},"content":"    public String unMark(int taskIndex) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"zzhikai"},"content":"        checkTaskIndex(taskIndex);","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"zzhikai"},"content":"        // prevents user from unmarking already unmarked task;","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"zzhikai"},"content":"        if (this.taskStore.get(taskIndex).getStatusIcon() \u003d\u003d \" \") {","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Task already unmarked\");","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"zzhikai"},"content":"        assert this.taskStore.get(taskIndex).getStatusIcon() !\u003d \" \"","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"zzhikai"},"content":"                : \"No Task at this Index to unmark Assertion error\";","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"zzhikai"},"content":"        checkTaskIndex(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"zzhikai"},"content":"        this.taskStore.get(taskIndex).unMark();","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"zzhikai"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\" + taskStore.get(taskIndex).toString());","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"zzhikai"},"content":"        // need to catch error when taskIndex is invalid;","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"zzhikai"},"content":"     * Delete task within the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to delete.","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"zzhikai"},"content":"     * @return a String including the deleted task and the number of task in the list now.","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"zzhikai"},"content":"    public String deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"zzhikai"},"content":"        checkTaskIndex(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"zzhikai"},"content":"        String deletedTask \u003d this.taskStore.get(taskIndex).toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"zzhikai"},"content":"        this.taskStore.remove(taskIndex);","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"zzhikai"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + deletedTask","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"zzhikai"},"content":"                + String.format(\"\\nNow you have %d tasks in the list\", this.getSizeOfTaskList());","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"zzhikai"},"content":"     * Checks if position of task given is valid.","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to check.","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"zzhikai"},"content":"    private void checkTaskIndex(int taskIndex) throws DukeException {","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"zzhikai"},"content":"        if (taskIndex \u003e\u003d this.getSizeOfTaskList() || taskIndex \u003c 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"No task at this number, please try again\");","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"zzhikai"},"content":"     * Return size of ArrayList within the TaskList.","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"zzhikai"},"content":"     * @return Integer representation of size of ArrayList inside TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"zzhikai"},"content":"    public int getSizeOfTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"zzhikai"},"content":"        return taskStore.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"zzhikai"},"content":"     * Prints out all task of the ArrayList if not empty.","lastModifiedDate":"2022-02-25"},{"lineNumber":116,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"zzhikai"},"content":"     * @return a String representing the task in the list.","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If existing ArrayList in TaskList is empty.","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"zzhikai"},"content":"    public String printOutTaskList() throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"zzhikai"},"content":"        if (taskStore.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyListException(\"List is empty, please add task\");","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"zzhikai"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"zzhikai"},"content":"        for (int i \u003d 0; i \u003c taskStore.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"zzhikai"},"content":"            taskListString \u003d taskListString + ((i + 1) + \".\" + taskStore.get(i).toString() + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":127,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"zzhikai"},"content":"        return taskListString;","lastModifiedDate":"2022-02-03"},{"lineNumber":129,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"zzhikai"},"content":"     * Adds new task into ArrayList inside TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"zzhikai"},"content":"     * @param newTask Task that will be added to the ArrayList of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"zzhikai"},"content":"     * @return a String of the added task as well as the number of tasks in the list.","lastModifiedDate":"2022-02-25"},{"lineNumber":136,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"zzhikai"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2022-02-03"},{"lineNumber":138,"author":{"gitId":"zzhikai"},"content":"        this.taskStore.add(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"zzhikai"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + newTask.toString()","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"zzhikai"},"content":"                + String.format(\"\\nNow you have %d tasks in the list\", this.getSizeOfTaskList());","lastModifiedDate":"2022-02-03"},{"lineNumber":141,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"zzhikai"},"content":"     * Prints list of tasks which contains matching words.","lastModifiedDate":"2022-01-28"},{"lineNumber":145,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"zzhikai"},"content":"     * @param searchWord Word to find within task.","lastModifiedDate":"2022-01-28"},{"lineNumber":147,"author":{"gitId":"zzhikai"},"content":"     * @return a String representation of the list of tasks matching the searchWord.","lastModifiedDate":"2022-02-25"},{"lineNumber":148,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If searchWord is empty or tasks with matching words not found.","lastModifiedDate":"2022-01-28"},{"lineNumber":149,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":150,"author":{"gitId":"zzhikai"},"content":"    public String findTask(String searchWord) throws DukeException {","lastModifiedDate":"2022-02-03"},{"lineNumber":151,"author":{"gitId":"zzhikai"},"content":"        ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":152,"author":{"gitId":"zzhikai"},"content":"        if (searchWord.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"zzhikai"},"content":"            throw new DukeException(\"Please input word to find\");","lastModifiedDate":"2022-01-28"},{"lineNumber":154,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"zzhikai"},"content":"        ArrayList\u003cTask\u003e searchList \u003d taskStore","lastModifiedDate":"2022-02-10"},{"lineNumber":157,"author":{"gitId":"zzhikai"},"content":"                .stream()","lastModifiedDate":"2022-02-10"},{"lineNumber":158,"author":{"gitId":"zzhikai"},"content":"                .filter(t -\u003e t.toString().contains(searchWord))","lastModifiedDate":"2022-02-10"},{"lineNumber":159,"author":{"gitId":"zzhikai"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2022-02-10"},{"lineNumber":160,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":161,"author":{"gitId":"zzhikai"},"content":"        if (searchList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-10"},{"lineNumber":162,"author":{"gitId":"zzhikai"},"content":"            throw new EmptyListException(\"No results found!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":163,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":164,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"zzhikai"},"content":"        TaskList searchTaskResult \u003d new TaskList(searchList);","lastModifiedDate":"2022-02-10"},{"lineNumber":166,"author":{"gitId":"zzhikai"},"content":"        return searchTaskResult.printOutTaskList();","lastModifiedDate":"2022-02-03"},{"lineNumber":167,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":169,"author":{"gitId":"zzhikai"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":170,"author":{"gitId":"zzhikai"},"content":"     * Updates the specified task in the list with a new description.","lastModifiedDate":"2022-02-25"},{"lineNumber":171,"author":{"gitId":"zzhikai"},"content":"     *","lastModifiedDate":"2022-02-25"},{"lineNumber":172,"author":{"gitId":"zzhikai"},"content":"     * @param taskIndex Position of task on the TaskList to update.","lastModifiedDate":"2022-02-25"},{"lineNumber":173,"author":{"gitId":"zzhikai"},"content":"     * @param newDescription The new description of the task.","lastModifiedDate":"2022-02-25"},{"lineNumber":174,"author":{"gitId":"zzhikai"},"content":"     * @return a String including the task with the updated description.","lastModifiedDate":"2022-02-25"},{"lineNumber":175,"author":{"gitId":"zzhikai"},"content":"     * @throws DukeException If no task at taskIndex.","lastModifiedDate":"2022-02-11"},{"lineNumber":176,"author":{"gitId":"zzhikai"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":177,"author":{"gitId":"zzhikai"},"content":"    public String updateTask(int taskIndex, String newDescription) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":178,"author":{"gitId":"zzhikai"},"content":"        checkTaskIndex(taskIndex);","lastModifiedDate":"2022-02-11"},{"lineNumber":179,"author":{"gitId":"zzhikai"},"content":"        this.taskStore.get(taskIndex).updateDescription(newDescription);","lastModifiedDate":"2022-02-11"},{"lineNumber":180,"author":{"gitId":"zzhikai"},"content":"        return \"Got it. I\u0027ve updated the description for this task:\\n  \" + this.taskStore.get(taskIndex).toString();","lastModifiedDate":"2022-02-21"},{"lineNumber":181,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":182,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzhikai":182}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke.ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"    public Ui() { }","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"    public String hello() {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"        return (\"Hello! Welcome, I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"    public String bye() {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zzhikai":17}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"  /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zzhikai":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.javafx.MainWindow\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" text\u003d\"Enter your command\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"         \u003c/opaqueInsets\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" onMousePressed\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zzhikai":27}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public void parserTestWithDeadlineEmptyDescription() {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        String input \u003d \"deadline\";","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"        Parser inputParser \u003d new Parser(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"        Command currCommand \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"            currCommand \u003d inputParser.parse();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"            assertEquals(\"Please enter Task Description\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"    public void parserTestWithInvalidCommand() {","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        String input \u003d \"gibberish\";","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"        Parser inputParser \u003d new Parser(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"        Command currCommand \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zzhikai"},"content":"            currCommand \u003d inputParser.parse();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zzhikai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zzhikai"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but i don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":40}},{"path":"src/test/java/duke/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"package duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"    public void todoEmptyDescriptionTest() {","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zzhikai"},"content":"            String input \u003d \"todo\";","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zzhikai"},"content":"            Command currCommand \u003d new TodoCommand(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zzhikai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zzhikai"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zzhikai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zzhikai"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zzhikai"},"content":"    public void todoTaskStringTest() {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"zzhikai"},"content":"        Task task \u003d new Todo(\"Run\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zzhikai"},"content":"        assertEquals(\"[T][ ] Run\", task.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zzhikai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zzhikai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zzhikai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"zzhikai":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzhikai"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"zzhikai"},"content":"todo","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zzhikai"},"content":"deadline","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zzhikai"},"content":"event","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zzhikai"},"content":"mark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zzhikai"},"content":"deadline do something /by 11/11/2020","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zzhikai"},"content":"deadline do that /by 12-12-2022","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zzhikai"},"content":"event do this /at 2020-12-22","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zzhikai"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zzhikai"},"content":"mark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zzhikai"},"content":"mark 2","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zzhikai"},"content":"unmark 1","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zzhikai"},"content":"unmark 2","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zzhikai"},"content":"unmark 3","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zzhikai"},"content":"list","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zzhikai"},"content":"todo do this thing","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zzhikai"},"content":"mark 3","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"unmark 3","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zzhikai"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"zzhikai"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"zzhikai":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zzhikai"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zzhikai":1,"-":20}}]
