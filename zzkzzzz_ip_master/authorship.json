[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"public enum Command {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"    LIST(\"list\", 1),","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"    BYE(\"bye\", 1),","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"    MARK(\"mark\", 2),","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"    UNMARK(\"unmark\", 2),","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"    DELETE(\"delete\", 2),","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"    TODO(\"todo\", 2),","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    EVENT(\"event\", 3),","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    DEADLINE(\"deadline\", 3);","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public String val;","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public int length;","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    Command(String envUrl, int length) {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"        this.val \u003d envUrl;","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"        this.length \u003d length;","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":19}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"    protected String by;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"    public Deadline(String title,String by) {","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"        super(title);","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"public class Event extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"    protected String on;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"    public Event(String title,String on) {","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"        super(title);","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"        this.on \u003d on;","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"        return \"[E]\" + super.toString() + \" (on: \" + on + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":12}},{"path":"src/main/java/FastIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"import java.io.*;","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"class FastIO extends PrintWriter {","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"    BufferedReader br;","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"    StringTokenizer st;","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    public FastIO() {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"        super(new BufferedOutputStream(System.out));","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"        br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    String next() {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"        while (st \u003d\u003d null || !st.hasMoreElements()) {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"            try {","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"                st \u003d new StringTokenizer(br.readLine());","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        return st.nextToken();","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    int nextInt() {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        return Integer.parseInt(next());","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    long nextLong() {","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        return Long.parseLong(next());","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    double nextDouble() {","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        return Double.parseDouble(next());","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    String nextLine() {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"            str \u003d br.readLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        return str;","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":45}},{"path":"src/main/java/Meep.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"public class Meep {","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"    public static void main(String[] args)  {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"        Utils.printLogo();","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"        String userInput \u003d \"In\";","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"        FastIO sc \u003d new FastIO();","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"        while (true) {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"            System.out.print(\"You:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"            String[] parsedInput\u003dnull;","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"            try{","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"                parsedInput\u003dUtils.parseUserInput(userInput,taskList);","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            }catch (InvalidInputException e){","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"                System.out.print(\"Meep:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"                continue;","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"            String userCommand\u003dparsedInput[0];","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"            if (userCommand.equals(Command.BYE.val)) {","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Meep:Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"                break;","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"            } else if (userCommand.equals(Command.LIST.val)) {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Meep:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"                Utils.printTaskList(taskList);","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"            } else if (userCommand.equals(Command.MARK.val)) {","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"                Task task \u003d taskList.get(Integer.parseInt(parsedInput[1]) - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"                task.markDone();","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Meep:Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"     \" + task.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"            } else if (userCommand.equals(Command.UNMARK.val)) {","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"                Task task \u003d taskList.get(Integer.parseInt(parsedInput[1]) - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"                task.unmarkDone();","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Meep:OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"     \" + task.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"            } else if (userCommand.equals(Command.DEADLINE.val)) {","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"                Deadline deadline \u003d new Deadline(parsedInput[1], parsedInput[3]);","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"                taskList.add(deadline);","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Meep:Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(deadline.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"            } else if (userCommand.equals(Command.EVENT.val)) {","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                Event event \u003d new Event(parsedInput[1], parsedInput[3]);","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                taskList.add(event);","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Meep:Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(event.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"            } else if (userCommand.equals(Command.TODO.val)) {","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"                ToDo todo \u003d new ToDo(parsedInput[1]);","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"                taskList.add(todo);","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Meep:Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(todo.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"            }else if(userCommand.equals(Command.DELETE.val)){","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"                int index\u003dInteger.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"                Task task \u003d taskList.get(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"                taskList.remove(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Meep: Noted. I\u0027ve removed this task:\" );","lastModifiedDate":"2022-01-15"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"        sc.close();","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":75}},{"path":"src/main/java/MeepException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"class InvalidInputException extends Exception {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"        super(message);","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"    private final String title;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"    private Boolean done;","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"    protected Task(String title) {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    public String getTitle() {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"        return title;","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public Boolean getDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"        return done;","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        String isDone\u003d(done\u003d\u003dtrue)?\"X\":\" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        return \"[\"+isDone+\"] \" +getTitle();","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":30}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"    public ToDo(String title) {","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"        super(title);","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"    public String toString(){","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"        return \"[T]\"+super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":11}},{"path":"src/main/java/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"public final class Utils {","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"    public static void printLogo() {","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(\"**       **  ******  ******    *****\");","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(\"* *     * *  *       *         *    *\");","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(\"*  *   *  *  ******  ******    *****\");","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(\"*   * *   *  *       *         *\");","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(\"*    *    *  ******  ******    *\");","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(\"Hello! I\u0027m Meep\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public static String[] parseUserInput(String userInput, List\u003cTask\u003e tasks) throws InvalidInputException {","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"        // catch empty input","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"        if (userInput.trim().length() \u003d\u003d 0)","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(\"Empty\");","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"        String[] arr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        // command might be \"list\" or \"bye\"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            if (arr[0].equals(\"list\") || arr[0].equals(\"bye\"))","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"                return arr;","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"            else","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"                throw new InvalidInputException(\"Invalid length 1 command. Please try \u0027list/bye\u0027.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"            if (arr[0].equals(\"mark\") || arr[0].equals(\"unmark\") || arr[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"                String theRest \u003d arr[1];","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"                int num;","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"                try {","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"                    num \u003d Integer.parseInt(theRest);","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"                    if (num \u003c 0 || num \u003e tasks.size())","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"                        throw new InvalidInputException(\"Task number out of range\");","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"                    return arr;","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"                    throw new InvalidInputException(\"Invalid task number. Please enter a valid integer.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"            } else if (arr[0].equals(\"deadline\") || arr[0].equals(\"event\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"                String[] output \u003d arr[1].split(\"/\", 2);","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"                if (output.length \u003d\u003d 1)","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"                    throw new InvalidInputException(\"Invalid \" + arr[0] + \" format. eg. deadline return book /by Sunday.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"                String[] date \u003d output[1].split(\" \", 2);","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"                // check Prepositions of Time/Date","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"                if (!date[0].equals(\"on\") \u0026\u0026 !date[0].equals(\"by\") \u0026\u0026 !date[0].equals(\"at\") \u0026\u0026 !date[0].equals(\"in\"))","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                    throw new InvalidInputException(\"Invalid Prepositions of Time. Please use \u0027in\u0027 \u0027at\u0027 \u0027by\u0027 or \u0027on\u0027.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                String[] result \u003d new String[4];","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                result[0] \u003d arr[0];","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"                result[1] \u003d output[0];","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"                result[2] \u003d date[0];","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"                result[3] \u003d date[1];","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"                return result;","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"            } else if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"                return arr;","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"            } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"                throw new InvalidInputException(\"Invalid command. Please try \u0027mark/unmark/event/deadline/todo\u0027. \");","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    public static void printTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-15"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-15"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-15"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"            System.out.println(\"     \" + i + \".  \" + task.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"            i++;","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"bye","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"java -classpath ..\\bin Meep \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"zzkzzzz":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"java -classpath ../bin Meep \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"zzkzzzz":1}}]
