[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"plugins {","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"repositories {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"dependencies {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"test {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    testLogging {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        showExceptions true","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        showCauses true","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"application {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    mainClassName \u003d \"meep.Launcher\"","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"shadowJar {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    archiveBaseName \u003d \"meep\"","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    archiveVersion \u003d \"2.0\"","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"checkstyle {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"run {","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzkzzzz":62}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"**Meep is a desktop application for helping you remember things you need to do.** ","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"![Ui](Ui.png)","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"## Quick start","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"2. Download the latest `meep.jar` from [here](https://github.com/zzkzzzz/ip/releases).","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"3. Copy the file to the folder you want to use as the _home folder_.","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will print the help instructions.\u003cbr\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"##  Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"Shows a message explaning how to use the application.","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"Format: `help`","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"### Listing tasks: `list`","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"#### Lists all the tasks","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"Format: `list​`","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"* `list`","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"#### Listing tasks before given date","lastModifiedDate":"2022-02-08"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"Lists all the tasks.","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"Format: `list [ date \u0026 time ]`","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":" **Tip:**","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":" Note for `[ date \u0026 time ]`: enter it strictly in the following format","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"  `dd/mm/yyyy [ hh : mm ]`  eg: 02/12/2019 18:00             ","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"* `list 02/12/2019 18:00`","lastModifiedDate":"2022-02-08"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"* `list 05/02/2022 21:00`","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"### Adding task : `todo` `deadline` `event`","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"#### Adding todo task","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"tasks without any date/time attached to it.","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"Format: `todo [task title]`","lastModifiedDate":"2022-02-08"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-08"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"* `todo CS2103 week1 quiz`","lastModifiedDate":"2022-02-08"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"#### Adding event task","lastModifiedDate":"2022-02-08"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"tasks that start at a specific time and ends at a specific time.","lastModifiedDate":"2022-02-08"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"Format: `event [ task title ] /on [ date \u0026 time ]`","lastModifiedDate":"2022-02-08"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-08"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"* `event CS2103 tP group discussion /on 05/02/2022 14:00`","lastModifiedDate":"2022-02-08"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"* `event movie with JunJie /on 09/02/2022 19:00`","lastModifiedDate":"2022-02-08"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":" **Tip:**","lastModifiedDate":"2022-02-08"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":" Note for `[ date \u0026 time ]`: enter it strictly in the following format","lastModifiedDate":"2022-02-08"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"  `dd/mm/yyyy [ hh : mm ]`  eg: 02/12/2019 18:00   ","lastModifiedDate":"2022-02-08"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"#### Adding deadline task","lastModifiedDate":"2022-02-08"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"tasks that need to be done before a specific date/time.","lastModifiedDate":"2022-02-08"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"Format: `deadline [ task title ] /by [ date \u0026 time ]​`","lastModifiedDate":"2022-02-08"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-08"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"* `deadline CS2103 iP submission /by 17/02/2022 12:00`","lastModifiedDate":"2022-02-08"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"* `deadline clean my room /by 09/02/2022 19:00`","lastModifiedDate":"2022-02-08"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":" **Tip:**","lastModifiedDate":"2022-02-08"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":" Note for `[ date \u0026 time ]`: enter it strictly in the following format","lastModifiedDate":"2022-02-08"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"  `dd/mm/yyyy [ hh : mm ]`  eg: 02/12/2019 18:00   ","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"### Locating task by a keyword: `find`","lastModifiedDate":"2022-02-08"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"Find tasks whose descriptions contain any of the given keywords.","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"Format: `find [ KEYWORD ]`","lastModifiedDate":"2022-02-08"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"* The search is case-sensitive. e.g `book` will match `BOOK`","lastModifiedDate":"2022-02-08"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"* Partial words will be matched e.g. `book` will not match `books`","lastModifiedDate":"2022-02-08"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"* Only support one keyword search. Context after `find` will be treated as one keyword.","lastModifiedDate":"2022-02-08"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-08"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"* `find book` returns `read book`","lastModifiedDate":"2022-02-08"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"* `find CS2103` returns `CS2103 iP submission` and `CS2103 tP discussion`","lastModifiedDate":"2022-02-08"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"### Mark task as done/undone: `mark` `unmark`","lastModifiedDate":"2022-02-08"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"Mark a task as done or undone with given index","lastModifiedDate":"2022-02-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"Format: `mark [ TASK INDEX ]` `unmark [ TASK INDEX ]`","lastModifiedDate":"2022-02-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"* Mark/unmark the task at the specified `INDEX`.","lastModifiedDate":"2022-02-08"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-02-08"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-08"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"* `list` followed by `mark 2` marks the 2nd task as done.","lastModifiedDate":"2022-02-08"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"* `list` followed by `unmark 3` marks the 2nd task as undone.","lastModifiedDate":"2022-02-08"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"* `find report` followed by `mark 1` marks the 1st task in the results of the `find` command.","lastModifiedDate":"2022-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"### Deleting a task : `delete`","lastModifiedDate":"2022-02-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"Deletes the specified task from task list.","lastModifiedDate":"2022-02-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"Format: `delete [ TASK INDEX ]`","lastModifiedDate":"2022-02-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2022-02-08"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-02-08"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"Examples:","lastModifiedDate":"2022-02-08"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"* `list` followed by `delete 2` deletes the 2nd task in the task list.","lastModifiedDate":"2022-02-08"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"* `find report` followed by `delete 1` deletes the 1st task in the results of the `find` command.","lastModifiedDate":"2022-02-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"### Exiting the program : `bye`","lastModifiedDate":"2022-02-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"Exits the program. All the data will be stored in `data.txt` file.","lastModifiedDate":"2022-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"Format: `bye`","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"-":26,"zzkzzzz":120}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"@rem","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"@rem","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"@rem","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"@rem","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"@rem","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"@rem","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"@rem","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"echo.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"echo.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"goto fail","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"echo.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"echo.","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"goto fail","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":":init","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":":win9xME_args","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":":execute","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":":end","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":":fail","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"exit /b 1","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":":mainEnd","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":":omega","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzkzzzz":103}},{"path":"src/main/java/meep/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"public class Launcher {","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"zzkzzzz":12}},{"path":"src/main/java/meep/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import meep.ui.Gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import meep.ui.MainWindow;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":" * A GUI for Gui using FXML.","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    private Gui gui \u003d new Gui();","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(this.getClass().getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"            BorderPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMeep(gui);","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"            stage.show();","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"zzkzzzz":34}},{"path":"src/main/java/meep/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" * Adds a task to task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_ADD \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    private final Task task;","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class AddCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     * @param task task to add.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * Returns successfully added message.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * @return successfully added message.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        return MESSAGE_ADD","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"                + task.toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     * Returns command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"     * @return command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":52}},{"path":"src/main/java/meep/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":" * Represents an executable command.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"public class Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"command\";","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Command.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public Command() {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     * Executes method should be implemented by child classes.","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks the task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     * @return Exception that the method not supposed to be used.","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * Returns command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * @return command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":39}},{"path":"src/main/java/meep/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" * Deletes a task in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    private final int index;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class DeleteCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * @param index index of task to delete.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     * Returns successfully deleted message.","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * @return successfully deleted message.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        return MESSAGE_DELETE + task.toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"                + \"\\nNow you have \" + tasks.size()","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     * Returns command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     * @return command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":50}},{"path":"src/main/java/meep/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" * Terminates the program.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LENGTH \u003d 1;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"     * Returns boolean to check command is ExitCommand or not.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     * @param command command to check.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     * @return is ExitCommand or not.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     * Returns successfully exited message.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * @return successfully exited message.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        return MESSAGE_EXIT;","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     * Returns command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     * @return command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":46}},{"path":"src/main/java/meep/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":" * Finds tasks match given keyword in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_FOUND \u003d \"Got it. I\u0027ve found matched tasks:\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_NOT_FOUND \u003d \"Sorry. There are no matched task\";","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    private final String keyword;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class FindCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     * @param keyword the keyword to search.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     * Returns successfully found message.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * If not found any matched task, return not found message.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * @return found/not found message.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        String result \u003d tasks.findTasks(keyword);","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        boolean isEmpty \u003d result.length() \u003d\u003d 0;","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        if (isEmpty) {","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"            return MESSAGE_NOT_FOUND;","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"            return MESSAGE_FOUND + result;","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        return super.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":49}},{"path":"src/main/java/meep/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":" * Displays command guidance.","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_HELP \u003d \"Please follow these command instructions:\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"            + \"      COMMANDS                      | FORMAT                               \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"            + \"      1. normal task                      | todo [task title]\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"            + \"      2. task with deadline        | deadline [ task title ] /by [ date \u0026 time ]\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"            + \"      3. task on date                    | event [ task title ] /on [ date \u0026 time ]\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"            + \"      4. list all tasks                      | list \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"            + \"      5. list tasks before date   | list [ date \u0026 time ]\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"            + \"      6. find task                            | find [ keyword ]\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"            + \"      7. mark task as done        | mark [ task id ]\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"            + \"      8. mark task as undone   | unmark [ task id ]\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"            + \"      9. quit application              | bye\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"            + \"      10. print guidance              | help\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"            + \"                                                                         \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"            + \"      Note for [ date \u0026 time ]: enter it strictly in the following format    \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"            + \"         dd/mm/yyyy [ hh : mm ] | eg: 02/12/2019 18:00                       \\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"            + \"\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LENGTH \u003d 1;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * Returns guidance.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * @return guidance.","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        return MESSAGE_HELP;","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * Returns command word.","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     * @return command word.","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"zzkzzzz":49}},{"path":"src/main/java/meep/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" * Lists tasks in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LIST_LENGTH \u003d 1;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LIST_DATE_LENGTH \u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    private final boolean isDateGiven;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class ListCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        this.isDateGiven \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        this.date \u003d null;","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class DeleteCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * @param isDateGiven list the tasks with date or not.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * @param date        list all tasks before this date.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    public ListCommand(boolean isDateGiven, LocalDateTime date) {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        this.isDateGiven \u003d isDateGiven;","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"     * Returns list of tasks message.","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     * @return list of tasks message.","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        if (isDateGiven) {","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            return tasks.generateTaskList(date);","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"            return tasks.generateTaskList();","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"     * Returns command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"     * @return command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":63}},{"path":"src/main/java/meep/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" * Marks a task as done in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_MARK \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    private final int index;","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class MarkCommand.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     * @param index index of task to mark.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * Returns successfully marked message.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * @return successfully marked message.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        task.markDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        return MESSAGE_MARK + task.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     * Returns command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"     * @return command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":51}},{"path":"src/main/java/meep/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":" * Marks a task as undone in task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_UNMARK \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    private final int index;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class UnMarkCommand","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * @param index index of task to unmark","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * Returns successfully unmarked message.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * @return successfully unmarked message.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public String execute(ListTask tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        task.unmarkDone();","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        return MESSAGE_UNMARK + task.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     * Returns command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"     * @return command word.","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":51}},{"path":"src/main/java/meep/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"T | 1 | read book","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"D | 1 | return book | 02/12/2019 18:00","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"E | 1 | project meeting | 03/12/2019 18:00","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"D | 0 | assignment | 02/12/2019 18:00","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzkzzzz":5}},{"path":"src/main/java/meep/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.exception;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":" * Signals an error caused by invalid user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class InvalidInputException","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"     * @param message exception message","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"        super(message);","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":18}},{"path":"src/main/java/meep/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.AddCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.DeleteCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.ExitCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.FindCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.HelpCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.ListCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.MarkCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.UnmarkCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import meep.exception.InvalidInputException;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"import meep.ui.Messages;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":" * Parses user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"public class Parser {","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * Parses user input command.","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * @param userInput the user input.","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks     the tasks lsit.","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     * @return the command.","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the input is invalid.","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    public Command parseUserInput(String userInput, List\u003cTask\u003e tasks) throws InvalidInputException {","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        boolean isEmptyInput \u003d userInput.trim().length() \u003d\u003d 0;","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        if (isEmptyInput) {","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_EMPTY_INPUT);","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        String[] arr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        switch (arr[0]) {","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"            if (isValidCommandLength(ExitCommand.COMMAND_LENGTH, arr)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"            if (isValidCommandLength(HelpCommand.COMMAND_LENGTH, arr)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                return new HelpCommand();","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"            if (isValidCommandLength(ListCommand.COMMAND_LIST_LENGTH, arr)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"                // list without date","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"                return new ListCommand();","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"            } else if (isValidCommandLength(ListCommand.COMMAND_LIST_DATE_LENGTH, arr)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"                // list with date given","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"                return new ListCommand(true, parseDate(arr[1]));","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"            if (isValidCommandLength(MarkCommand.COMMAND_LENGTH, arr)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"                int index \u003d parseListIndex(arr[1], tasks);","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"                assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : Messages.MESSAGE_OUTBOUND_NUMBER;","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"            if (isValidCommandLength(UnmarkCommand.COMMAND_LENGTH, arr)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"                int index \u003d parseListIndex(arr[1], tasks);","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"                assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : Messages.MESSAGE_OUTBOUND_NUMBER;","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"            if (isValidCommandLength(DeleteCommand.COMMAND_LENGTH, arr)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"                int index \u003d parseListIndex(arr[1], tasks);","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"                assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : Messages.MESSAGE_OUTBOUND_NUMBER;","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        case AddCommand.COMMAND_TODO:","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"            ToDo todo \u003d parseTodoCommand(arr);","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"            return new AddCommand(todo);","lastModifiedDate":"2022-02-14"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        case AddCommand.COMMAND_DEADLINE:","lastModifiedDate":"2022-02-14"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"            Deadline deadline \u003d parseDeadlineCommand(arr);","lastModifiedDate":"2022-02-14"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-14"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        case AddCommand.COMMAND_EVENT:","lastModifiedDate":"2022-02-14"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"            Event event \u003d parseEventCommand(arr);","lastModifiedDate":"2022-02-14"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"            return new AddCommand(event);","lastModifiedDate":"2022-02-14"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-14"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"            if (isValidCommandLength(FindCommand.COMMAND_LENGTH, arr)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"                return new FindCommand(arr[1]);","lastModifiedDate":"2022-02-14"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-02-14"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"            break;","lastModifiedDate":"2022-02-14"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"        default:","lastModifiedDate":"2022-02-14"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-14"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"        throw new InvalidInputException(Messages.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-14"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"     * Checks task title is empty or not.","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"     * @param task the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"     * @return the task title after removing leading and trailing spaces.","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the input can\u0027t be split into two part.","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"    public String checkEmptyTask(String task) throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"        boolean isEmptyInput \u003d task.trim().length() \u003d\u003d 0;","lastModifiedDate":"2022-02-05"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"        if (isEmptyInput) {","lastModifiedDate":"2022-02-05"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_EMPTY_TASK);","lastModifiedDate":"2022-02-05"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"        return task.trim();","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"     * Parses list index.","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"     * @param index the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks the tasks list.","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"     * @return the formatted index int.","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the index is out of bound.","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"    public int parseListIndex(String index, List\u003cTask\u003e tasks) throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"        int num;","lastModifiedDate":"2022-02-05"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"            num \u003d Integer.parseInt(index);","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2022-02-05"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"        boolean isOutOfBound \u003d num \u003c 0 || num \u003e tasks.size();","lastModifiedDate":"2022-02-05"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"        if (isOutOfBound) {","lastModifiedDate":"2022-02-05"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_OUTBOUND_NUMBER);","lastModifiedDate":"2022-02-05"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"        return num;","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"     * Separates the inputs by \u0027/\u0027 into two part.","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"     * @param str the str to parse.","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"     * @return the parsed string.","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the input can\u0027t be split into two part.","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"    public String[] parseTaskFormat(String str) throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"        String[] output \u003d str.split(\"/\", 2);","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"zzkzzzz"},"content":"        boolean isValidFormat \u003d output.length \u003d\u003d 1;","lastModifiedDate":"2022-02-05"},{"lineNumber":157,"author":{"gitId":"zzkzzzz"},"content":"        if (isValidFormat) {","lastModifiedDate":"2022-02-05"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-05"},{"lineNumber":159,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"zzkzzzz"},"content":"        return output;","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"zzkzzzz"},"content":"     * Checks preposition before the datetime.","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"     * @param str     the datetime string.","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"     * @param command the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"     * @return the parsed datetime.","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the prepositions is invalid.","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"zzkzzzz"},"content":"    public String checkPrepositionFormat(String str, String command) throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"zzkzzzz"},"content":"        String[] date \u003d str.split(\" \", 2);","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"zzkzzzz"},"content":"        boolean isValidFormat \u003d date.length !\u003d 2;","lastModifiedDate":"2022-02-05"},{"lineNumber":175,"author":{"gitId":"zzkzzzz"},"content":"        if (isValidFormat) {","lastModifiedDate":"2022-02-05"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-05"},{"lineNumber":177,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"zzkzzzz"},"content":"        String pre \u003d date[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"zzkzzzz"},"content":"        // check Prepositions of Time/Date","lastModifiedDate":"2022-01-21"},{"lineNumber":181,"author":{"gitId":"zzkzzzz"},"content":"        boolean isDeadlineCommand \u003d command.equals(AddCommand.COMMAND_DEADLINE);","lastModifiedDate":"2022-02-05"},{"lineNumber":182,"author":{"gitId":"zzkzzzz"},"content":"        boolean isValidDeadlinePrepositions \u003d pre.equals(\"by\");","lastModifiedDate":"2022-02-05"},{"lineNumber":183,"author":{"gitId":"zzkzzzz"},"content":"        if (isDeadlineCommand \u0026\u0026 !isValidDeadlinePrepositions) {","lastModifiedDate":"2022-02-05"},{"lineNumber":184,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_INVALID_DEADLINE_PREPOSITION);","lastModifiedDate":"2022-02-05"},{"lineNumber":185,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":186,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":187,"author":{"gitId":"zzkzzzz"},"content":"        boolean isEventCommand \u003d command.equals(AddCommand.COMMAND_EVENT);","lastModifiedDate":"2022-02-05"},{"lineNumber":188,"author":{"gitId":"zzkzzzz"},"content":"        boolean isValidEventPrepositions \u003d pre.equals(\"on\") || pre.equals(\"at\");","lastModifiedDate":"2022-02-05"},{"lineNumber":189,"author":{"gitId":"zzkzzzz"},"content":"        if (isEventCommand \u0026\u0026 !isValidEventPrepositions) {","lastModifiedDate":"2022-02-05"},{"lineNumber":190,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_INVALID_EVENT_PREPOSITION);","lastModifiedDate":"2022-02-05"},{"lineNumber":191,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"zzkzzzz"},"content":"        return date[1];","lastModifiedDate":"2022-01-23"},{"lineNumber":194,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":195,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":196,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":197,"author":{"gitId":"zzkzzzz"},"content":"     * Checks command length.","lastModifiedDate":"2022-02-05"},{"lineNumber":198,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":199,"author":{"gitId":"zzkzzzz"},"content":"     * @param length the correct length of the command.","lastModifiedDate":"2022-02-05"},{"lineNumber":200,"author":{"gitId":"zzkzzzz"},"content":"     * @param input the input array.","lastModifiedDate":"2022-02-05"},{"lineNumber":201,"author":{"gitId":"zzkzzzz"},"content":"     * @return is valid command length or not.","lastModifiedDate":"2022-02-05"},{"lineNumber":202,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":203,"author":{"gitId":"zzkzzzz"},"content":"    private boolean isValidCommandLength(int length, String[] input) {","lastModifiedDate":"2022-02-05"},{"lineNumber":204,"author":{"gitId":"zzkzzzz"},"content":"        return length \u003d\u003d input.length;","lastModifiedDate":"2022-02-05"},{"lineNumber":205,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":206,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":207,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":208,"author":{"gitId":"zzkzzzz"},"content":"     * Parses input to ToDo command.","lastModifiedDate":"2022-02-14"},{"lineNumber":209,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":210,"author":{"gitId":"zzkzzzz"},"content":"     * @param arr the input array.","lastModifiedDate":"2022-02-14"},{"lineNumber":211,"author":{"gitId":"zzkzzzz"},"content":"     * @return the ToDo Command.","lastModifiedDate":"2022-02-14"},{"lineNumber":212,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the input format is invalid.","lastModifiedDate":"2022-02-14"},{"lineNumber":213,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":214,"author":{"gitId":"zzkzzzz"},"content":"    private ToDo parseTodoCommand(String[] arr) throws InvalidInputException {","lastModifiedDate":"2022-02-14"},{"lineNumber":215,"author":{"gitId":"zzkzzzz"},"content":"        if (isValidCommandLength(AddCommand.COMMAND_LENGTH, arr)) {","lastModifiedDate":"2022-02-05"},{"lineNumber":216,"author":{"gitId":"zzkzzzz"},"content":"            String taskTitle \u003d checkEmptyTask(arr[1]);","lastModifiedDate":"2022-02-04"},{"lineNumber":217,"author":{"gitId":"zzkzzzz"},"content":"            assert taskTitle.length() \u003e 0 : Messages.MESSAGE_EMPTY_TASK;","lastModifiedDate":"2022-02-05"},{"lineNumber":218,"author":{"gitId":"zzkzzzz"},"content":"            return new ToDo(taskTitle);","lastModifiedDate":"2022-02-14"},{"lineNumber":219,"author":{"gitId":"zzkzzzz"},"content":"        } else {","lastModifiedDate":"2022-02-14"},{"lineNumber":220,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-02-14"},{"lineNumber":221,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":222,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":223,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":224,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":225,"author":{"gitId":"zzkzzzz"},"content":"     * Parses input to Deadline command.","lastModifiedDate":"2022-02-14"},{"lineNumber":226,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":227,"author":{"gitId":"zzkzzzz"},"content":"     * @param arr the input array.","lastModifiedDate":"2022-02-14"},{"lineNumber":228,"author":{"gitId":"zzkzzzz"},"content":"     * @return the Deadline Command.","lastModifiedDate":"2022-02-14"},{"lineNumber":229,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the input format is invalid.","lastModifiedDate":"2022-02-14"},{"lineNumber":230,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":231,"author":{"gitId":"zzkzzzz"},"content":"    private Deadline parseDeadlineCommand(String[] arr) throws InvalidInputException {","lastModifiedDate":"2022-02-14"},{"lineNumber":232,"author":{"gitId":"zzkzzzz"},"content":"        String[] deadline \u003d parseTaskFormat(arr[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":233,"author":{"gitId":"zzkzzzz"},"content":"        assert deadline.length \u003d\u003d 2 : Messages.MESSAGE_INVALID_COMMAND_LENGTH;","lastModifiedDate":"2022-02-05"},{"lineNumber":234,"author":{"gitId":"zzkzzzz"},"content":"        String deadlineDate \u003d checkPrepositionFormat(deadline[1], AddCommand.COMMAND_DEADLINE);","lastModifiedDate":"2022-01-28"},{"lineNumber":235,"author":{"gitId":"zzkzzzz"},"content":"        String deadlineTitle \u003d checkEmptyTask(deadline[0]);","lastModifiedDate":"2022-02-04"},{"lineNumber":236,"author":{"gitId":"zzkzzzz"},"content":"        assert deadlineTitle.length() \u003e 0 : Messages.MESSAGE_EMPTY_TASK;","lastModifiedDate":"2022-02-05"},{"lineNumber":237,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":238,"author":{"gitId":"zzkzzzz"},"content":"        return new Deadline(deadlineTitle, parseDate(deadlineDate));","lastModifiedDate":"2022-02-14"},{"lineNumber":239,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":240,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":241,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":242,"author":{"gitId":"zzkzzzz"},"content":"     * Parses input to Event command.","lastModifiedDate":"2022-02-14"},{"lineNumber":243,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":244,"author":{"gitId":"zzkzzzz"},"content":"     * @param arr the input array.","lastModifiedDate":"2022-02-14"},{"lineNumber":245,"author":{"gitId":"zzkzzzz"},"content":"     * @return the Event Command.","lastModifiedDate":"2022-02-14"},{"lineNumber":246,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the input format is invalid.","lastModifiedDate":"2022-02-14"},{"lineNumber":247,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":248,"author":{"gitId":"zzkzzzz"},"content":"    private Event parseEventCommand(String[] arr) throws InvalidInputException {","lastModifiedDate":"2022-02-14"},{"lineNumber":249,"author":{"gitId":"zzkzzzz"},"content":"        String[] event \u003d parseTaskFormat(arr[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":250,"author":{"gitId":"zzkzzzz"},"content":"        assert event.length \u003d\u003d 2 : Messages.MESSAGE_INVALID_COMMAND_LENGTH;","lastModifiedDate":"2022-02-05"},{"lineNumber":251,"author":{"gitId":"zzkzzzz"},"content":"        String eventDate \u003d checkPrepositionFormat(event[1], AddCommand.COMMAND_EVENT);","lastModifiedDate":"2022-01-28"},{"lineNumber":252,"author":{"gitId":"zzkzzzz"},"content":"        String eventTitle \u003d checkEmptyTask(event[0]);","lastModifiedDate":"2022-02-04"},{"lineNumber":253,"author":{"gitId":"zzkzzzz"},"content":"        assert eventTitle.length() \u003e 0 : Messages.MESSAGE_EMPTY_TASK;","lastModifiedDate":"2022-02-05"},{"lineNumber":254,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":255,"author":{"gitId":"zzkzzzz"},"content":"        return new Event(eventTitle, parseDate(eventDate));","lastModifiedDate":"2022-02-14"},{"lineNumber":256,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":257,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":258,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":259,"author":{"gitId":"zzkzzzz"},"content":"     * Parses string to datetime.","lastModifiedDate":"2022-01-23"},{"lineNumber":260,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":261,"author":{"gitId":"zzkzzzz"},"content":"     * @param date the date","lastModifiedDate":"2022-01-23"},{"lineNumber":262,"author":{"gitId":"zzkzzzz"},"content":"     * @return the local date time","lastModifiedDate":"2022-01-23"},{"lineNumber":263,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the datetime format is invalid.","lastModifiedDate":"2022-01-23"},{"lineNumber":264,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":265,"author":{"gitId":"zzkzzzz"},"content":"    public static LocalDateTime parseDate(String date) throws InvalidInputException {","lastModifiedDate":"2022-01-21"},{"lineNumber":266,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":267,"author":{"gitId":"zzkzzzz"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-21"},{"lineNumber":268,"author":{"gitId":"zzkzzzz"},"content":"            LocalDateTime formattedDate \u003d LocalDateTime.parse(date, format);","lastModifiedDate":"2022-01-21"},{"lineNumber":269,"author":{"gitId":"zzkzzzz"},"content":"            return formattedDate;","lastModifiedDate":"2022-01-21"},{"lineNumber":270,"author":{"gitId":"zzkzzzz"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":271,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(\"\u0027\" + date + \"\u0027\" + Messages.MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2022-02-05"},{"lineNumber":272,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":273,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":274,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":275,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":276,"author":{"gitId":"zzkzzzz"},"content":"     * Prints date in string.","lastModifiedDate":"2022-01-23"},{"lineNumber":277,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":278,"author":{"gitId":"zzkzzzz"},"content":"     * @param date the date.","lastModifiedDate":"2022-01-23"},{"lineNumber":279,"author":{"gitId":"zzkzzzz"},"content":"     * @return the datetime string.","lastModifiedDate":"2022-01-23"},{"lineNumber":280,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":281,"author":{"gitId":"zzkzzzz"},"content":"    public static String printDate(LocalDateTime date) {","lastModifiedDate":"2022-01-21"},{"lineNumber":282,"author":{"gitId":"zzkzzzz"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2022-02-02"},{"lineNumber":283,"author":{"gitId":"zzkzzzz"},"content":"        return date.format(format);","lastModifiedDate":"2022-01-21"},{"lineNumber":284,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":285,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":286,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":286}},{"path":"src/main/java/meep/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.io.File;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import meep.exception.InvalidInputException;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import meep.parser.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"import meep.ui.Messages;","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":" * Represents the file used to store tasks data.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"public class Storage {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    public static final String DEFAULT_FILEPATH \u003d \"/data.txt\";","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    public final String path;","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Storage.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    public Storage() {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        this.path \u003d getPath();","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public Storage(String path, ListTask tasks) throws IOException, InvalidInputException {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        this.path \u003d getPath();","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTaskList(this.readTaskFile(this.getPath()));","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"     * Gets path.","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"     * @return the path.","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"    public String getPath() {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        String path \u003d home + DEFAULT_FILEPATH;","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        boolean directoryExists \u003d new java.io.File(path).exists();","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        return path;","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"     * Checks data file existence and create it if its not exist.","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"    public void checkFileExists() throws InvalidInputException {","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"            File dataFile \u003d new File(path);","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"            dataFile.createNewFile(); // if file already exists will do nothing","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(Messages.MESSAGE_FILE_MISSING);","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"     * Reads task date file.","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"     * @param path the path of the file.","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"     * @return the list of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IOException           If the file path is invalid.","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"     * @throws InvalidInputException If the datetime format is invalid.","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"    public List\u003cTask\u003e readTaskFile(String path) throws IOException, InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"        checkFileExists();","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        FileInputStream fstream \u003d null;","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"            fstream \u003d new FileInputStream(path);","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"            throw new FileNotFoundException(\"File not found under \" + path);","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(fstream));","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"        String strLine;","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"        // Read File Line By Line","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"        while ((strLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"            String[] parts \u003d strLine.split(\"\\\\|\");","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"            //  remove leading and trailing spaces","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"            for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"                parts[i] \u003d parts[i].trim();","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"            boolean isTodo \u003d parts[0].equals(\"T\");","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"            boolean isDeadline \u003d parts[0].equals(\"D\");","lastModifiedDate":"2022-02-05"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"            boolean isEvent \u003d parts[0].equals(\"E\");","lastModifiedDate":"2022-02-05"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"            boolean isMarked \u003d parts[1].equals(\"1\");","lastModifiedDate":"2022-02-05"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"            if (isTodo) {","lastModifiedDate":"2022-02-05"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"                result.add(new ToDo(parts[2], isMarked));","lastModifiedDate":"2022-02-05"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"            } else if (isDeadline) {","lastModifiedDate":"2022-02-05"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"                result.add(new Deadline(parts[2], isMarked, parser.parseDate(parts[3])));","lastModifiedDate":"2022-02-05"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"            } else if (isEvent) {","lastModifiedDate":"2022-02-05"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"                result.add(new Event(parts[2], isMarked, parser.parseDate(parts[3])));","lastModifiedDate":"2022-02-05"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"                throw new AssertionError(\"Invalid Task!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"        fstream.close();","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"        return result;","lastModifiedDate":"2022-01-21"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"     * Saves task list to file.","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"     * @param taskList the task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"     * @return status of saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"     * @throws FileNotFoundException If the file not found.","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"    public boolean saveTaskToFile(List\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2022-02-05"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"        String path \u003d getPath();","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-21"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"            boolean isTodo \u003d task.getClass() \u003d\u003d ToDo.class;","lastModifiedDate":"2022-02-05"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"            boolean isDeadline \u003d task.getClass() \u003d\u003d Deadline.class;","lastModifiedDate":"2022-02-05"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"            boolean isEvent \u003d task.getClass() \u003d\u003d Event.class;","lastModifiedDate":"2022-02-05"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"            if (isTodo) {","lastModifiedDate":"2022-02-05"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"                fw.write(\"T | \" + (task.isDone() ? \"1 | \" : \"0 | \")","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"                        + task.getTitle() + System.lineSeparator());","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"            } else if (isDeadline) {","lastModifiedDate":"2022-02-05"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"                fw.write(\"D | \" + (task.isDone() ? \"1 | \" : \"0 | \")","lastModifiedDate":"2022-02-02"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"                        + task.getTitle() + \" | \"","lastModifiedDate":"2022-01-28"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"                        + ((Deadline) task).getDate().format(format) + System.lineSeparator());","lastModifiedDate":"2022-01-28"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"            } else if (isEvent) {","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"                fw.write(\"E | \" + (task.isDone() ? \"1 | \" : \"0 | \")","lastModifiedDate":"2022-02-02"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"                        + task.getTitle() + \" | \"","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"                        + ((Event) task).getDate().format(format) + System.lineSeparator());","lastModifiedDate":"2022-01-28"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"            } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"                throw new AssertionError(\"Invalid Task!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":156,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":157,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":159,"author":{"gitId":"zzkzzzz"},"content":"        fw.close();","lastModifiedDate":"2022-01-21"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"        return true;","lastModifiedDate":"2022-01-21"},{"lineNumber":161,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":162}},{"path":"src/main/java/meep/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import meep.parser.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" * Represents the deadline task.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     * @param title title of deadline task.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     * @param by    deadline of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    public Deadline(String title, LocalDateTime by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        super(title);","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Deadline.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     * @param title title of deadline task.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * @param done  status of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * @param by    deadline of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    public Deadline(String title, boolean done, LocalDateTime by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        super(title, done);","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     * Gets date.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     * @return the date.","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        return by;","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        return \"[ D ]\" + super.toString() + \" (by: \" + Parser.printDate(by) + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":50}},{"path":"src/main/java/meep/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import meep.parser.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" * Represents the event task.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    protected LocalDateTime on;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Event.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     * @param title title of event task.","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"     * @param on    deadline of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    public Event(String title, LocalDateTime on) {","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        super(title);","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        this.on \u003d on;","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Event.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     * @param title title of event task.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * @param done  status of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * @param on    deadline of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    public Event(String title, boolean done, LocalDateTime on) {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        super(title, done);","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        this.on \u003d on;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     * Gets datetime.","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     * @return the datetime.","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        return on;","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        return \"[ E ]\" + super.toString() + \" (on: \" + Parser.printDate(on) + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":50}},{"path":"src/main/java/meep/task/ListTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.List;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import meep.ui.Messages;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" * Represents the list of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"public class ListTask {","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class ListTask.","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public ListTask() {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class ListTask.","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    public ListTask(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(tasks);","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     * Gets list.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     * @return the list.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * Is the task list empty.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"     * @return the boolean.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"     * Returns the size of task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"     * @return the size.","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    public int size() {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"     * Adds a list of tasks to current tasklist.","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"     * @param tasks the task list","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"    public void addTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"     * Adds task to task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"     * @param task the task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-21"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-21"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"     * Deletes task according to the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"     * @param index the index of task to delete.","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IndexOutOfBoundsException If the index out of bounds.","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"    public void deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"     * Finds tasks according to given keyword.","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"     * @param keyword the keyword user given to search.","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"     * @return if find matched task, return it in string format.","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"     * Otherwise, return empty string.","lastModifiedDate":"2022-02-14"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2022-02-08"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-08"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"        stringBuilder.append(System.lineSeparator());","lastModifiedDate":"2022-02-08"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-02-08"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"        int totalMatchedTasks \u003d 0;","lastModifiedDate":"2022-02-14"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-02-08"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"            String input \u003d task.toString().substring(7);","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"            if (input.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2022-02-08"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"                stringBuilder.append(\"     \" + i + \".  \"","lastModifiedDate":"2022-02-08"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"                        + task.toString() + System.lineSeparator());","lastModifiedDate":"2022-02-08"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"                totalMatchedTasks++;","lastModifiedDate":"2022-02-14"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"            i++;","lastModifiedDate":"2022-02-08"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"        if (totalMatchedTasks \u003d\u003d 0) {","lastModifiedDate":"2022-02-14"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"            return \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"        } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2022-02-08"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"     * Gets task according to the index.","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"     * @param index the index of task to get.","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"     * @return the task","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"     * @throws IndexOutOfBoundsException If the index out of bounds.","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"    public Task get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-01-21"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"     * Generates task list string.","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"     * @return the task list string.","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"    public String generateTaskList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"            return Messages.MESSAGE_EMPTY_TASK_LIST;","lastModifiedDate":"2022-02-05"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"        stringBuilder.append(System.lineSeparator());","lastModifiedDate":"2022-01-21"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"            stringBuilder.append(\"     \" + i + \".  \"","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"                    + task.toString() + System.lineSeparator());","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"            i++;","lastModifiedDate":"2022-01-21"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"     * Generates task list with all the tasks are before given datetime.","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"     * @param date the datetime.","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"     * @return the task list string.","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"    public String generateTaskList(LocalDateTime date) {","lastModifiedDate":"2022-01-21"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":156,"author":{"gitId":"zzkzzzz"},"content":"            return Messages.MESSAGE_EMPTY_TASK_LIST;","lastModifiedDate":"2022-02-05"},{"lineNumber":157,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-21"},{"lineNumber":159,"author":{"gitId":"zzkzzzz"},"content":"        stringBuilder.append(System.lineSeparator());","lastModifiedDate":"2022-01-21"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-21"},{"lineNumber":161,"author":{"gitId":"zzkzzzz"},"content":"        boolean isBeforeDate;","lastModifiedDate":"2022-02-02"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":163,"author":{"gitId":"zzkzzzz"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-21"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"            boolean isDeadline \u003d (task instanceof Deadline);","lastModifiedDate":"2022-02-02"},{"lineNumber":165,"author":{"gitId":"zzkzzzz"},"content":"            boolean isEvent \u003d (task instanceof Event);","lastModifiedDate":"2022-02-02"},{"lineNumber":166,"author":{"gitId":"zzkzzzz"},"content":"            if (isDeadline) {","lastModifiedDate":"2022-02-02"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"                isBeforeDate \u003d ((Deadline) task).getDate().isBefore(date);","lastModifiedDate":"2022-02-02"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"                if (isBeforeDate) {","lastModifiedDate":"2022-02-02"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"                    stringBuilder.append(\"     \" + i + \".  \" + task.toString() + System.lineSeparator());","lastModifiedDate":"2022-02-02"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"            } else if (isEvent) {","lastModifiedDate":"2022-02-02"},{"lineNumber":172,"author":{"gitId":"zzkzzzz"},"content":"                isBeforeDate \u003d ((Event) task).getDate().isBefore(date);","lastModifiedDate":"2022-02-02"},{"lineNumber":173,"author":{"gitId":"zzkzzzz"},"content":"                if (isBeforeDate) {","lastModifiedDate":"2022-02-02"},{"lineNumber":174,"author":{"gitId":"zzkzzzz"},"content":"                    stringBuilder.append(\"     \" + i + \".  \" + task.toString() + System.lineSeparator());","lastModifiedDate":"2022-02-02"},{"lineNumber":175,"author":{"gitId":"zzkzzzz"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":177,"author":{"gitId":"zzkzzzz"},"content":"            i++;","lastModifiedDate":"2022-01-21"},{"lineNumber":178,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":179,"author":{"gitId":"zzkzzzz"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-01-21"},{"lineNumber":180,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":181,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":182,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":183,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":183}},{"path":"src/main/java/meep/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":" * Represents the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    private final String title;","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Task.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"     * @param title title of task.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    protected Task(String title) {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Task.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"     * @param title title of task.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"     * @param isDone  status of the task.","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    protected Task(String title, boolean isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"     * Gets title.","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"     * @return the title.","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    public String getTitle() {","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        return title;","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"     * Gets isDone.","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"     * @return the isDone.","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    public Boolean isDone() {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        return isDone;","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"     * Marks task as done.","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"     * Marks task as undone.","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"     * To String.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"        String isDone \u003d (this.isDone) ? \"X\" : \" \";","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        return \"[ \" + isDone + \" ] \" + getTitle();","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":74}},{"path":"src/main/java/meep/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":" * Represents the todo task.","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class ToDo.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"     * @param title title of rodo task.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    public ToDo(String title) {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"        super(title);","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class ToDo.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     * @param title title of todo task.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"     * @param done  status of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public ToDo(String title, boolean done) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        super(title, done);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        return \"[ T ]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":32}},{"path":"src/main/java/meep/textui/Meep.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.textui;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.ExitCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import meep.exception.InvalidInputException;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import meep.parser.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import meep.storage.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":" * Entry point of the Meep application.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"public class Meep {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    private ListTask taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        new Meep().run();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     * Runs the program until termination.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    public void run() {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        start();","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        readAndExecuteCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        saveTaskToFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     * Sets up all objects needed, loads up the data from the data file and prints the logo.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    private void start() {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"            this.parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"            this.taskList \u003d new ListTask();","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            this.storage \u003d new Storage(\"data.txt\", taskList);","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            ui.printLogo();","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"            ui.printInstruction();","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException | InvalidInputException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"            ui.printMsg(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"     * Reads user input, parse it to command and execute it until exit command.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    private void readAndExecuteCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        String userInput \u003d \"In\";","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-21"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"            try {","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"                userInput \u003d ui.getUserCommand();","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"                Command command \u003d parser.parseUserInput(userInput, taskList.getList());","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"                String result \u003d command.execute(taskList);","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"                ui.printMsg(result);","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"                isExit \u003d ExitCommand.isExit(command);","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"                ui.printMsg(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"                continue;","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"     * Saves task to storage file.","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"    private void saveTaskToFile() {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"            storage.saveTaskToFile(taskList.getList());","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"            ui.printMsg(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":87}},{"path":"src/main/java/meep/textui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.textui;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":" * Container for user visible messages.","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"public class Messages {","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_LOGO \u003d \"\"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"            + \"**       **  ******  ******    *****\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"            + \"* *     * *  *       *         *    *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"            + \"*  *   *  *  ******  ******    *****\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"            + \"*   * *   *  *       *         *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"            + \"*    *    *  ******  ******    *\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_HI \u003d \"Hello! I\u0027m Meep\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INSTRUCTIONS \u003d \"\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     **********************************************************************\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * COMMANDS              | FORMAT                                     *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * normal task           | todo [task title]                          *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * task with deadline    | deadline [task title] /by [date\u0026time]      *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * task on date          | event [task title] /on [date\u0026time]         *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * list all tasks        | list                                       *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * list tasks before date| list [date\u0026time]                           *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * find task             | find [keyword]                             *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * mark task as done     | mark [task id]                             *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * mark task as undone   | unmark [task id]                           *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * quit application      | bye                                        *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     *                                                                    *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     * Note for [date\u0026time]: enter it strictly in the following format    *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     *    dd/mm/yyyy [hh:mm] | eg: 02/12/2019 18:00                       *\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"                    + \"     **********************************************************************\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"                    + \"\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"zzkzzzz":35}},{"path":"src/main/java/meep/textui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.textui;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":" * UI of the application.","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"public class Ui {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"    private static final String DIALOG_START \u003d \"Meep: \";","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    private final Scanner in;","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Ui.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public Ui() {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        this(System.in, System.out);","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"     * Constructor for class Ui.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"     * @param in  InputStream.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"     * @param out PrintStream.","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        this.out \u003d out;","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"     * Gets user command.","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"     * @return the user command.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public String getUserCommand() {","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        out.print(\"You: \");","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        return fullInputLine;","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"     * Print logo.","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    public void printLogo() {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        print(DIVIDER, Messages.MESSAGE_LOGO, Messages.MESSAGE_HI, DIVIDER);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    public void printInstruction() {","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        print(DIVIDER, Messages.MESSAGE_INSTRUCTIONS, DIVIDER);","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"     * Print bye.","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"    public void printBye() {","lastModifiedDate":"2022-01-21"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        print(DIVIDER, Messages.MESSAGE_BYE, DIVIDER);","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"     * Print msg without start dialog.","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"     * @param message the message.","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"    public void print(String... message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"        for (String m : message) {","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"            out.println(m);","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"     * Print msg with start dialog.","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"     * @param message the message.","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"    public void printMsg(String... message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"        out.print(DIALOG_START);","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        for (String m : message) {","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"            out.println(m);","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"zzkzzzz":92}},{"path":"src/main/java/meep/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    private Text dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"    private HBox hBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    private DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(this.getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        hBox.setHgrow(dialog, Priority.ALWAYS);","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        Color c;","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        if (isUser) {","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            c \u003d Color.web(\"#2499d4\");","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"            c \u003d Color.web(\"#7cbed9\");","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        BackgroundFill bf \u003d new BackgroundFill(c, new CornerRadii(90), null);","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        hBox.setBackground(new Background(bf));","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        displayPicture.setFitHeight(60);","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        displayPicture.setFitWidth(60);","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"        // circle image view","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        Circle circle \u003d new Circle(24);","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        circle.setStroke(Color.WHITE);","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        circle.setStrokeWidth(10);","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        circle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        circle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"    private void flip() {","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"    public static DialogBox getMeepDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"        db.flip();","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        return db;","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"zzkzzzz":92}},{"path":"src/main/java/meep/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.Command;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import meep.exception.InvalidInputException;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import meep.parser.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import meep.storage.Storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"public class Gui extends Application {","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    private Image userLogo \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    private Image meepLogo \u003d new Image(this.getClass().getResourceAsStream(\"/images/meep.jpeg\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    private Parser parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    private ListTask taskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"    public void setup() throws InvalidInputException {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"            this.parser \u003d new Parser();","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"            this.taskList \u003d new ListTask();","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            this.storage \u003d new Storage(\"data.txt\", taskList);","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException | InvalidInputException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        sendButton \u003d new Button();","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"        stage.show();","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        stage.setTitle(\"Meep\");","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"        stage.setMinHeight(6000.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"        });","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"        });","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"        });","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-02"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"        });","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-02-02"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-02"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-02"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-02"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-02"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-02-02"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-02-02"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-02"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"                DialogBox.getUserDialog(userText.getText(), userLogo),","lastModifiedDate":"2022-02-04"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"                DialogBox.getMeepDialog(dukeText.getText(), meepLogo)","lastModifiedDate":"2022-02-04"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"        );","lastModifiedDate":"2022-02-02"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":156,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":159,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":160,"author":{"gitId":"zzkzzzz"},"content":"     * Generates a response to user input.","lastModifiedDate":"2022-02-04"},{"lineNumber":161,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":162,"author":{"gitId":"zzkzzzz"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-02"},{"lineNumber":163,"author":{"gitId":"zzkzzzz"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":164,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":165,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":166,"author":{"gitId":"zzkzzzz"},"content":"            Command command \u003d parser.parseUserInput(input, taskList.getList());","lastModifiedDate":"2022-02-02"},{"lineNumber":167,"author":{"gitId":"zzkzzzz"},"content":"            result \u003d command.execute(taskList);","lastModifiedDate":"2022-02-02"},{"lineNumber":168,"author":{"gitId":"zzkzzzz"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":169,"author":{"gitId":"zzkzzzz"},"content":"            result \u003d e.getMessage();","lastModifiedDate":"2022-02-02"},{"lineNumber":170,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":171,"author":{"gitId":"zzkzzzz"},"content":"        return result;","lastModifiedDate":"2022-02-02"},{"lineNumber":172,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":173,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":174,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":175,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":176,"author":{"gitId":"zzkzzzz"},"content":"     * Generates task list.","lastModifiedDate":"2022-02-04"},{"lineNumber":177,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":178,"author":{"gitId":"zzkzzzz"},"content":"    public String showTasks() {","lastModifiedDate":"2022-02-02"},{"lineNumber":179,"author":{"gitId":"zzkzzzz"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":180,"author":{"gitId":"zzkzzzz"},"content":"            return \"You have no task currently.\\n Please try to add new task \\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":181,"author":{"gitId":"zzkzzzz"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":182,"author":{"gitId":"zzkzzzz"},"content":"            return \"These are your current tasks:\\n\" + taskList.generateTaskList();","lastModifiedDate":"2022-02-02"},{"lineNumber":183,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":184,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":185,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":186,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":187,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":188,"author":{"gitId":"zzkzzzz"},"content":"     * Saves task to storage file.","lastModifiedDate":"2022-02-04"},{"lineNumber":189,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":190,"author":{"gitId":"zzkzzzz"},"content":"    public boolean saveTaskToFile() {","lastModifiedDate":"2022-02-04"},{"lineNumber":191,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":192,"author":{"gitId":"zzkzzzz"},"content":"            storage.saveTaskToFile(taskList.getList());","lastModifiedDate":"2022-02-04"},{"lineNumber":193,"author":{"gitId":"zzkzzzz"},"content":"            return true;","lastModifiedDate":"2022-02-04"},{"lineNumber":194,"author":{"gitId":"zzkzzzz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":195,"author":{"gitId":"zzkzzzz"},"content":"            return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":196,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":197,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":198,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":199,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":200,"author":{"gitId":"zzkzzzz"},"content":"     * Create data file.","lastModifiedDate":"2022-02-04"},{"lineNumber":201,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":202,"author":{"gitId":"zzkzzzz"},"content":"    public void createDataFile() throws InvalidInputException {","lastModifiedDate":"2022-02-04"},{"lineNumber":203,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":204,"author":{"gitId":"zzkzzzz"},"content":"            storage.checkFileExists();","lastModifiedDate":"2022-02-04"},{"lineNumber":205,"author":{"gitId":"zzkzzzz"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":206,"author":{"gitId":"zzkzzzz"},"content":"            throw new InvalidInputException(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":207,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":208,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":209,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"zzkzzzz":209}},{"path":"src/main/java/meep/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.ExitCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.HelpCommand;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import meep.exception.InvalidInputException;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"public class MainWindow extends BorderPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    private Gui gui;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    private Image meepImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/meep.jpeg\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"     * Init.","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    public void setMeep(Gui d) {","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        gui \u003d d;","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"            gui.setup();","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"                    DialogBox.getMeepDialog(Messages.MESSAGE_HI, meepImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"                    DialogBox.getMeepDialog(HelpCommand.MESSAGE_HELP, meepImage),","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"                    DialogBox.getMeepDialog(gui.showTasks(), meepImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            );","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                    DialogBox.getMeepDialog(e.getMessage(), meepImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"            );","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Gui\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    private void handleUserInput() throws InvalidInputException {","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        String response \u003d gui.getResponse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"                DialogBox.getUserDialog(\"\\n\" + input + \"         \\n\", userImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"                DialogBox.getMeepDialog(response, meepImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        if (isExit(response)) {","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"            boolean isSuccess \u003d gui.saveTaskToFile();","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"            System.exit(0);","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"     * Checks data file existence.","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"    private boolean isExit(String response) {","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"        return response.equals(ExitCommand.MESSAGE_EXIT);","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"zzkzzzz":85}},{"path":"src/main/java/meep/ui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":" * Container for user visible messages.","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"public class Messages {","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_LOGO \u003d \"\"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"            + \"**       **  ******  ******    *****\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"            + \"* *     * *  *       *         *    *\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"            + \"*  *   *  *  ******  ******    *****\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"            + \"*   * *   *  *       *         *\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"            + \"*    *    *  ******  ******    *\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_HI \u003d \"Hello! I\u0027m Meep\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_FILE_MISSING \u003d \"Meep was unable to save all the data for the file! \"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"            + \"Please try again.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_EMPTY_TASK \u003d \"Task description can not be empty!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_EMPTY_INPUT \u003d \"Command can not be empty!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INVALID_NUMBER \u003d \"Invalid task number. Please enter a valid integer.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_OUTBOUND_NUMBER \u003d \"Task number out of range.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INVALID_FORMAT \u003d \"This is not a valid command. See \u0027help\u0027\";","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INVALID_COMMAND_LENGTH \u003d \"arr length should be 2\";","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_EMPTY_TASK_LIST \u003d \"You have no task currently. Please try add one.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \" can\u0027t be formatted!\"","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"            + \"Please format the date/time as dd/MM/yyyy HH:mm\";","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INVALID_DEADLINE_PREPOSITION \u003d \"Invalid Prepositions for deadline command. \"","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"            + \"eg. \u0027/by\u0027.\";","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    public static final String MESSAGE_INVALID_EVENT_PREPOSITION \u003d \"Invalid Prepositions for event command. \"","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"            + \"eg. \u0027/on\u0027 or \u0027/at\u0027 .\";","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"zzkzzzz":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"\u003cfx:root fx:id\u003d\"hBox\"  alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" opacity\u003d\"0.83\" prefWidth\u003d\"400.0\"  type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"        \u003cText fx:id\u003d\"dialog\" fill\u003d\"WHITE\" lineSpacing\u003d\"2.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"                \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"            \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"zzkzzzz":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"900.0\" prefHeight\u003d\"700.0\" style\u003d\"-fx-background-color: #7cbed9#7cbed9;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"meep.ui.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    \u003ccenter\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"        \u003cBorderPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: #7cbed9#7cbed9;\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"            \u003cbottom\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"                \u003cHBox  maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" BorderPane.alignment\u003d\"CENTER\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cBorderPane.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"                        \u003cInsets bottom\u003d\"21.0\" top\u003d\"21.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/BorderPane.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"                        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" promptText\u003d\"Command\" style\u003d\"-fx-background-color: #3e7287#3e7287; -fx-text-fill: white; -fx-border-radius: 10; -fx-background-radius: 500;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"                        \u003c/TextField\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"                  \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"52.0\" prefWidth\u003d\"82.0\" style\u003d\"-fx-background-color: #3e7287#3e7287; -fx-background-radius: 30;\" text\u003d\"Send\" textFill\u003d\"#2b3032\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"                        \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"                  \u003c/Button\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/bottom\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"            \u003ccenter\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"                \u003cAnchorPane BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"                        \u003cScrollPane fx:id\u003d\"scrollPane\" style\u003d\"-fx-fit-to-width: true; -fx-fit-to-height: true; -fx-background-color: #2b3122; -fx-border-color: #463943#463943; -fx-border-radius: 10;\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"                            \u003ccontent\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"                                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"466.0\" prefWidth\u003d\"844.0\" style\u003d\"-fx-spacing: 2; -fx-background-color: #3e7287#3e7287 #3e7287#3e7287; -fx-background-radius: 10; -fx-fill-width: true; -fx-border-radius: 10; -fx-border-color: #42568f#42568f;\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"                                \u003c/VBox\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"                            \u003c/content\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"                        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"                \u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/center\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"            \u003ctop\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"                \u003cHBox prefWidth\u003d\"50.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                        \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"34.0\" prefWidth\u003d\"847.0\" text\u003d\"Meep\" textAlignment\u003d\"CENTER\" textFill\u003d\"#eeeeee\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                            \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"                                \u003cFont size\u003d\"28.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"                            \u003c/font\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"                                \u003cInsets /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/top\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"            \u003cBorderPane.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"                \u003cInsets left\u003d\"19.0\" right\u003d\"19.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"            \u003c/BorderPane.margin\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        \u003c/BorderPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    \u003c/center\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"\u003c/BorderPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"zzkzzzz":68}},{"path":"src/test/java/meep/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public void addCommandExecute_normalInput_success() {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2015,","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"                Month.JULY, 29, 19, 30, 40);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline \u003d new Deadline(\"report1\", dateTime);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        Event event \u003d new Event(\"report2\", dateTime);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"report3\");","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        AddCommand c1 \u003d new AddCommand(deadline);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        AddCommand c2 \u003d new AddCommand(event);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        AddCommand c3 \u003d new AddCommand(todo);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        ListTask tasks \u003d new ListTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(AddCommand.MESSAGE_ADD + deadline.toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"                + \"\\nNow you have 1 tasks in the list.\", c1.execute(tasks));","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(AddCommand.MESSAGE_ADD + event.toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"                + \"\\nNow you have 2 tasks in the list.\", c2.execute(tasks));","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(AddCommand.MESSAGE_ADD + todo.toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"                + \"\\nNow you have 3 tasks in the list.\", c3.execute(tasks));","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzkzzzz":38}},{"path":"src/test/java/meep/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public void deleteCommandExecute_normalInput_success() {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2015,","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"                Month.JULY, 29, 19, 30, 40);","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline \u003d new Deadline(\"report1\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        Event event \u003d new Event(\"report2\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"report3\");","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        ListTask tasks \u003d new ListTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        DeleteCommand c1 \u003d new DeleteCommand(1);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        DeleteCommand c2 \u003d new DeleteCommand(1);","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        DeleteCommand c3 \u003d new DeleteCommand(1);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        DeleteCommand c4 \u003d new DeleteCommand(1);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(DeleteCommand.MESSAGE_DELETE + deadline.toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"                + \"\\nNow you have 2 tasks in the list.\", c1.execute(tasks));","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(DeleteCommand.MESSAGE_DELETE + event.toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"                + \"\\nNow you have 1 tasks in the list.\", c2.execute(tasks));","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(DeleteCommand.MESSAGE_DELETE + todo.toString()","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"                + \"\\nNow you have 0 tasks in the list.\", c3.execute(tasks));","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"            c4.execute(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        });","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":48}},{"path":"src/test/java/meep/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    public void exitCommandExecute_normalInput_success() {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"        ExitCommand c1 \u003d new ExitCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"        ListTask tasks \u003d new ListTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(c1.execute(tasks), ExitCommand.MESSAGE_EXIT);","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    public void exitCommand_isExit() {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        ExitCommand c1 \u003d new ExitCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"report3\");","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        AddCommand c2 \u003d new AddCommand(todo);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        DeleteCommand c3 \u003d new DeleteCommand(1);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        ListCommand c4 \u003d new ListCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        MarkCommand c5 \u003d new MarkCommand(1);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        UnmarkCommand c6 \u003d new UnmarkCommand(1);","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        assertTrue(ExitCommand.isExit(c1));","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(ExitCommand.isExit(c2));","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(ExitCommand.isExit(c3));","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(ExitCommand.isExit(c4));","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(ExitCommand.isExit(c5));","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        assertFalse(ExitCommand.isExit(c6));","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zzkzzzz":39}},{"path":"src/test/java/meep/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    public void listCommandExecute_normalInput_success() {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2015,","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"                Month.JULY, 29, 19, 30, 40);","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline \u003d new Deadline(\"report1\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        Event event \u003d new Event(\"report2\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"report3\");","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        ListTask tasks \u003d new ListTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        ListCommand c1 \u003d new ListCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        String result \u003d \"\\n     1.  [ D ][   ] report1 (by: Jul 29 2015 19:30)\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"                + \"     2.  [ E ][   ] report2 (on: Jul 29 2015 19:30)\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"                + \"     3.  [ T ][   ] report3\" + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(result, c1.execute(tasks));","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":42}},{"path":"src/test/java/meep/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static meep.commands.MarkCommand.MESSAGE_MARK;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    public void markCommandExecute_normalInput_success() {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2015,","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"                Month.JULY, 29, 19, 30, 40);","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline \u003d new Deadline(\"report1\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline2 \u003d new Deadline(\"report1\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        Event event \u003d new Event(\"report2\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        Event event2 \u003d new Event(\"report2\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"report3\");","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo2 \u003d new ToDo(\"report3\");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        ListTask tasks \u003d new ListTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        MarkCommand c1 \u003d new MarkCommand(1);","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        MarkCommand c2 \u003d new MarkCommand(2);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        MarkCommand c3 \u003d new MarkCommand(3);","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        deadline2.markDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        event2.markDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        todo2.markDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(MESSAGE_MARK + deadline2.toString(), c1.execute(tasks));","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(MESSAGE_MARK + event2.toString(), c2.execute(tasks));","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(MESSAGE_MARK + todo2.toString(), c3.execute(tasks));","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":48}},{"path":"src/test/java/meep/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.commands;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static meep.commands.UnmarkCommand.MESSAGE_UNMARK;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    public void unmarkCommandExecute_normalInput_success() {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2015,","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"                Month.JULY, 29, 19, 30, 40);","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline \u003d new Deadline(\"report1\", true, dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline2 \u003d new Deadline(\"report1\", true, dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        Event event \u003d new Event(\"report2\", true, dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        Event event2 \u003d new Event(\"report2\", true, dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"report3\", true);","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo2 \u003d new ToDo(\"report3\", true);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        ListTask tasks \u003d new ListTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        UnmarkCommand c1 \u003d new UnmarkCommand(1);","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        UnmarkCommand c2 \u003d new UnmarkCommand(2);","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        UnmarkCommand c3 \u003d new UnmarkCommand(3);","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        deadline2.unmarkDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        event2.unmarkDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        todo2.unmarkDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(MESSAGE_UNMARK + deadline2.toString(), c1.execute(tasks));","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(MESSAGE_UNMARK + event2.toString(), c2.execute(tasks));","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(MESSAGE_UNMARK + todo2.toString(), c3.execute(tasks));","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":48}},{"path":"src/test/java/meep/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import meep.commands.AddCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import meep.exception.InvalidInputException;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"    public void checkTaskFormat_normalInput_success() throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"test\", parser.checkEmptyTask(\"test\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"    public void checkTaskFormat_emptyInput_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        InvalidInputException thrown \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"            parser.checkEmptyTask(\"\");","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"Task description can not be empty!\", thrown.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    public void parseListIndex_normalInput_success() throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2015,","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"                Month.JULY, 29, 19, 30, 40);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline \u003d new Deadline(\"read book\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        Event event \u003d new Event(\"report2\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"report3\");","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"        ListTask tasks \u003d new ListTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        final String filePath \u003d \"/java/test.txt\";","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        // works on *nix","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"        // works on Windows","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"        String path \u003d home + filePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(0, parser.parseListIndex(\"0\", tasks.getList()));","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(1, parser.parseListIndex(\"1\", tasks.getList()));","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(2, parser.parseListIndex(\"2\", tasks.getList()));","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"    public void parseListIndex_invalidInput_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2015,","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"                Month.JULY, 29, 19, 30, 40);","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline \u003d new Deadline(\"report1\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"zzkzzzz"},"content":"        Event event \u003d new Event(\"report2\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"report3\");","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"zzkzzzz"},"content":"        ListTask tasks \u003d new ListTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"zzkzzzz"},"content":"        InvalidInputException thrown1 \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"zzkzzzz"},"content":"            parser.parseListIndex(\"invalid\", tasks.getList());","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"Invalid task number. Please enter a valid integer.\", thrown1.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"zzkzzzz"},"content":"        InvalidInputException thrown2 \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"zzkzzzz"},"content":"            parser.parseListIndex(\"-1\", tasks.getList());","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"Task number out of range.\", thrown2.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"zzkzzzz"},"content":"    public void parseTaskFormat_normalInput_success() throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"zzkzzzz"},"content":"        String[] result \u003d {\"return book \", \"by 02/12/2019 18:00\"};","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"zzkzzzz"},"content":"        assertArrayEquals(result, parser.parseTaskFormat(\"return book /by 02/12/2019 18:00\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"zzkzzzz"},"content":"    public void parseTaskFormat_invalidInput_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"zzkzzzz"},"content":"        InvalidInputException thrown \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"zzkzzzz"},"content":"            parser.parseTaskFormat(\"NO_SLASH\");","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"This is not a valid command. See \u0027help\u0027\", thrown.getMessage());","lastModifiedDate":"2022-02-08"},{"lineNumber":105,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"zzkzzzz"},"content":"    public void checkPrepositionFormat_normalInput_success() throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"02/12/2019 18:00\",","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"zzkzzzz"},"content":"                parser.checkPrepositionFormat(\"by 02/12/2019 18:00\", AddCommand.COMMAND_DEADLINE));","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"02/12/2019 18:00\",","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"zzkzzzz"},"content":"                parser.checkPrepositionFormat(\"on 02/12/2019 18:00\", AddCommand.COMMAND_EVENT));","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"02/12/2019 18:00\",","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"zzkzzzz"},"content":"                parser.checkPrepositionFormat(\"at 02/12/2019 18:00\", AddCommand.COMMAND_EVENT));","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"zzkzzzz"},"content":"    public void checkPrepositionFormat_invalidInput_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"zzkzzzz"},"content":"        InvalidInputException thrown1 \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"zzkzzzz"},"content":"            parser.checkPrepositionFormat(\"by\", AddCommand.COMMAND_DEADLINE);","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"This is not a valid command. See \u0027help\u0027\", thrown1.getMessage());","lastModifiedDate":"2022-02-08"},{"lineNumber":126,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"zzkzzzz"},"content":"        InvalidInputException thrown2 \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"zzkzzzz"},"content":"            parser.checkPrepositionFormat(\"invalidPreposition 02/12/2019 18:00\", AddCommand.COMMAND_DEADLINE);","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"Invalid Prepositions for deadline command. eg. \u0027/by\u0027.\", thrown2.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"zzkzzzz"},"content":"        InvalidInputException thrown3 \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"zzkzzzz"},"content":"            parser.checkPrepositionFormat(\"invalidPreposition 02/12/2019 18:00\", AddCommand.COMMAND_EVENT);","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"Invalid Prepositions for event command. eg. \u0027/on\u0027 or \u0027/at\u0027 .\", thrown3.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"zzkzzzz"},"content":"    public void parseDate_normalInput_success() throws InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":141,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"zzkzzzz"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime formattedDate \u003d LocalDateTime.parse(\"02/12/2019 18:00\", format);","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(formattedDate, parser.parseDate(\"02/12/2019 18:00\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"zzkzzzz"},"content":"    public void parseDate_invalidInput_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"zzkzzzz"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"zzkzzzz"},"content":"        String invalidDate \u003d \"2/12/2019 18:00\";","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"zzkzzzz"},"content":"        InvalidInputException thrown \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"zzkzzzz"},"content":"            parser.parseDate(invalidDate);","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"\u0027\" + invalidDate","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"zzkzzzz"},"content":"                + \"\u0027 can\u0027t be formatted!Please format the date/time as dd/MM/yyyy HH:mm\", thrown.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":158}},{"path":"src/test/java/meep/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"import meep.exception.InvalidInputException;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ListTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"import meep.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public void readTaskFile_normalInput_success() throws IOException, InvalidInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2019,","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"                Month.DECEMBER, 3, 18, 00, 00);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", true, dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        Event event \u003d new Event(\"project meeting\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        ToDo todo \u003d new ToDo(\"read book\", true);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        ListTask expected \u003d new ListTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"        expected.addTask(todo);","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"        expected.addTask(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"        expected.addTask(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        ListTask result \u003d new ListTask();","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"        result.addTask(todo);","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        result.addTask(deadline);","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"        result.addTask(event);","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expected.generateTaskList(), result.generateTaskList());","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    public void readTaskFile_invalidPath_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"        String filePath \u003d \"/java/invalid.txt\";","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"        String path \u003d home + filePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"        FileNotFoundException thrown1 \u003d assertThrows(FileNotFoundException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"            storage.readTaskFile(path);","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(\"File not found under \" + path, thrown1.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":58}},{"path":"src/test/java/meep/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"package meep.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"import java.time.Month;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"zzkzzzz"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"zzkzzzz"},"content":"    private ListTask tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"zzkzzzz"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"zzkzzzz"},"content":"    private Event event;","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"    private ToDo todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"zzkzzzz"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"zzkzzzz"},"content":"    public void setUp() {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2015,","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"                Month.JULY, 29, 19, 30, 40);","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"zzkzzzz"},"content":"        deadline \u003d new Deadline(\"test1\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"zzkzzzz"},"content":"        event \u003d new Event(\"test2\", dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"zzkzzzz"},"content":"        todo \u003d new ToDo(\"test3\");","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"zzkzzzz"},"content":"        tasks \u003d new ListTask();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"zzkzzzz"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"zzkzzzz"},"content":"    public void deleteTask_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"zzkzzzz"},"content":"            tasks.deleteTask(-1);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"zzkzzzz"},"content":"    public void getTask_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"zzkzzzz"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"zzkzzzz"},"content":"            tasks.get(-1);","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"zzkzzzz"},"content":"        }, \"InvalidInputException was expected\");","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"zzkzzzz"},"content":"    public void generateTaskList_withoutDate_success() {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"zzkzzzz"},"content":"        String expected \u003d \"\\n     1.  [ D ][   ] test1 (by: Jul 29 2015 19:30)\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"zzkzzzz"},"content":"                + \"     2.  [ E ][   ] test2 (on: Jul 29 2015 19:30)\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"zzkzzzz"},"content":"                + \"     3.  [ T ][   ] test3\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expected, tasks.generateTaskList());","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"zzkzzzz"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"zzkzzzz"},"content":"    public void generateTaskList_withDateGiven_success() {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"zzkzzzz"},"content":"        String expected \u003d \"\\n     1.  [ D ][   ] test1 (by: Jul 29 2015 19:30)\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"zzkzzzz"},"content":"                + \"     2.  [ E ][   ] test2 (on: Jul 29 2015 19:30)\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"zzkzzzz"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"zzkzzzz"},"content":"        LocalDateTime formattedDate \u003d LocalDateTime.parse(\"29/08/2015 18:00\", format);","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"zzkzzzz"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"zzkzzzz"},"content":"        assertEquals(expected, tasks.generateTaskList(formattedDate));","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"zzkzzzz"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"zzkzzzz"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":68}},{"path":"src/test/java/meep/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"T | 1 | read book","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"D | 1 | return book | 03/12/2019 18:00","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"E | 0 | project meeting | 03/12/2019 18:00","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"zzkzzzz":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zzkzzzz"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"zzkzzzz"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"zzkzzzz"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"zzkzzzz"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"zzkzzzz"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"zzkzzzz"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"zzkzzzz"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"zzkzzzz"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"zzkzzzz"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"zzkzzzz"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"zzkzzzz"},"content":"bye","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"zzkzzzz":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zzkzzzz"},"content":"java -classpath ..\\bin Meep \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"zzkzzzz":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zzkzzzz"},"content":"java -classpath ../bin Meep \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"zzkzzzz":1}}]
