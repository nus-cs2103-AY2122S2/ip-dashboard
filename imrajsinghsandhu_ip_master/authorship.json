[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":" * Tasks that need to be done before a specific time/date.","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String by;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    LocalDate date;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Deadline will take in a description and a by timeline.","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Deadlines(String description, String by) {","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"            this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"        String date \u003d (date !\u003d null ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : by);","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + date + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":32}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.File;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"import exception.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"     * This Chat version is just supposed to take in the commands,","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"     * and return them, thats all. Mitran.Di.CHatri. Ton. Udd. Gayi. Laundi.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String LINE_BREAK \u003d \"---------------\";","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String GREETING \u003d \"FUNNY FELLA WEIIIIII! \\nHow can I help Mr Singhhhhh?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String BYE \u003d LINE_BREAK + \"\\n Byeeeee, come back again ah!\\n\" +","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"            LINE_BREAK;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String LINE_INTRO \u003d \"Nah, here\u0027s your list\";","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String MARK_MESSAGE \u003d \"Power la Mr Bosssssss, mark alr bro!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String UNMARK_MESSAGE \u003d \"No probs bro, unmarked already!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    // reading from the duke.txt should only be done upon starting up the","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"    // application","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    // and then updating everything to the duke.txt should only be done upon bye","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"    // command --\u003e wil convert the tasks arrayList","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    // to duke.txt appropriate data","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Method to write to the duke.txt file.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath path of the file to write to","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param addText  text we want to add to the file","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void writeToFile(String filePath, String addText) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.write(addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Method to append to the end of the present file.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath path of the file to write to","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param addText  text we want to add to the file","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void appendToFile(String filePath, String addText) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"        // adding the true argument allows","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"        // changes FileWriter to append mode","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.write(addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Using this method, we will delete the task identified on the linePos","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"     * provided.","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath - path to perform CRUD operation on","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param linePos  - line number the task is on in duke.txt","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void deleteFromFile(String filePath, int linePos) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Method to invoke when we want to edit the specified task.","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath - path to perform CRUD operation on","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param linePos  - line number the task is on, in duke.txt","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @throws IOException","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void updateTask(String filePath, int linePos) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"imrajsinghsandhu"},"content":"        // this method will mostly be used to update the marked/unmarked status of the","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"imrajsinghsandhu"},"content":"        // task, and reflect it in the duke.txt file","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Will read the lines in duke.txt, and will add each task to the","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"imrajsinghsandhu"},"content":"     * arrayList(tasks) in this file.","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void refreshTasks() {","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"imrajsinghsandhu"},"content":"        // an array of tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"imrajsinghsandhu"},"content":"        // Task[] list \u003d new Task[100];","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"imrajsinghsandhu"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"imrajsinghsandhu"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"imrajsinghsandhu"},"content":"        // new Data Structure to hold the tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"imrajsinghsandhu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"imrajsinghsandhu"},"content":"        // takes in the incoming prompt","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"imrajsinghsandhu"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"imrajsinghsandhu"},"content":"        // checks for the existence of data directory","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"imrajsinghsandhu"},"content":"        // and the duke.txt file","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"imrajsinghsandhu"},"content":"        File completeDirectory \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"imrajsinghsandhu"},"content":"        File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"imrajsinghsandhu"},"content":"        String dataPath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"imrajsinghsandhu"},"content":"        // Check if the data directory exists.","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"imrajsinghsandhu"},"content":"        // Then create duke.txt if it doesnt.","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"imrajsinghsandhu"},"content":"        // if the folder and file exits, then we read the messages in there,","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"imrajsinghsandhu"},"content":"        // and update our tasks ArrayList.","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (!completeDirectory.exists()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"imrajsinghsandhu"},"content":"                // neither the full path nor the Folder exits","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"imrajsinghsandhu"},"content":"                // proceed to create the dataFolder first","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"imrajsinghsandhu"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"imrajsinghsandhu"},"content":"            // here we will create the duke.txt file","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"imrajsinghsandhu"},"content":"            completeDirectory.createNewFile();","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\"duke.txt already exists\");","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"imrajsinghsandhu"},"content":"            // add the elements in the file to the tasks here","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"imrajsinghsandhu"},"content":"            // replacing the ArrayList Tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"imrajsinghsandhu"},"content":"            tasks \u003d ParseDukeTxt.readFile(completeDirectory);","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"imrajsinghsandhu"},"content":"        // Outputs","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"imrajsinghsandhu"},"content":"        while (true) {","lastModifiedDate":"2022-02-02"},{"lineNumber":128,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"imrajsinghsandhu"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":131,"author":{"gitId":"imrajsinghsandhu"},"content":"            // we will check from 0 to the first space","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"imrajsinghsandhu"},"content":"            // this will let us know of the command","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"imrajsinghsandhu"},"content":"            String[] command \u003d input.split(\" \");","lastModifiedDate":"2022-02-02"},{"lineNumber":134,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":135,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"imrajsinghsandhu"},"content":"                // update the duke.txt file","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"imrajsinghsandhu"},"content":"                ParseDukeTxt.updateDukeTxt(dataPath, tasks);","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(BYE);","lastModifiedDate":"2022-02-02"},{"lineNumber":139,"author":{"gitId":"imrajsinghsandhu"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":140,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":141,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"  \" + LINE_INTRO);","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"imrajsinghsandhu"},"content":"                int internalCounter \u003d 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":146,"author":{"gitId":"imrajsinghsandhu"},"content":"                // iterate through the list","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"imrajsinghsandhu"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2022-02-03"},{"lineNumber":148,"author":{"gitId":"imrajsinghsandhu"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"imrajsinghsandhu"},"content":"                        System.out.println(\" \" + internalCounter + \". \" + task);","lastModifiedDate":"2022-02-02"},{"lineNumber":150,"author":{"gitId":"imrajsinghsandhu"},"content":"                        ++internalCounter;","lastModifiedDate":"2022-02-02"},{"lineNumber":151,"author":{"gitId":"imrajsinghsandhu"},"content":"                    } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":152,"author":{"gitId":"imrajsinghsandhu"},"content":"                        break;","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"imrajsinghsandhu"},"content":"                    }","lastModifiedDate":"2022-02-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (command[0].equals(\"mark\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":156,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"imrajsinghsandhu"},"content":"                int number \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":158,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":159,"author":{"gitId":"imrajsinghsandhu"},"content":"                // Task currTask \u003d list[number];","lastModifiedDate":"2022-02-03"},{"lineNumber":160,"author":{"gitId":"imrajsinghsandhu"},"content":"                Task currTask \u003d tasks.get(number);","lastModifiedDate":"2022-02-03"},{"lineNumber":161,"author":{"gitId":"imrajsinghsandhu"},"content":"                boolean currState \u003d currTask.getIsDone();","lastModifiedDate":"2022-02-02"},{"lineNumber":162,"author":{"gitId":"imrajsinghsandhu"},"content":"                currTask.setDone(!currState);","lastModifiedDate":"2022-02-02"},{"lineNumber":163,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":164,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-02"},{"lineNumber":165,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"   \" + MARK_MESSAGE);","lastModifiedDate":"2022-02-02"},{"lineNumber":166,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"        [X] \" + currTask.getDescription());","lastModifiedDate":"2022-02-02"},{"lineNumber":167,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (command[0].equals(\"unmark\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":168,"author":{"gitId":"imrajsinghsandhu"},"content":"                int number \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":169,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":170,"author":{"gitId":"imrajsinghsandhu"},"content":"                // Task currTask \u003d list[number];","lastModifiedDate":"2022-02-03"},{"lineNumber":171,"author":{"gitId":"imrajsinghsandhu"},"content":"                Task currTask \u003d tasks.get(number);","lastModifiedDate":"2022-02-03"},{"lineNumber":172,"author":{"gitId":"imrajsinghsandhu"},"content":"                boolean currState \u003d currTask.getIsDone();","lastModifiedDate":"2022-02-02"},{"lineNumber":173,"author":{"gitId":"imrajsinghsandhu"},"content":"                currTask.setDone(!currState);","lastModifiedDate":"2022-02-02"},{"lineNumber":174,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":175,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-02"},{"lineNumber":176,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"   \" + UNMARK_MESSAGE);","lastModifiedDate":"2022-02-02"},{"lineNumber":177,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"        [ ] \" + currTask.getDescription());","lastModifiedDate":"2022-02-02"},{"lineNumber":178,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (command[0].equals(\"deadline\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":179,"author":{"gitId":"imrajsinghsandhu"},"content":"                // deadline make some cups /by the day after","lastModifiedDate":"2022-02-02"},{"lineNumber":180,"author":{"gitId":"imrajsinghsandhu"},"content":"                if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-03"},{"lineNumber":181,"author":{"gitId":"imrajsinghsandhu"},"content":"                    DukeException e \u003d new DukeException(\"bro why la\");","lastModifiedDate":"2022-02-03"},{"lineNumber":182,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.err.println(e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":183,"author":{"gitId":"imrajsinghsandhu"},"content":"                } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":184,"author":{"gitId":"imrajsinghsandhu"},"content":"                    String[] deadlineInput \u003d input.split(\"/by\");","lastModifiedDate":"2022-02-02"},{"lineNumber":185,"author":{"gitId":"imrajsinghsandhu"},"content":"                    String deadline \u003d deadlineInput[1];","lastModifiedDate":"2022-02-02"},{"lineNumber":186,"author":{"gitId":"imrajsinghsandhu"},"content":"                    String left \u003d deadlineInput[0];","lastModifiedDate":"2022-02-02"},{"lineNumber":187,"author":{"gitId":"imrajsinghsandhu"},"content":"                    String description \u003d left.substring(9, left.length() - 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":188,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // create a new deadline","lastModifiedDate":"2022-02-02"},{"lineNumber":189,"author":{"gitId":"imrajsinghsandhu"},"content":"                    Task newTask \u003d new Deadlines(description, deadline);","lastModifiedDate":"2022-02-02"},{"lineNumber":190,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // adding to the array","lastModifiedDate":"2022-02-02"},{"lineNumber":191,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // list[counter] \u003d newTask;","lastModifiedDate":"2022-02-03"},{"lineNumber":192,"author":{"gitId":"imrajsinghsandhu"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2022-02-03"},{"lineNumber":193,"author":{"gitId":"imrajsinghsandhu"},"content":"                    ++counter;","lastModifiedDate":"2022-02-02"},{"lineNumber":194,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-02"},{"lineNumber":195,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out","lastModifiedDate":"2022-02-03"},{"lineNumber":196,"author":{"gitId":"imrajsinghsandhu"},"content":"                            .println(\"Got it. I added this deadline already bro: \\n\" + \" \" + newTask.toString() + \"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":197,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list. \\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":198,"author":{"gitId":"imrajsinghsandhu"},"content":"                }","lastModifiedDate":"2022-02-03"},{"lineNumber":199,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (command[0].equals(\"event\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":200,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":201,"author":{"gitId":"imrajsinghsandhu"},"content":"                // event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-02"},{"lineNumber":202,"author":{"gitId":"imrajsinghsandhu"},"content":"                if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-03"},{"lineNumber":203,"author":{"gitId":"imrajsinghsandhu"},"content":"                    DukeException e \u003d new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":204,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-03"},{"lineNumber":205,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":206,"author":{"gitId":"imrajsinghsandhu"},"content":"                } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":207,"author":{"gitId":"imrajsinghsandhu"},"content":"                    String[] deadlineInput \u003d input.split(\"/at\");","lastModifiedDate":"2022-02-02"},{"lineNumber":208,"author":{"gitId":"imrajsinghsandhu"},"content":"                    String deadline \u003d deadlineInput[1];","lastModifiedDate":"2022-02-02"},{"lineNumber":209,"author":{"gitId":"imrajsinghsandhu"},"content":"                    String left \u003d deadlineInput[0];","lastModifiedDate":"2022-02-02"},{"lineNumber":210,"author":{"gitId":"imrajsinghsandhu"},"content":"                    String description \u003d left.substring(6, left.length() - 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":211,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // create a new deadline","lastModifiedDate":"2022-02-02"},{"lineNumber":212,"author":{"gitId":"imrajsinghsandhu"},"content":"                    Task newTask \u003d new Events(description, deadline);","lastModifiedDate":"2022-02-02"},{"lineNumber":213,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // adding to the array","lastModifiedDate":"2022-02-02"},{"lineNumber":214,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // list[counter] \u003d newTask;","lastModifiedDate":"2022-02-03"},{"lineNumber":215,"author":{"gitId":"imrajsinghsandhu"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2022-02-03"},{"lineNumber":216,"author":{"gitId":"imrajsinghsandhu"},"content":"                    ++counter;","lastModifiedDate":"2022-02-02"},{"lineNumber":217,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-02"},{"lineNumber":218,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Got it. I added this event already bro: \\n\" + \" \" + newTask.toString() + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":219,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list. \\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":220,"author":{"gitId":"imrajsinghsandhu"},"content":"                }","lastModifiedDate":"2022-02-03"},{"lineNumber":221,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (command[0].equals(\"todo\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":222,"author":{"gitId":"imrajsinghsandhu"},"content":"                // here we declare the new task to be added (TODO)","lastModifiedDate":"2022-02-02"},{"lineNumber":223,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":224,"author":{"gitId":"imrajsinghsandhu"},"content":"                if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-03"},{"lineNumber":225,"author":{"gitId":"imrajsinghsandhu"},"content":"                    DukeException e \u003d new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":226,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-03"},{"lineNumber":227,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":228,"author":{"gitId":"imrajsinghsandhu"},"content":"                } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":229,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":230,"author":{"gitId":"imrajsinghsandhu"},"content":"                    Task t \u003d new ToDos(input);","lastModifiedDate":"2022-02-02"},{"lineNumber":231,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":232,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // list[counter] \u003d t;","lastModifiedDate":"2022-02-03"},{"lineNumber":233,"author":{"gitId":"imrajsinghsandhu"},"content":"                    tasks.add(t);","lastModifiedDate":"2022-02-03"},{"lineNumber":234,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-02"},{"lineNumber":235,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\" ok added alr bro: \" + input);","lastModifiedDate":"2022-02-02"},{"lineNumber":236,"author":{"gitId":"imrajsinghsandhu"},"content":"                    ++counter;","lastModifiedDate":"2022-02-02"},{"lineNumber":237,"author":{"gitId":"imrajsinghsandhu"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":238,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (command[0].equals(\"delete\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":239,"author":{"gitId":"imrajsinghsandhu"},"content":"                // deleting a task","lastModifiedDate":"2022-02-03"},{"lineNumber":240,"author":{"gitId":"imrajsinghsandhu"},"content":"                // find the index to be deleted","lastModifiedDate":"2022-02-03"},{"lineNumber":241,"author":{"gitId":"imrajsinghsandhu"},"content":"                int number \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2022-02-03"},{"lineNumber":242,"author":{"gitId":"imrajsinghsandhu"},"content":"                // task being deleted","lastModifiedDate":"2022-02-03"},{"lineNumber":243,"author":{"gitId":"imrajsinghsandhu"},"content":"                Task beingDeleted \u003d tasks.get(number);","lastModifiedDate":"2022-02-03"},{"lineNumber":244,"author":{"gitId":"imrajsinghsandhu"},"content":"                // deleting operation","lastModifiedDate":"2022-02-03"},{"lineNumber":245,"author":{"gitId":"imrajsinghsandhu"},"content":"                tasks.remove(number);","lastModifiedDate":"2022-02-03"},{"lineNumber":246,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-02-03"},{"lineNumber":247,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"  \" + beingDeleted);","lastModifiedDate":"2022-02-03"},{"lineNumber":248,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" in the list.\");","lastModifiedDate":"2022-02-03"},{"lineNumber":249,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":250,"author":{"gitId":"imrajsinghsandhu"},"content":"                DukeException e \u003d new DukeException(\"Tak faham banggg, speak in my language la bayi....\");","lastModifiedDate":"2022-02-03"},{"lineNumber":251,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":252,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-03"},{"lineNumber":253,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":254,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":255,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"imrajsinghsandhu":252,"-":4}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":" * tasks that STARTS at a specific time and ENDS at a specific time.","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Events extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String at;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    public LocalDate date;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Events(String description, String at) {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"            this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"            // shouldnt set the date if we didnt receive it in the right format","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"        String date \u003d (date !\u003d null ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : at);","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + date + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":30}},{"path":"src/main/java/ParseDukeTxt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.File;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"public class ParseDukeTxt {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"    // the arrayList we will keep updating","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static ArrayList\u003cTask\u003e res;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Handles receiving todo command from duke.txt","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param isMarked    to update done attribute of todo","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param description of todo","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void handleTodoCommand(String isMarked, String description) {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"        Task t \u003d new ToDos(description);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (isMarked.equals(\"marked\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"        // add the task to the ArrayList","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"        res.add(t);","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Handles receiving deadline command from duke.txt","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param isMarked    to update done attribute of deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param description of deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void handleDeadlineCommand(String isMarked, String description, String by) {","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"        Task t \u003d new Deadlines(description, by);","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (isMarked.equals(\"marked\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"        res.add(t);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Handles receiving event command from duke.txt","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param isMarked    to update done attribute of event","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param description of event","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void handleEventCommand(String isMarked, String description, String at) {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"        Task t \u003d new Deadlines(description, at);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (isMarked.equals(\"marked\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"        res.add(t);","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Method to write to the duke.txt file.","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath path of the file to write to","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param addText  text we want to add to the file","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void writeToFile(String filePath, String addText) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"imrajsinghsandhu"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.write(addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Method to append to the end of the present file.","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath path of the file to write to","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param addText  text we want to add to the file","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void appendToFile(String filePath, String addText) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"imrajsinghsandhu"},"content":"        // adding the true argument allows","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"imrajsinghsandhu"},"content":"        // changes FileWriter to append mode","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"imrajsinghsandhu"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.write(addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Reads the contents of the file duke.txt,","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"imrajsinghsandhu"},"content":"     * and handles each task\u0027s generation for the","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"imrajsinghsandhu"},"content":"     * arrayList to be returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param file that we are parsing","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return ArrayList res","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static ArrayList\u003cTask\u003e readFile(File file) throws FileNotFoundException {","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"imrajsinghsandhu"},"content":"        // read the file passed in","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"imrajsinghsandhu"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"imrajsinghsandhu"},"content":"        // in this while loop, we will","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"imrajsinghsandhu"},"content":"        // separate the cases of tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"imrajsinghsandhu"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"imrajsinghsandhu"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"imrajsinghsandhu"},"content":"            // split the line up at the \"/\"","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"imrajsinghsandhu"},"content":"            String[] lineDetails \u003d line.split(\"/\");","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"imrajsinghsandhu"},"content":"            // note the following -\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"imrajsinghsandhu"},"content":"            // lineDetails[0] denotes the task type","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"imrajsinghsandhu"},"content":"            // lineDetails[1] denotes the marked/unmarked status","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"imrajsinghsandhu"},"content":"            // lineDetails[2] denotes the description of task","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"imrajsinghsandhu"},"content":"            // lineDetails[3] denotes the by or at if event/deadline task","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (lineDetails[0].equals(\"todo\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"imrajsinghsandhu"},"content":"                handleTodoCommand(lineDetails[1], lineDetails[2]);","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (lineDetails[0].equals(\"event\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"imrajsinghsandhu"},"content":"                handleEventCommand(lineDetails[1], lineDetails[2], lineDetails[3]);","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (lineDetails[0].equals(\"deadline\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"imrajsinghsandhu"},"content":"                handleDeadlineCommand(lineDetails[1], lineDetails[2], lineDetails[3]);","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"imrajsinghsandhu"},"content":"        s.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"imrajsinghsandhu"},"content":"        System.out.println(\"reached end of duke.txt\");","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"imrajsinghsandhu"},"content":"        return res;","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Updates the duke.txt file. Method invokes upon receiving \"bye\" command.","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param file","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param arr","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static void updateDukeTxt(String filePath, ArrayList\u003cTask\u003e arr) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"imrajsinghsandhu"},"content":"        // here we need to convert the received ArrayList\u003cTask\u003e arr into","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"imrajsinghsandhu"},"content":"        // lines to be add to the duke.txt file","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"imrajsinghsandhu"},"content":"        // its best to delete whatever is in the file,","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"imrajsinghsandhu"},"content":"        // and then recreate all the lines there,","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"imrajsinghsandhu"},"content":"        // as we may have updated states of tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"imrajsinghsandhu"},"content":"        // split the toString of each task by \" \",","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"imrajsinghsandhu"},"content":"        // and check the first element, if its [T], [E] or [D]","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"imrajsinghsandhu"},"content":"        // todo / marked / read a book","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"imrajsinghsandhu"},"content":"        // deadline / unmarked / return the book / June 6th","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"imrajsinghsandhu"},"content":"        // event / marked / project meeting / August 8th 2-4pm","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"imrajsinghsandhu"},"content":"        // to delete the file, we will overwrite the first line","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"imrajsinghsandhu"},"content":"        // then we will append to the file after.","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"imrajsinghsandhu"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"imrajsinghsandhu"},"content":"        // String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"imrajsinghsandhu"},"content":"        for (Task item : arr) {","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"imrajsinghsandhu"},"content":"            String task \u003d item.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"imrajsinghsandhu"},"content":"            String[] taskDetails \u003d task.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"imrajsinghsandhu"},"content":"            String addText \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"imrajsinghsandhu"},"content":"            // note that --\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"imrajsinghsandhu"},"content":"            // taskDetails[0] is command type","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (taskDetails[0].equals(\"[T]\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"imrajsinghsandhu"},"content":"                addText \u003d \"todo / \" + (item.getIsDone() ? \"marked\" : \"unmarked\") + \" / \" + item.getDescription();","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (taskDetails[0].equals(\"[E]\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"imrajsinghsandhu"},"content":"                Events e \u003d (Events) item;","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"imrajsinghsandhu"},"content":"                addText \u003d \"event / \" + (item.getIsDone() ? \"marked\" : \"unmarked\") + \" / \" + item.getDescription()","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"imrajsinghsandhu"},"content":"                        + \" / \" + e.at;","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (taskDetails[0].equals(\"[D]\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"imrajsinghsandhu"},"content":"                Deadlines d \u003d (Deadlines) item;","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"imrajsinghsandhu"},"content":"                addText \u003d \"deadlines / \" + (item.getIsDone() ? \"marked\" : \"unmarked\") + \" / \" + item.getDescription()","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"imrajsinghsandhu"},"content":"                        + \" / \" + d.by;","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (counter \u003d\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"imrajsinghsandhu"},"content":"                writeToFile(filePath, addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"imrajsinghsandhu"},"content":"                ++counter;","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"imrajsinghsandhu"},"content":"                appendToFile(filePath, addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"imrajsinghsandhu"},"content":"                ++counter;","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"imrajsinghsandhu":185}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":" * Each task will hold the status of done or not done, plus description of the","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":" * task to be done.","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"    private String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Call this method to see if we should mark X or leave blank.","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"    // Getters","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"        return this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"    // Setters","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":36}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":" * Tasks without any date/time attached to it.","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"    public ToDos(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"        // TODO Auto-generated constructor stub","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"     * String version","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription();","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":19}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"todo / marked / read a book ","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"deadline / unmarked / return the book / June 6th","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"event / marked / project meeting / August 8th 2-4pm","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"imrajsinghsandhu":3}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package exception;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param errorMessage the error Message","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"imrajsinghsandhu":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"todo go get a coffee","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"todo meditate","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"todo eat caifan","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":6}}]
