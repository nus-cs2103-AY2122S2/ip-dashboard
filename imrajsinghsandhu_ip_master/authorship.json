[{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"todo/unmarked/todo fj34og3gtodo","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"todo/unmarked/todo daaaa","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"imrajsinghsandhu":2}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.exception;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param errorMessage the error Message","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(errorMessage);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"imrajsinghsandhu":12}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.main;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    // only have Parser and Ui to fix up","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"        // in here i will call the scanner fom Ui, and run the inputs to the relevant","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"        // methods of classes.","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"        System.out.println(ui.greeting);","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"        // instantiate the Parser class","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"        while (!isExit) {","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"            try {","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(ui.lineBreak);","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"                // call for the input to be received","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"                String line \u003d ui.nextInput();","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"                // parse the input to understand what it says","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"                // should return the commmand type - bye, find, todo, deadline, event etc.","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"                // if bye, then update isExit","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"                String commandType \u003d parser.scanInput(line);","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"                if (commandType.equals(\"bye\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"                    isExit \u003d true;","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"                } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // Parser will handle the progress of the code for the other commands.","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"        /**","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"         * Insinuates that the run method is called after passing the file path to the","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"         * Duke constructor.","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"         * What is run() supposed to do? Which file accepts the command line arguments?","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"imrajsinghsandhu"},"content":"         * I think its Ui, where","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"imrajsinghsandhu"},"content":"         */","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"imrajsinghsandhu"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"imrajsinghsandhu":65,"-":2}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.parser;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.Deadlines;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.Events;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":" * What are the commands you will face? This will just abstract the whole","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":" * if-else block from Duke.java.","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Parser {","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String LINE_BREAK \u003d \"---------------\";","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String BYE \u003d LINE_BREAK + \"\\n Byeeeee, come back again ah!\\n\" + LINE_BREAK;","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String LINE_INTRO \u003d \"Nah, here\u0027s your list\";","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String MARK_MESSAGE \u003d \"Power la Mr Bosssssss, mark alr bro!\";","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static String UNMARK_MESSAGE \u003d \"No probs bro, unmarked already!\";","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Constructor","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Determines if input string is date or not.","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param date","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return boolean","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"    public boolean isDate(String date) {","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"            LocalDate.parse(date);","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\"we have a real date\");","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"            return true;","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"            return false;","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String scanInput(String input) throws DukeException, IOException {","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"        String[] command \u003d input.split(\" \");","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (command[0].equals(\"bye\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"            String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"            // this will update the duke.txt file","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"            Storage.updateDukeTxt(filePath, tasks.getTasks());","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(BYE);","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"bye\";","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else if (command[0].equals(\"list\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\" \" + LINE_INTRO);","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"            int internalCounter \u003d 1;","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"imrajsinghsandhu"},"content":"            // iterate through the list","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"imrajsinghsandhu"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"imrajsinghsandhu"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\" \" + internalCounter + \". \" + task);","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"imrajsinghsandhu"},"content":"                    ++internalCounter;","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"imrajsinghsandhu"},"content":"                } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"imrajsinghsandhu"},"content":"                    break;","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"imrajsinghsandhu"},"content":"                }","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"list\";","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else if (command[0].equals(\"mark\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"imrajsinghsandhu"},"content":"            int number \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"imrajsinghsandhu"},"content":"            // Task currTask \u003d list[number];","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"imrajsinghsandhu"},"content":"            Task currTask \u003d tasks.getTasks().get(number);","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"imrajsinghsandhu"},"content":"            boolean currState \u003d currTask.getIsDone();","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"imrajsinghsandhu"},"content":"            currTask.setDone(!currState);","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\" \" + MARK_MESSAGE);","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\" [X] \" + currTask.getDescription());","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"mark\";","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else if (command[0].equals(\"unmark\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"imrajsinghsandhu"},"content":"            int number \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"imrajsinghsandhu"},"content":"            // Task currTask \u003d list[number];","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"imrajsinghsandhu"},"content":"            Task currTask \u003d tasks.getTasks().get(number);","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"imrajsinghsandhu"},"content":"            boolean currState \u003d currTask.getIsDone();","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"imrajsinghsandhu"},"content":"            currTask.setDone(!currState);","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\" \" + UNMARK_MESSAGE);","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\" [ ] \" + currTask.getDescription());","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"unmark\";","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else if (command[0].equals(\"deadline\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"imrajsinghsandhu"},"content":"            // deadline make some cups /by the day after","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"imrajsinghsandhu"},"content":"                DukeException e \u003d new DukeException(\"bro why la\");","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"imrajsinghsandhu"},"content":"                String[] deadlineInput \u003d input.split(\"/by\");","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"imrajsinghsandhu"},"content":"                String deadline \u003d deadlineInput[1];","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\"deadline we got : \" + deadline);","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"imrajsinghsandhu"},"content":"                String left \u003d deadlineInput[0];","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"imrajsinghsandhu"},"content":"                String description \u003d left.substring(9, left.length() - 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":115,"author":{"gitId":"imrajsinghsandhu"},"content":"                // create a new deadline","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"imrajsinghsandhu"},"content":"                // checking for date validity","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"imrajsinghsandhu"},"content":"                if (isDate(deadline)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":120,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"its a date \");","lastModifiedDate":"2022-02-17"},{"lineNumber":121,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":122,"author":{"gitId":"imrajsinghsandhu"},"content":"                    Task newTask \u003d new Deadlines(description, LocalDate.parse(deadline));","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"imrajsinghsandhu"},"content":"                    tasks.addToTasks(newTask);","lastModifiedDate":"2022-02-17"},{"lineNumber":124,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // adding to the array","lastModifiedDate":"2022-02-17"},{"lineNumber":125,"author":{"gitId":"imrajsinghsandhu"},"content":"                    ++counter;","lastModifiedDate":"2022-02-17"},{"lineNumber":126,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out","lastModifiedDate":"2022-02-17"},{"lineNumber":128,"author":{"gitId":"imrajsinghsandhu"},"content":"                            .println(\"Got it. I added this deadline already bro: \\n\" + \" \" + newTask.toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list. \\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"imrajsinghsandhu"},"content":"                } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"its not a date\");","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // pass normally","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"imrajsinghsandhu"},"content":"                    Task newTask \u003d new Deadlines(description, deadline);","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"imrajsinghsandhu"},"content":"                    tasks.addToTasks(newTask);","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // adding to the array","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"imrajsinghsandhu"},"content":"                    ++counter;","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"imrajsinghsandhu"},"content":"                            .println(\"Got it. I added this deadline already bro: \\n\" + \" \" + newTask.toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list. \\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"imrajsinghsandhu"},"content":"                }","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":145,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"deadline\";","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else if (command[0].equals(\"event\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":148,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"imrajsinghsandhu"},"content":"            // event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"imrajsinghsandhu"},"content":"                DukeException e \u003d new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":152,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":153,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":154,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":155,"author":{"gitId":"imrajsinghsandhu"},"content":"                String[] deadlineInput \u003d input.split(\"/at\");","lastModifiedDate":"2022-02-17"},{"lineNumber":156,"author":{"gitId":"imrajsinghsandhu"},"content":"                String deadline \u003d deadlineInput[1];","lastModifiedDate":"2022-02-17"},{"lineNumber":157,"author":{"gitId":"imrajsinghsandhu"},"content":"                String left \u003d deadlineInput[0];","lastModifiedDate":"2022-02-17"},{"lineNumber":158,"author":{"gitId":"imrajsinghsandhu"},"content":"                String description \u003d left.substring(6, left.length() - 1);","lastModifiedDate":"2022-02-17"},{"lineNumber":159,"author":{"gitId":"imrajsinghsandhu"},"content":"                // create a new deadline","lastModifiedDate":"2022-02-17"},{"lineNumber":160,"author":{"gitId":"imrajsinghsandhu"},"content":"                // checking for date validity","lastModifiedDate":"2022-02-17"},{"lineNumber":161,"author":{"gitId":"imrajsinghsandhu"},"content":"                if (isDate(deadline)) {","lastModifiedDate":"2022-02-17"},{"lineNumber":162,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":163,"author":{"gitId":"imrajsinghsandhu"},"content":"                    Task newTask \u003d new Events(description, LocalDate.parse(deadline));","lastModifiedDate":"2022-02-17"},{"lineNumber":164,"author":{"gitId":"imrajsinghsandhu"},"content":"                    tasks.addToTasks(newTask);","lastModifiedDate":"2022-02-17"},{"lineNumber":165,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // adding to the array","lastModifiedDate":"2022-02-17"},{"lineNumber":166,"author":{"gitId":"imrajsinghsandhu"},"content":"                    ++counter;","lastModifiedDate":"2022-02-17"},{"lineNumber":167,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":168,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Got it. I added this event already bro: \\n\" + \" \" +","lastModifiedDate":"2022-02-17"},{"lineNumber":169,"author":{"gitId":"imrajsinghsandhu"},"content":"                            newTask.toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":170,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list. \\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":171,"author":{"gitId":"imrajsinghsandhu"},"content":"                } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":172,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // pass normally","lastModifiedDate":"2022-02-17"},{"lineNumber":173,"author":{"gitId":"imrajsinghsandhu"},"content":"                    Task newTask \u003d new Events(description, deadline);","lastModifiedDate":"2022-02-17"},{"lineNumber":174,"author":{"gitId":"imrajsinghsandhu"},"content":"                    tasks.addToTasks(newTask);","lastModifiedDate":"2022-02-17"},{"lineNumber":175,"author":{"gitId":"imrajsinghsandhu"},"content":"                    // adding to the array","lastModifiedDate":"2022-02-17"},{"lineNumber":176,"author":{"gitId":"imrajsinghsandhu"},"content":"                    ++counter;","lastModifiedDate":"2022-02-17"},{"lineNumber":177,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":178,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Got it. I added this event already bro: \\n\" + \" \" +","lastModifiedDate":"2022-02-17"},{"lineNumber":179,"author":{"gitId":"imrajsinghsandhu"},"content":"                            newTask.toString() + \"\\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":180,"author":{"gitId":"imrajsinghsandhu"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list. \\n\");","lastModifiedDate":"2022-02-17"},{"lineNumber":181,"author":{"gitId":"imrajsinghsandhu"},"content":"                }","lastModifiedDate":"2022-02-17"},{"lineNumber":182,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":183,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":184,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"event\";","lastModifiedDate":"2022-02-17"},{"lineNumber":185,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else if (command[0].equals(\"todo\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":186,"author":{"gitId":"imrajsinghsandhu"},"content":"            // here we declare the new task to be added (TODO)","lastModifiedDate":"2022-02-17"},{"lineNumber":187,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-17"},{"lineNumber":188,"author":{"gitId":"imrajsinghsandhu"},"content":"                DukeException e \u003d new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":189,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":190,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":191,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":192,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":193,"author":{"gitId":"imrajsinghsandhu"},"content":"                Task t \u003d new ToDos(input);","lastModifiedDate":"2022-02-17"},{"lineNumber":194,"author":{"gitId":"imrajsinghsandhu"},"content":"                tasks.addToTasks(t);","lastModifiedDate":"2022-02-17"},{"lineNumber":195,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(LINE_BREAK);","lastModifiedDate":"2022-02-17"},{"lineNumber":196,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\" ok added alr bro: \" + input);","lastModifiedDate":"2022-02-17"},{"lineNumber":197,"author":{"gitId":"imrajsinghsandhu"},"content":"                ++counter;","lastModifiedDate":"2022-02-17"},{"lineNumber":198,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":199,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"todo\";","lastModifiedDate":"2022-02-17"},{"lineNumber":200,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else if (command[0].equals(\"delete\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":201,"author":{"gitId":"imrajsinghsandhu"},"content":"            // deleting a task","lastModifiedDate":"2022-02-17"},{"lineNumber":202,"author":{"gitId":"imrajsinghsandhu"},"content":"            // find the index to be deleted","lastModifiedDate":"2022-02-17"},{"lineNumber":203,"author":{"gitId":"imrajsinghsandhu"},"content":"            int number \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2022-02-17"},{"lineNumber":204,"author":{"gitId":"imrajsinghsandhu"},"content":"            // task being deleted","lastModifiedDate":"2022-02-17"},{"lineNumber":205,"author":{"gitId":"imrajsinghsandhu"},"content":"            Task beingDeleted \u003d tasks.getTasks().get(number);","lastModifiedDate":"2022-02-17"},{"lineNumber":206,"author":{"gitId":"imrajsinghsandhu"},"content":"            // deleting operation","lastModifiedDate":"2022-02-17"},{"lineNumber":207,"author":{"gitId":"imrajsinghsandhu"},"content":"            tasks.deleteFromTasks(number);","lastModifiedDate":"2022-02-17"},{"lineNumber":208,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-02-17"},{"lineNumber":209,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\" \" + beingDeleted);","lastModifiedDate":"2022-02-17"},{"lineNumber":210,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(\"Now you have \" + tasks.getTasks().size() + \" in the list.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":211,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"delete\";","lastModifiedDate":"2022-02-17"},{"lineNumber":212,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":213,"author":{"gitId":"imrajsinghsandhu"},"content":"            DukeException e \u003d new DukeException(\"Tak faham banggg, speak in my language la bayi....\");","lastModifiedDate":"2022-02-17"},{"lineNumber":214,"author":{"gitId":"imrajsinghsandhu"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":215,"author":{"gitId":"imrajsinghsandhu"},"content":"            return \"error\";","lastModifiedDate":"2022-02-17"},{"lineNumber":216,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":217,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":218,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":219,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"imrajsinghsandhu":219}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.storage;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.File;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.Deadlines;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.Events;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":" * Basically, it handles Duke.txt and the CRUD on it.","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Storage {","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"    // the arrayList we will keep updating","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static ArrayList\u003cTask\u003e res \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    private String filePath;","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Constructor for Storage. We will determine here if the file/directory exists,","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"     * and whether we cop from it or not.","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath path of the file to write to","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"     * By loading i believe this should return a valid ArrayList - either empty or","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"     * prefilled with the duke.txt file.","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @throws FileNotFoundException, DukeException cos thats whats declared in","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"     *                                Duke.java code.","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"        // File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"        // return Storage.readFile();","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (file.exists()) {","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"                return readFile(file);","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else {","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Handles receiving todo command from duke.txt","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param isMarked    to update done attribute of todo","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param description of todo","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void handleTodoCommand(String isMarked, String description) {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"imrajsinghsandhu"},"content":"        Task t \u003d new ToDos(description);","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (isMarked.equals(\"marked\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"imrajsinghsandhu"},"content":"        // add the task to the ArrayList","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"imrajsinghsandhu"},"content":"        res.add(t);","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Handles receiving deadline command from duke.txt","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param isMarked    to update done attribute of deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param description of deadline","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void handleDeadlineCommand(String isMarked, String description, String by) {","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"imrajsinghsandhu"},"content":"        Task t \u003d new Deadlines(description, by);","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (isMarked.equals(\"marked\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"imrajsinghsandhu"},"content":"        res.add(t);","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Handles receiving event command from duke.txt","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param isMarked    to update done attribute of event","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param description of event","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void handleEventCommand(String isMarked, String description, String at) {","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"imrajsinghsandhu"},"content":"        Task t \u003d new Deadlines(description, at);","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (isMarked.equals(\"marked\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"imrajsinghsandhu"},"content":"            t.setDone(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"imrajsinghsandhu"},"content":"        res.add(t);","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Method to write to the duke.txt file.","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath path of the file to write to","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param addText  text we want to add to the file","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void writeToFile(String filePath, String addText) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"imrajsinghsandhu"},"content":"        System.out.println(\"inside writoto file\");","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"imrajsinghsandhu"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"imrajsinghsandhu"},"content":"        System.out.println(\"the text to add : \" + addText);","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.write(addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Method to append to the end of the present file.","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param filePath path of the file to write to","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param addText  text we want to add to the file","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static void appendToFile(String filePath, String addText) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"imrajsinghsandhu"},"content":"        // adding the true argument allows","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"imrajsinghsandhu"},"content":"        // changes FileWriter to append mode","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"imrajsinghsandhu"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.write(addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"imrajsinghsandhu"},"content":"        fw.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Reads the contents of the file duke.txt,","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"imrajsinghsandhu"},"content":"     * and handles each task\u0027s generation for the","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"imrajsinghsandhu"},"content":"     * arrayList to be returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param file that we are parsing","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return ArrayList res","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static ArrayList\u003cTask\u003e readFile(File file) throws FileNotFoundException {","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"imrajsinghsandhu"},"content":"        // read the file passed in","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"imrajsinghsandhu"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"imrajsinghsandhu"},"content":"        // in this while loop, we will","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"imrajsinghsandhu"},"content":"        // separate the cases of tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"imrajsinghsandhu"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"imrajsinghsandhu"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"imrajsinghsandhu"},"content":"            // split the line up at the \"/\"","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"imrajsinghsandhu"},"content":"            String[] lineDetails \u003d line.split(\"/\");","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"imrajsinghsandhu"},"content":"            // note the following -\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"imrajsinghsandhu"},"content":"            // lineDetails[0] denotes the task type","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"imrajsinghsandhu"},"content":"            // lineDetails[1] denotes the marked/unmarked status","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"imrajsinghsandhu"},"content":"            // lineDetails[2] denotes the description of task","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"imrajsinghsandhu"},"content":"            // lineDetails[3] denotes the by or at if event/deadline task","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (lineDetails[0].equals(\"todo\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"imrajsinghsandhu"},"content":"                handleTodoCommand(lineDetails[1], lineDetails[2]);","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (lineDetails[0].equals(\"event\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"imrajsinghsandhu"},"content":"                handleEventCommand(lineDetails[1], lineDetails[2], lineDetails[3]);","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (lineDetails[0].equals(\"deadline\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"imrajsinghsandhu"},"content":"                handleDeadlineCommand(lineDetails[1], lineDetails[2], lineDetails[3]);","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"imrajsinghsandhu"},"content":"        s.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"imrajsinghsandhu"},"content":"        return res;","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Updates the duke.txt file. Method invokes upon receiving \"bye\" command.","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param file","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param arr","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static void updateDukeTxt(String filePath, ArrayList\u003cTask\u003e arr) throws IOException {","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"imrajsinghsandhu"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"imrajsinghsandhu"},"content":"        for (Task item : arr) {","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":186,"author":{"gitId":"imrajsinghsandhu"},"content":"            String task \u003d item.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"imrajsinghsandhu"},"content":"            String addText \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (task.substring(1, 2).equals(\"T\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":190,"author":{"gitId":"imrajsinghsandhu"},"content":"                System.out.println(\" just came across a todo\");","lastModifiedDate":"2022-02-17"},{"lineNumber":191,"author":{"gitId":"imrajsinghsandhu"},"content":"                addText \u003d \"todo/\" + (item.getIsDone() ? \"marked\" : \"unmarked\") + \"/\" + item.getDescription() + \"\\n\";","lastModifiedDate":"2022-02-17"},{"lineNumber":192,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (task.substring(1, 2).equals(\"E\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":193,"author":{"gitId":"imrajsinghsandhu"},"content":"                Events e \u003d (Events) item;","lastModifiedDate":"2022-02-06"},{"lineNumber":194,"author":{"gitId":"imrajsinghsandhu"},"content":"                addText \u003d \"event/\" + (item.getIsDone() ? \"marked\" : \"unmarked\") + \"/\" +","lastModifiedDate":"2022-02-17"},{"lineNumber":195,"author":{"gitId":"imrajsinghsandhu"},"content":"                        item.getDescription()","lastModifiedDate":"2022-02-17"},{"lineNumber":196,"author":{"gitId":"imrajsinghsandhu"},"content":"                        + \" / \" + e.at + \"\\n\";","lastModifiedDate":"2022-02-17"},{"lineNumber":197,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else if (task.substring(1, 2).equals(\"D\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":198,"author":{"gitId":"imrajsinghsandhu"},"content":"                Deadlines d \u003d (Deadlines) item;","lastModifiedDate":"2022-02-06"},{"lineNumber":199,"author":{"gitId":"imrajsinghsandhu"},"content":"                addText \u003d \"deadlines/\" + (item.getIsDone() ? \"marked\" : \"unmarked\") + \"/\"","lastModifiedDate":"2022-02-17"},{"lineNumber":200,"author":{"gitId":"imrajsinghsandhu"},"content":"                        + item.getDescription()","lastModifiedDate":"2022-02-17"},{"lineNumber":201,"author":{"gitId":"imrajsinghsandhu"},"content":"                        + \"/\" + d.by + \"\\n\";","lastModifiedDate":"2022-02-17"},{"lineNumber":202,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":203,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":204,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (counter \u003d\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":205,"author":{"gitId":"imrajsinghsandhu"},"content":"                writeToFile(filePath, addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":206,"author":{"gitId":"imrajsinghsandhu"},"content":"                ++counter;","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"imrajsinghsandhu"},"content":"                appendToFile(filePath, addText);","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"imrajsinghsandhu"},"content":"                ++counter;","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":215,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"imrajsinghsandhu":215}},{"path":"src/main/java/duke/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":" * Tasks that need to be done before a specific time/date.","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String by;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"    LocalDate date;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Deadline will take in a description and a by timeline.","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Deadlines(String description, String by) {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Overloaded constructor to accept localDate.","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Deadlines(String description, LocalDate date) {","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(description);","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"        // String date \u003d (date !\u003d null ? date.format(DateTimeFormatter.ofPattern(\"MMM d","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"        // yyyy\")) : by);","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":38}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":" * tasks that STARTS at a specific time and ENDS at a specific time.","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Events extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String at;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    public LocalDate date;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Events(String description, String at) {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"            this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"            // shouldnt set the date if we didnt receive it in the right format","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Overloaded constructor to accept localDate.","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Events(String description, LocalDate date) {","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(description);","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.at \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"        // String date \u003d (date !\u003d null ? date.format(DateTimeFormatter.ofPattern(\"MMM d","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"        // yyyy\")) : at);","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":41}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":" * Each task will hold the status of done or not done, plus description of the","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":" * task to be done.","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"    private String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Call this method to see if we should mark X or leave blank.","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"    // Getters","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"        return this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"    // Setters","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":38}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":" * Contains the task list e.g., it has operations to add/delete tasks in the","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":" * list. In other words it just contains ArrayList\u003cTask\u003e tasks, and some CRUD","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":" * operations.","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"public class TaskList {","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    // what are the methods we require from this class?","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"    // in Duke.java we have called this statement \u003d\u003d\u003e tasks \u003d new","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    // TaskList(storage.load());","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"    // which means we should initialise the TaskList, and pass in the argument of","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"    // storage.load();","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Note that from Duke.java, the storage.load() argument should return an","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ArrayList\u003cTask\u003e so that we can copy that list directly to this class.","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param tasks - the tasks we get from duke.txt","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Second constructor for a blank ArrayList, indicating theres nothing in the","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"     * storage.","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"    // will need to get the arrayList here","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"        return tasks;","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"     * The CRUD operations to be performed on task.","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return ArrayList tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void deleteFromTasks(int number) {","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"        tasks.remove(number);","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Add another task to the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return ArrayList\u003cTask\u003e tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void addToTasks(Task task) {","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"imrajsinghsandhu"},"content":"     * This method will toggle the isDone status of the task,","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"imrajsinghsandhu"},"content":"     * and should take in an argument which marks the position of the Task in the","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"     * list.","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return not determined yet","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"imrajsinghsandhu"},"content":"    // public ArrayList\u003cTask\u003e toggleIsDone() {","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"imrajsinghsandhu"},"content":"    // return this;","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"imrajsinghsandhu"},"content":"    // }","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"imrajsinghsandhu":75}},{"path":"src/main/java/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":" * Tasks without any date/time attached to it.","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"    public ToDos(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"        // TODO Auto-generated constructor stub","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"     * String version","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription();","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":20}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":" * Interactions with the user - greetings etc, command line arguments.","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":" * Abstract the handling of the command line arguments to Parser.java.","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"public class Ui {","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    // take note Ui is instantiated in the first line of Duke.java","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"     * I believe that this is going to cause the greeting,","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"     * then we can start accepting the command line arguments from there on.","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"     * I think it satisfies that once it is instantiated, we just go on to the","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"     * call the main method of Ui, to be able to accept CLA.","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"    private Scanner s;","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String lineBreak \u003d \"---------------\";","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String greeting \u003d \"FUNNY FELLA WEIIIIII! \\nHow can I help Mr Singhhhhh?\";","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String bye \u003d lineBreak + \"\\n Byeeeee, come back again ah!\\n\" + lineBreak;","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String lineIntro \u003d \"Nah, here\u0027s your list\";","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String markMessage \u003d \"Power la Mr Bosssssss, mark alr bro!\";","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String unmarkMessage \u003d \"No probs bro, unmarked already!\";","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Ui\u0027s constructor","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Ui() {","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"        s \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Call for the next input into Scanner.","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"     * ","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @return String of next input, whole line.","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"    public String nextInput() {","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"        return s.nextLine();","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Show loading error method, meaning we need to show the error that theres","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"     * nothing in the local storage.","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void showLoadingError(String errorMessage) {","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"imrajsinghsandhu":50}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":" * DeadlineTest uses an assert, to verify correct values of Deadline creation.","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void testDeadlines() {","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"        assertEquals(\"[D][ ] finish assignment (by: Jan 1st)\", new Deadline(\"finish assignemnt\", \"Jan 1st\").toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"imrajsinghsandhu":14}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":" * EventTest uses an assert, to verify correct values of Event creation.","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"public class EventTest {","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void testEvent() {","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"        assertEquals(\"[E][ ] watch concert (at: July 7th 8-11pm)\",","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"                new Event(\"watch concert\", \"July 7th 8-11pm\").toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"imrajsinghsandhu":16}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":" * TodoTest uses an assert, to verify correct values of Todo creation.","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"public class TodoTest {","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    public void testStringResult() {","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"        assertEquals(\"[T][ ] go for lunch\", new Todo(\"go for lunch\").toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"imrajsinghsandhu":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"todo go get a coffee","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"todo meditate","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"todo eat caifan","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"imrajsinghsandhu":6}}]
