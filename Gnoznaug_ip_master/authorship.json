[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"javafx {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    version \u003d \"17\"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"    configFile \u003d file(\u0027./config/checkstyle/checkstyle.xml\u0027)","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gnoznaug":23,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.io.EOFException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":" * Represents Duke the assistant.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     * Constructor for storing the filepath of this instance of Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"     * @param filePath The relative filepath of the save file.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     * Loads the save file for the TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue loading the save.","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    public void load() throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        } catch (EOFException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"Problem loading save file, creating a new save.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the response generated by Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"     * @param userInput The input taken from the User.","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"     * @return The string representation of Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"            Command c \u003d parser.parse(userInput);","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"            return c.execute(taskList, storage);","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Gnoznaug":58,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"public class Launcher {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Gnoznaug":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.ui.MainWindow;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"            stage.show();","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Gnoznaug":32}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" * Represents a command that will add a Deadline Task to the TaskList upon execution..","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    private String task;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"    private String by;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to store the name of the Task and the actual deadline date.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * @param task The name of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     * @param by The actual deadline of the task in yyyy-mm-dd format.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"    public AddDeadlineCommand(String task, String by) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"        super();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command by adding a deadline task into the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"        Deadline deadline \u003d new Deadline(task, by);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d deadline.toString() + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d \"Now you have \" + taskList.numOfTasks() + \" tasks in the list.\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"            storage.save(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"     * Returns True if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"     * @return A boolean.","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":58}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" * Represents a command that will add an Event Task to the TaskList upon execution..","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    private String task;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"    private String at;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to store the name of the Task and the actual event date.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * @param task The name of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     * @param at The actual date of the event in yyyy-mm-dd format.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"    public AddEventCommand(String task, String at) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"        super();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command by adding an Event task into the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"        Event event \u003d new Event(task, at);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(event);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d event.toString() + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d \"Now you have \" + taskList.numOfTasks() + \" tasks in the list.\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"            storage.save(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"     * Returns true if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"     * @return a boolean.","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":58}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" * Represents a command that will add a ToDo Task to the TaskList upon execution.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    private String task;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to store the name of the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     * @param task The name of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"    public AddToDoCommand(String task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"        super();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command by adding a ToDo task into the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"        ToDo todo \u003d new ToDo(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(todo);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d todo.toString() + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d \"Now you have \" + taskList.numOfTasks() + \" tasks in the list.\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"            storage.save(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"     * Returns true if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"     * @return a boolean.","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":55}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":" * Represents a general command that can be executed.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command by utilising the parameters as stated in the overriden method.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"     * Returns true if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"     * @return a boolean.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":29}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" * Represents a Command that will delete a specified Task upon execution.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    private int taskNo;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to store the index of the Task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskNo The index of the Task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"    public DeleteTaskCommand(int taskNo) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"        super();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command by deleting the task at the index stored in this object.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"        Task task \u003d taskList.delete(taskNo);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"        String response \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d \"Now you have \" + taskList.numOfTasks() + \" tasks in the list.\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"            storage.save(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"     * Returns True if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"     * @return A boolean.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":" * Represents a command that will exit the program upon execution.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command by printing a farewell message.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"        return \"Hope to see you again!\";","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"     * Returns True if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"     * @return A boolean.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"        return true;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":" * Represents a command that finds and prints all the tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":" * in the TaskList that matches the search term upon execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    private String searchTerm;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor that stores the searchTerm.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     * @param searchTerm The String to search through the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"        super();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command by finding all Tasks that have descriptions that contain the search term","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"     * then lists them all out.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        int numOfTasks \u003d taskList.numOfTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"            String taskFullDescription \u003d taskList.getTask(i).getTaskName();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"            if (taskFullDescription.contains(searchTerm)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"                matchedTasks.add(taskList.getTask(i));","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"        String response \u003d \"Here are the matching tasks in your list:\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"            response +\u003d i + 1 + \".\" + matchedTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"     * Returns true if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"     * @return a boolean.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Gnoznaug":63}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" * Represents a command that will list out all the tasks in the TaskList upon execution.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command listing out all the tasks currently in the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        String response \u003d \"Here are your tasks:\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"        for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"            response +\u003d i + 1 + \".\" + taskList.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"     * Returns True if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"     * @return A boolean.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":39}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.manager.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":" * Represents a command that will either mark a task as completed or incomplete upon execution.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"    private boolean isMark;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    private int taskNo;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to store the index of the task to mark","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     * and to determine if to mark as complete or incomplete.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * @param isMark True indicates to mark as complete, false to indicate to mark as incomplete.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskNo The index of the task to mark.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"    public MarkCommand(boolean isMark, int taskNo) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"        super();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"     * Executes the command by marking the specified task as complete or incomplete.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList A TaskList that stores the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     * @param storage A Storage object to handle saving of data.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String which is Duke\u0027s response.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If there is an issue saving the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        if (isMark) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"            taskList.markDone(taskNo);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"            response +\u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"            taskList.markUndone(taskNo);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"            response +\u003d \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"        response +\u003d taskList.getTask(taskNo).toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"            storage.save(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"        return response;","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"     * Returns true if it is an exit command and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"     * @return a boolean.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":62}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":" * Represents an Exception that could be throw by Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to create a DukeException together with a message.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"     * @param message The exception message that is to be shown.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Gnoznaug":15}},{"path":"src/main/java/duke/manager/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.manager;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.AddToDoCommand;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":" * Represents a parser object to parse the input that is given by the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the appropriate command depending on the fullCommand input that was given by the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"     * @param fullCommand A string, to be parsed, that was taken in from the user of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"     * @return The appropriate command depending on the parsed input.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If an invalid task number was given,","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"     *                      date/time was not given,","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"     *                      empty task description or invalid command.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"    public Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"        String keyword \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"            switch (keyword) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"            case \"list\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"                return new ListCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"            case \"mark\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"                if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"                    throw new DukeException(\"OOPS!!! Please choose a task number\");","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"                int taskNo \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"                return new MarkCommand(true, taskNo);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"            case \"unmark\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"                if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"                    throw new DukeException(\"OOPS!!! Please choose a task number\");","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"                int taskNo \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"                return new MarkCommand(false, taskNo);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"            case \"todo\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"                String task \u003d fullCommand.replaceFirst(\"todo\", \"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"                if (task.length() \u003d\u003d 0 || task.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty\");","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"                return new AddToDoCommand(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"            case \"deadline\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"                String[] text \u003d fullCommand.replaceFirst(\"deadline\", \"\").split(\" /by \");","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"                String task \u003d text[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"                if (task.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Gnoznaug"},"content":"                if (text.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Gnoznaug"},"content":"                    throw new DukeException(\"OOPS!!! The date/time of a deadline cannot be empty.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"Gnoznaug"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Gnoznaug"},"content":"                String by \u003d text[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Gnoznaug"},"content":"                return new AddDeadlineCommand(task, by);","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Gnoznaug"},"content":"            case \"event\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Gnoznaug"},"content":"                String[] text \u003d fullCommand.replaceFirst(\"event\", \"\").split(\" /at \");","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Gnoznaug"},"content":"                String task \u003d text[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Gnoznaug"},"content":"                if (task.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Gnoznaug"},"content":"                    throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"Gnoznaug"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Gnoznaug"},"content":"                String at \u003d text[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Gnoznaug"},"content":"                return new AddEventCommand(task, at);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"Gnoznaug"},"content":"            case \"delete\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Gnoznaug"},"content":"                if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Gnoznaug"},"content":"                    throw new DukeException(\"OOPS!!! Please choose a task number.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"Gnoznaug"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Gnoznaug"},"content":"                int taskNo \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Gnoznaug"},"content":"                return new DeleteTaskCommand(taskNo);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Gnoznaug"},"content":"            case \"bye\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Gnoznaug"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Gnoznaug"},"content":"            case \"find\": {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"Gnoznaug"},"content":"                if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"Gnoznaug"},"content":"                    throw new DukeException(\"OOPS!!! Please enter something for me to find!\");","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"Gnoznaug"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"Gnoznaug"},"content":"                String toFind \u003d fullCommand.split(\" \")[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"Gnoznaug"},"content":"                return new FindCommand(toFind);","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"Gnoznaug"},"content":"            default: {","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"Gnoznaug"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-01"},{"lineNumber":98,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"Gnoznaug"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"Please enter a task number.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":104}},{"path":"src/main/java/duke/manager/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.manager;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.io.EOFException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import java.io.File;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":" * Represents a storage object that handles the saving and loading in of the list of Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    private String filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to store the relative filepath of the save file that contains the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"     * @param filePath The relative filepath of the save file.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"     * Returns An ArrayList of tasks that contains the saved tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"     * @return ArrayList of Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"     * @throws Exception If there is a problem in closing the input streams, or the save is corrupted.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"    public ArrayList\u003cTask\u003e load() throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"        FileInputStream fileIn \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"        ObjectInputStream in \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"            fileIn \u003d new FileInputStream(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"            in \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"            ArrayList\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e) in.readObject();","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"            return tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"            f.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"Could not load save, creating new save file\");","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"        } catch (EOFException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"Empty save\");","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"        } finally {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"            if (fileIn !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"                fileIn.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"            if (in !\u003d null) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"                in.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Gnoznaug"},"content":"     * Saves the list of Tasks locally in the relative path.","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Gnoznaug"},"content":"     * @throws Exception If there is an issue saving the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Gnoznaug"},"content":"    public void save(TaskList taskList) throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Gnoznaug"},"content":"        FileOutputStream fileOut \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Gnoznaug"},"content":"        ObjectOutputStream out \u003d null;","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Gnoznaug"},"content":"            fileOut \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Gnoznaug"},"content":"            out \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Gnoznaug"},"content":"            out.writeObject(taskList.toArrayList());","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Gnoznaug"},"content":"            out.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Gnoznaug"},"content":"            fileOut.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Gnoznaug"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"Gnoznaug"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Gnoznaug"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Gnoznaug"},"content":"            f.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Gnoznaug"},"content":"            fileOut \u003d new FileOutputStream(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Gnoznaug"},"content":"            out \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Gnoznaug"},"content":"            out.writeObject(taskList.toArrayList());","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Gnoznaug"},"content":"            out.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Gnoznaug"},"content":"            fileOut.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"Error trying to save your tasks, \"","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"Gnoznaug"},"content":"                    + \"did you delete the file while the program was still running?\");","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":92}},{"path":"src/main/java/duke/manager/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.manager;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"     * Default constructor to intialise an empty ArrayList.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to store the list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"     * @param tasks An ArrayList of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     * Adds a Task object into the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"     * @param t A Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    public void add(Task t) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"        tasks.add(t);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"     * Removes a task from the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskNo Index of the Task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"     * @return The Task to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If an invalid index in the list was given.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"    public Task delete(int taskNo) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"        if (!isValidTaskNo(taskNo)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"        return tasks.remove(taskNo);","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"     * Retrieves, without removing, a Task from the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskNo Index of the Task to be retrieved.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"     * @return The Task to be retrieved.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If an invalid index in the list was given.","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"    public Task getTask(int taskNo) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"        if (!isValidTaskNo(taskNo)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Gnoznaug"},"content":"        return tasks.get(taskNo);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the number of Tasks in the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Gnoznaug"},"content":"     * @return The number of Tasks in the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"Gnoznaug"},"content":"    public int numOfTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Gnoznaug"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the actual ArrayList that stores the Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"Gnoznaug"},"content":"     * @return The ArrayList that stores the Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"Gnoznaug"},"content":"    public ArrayList\u003cTask\u003e toArrayList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"Gnoznaug"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Gnoznaug"},"content":"     * Marks the task at the index of the TaskList as complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskNo The index of the task to be marked as complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If an invalid index in the list was given.","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Gnoznaug"},"content":"    public void markDone(int taskNo) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Gnoznaug"},"content":"        if (!isValidTaskNo(taskNo)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"Gnoznaug"},"content":"        tasks.get(taskNo).markDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"Gnoznaug"},"content":"     * Marks the task at the index of the TaskList as incomplete.","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskNo The index of the task to be marked as incomplete.","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If an invalid index in the list was given.","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Gnoznaug"},"content":"    public void markUndone(int taskNo) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Gnoznaug"},"content":"        if (!isValidTaskNo(taskNo)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":107,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"Gnoznaug"},"content":"        tasks.get(taskNo).markUndone();","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"Gnoznaug"},"content":"     * Returns a boolean depending on the taskNo given and whether it is within range of the ArrayList.","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskNo The index to be checked if valid.","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"Gnoznaug"},"content":"     * @return True if the taskNo is within range of the ArrayList and false otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isValidTaskNo(int taskNo) {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"Gnoznaug"},"content":"        if (taskNo \u003e tasks.size() || taskNo \u003c 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"Gnoznaug"},"content":"            return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"Gnoznaug"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"Gnoznaug"},"content":"            return true;","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":126}},{"path":"src/main/java/duke/manager/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.manager.ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"    private void flip() {","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"     * Returns a DialogBox in the User\u0027s format.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"     * @param img The image to be displayed.","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"     * @return The user styled DialogBox.","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"Gnoznaug"},"content":"     * Retunrs a DialogBox in Duke\u0027s format.","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"Gnoznaug"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"Gnoznaug"},"content":"     * @param img The image to be displayed.","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"Gnoznaug"},"content":"     * @return The Duke styled DialogBox.","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"Gnoznaug"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"Gnoznaug"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"Gnoznaug"},"content":"        db.flip();","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"Gnoznaug"},"content":"        return db;","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Gnoznaug":75}},{"path":"src/main/java/duke/manager/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.manager.ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"    private static final String INITIALISATION_MESSAGE \u003d \"Hello!\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"            + \"Here are my commands:\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"            + \"1. list (lists out all the tasks)\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"            + \"2. todo taskname (adds a to do task with the taskname tagged to it)\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"            + \"3. event taskname /at date (adds a event task with the taskname tagged to it\"","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"            + \", date has to be in yyyy-mm-dd format)\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"            + \"4. deadline taskname /by date (adds a deadline task with the taskname tagged to it\"","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"            + \", date has to be in yyyy-mm-dd format)\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"            + \"5. delete x (deletes the task by the task number shown when you list them out. x is a number)\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"            + \"6. mark x (marks the task, by the task number, as done. x is a number)\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"            + \"7. find word (lists out all the tasks that contain the word in their taskname)\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"            + \"8. bye (exits the program)\";","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"     * Initialises the MainWindow, with Duke\u0027s greeting message and possible loading errors.","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(INITIALISATION_MESSAGE, dukeImage));","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(0.5));","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"        delay.setOnFinished(event -\u003e {","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"            try {","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"                duke.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"                dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(e.getMessage(), dukeImage));","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"Gnoznaug"},"content":"        });","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"Gnoznaug"},"content":"        delay.play();","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"Gnoznaug"},"content":"     * Assigns Duke to this MainWindow.","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"Gnoznaug"},"content":"     * @param d Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"Gnoznaug"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"Gnoznaug"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"Gnoznaug"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"Gnoznaug"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"Gnoznaug"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"Gnoznaug"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"Gnoznaug"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"Gnoznaug"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"Gnoznaug"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"Gnoznaug"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"Gnoznaug"},"content":"        );","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"Gnoznaug"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"Gnoznaug"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"Gnoznaug"},"content":"            //Solution below adapted from","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"Gnoznaug"},"content":"            //https://stackoverflow.com/questions/30543619/how-to-use-pausetransition-method-in-javafx","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"Gnoznaug"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"Gnoznaug"},"content":"            pause.setOnFinished(e -\u003e Platform.exit());","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"Gnoznaug"},"content":"            pause.play();","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":98,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":99,"author":{"gitId":"Gnoznaug"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":100,"author":{"gitId":"Gnoznaug"},"content":"    private void handleLoadError(String errorMessage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"Gnoznaug"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(errorMessage, dukeImage));","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":103,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Gnoznaug":103}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":" * Represents a Deadline Task that contains a due date.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor that stores the name of the task and its due date.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     * @param by The String representation of the date","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If the date given is invalid or the format is incorrect.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    public Deadline(String taskName, String by) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"        super(taskName);","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        boolean isCorrectFormat \u003d checkFormat(by);","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"        if (isCorrectFormat) {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"                this.dueDate \u003d LocalDate.parse(by);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"                throw new DukeException(\"Invalid date\");","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"Invalid time format, please use yyyy-mm-dd\");","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"        String done \u003d isComplete() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"        return \"[D]\" + done + getTaskName() + \" (by: \"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"                + this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"     * Returns a boolean depending on whether the input String follows the date format.","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"     * @param date String representation of the date, in yyyy-mm-dd format.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"     * @return A boolean depending on whether the String follow the correct format.","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"    public static boolean checkFormat(String date) {","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"        if (date.length() !\u003d 10) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"            return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"        } else if (date.charAt(4) !\u003d \u0027-\u0027 || date.charAt(7) !\u003d \u0027-\u0027) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"            return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"            return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Gnoznaug":63}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":" * Represents an Event Task that contains a date.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor that stores the name of the task and its date.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     * @param at The String representation of the date","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     * @throws DukeException If the date given is invalid or the format is incorrect.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    public Event(String taskName, String at) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"        super(taskName);","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        boolean isCorrectFormat \u003d checkFormat(at);","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"        if (isCorrectFormat) {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"                this.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"                throw new DukeException(\"Invalid date\");","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"            throw new DukeException(\"Invalid time format, please use yyyy-mm-dd\");","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"        String done \u003d isComplete() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"        return \"[E]\" + done + getTaskName() + \" (at: \"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"     * Returns a boolean depending on whether the input String follows the date format.","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"     * @param date String representation of the date, in yyyy-mm-dd format.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"     * @return A boolean depending on whether the String follow the correct format.","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"    public static boolean checkFormat(String date) {","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"        if (date.length() !\u003d 10) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"            return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"        } else if (date.charAt(4) !\u003d \u0027-\u0027 || date.charAt(7) !\u003d \u0027-\u0027) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"            return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"            return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Gnoznaug":63}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":" * Represents a general Task that can be put into the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"    private String taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"    private boolean status;","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor to store information about the task name.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskName The name of the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"        this.status \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"     * Marks this Task as complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"        this.status \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"     * Marks this Task as incomplete.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"    public void markUndone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"        this.status \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the name of the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String representation of the name of the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"     * Returns a boolean on whether the Task is complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"     * @return","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"    public boolean isComplete() {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"        return this.status;","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"    public abstract String toString();","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Gnoznaug":60}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":" * Represents a ToDo Task that contains a task name.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"     * A constructor that stores the name of the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"        super(taskName);","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        String done \u003d isComplete() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"        return \"[T]\" + done + getTaskName();","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Gnoznaug":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Gnoznaug":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.manager.ui.MainWindow\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"Gnoznaug":19}},{"path":"src/test/java/duke/manager/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.manager;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    public void testParse() throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"        //test case 1","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"        assertTrue(parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"        //test case 2","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"        assertTrue(parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        //test case 3","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"            parser.parse(\"mark\");","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"            assertEquals(\"OOPS!!! Please choose a task number\", e.getMessage());","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"        //test case 4","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"            parser.parse(\"todo\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty\", e.getMessage());","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":38}},{"path":"src/test/java/duke/manager/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"package duke.manager;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"    public void testNumOfTasks() throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"        ToDo toDo \u003d new ToDo(\"borrow book\");","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"        //test case 1","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"            taskList.add(toDo);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Gnoznaug"},"content":"        assertEquals(10, taskList.numOfTasks());","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"        //test case 2","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"        for (int i \u003d 0; i \u003c 101; i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"            taskList.add(toDo);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"        assertEquals(101, taskList.numOfTasks());","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"        //test case 3","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(toDo);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"        assertEquals(1, taskList.numOfTasks());","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"    public void testDeleteTask() throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"        ToDo toDo1 \u003d new ToDo(\"1\");","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"        ToDo toDo2 \u003d new ToDo(\"2\");","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"        ToDo toDo3 \u003d new ToDo(\"3\");","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"        //test case 1","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(toDo1);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"        assertEquals(toDo1, taskList.delete(0));","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Gnoznaug"},"content":"        //test case 1","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(toDo3);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(toDo2);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Gnoznaug"},"content":"        assertEquals(toDo3, taskList.delete(0));","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Gnoznaug"},"content":"        //test case 3","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(toDo2);","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(toDo1);","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(toDo3);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"        assertEquals(toDo1, taskList.delete(1));","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Gnoznaug"},"content":"    @Test void testMarkDone() throws Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"        ToDo toDo \u003d new ToDo(\"return book\");","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Gnoznaug"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"Gnoznaug"},"content":"        //test case 1","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"Gnoznaug"},"content":"        taskList.add(toDo);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Gnoznaug"},"content":"        taskList.markDone(0);","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Gnoznaug"},"content":"        toDo.markDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Gnoznaug"},"content":"        assertEquals(toDo.toString(), taskList.getTask(0).toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Gnoznaug"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Gnoznaug"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"Gnoznaug":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"todo borrow book","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"todo read book","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"deadline return book /by 2022-01-30","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"event project meeting /at Wed 8pm","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"unmark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"mark 2","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"mark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"event concert","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"delete 0","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"delete 1","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Gnoznaug":17}}]
