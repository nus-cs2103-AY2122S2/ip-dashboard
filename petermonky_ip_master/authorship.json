[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"    protected String byTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"    public Deadline(String description, String byTime) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.byTime + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"import java.util.List;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"        // Boot message","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"        String intro \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"        System.out.println(wrap(intro));","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"        // Setup scanner for user input","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"        // Store items in agenda","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"            try {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"                String[] breakdown \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"                String command \u003d breakdown[0];","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"                    break;","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"                    StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"                        result.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"                    }","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"                    System.out.println(wrap(\"Here are the tasks in your list:\\n\" + result));","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"                    if (command.equals(\"mark\") || command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"                        int index;","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"                        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"                            index \u003d Integer.parseInt(breakdown[1]) - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"                            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"                                throw new DukeException(\"Invalid index value\");","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"                            }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"                            throw new DukeException(\"Invalid index format\");","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"                        }","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"                        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"                        if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"                            task.markAsDone();","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"                            System.out.println(wrap(\"Nice! I\u0027ve marked this task as done:\\n\" + task + \"\\n\"));","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"petermonky"},"content":"                        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"petermonky"},"content":"                            task.markAsUndone();","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"petermonky"},"content":"                            System.out.println(wrap(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task + \"\\n\"));","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"petermonky"},"content":"                        }","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"petermonky"},"content":"                    } else if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"petermonky"},"content":"                        String options;","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"petermonky"},"content":"                        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"petermonky"},"content":"                            options \u003d breakdown[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"petermonky"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"petermonky"},"content":"                            throw new DukeException(\"Too few arguments supplied\");","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"petermonky"},"content":"                        }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"petermonky"},"content":"                        Task task;","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"petermonky"},"content":"                        if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"petermonky"},"content":"                            task \u003d new Todo(options);","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"petermonky"},"content":"                        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"petermonky"},"content":"                            String[] splitCommand \u003d options.split(\" /by \");","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"petermonky"},"content":"                            if (splitCommand.length \u003c 2) {","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"petermonky"},"content":"                                throw new DukeException(\"No deadline time supplied\");","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"petermonky"},"content":"                            }","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"petermonky"},"content":"                            String description \u003d splitCommand[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"petermonky"},"content":"                            String byTime \u003d splitCommand[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"petermonky"},"content":"                            task \u003d new Deadline(description, byTime);","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"petermonky"},"content":"                        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"petermonky"},"content":"                            String[] splitCommand \u003d options.split(\" /at \");","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"petermonky"},"content":"                            if (splitCommand.length \u003c 2) {","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"petermonky"},"content":"                                throw new DukeException(\"No event time supplied\");","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"petermonky"},"content":"                            }","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"petermonky"},"content":"                            String description \u003d splitCommand[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"petermonky"},"content":"                            String atTime \u003d splitCommand[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"petermonky"},"content":"                            task \u003d new Event(description, atTime);","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"petermonky"},"content":"                        }","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"petermonky"},"content":"                        tasks.add(task);","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"petermonky"},"content":"                        System.out.println(wrap(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"petermonky"},"content":"                                + task + \"\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"petermonky"},"content":"                                + \"Now you have \" + tasks.size() + \" task(s) in the list.\\n\"));","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"petermonky"},"content":"                    } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"petermonky"},"content":"                        throw new DukeException(\"Invalid command\");","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"petermonky"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"petermonky"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"petermonky"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"petermonky"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"petermonky"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":89,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":90,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":91,"author":{"gitId":"petermonky"},"content":"        System.out.println(wrap(\"Bye. Hope to see you again soon!\\n\"));","lastModifiedDate":"2022-01-17"},{"lineNumber":92,"author":{"gitId":"petermonky"},"content":"        sc.close();","lastModifiedDate":"2022-01-17"},{"lineNumber":93,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":94,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":95,"author":{"gitId":"petermonky"},"content":"    protected static String wrap(String text) {","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"petermonky"},"content":"        return \"__________________________________________________\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"petermonky"},"content":"                + text","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"petermonky"},"content":"                + \"__________________________________________________\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"petermonky":96,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"        super(\"Oops! \" + message + \" :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"    public String atTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"    public Event(String description, String atTime) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"        this.atTime \u003d atTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.atTime + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"    protected String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"    protected boolean isMarked;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"        return \"[\" + (isMarked ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"petermonky":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"todo read book","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"todo join sports club","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"mark 4","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"deadline buy book /by Sunday","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"mark 7","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"petermonky":1,"-":33}}]
