[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"instructions on how to use it.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"   first)","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"   like the below as the output:","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"petermonky":10,"-":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.logic.Parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"            this.taskList \u003d new TaskList(storage.readFromFile());","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"            ui.showError(e);","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"    public void run() {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"        this.ui.showIntro();","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"        boolean hasExited \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"        do {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"                hasExited \u003d !command.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"                ui.showError(e);","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"        } while (!hasExited);","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"        ui.closeScanner();","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"        new Duke(\"./data/saved.txt\").run();","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"petermonky":43,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.logic.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" * Represents a command that adds a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"     * Task that is to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"    private final Task task;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     * Constructor for a task add command.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"     * @param task Task that is to be added.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        super();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"     * Adds the associated task to a given list of tasks, displays a response message, and writes","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"     * to a local file associated with the list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks that is to be appended.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"     * @param ui       UI responsible for displaying the response message.","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"     * @param storage  Storage responsible for writing to local file.","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e upon successful execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If write to file is unsuccessful.","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"        taskList.add(this.task);","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"        ui.showMessage(\"TASK ADDED:\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"                + task + \"\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"                + taskList.size() + \" TASK(S) NOW.\");","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"petermonky"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"petermonky"},"content":"        return true;","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":49}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.logic.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":" * Represents a command that clears a list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"     * Clears a given list of tasks, displays a response message, and truncates a local file","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"     * associated with the list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks that is to be cleared.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"     * @param ui       UI responsible for displaying the response message.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     * @param storage  Storage responsible for truncating local file.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e upon successful execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If file truncation is unsuccessful.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"        storage.clearFile();","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        taskList.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"        ui.showMessage(\"ALL TASKS CLEARED\");","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"        return true;","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.logic.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":" * Represents a command. Inherited by specific command classes.","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"     * Performs a unique execution for a specific command.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks that is to be operated on.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"     * @param ui       UI responsible for displaying response message.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"     * @param storage  Storage responsible for reading and writing to local file.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     * @return boolean value that determines process termination.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If operation is unsuccessful.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"    public abstract boolean execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.logic.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" * Represents a command that deletes a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"     * Index of task in a list of tasks that is to be deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"    private final int index;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     * Constructor for a task delete command.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"     * @param index Index of task in a list of tasks that is to be deleted.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        super();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"     * Deletes the task located at the associated index in a given list of tasks, displays a","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"     * response message, and writes to a local file associated with the list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks that is to have a task removed.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"     * @param ui       UI responsible for displaying response message.","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"     * @param storage  Storage responsible for writing to local file.","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e upon successful execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If write to file is unsuccessful.","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"        ui.showMessage(\"TASK REMOVED:\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"                + task + \"\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"petermonky"},"content":"                + taskList.size() + \" TASK(S) NOW.\");","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"petermonky"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"petermonky"},"content":"        return true;","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":50}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":" * Represents a command that terminates Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"     * Displays an exit message.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks ignored.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"     * @param ui       UI responsible for displaying exit message.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"     * @param storage  Storage ignored.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e upon successful execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"        ui.showBye();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"        return false;","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":26}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":" * Represents a command that finds a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"     * Keyword that is to be used to filter a list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"    private final String keyword;","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"     * Constructor for a find task command.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     * @param keyword Keyword that is to be used to filter a list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"        super();","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"     * Displays the filtered list of tasks that only contains the associated keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks that is to be filtered.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"     * @param ui       UI responsible for displaying filtered list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"     * @param storage  Storage ignored.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e upon successful execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"        TaskList newTaskList \u003d taskList.filter(this.keyword);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"        ui.showMessage(\"MATCHING TASKS HERE:\" + newTaskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"        return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"petermonky":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":" * Represents a command that displays a list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"     * Displays a given list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks that is to be displayed.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"     * @param ui       UI responsible for displaying list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"     * @param storage  Storage ignored.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e upon successful execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"        ui.showMessage(\"YOUR TASKS:\" + taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"        return true;","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import duke.logic.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import duke.logic.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import duke.logic.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"import duke.logic.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" * Represents a command that marks or unmarks a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"     * Index of task in a list of tasks that is to be marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"    private final int index;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     * Boolean flag that determines whether to mark or unmark task.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"    private final boolean isMark;","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"     * Constructor for a task mark command.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"     * @param index  Index of task in a list of tasks that is to be marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"     * @param isMark Boolean flag that determines whether to mark or unmark task.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"    public MarkCommand(int index, boolean isMark) {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"     * Marks the task located at the associated index in a given list of tasks, displays a","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"     * response message, and writes to a local file associated with the list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks that is to be operated on.","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"     * @param ui       UI responsible for displaying response message.","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"     * @param storage  Storage responsible for reading and writing to local file.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e upon successful execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If write to file is unsuccessful.","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"petermonky"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"petermonky"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"petermonky"},"content":"        if (isMark) {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"petermonky"},"content":"            task.markAsDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"petermonky"},"content":"            ui.showMessage(\"TASK DONE:\\n\" + task);","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"petermonky"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"petermonky"},"content":"            task.markAsUndone();","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"petermonky"},"content":"            ui.showMessage(\"TASK UNDONE:\\n\" + task);","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"petermonky"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"petermonky"},"content":"        return true;","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":59}},{"path":"src/main/java/duke/logic/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.logic;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"        super(message + \"!!!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":7}},{"path":"src/main/java/duke/logic/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.logic;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":" * Represents a parser that parses commands fed to Duke.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"public class Parser {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    private enum CommandType {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND, CLEAR","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"            \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"    private static int parseIndex(String index) {","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"        return Integer.parseInt(index) - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"     * Parses the time portion of a command.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"     * @param options Arguments to the command that is to be split and parsed.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"     * @param divider Divider that is used to split arguments.","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"     * @return Description of task.","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"    private static String parseDescription(String options, String divider) {","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"        String[] splitCommand \u003d options.split(divider);","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"        return splitCommand[0];","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"petermonky"},"content":"     * Parses the time portion of a command.","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"petermonky"},"content":"     * @param options Arguments to the command that is to be split and parsed.","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"petermonky"},"content":"     * @param divider Divider that is used to split arguments.","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"petermonky"},"content":"     * @return Date and time of task in LocalDateTime format.","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If format of arguments passed is incorrect.","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"petermonky"},"content":"    private static LocalDateTime parseTime(String options, String divider) throws DukeException {","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"petermonky"},"content":"        String[] splitCommand \u003d options.split(divider);","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"petermonky"},"content":"        if (splitCommand.length \u003c 2) {","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"petermonky"},"content":"            throw new DukeException(\"NO TIME SUPPLIED\");","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"petermonky"},"content":"        LocalDateTime time;","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"petermonky"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"petermonky"},"content":"            time \u003d LocalDateTime.parse(splitCommand[1], formatter);","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"petermonky"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"petermonky"},"content":"            throw new DukeException(\"INVALID TIME FORMAT (dd-MM-yyyy HH:mm)\");","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"petermonky"},"content":"        return time;","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"petermonky"},"content":"     * Parses an input string to the corresponding command along with additional arguments.","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"petermonky"},"content":"     * @param input String that is to be parsed.","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"petermonky"},"content":"     * @return Command corresponding to the input string.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If format of command is incorrect.","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"petermonky"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"petermonky"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"petermonky"},"content":"        CommandType commandType;","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"petermonky"},"content":"        Command command;","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"petermonky"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"petermonky"},"content":"            commandType \u003d CommandType.valueOf(splitInput[0].toUpperCase());","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"petermonky"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"petermonky"},"content":"            throw new DukeException(\"INVALID COMMAND\");","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"petermonky"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"petermonky"},"content":"            switch (commandType) {","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"petermonky"},"content":"            case BYE:","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"petermonky"},"content":"                command \u003d new ExitCommand();","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"petermonky"},"content":"            case LIST:","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"petermonky"},"content":"                command \u003d new ListCommand();","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"petermonky"},"content":"            case MARK:","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"petermonky"},"content":"                command \u003d new MarkCommand(parseIndex(splitInput[1]), true);","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"petermonky"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"petermonky"},"content":"                command \u003d new MarkCommand(parseIndex(splitInput[1]), false);","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"petermonky"},"content":"            case DELETE:","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"petermonky"},"content":"                command \u003d new DeleteCommand(parseIndex(splitInput[1]));","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"petermonky"},"content":"            case TODO:","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"petermonky"},"content":"                command \u003d new AddCommand(new Todo(splitInput[1], false));","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"petermonky"},"content":"            case EVENT:","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"petermonky"},"content":"                command \u003d new AddCommand(","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"petermonky"},"content":"                        new Event(parseDescription(splitInput[1], \" /at \"),","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"petermonky"},"content":"                                false, parseTime(splitInput[1], \" /at \")));","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"petermonky"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"petermonky"},"content":"                command \u003d new AddCommand(","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"petermonky"},"content":"                        new Deadline(parseDescription(splitInput[1], \" /by \"),","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"petermonky"},"content":"                                false, parseTime(splitInput[1], \" /by \")));","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"petermonky"},"content":"            case FIND:","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"petermonky"},"content":"                command \u003d new FindCommand(splitInput[1]);","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"petermonky"},"content":"            case CLEAR:","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"petermonky"},"content":"                command \u003d new ClearCommand();","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"petermonky"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"petermonky"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"petermonky"},"content":"                throw new DukeException(\"INVALID COMMAND\");","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"petermonky"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"petermonky"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"petermonky"},"content":"            throw new DukeException(\"TOO FEW ARGUMENTS SUPPLIED\");","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"petermonky"},"content":"        return command;","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":137,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":137}},{"path":"src/main/java/duke/logic/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.logic;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import java.io.File;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":" * Represents a storage that reads and writes to a local file.","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"public class Storage {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     * File that is to be operated on.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"    private final File file;","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"    private enum TaskType {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"        T, E, D","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"     * Constructor for a storage unit.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"     * @param filePath Path at which the local file is to be stored.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If file path is invalid.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"                this.file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"                this.file.createNewFile();","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"            throw new DukeException(\"INVALID FILE PATH\");","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"petermonky"},"content":"     * Clears the local file associated with the storage.","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If write to local file is unsuccessful.","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"petermonky"},"content":"    public void clearFile() throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"petermonky"},"content":"        this.writeToFile(new TaskList());","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"petermonky"},"content":"     * Writes to the local file associated with the storage.","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"petermonky"},"content":"     * @param taskList List of tasks that is to be written to local file.","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If write to local file is unsuccessful.","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"petermonky"},"content":"    public void writeToFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"petermonky"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"petermonky"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"petermonky"},"content":"            fw.write(taskList.toData());","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"petermonky"},"content":"            fw.close();","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"petermonky"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"petermonky"},"content":"            throw new DukeException(\"INVALID FILE PATH\");","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"petermonky"},"content":"     * Reads from the local file associated with the storage.","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"petermonky"},"content":"     * @return List of tasks read from local file.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"petermonky"},"content":"     * @throws DukeException If read from local file is unsuccessful.","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"petermonky"},"content":"    public ArrayList\u003cTask\u003e readFromFile() throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"petermonky"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"petermonky"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"petermonky"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"petermonky"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"petermonky"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"petermonky"},"content":"                String[] breakdown \u003d line.split(\" \\\\| \");","lastModifiedDate":"2022-01-30"},{"lineNumber":89,"author":{"gitId":"petermonky"},"content":"                String command \u003d breakdown[0];","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"petermonky"},"content":"                try {","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"petermonky"},"content":"                    TaskType taskType \u003d TaskType.valueOf(command);","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"petermonky"},"content":"                    switch (taskType) {","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"petermonky"},"content":"                    case T:","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"petermonky"},"content":"                        tasks.add(new Todo(breakdown[2],","lastModifiedDate":"2022-01-30"},{"lineNumber":97,"author":{"gitId":"petermonky"},"content":"                                Boolean.parseBoolean(breakdown[1])));","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"petermonky"},"content":"                        break;","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"petermonky"},"content":"                    case E:","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"petermonky"},"content":"                        tasks.add(new Event(breakdown[2],","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"petermonky"},"content":"                                Boolean.parseBoolean(breakdown[1]),","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"petermonky"},"content":"                                LocalDateTime.parse(breakdown[3])));","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"petermonky"},"content":"                        break;","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"petermonky"},"content":"                    case D:","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"petermonky"},"content":"                        tasks.add(new Deadline(breakdown[2],","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"petermonky"},"content":"                                Boolean.parseBoolean(breakdown[1]),","lastModifiedDate":"2022-01-31"},{"lineNumber":107,"author":{"gitId":"petermonky"},"content":"                                LocalDateTime.parse(breakdown[3])));","lastModifiedDate":"2022-01-31"},{"lineNumber":108,"author":{"gitId":"petermonky"},"content":"                        break;","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"petermonky"},"content":"                    }","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"petermonky"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"petermonky"},"content":"                    throw new DukeException(\"INVALID TASK TYPE\");","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"petermonky"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"petermonky"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":115,"author":{"gitId":"petermonky"},"content":"            return tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"petermonky"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"petermonky"},"content":"            throw new DukeException(\"INVALID FILE PATH\");","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":120}},{"path":"src/main/java/duke/logic/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.logic;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"public class TaskList {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"     * Internal ArrayList of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"     * Constructor for an empty list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"     * Constructor for a preset list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"     * @param tasks List of tasks from which tasks are to be retrieved.","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"    public void remove(int i) {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"petermonky"},"content":"    public void clear() {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"petermonky"},"content":"        this.tasks.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"petermonky"},"content":"    public int size() {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"petermonky"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"petermonky"},"content":"     * Filters a copy of the internal ArrayList of tasks with respect to a given keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"petermonky"},"content":"     * @param keyword Keyword that is to be indexed in each task.","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"petermonky"},"content":"     * @return Filtered copy of list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"petermonky"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"petermonky"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e(this.tasks);","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"petermonky"},"content":"        newTaskList.removeIf(t -\u003e !t.hasKeyword(keyword));","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"petermonky"},"content":"        return new TaskList(newTaskList);","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"petermonky"},"content":"     * Converts the associated list of tasks to a form legible by the storage.","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"petermonky"},"content":"     * @return Data representation of the associated list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"petermonky"},"content":"    public String toData() {","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"petermonky"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"petermonky"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"petermonky"},"content":"            data.append(task.toData()).append(\"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"petermonky"},"content":"        return data.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"petermonky"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"petermonky"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"petermonky"},"content":"            result.append(\"\\n\").append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"petermonky"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"petermonky"},"content":"        return result.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":88}},{"path":"src/main/java/duke/logic/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.logic;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"public class Ui {","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"    private static final String logo \u003d \"\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"            \".        :       ...     :::.    :::. :::  .   .,::::::\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"            \";;,.    ;;;   .;;;;;;;.  `;;;;,  `;;; ;;; .;;,.;;;;\u0027\u0027\u0027\u0027\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"            \"[[[[, ,[[[[, ,[[     \\\\[[,  [[[[[. \u0027[[ [[[[[/\u0027   [[cccc\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"            \"$$$$$$$$\\\"$$$ $$$,     $$$  $$$ \\\"Y$c$$_$$$$,     $$\\\"\\\"\\\"\\\"\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"            \"888 Y88\\\" 888o\\\"888,_ _,88P  888    Y88\\\"888\\\"88o,  888oo,__\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"            \"MMM  M\u0027  \\\"MMM  \\\"YMMMMMP\\\"   MMM     YM MMM \\\"MMP\\\" \\\"\\\"\\\"\\\"YUMMM\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"    private static final String intro \u003d \"I MONKE. WHAT WANT?\";","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"    public void closeScanner() {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"        this.sc.close();","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"    public void showIntro() {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"        System.out.println(wrap(logo + \"\\n\" + intro));","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"        System.out.println(wrap(message));","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"        e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"    public void showBye() {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"        System.out.println(wrap(\"BYE!!!\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"    private String wrap(String text) {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"        String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"        return line + text + \"\\n\" + line;","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"petermonky":44}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"     * Time associated with the deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"    protected LocalDateTime byTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     * @param description Description associated with the deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     * @param isMarked    Boolean flag of whether the deadline task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     * @param byTime      Time associated with the deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"    public Deadline(String description, boolean isMarked, LocalDateTime byTime) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"        super(description, isMarked);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"     * Converts the deadline task to a form legible by the storage.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"     * @return Data representation of the deadline task.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"    public String toData() {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"        return \"D | \" + this.isMarked + \" | \" + this.description + \" | \" + this.byTime;","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"        String byTimeFormatted \u003d this.byTime.format(DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"                \"HH:mm, MMM dd yyyy\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byTimeFormatted + \")\";","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":" * Represents an event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"     * Time associated with the event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"    public LocalDateTime atTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"     * Constructor for an event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     * @param description Description associated with the event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     * @param isMarked    Boolean flag of whether the event task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     * @param atTime      Time associated with the event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"    public Event(String description, boolean isMarked, LocalDateTime atTime) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"        super(description, isMarked);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        this.atTime \u003d atTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"     * Converts the event task to a form legible by the storage.","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"     * @return Data representation of the event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"    public String toData() {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"        return \"E | \" + this.isMarked + \" | \" + this.description + \" | \" + this.atTime;","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"        String atTimeFormatted \u003d this.atTime.format(DateTimeFormatter.ofPattern(","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"                \"HH:mm, MMM dd yyyy\"));","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + atTimeFormatted + \")\";","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":" * Represents a task. Inherited by specific task classes.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"     * Description associated with the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    protected String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"     * Boolean flag of whether the task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"    protected boolean isMarked;","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     * Constructor for a task.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     * @param description Description associated with the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"     * @param isMarked    Boolean flag of whether the task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    public Task(String description, boolean isMarked) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"petermonky"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"petermonky"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"petermonky"},"content":"     * Determines whether the associated description contains a given keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"petermonky"},"content":"     * @param keyword Keyword that is to be indexed.","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"petermonky"},"content":"     * @return Boolean value of whether the associated description contains a given keyword.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"petermonky"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"petermonky"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"petermonky"},"content":"     * Converts the task to a form legible by the storage.","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"petermonky"},"content":"     * @return Data representation of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"petermonky"},"content":"    public abstract String toData();","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"petermonky"},"content":"        return \"[\" + (isMarked ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"petermonky":59}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":" * Represents a todo task.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":" *","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":" * @author Peter","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"     * Constructor for a todo task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"     * @param description Description associated with the todo task.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"     * @param isMarked    Boolean flag of whether the todo task is done.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"    public Todo(String description, boolean isMarked) {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"        super(description, isMarked);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"     * Converts the todo task to a form legible by the storage.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"     * @return Data representation of the todo task.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"    public String toData() {","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        return \"T | \" + this.isMarked + \" | \" + this.description;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"    public String toString() {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"petermonky"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":33}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    public void toString_deadline_correctStringRepresentationReturned() {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"01-01-2022 00:00\", formatter);","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"        Deadline deadline \u003d new Deadline(\"test\", true, localDateTime);","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"        assertEquals(deadline.toString(), \"[D][X] test (by: 00:00, Jan 01 2022)\");","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"    public void toData_deadline_correctDataRepresentationReturned() {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"01-01-2022 00:00\", formatter);","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        Deadline deadline \u003d new Deadline(\"test\", true, localDateTime);","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"        assertEquals(deadline.toData(), \"D | true | test | 2022-01-01T00:00\");","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"petermonky":30}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"public class EventTest {","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"    public void toString_event_correctStringRepresentationReturned() {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"01-01-2022 00:00\", formatter);","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"        Event event \u003d new Event(\"test\", true, localDateTime);","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"        assertEquals(event.toString(), \"[E][X] test (at: 00:00, Jan 01 2022)\");","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"petermonky"},"content":"    public void toData_deadline_correctDataRepresentationReturned() {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"petermonky"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"petermonky"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"01-01-2022 00:00\", formatter);","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"        Event event \u003d new Event(\"test\", true, localDateTime);","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"petermonky"},"content":"        assertEquals(event.toData(), \"E | true | test | 2022-01-01T00:00\");","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"petermonky":30}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"    public void toString_todo_correctStringRepresentationReturned() {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"        Todo todo \u003d new Todo(\"test\", true);","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"        assertEquals(todo.toString(), \"[T][X] test\");","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"    @Test","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"    public void toData_todo_correctDataRepresentationReturned() {","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"petermonky"},"content":"        Todo todo \u003d new Todo(\"test\", true);","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"petermonky"},"content":"        assertEquals(todo.toData(), \"T | true | test\");","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"petermonky"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"petermonky"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"petermonky":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"petermonky"},"content":"clear","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"petermonky"},"content":"todo read book","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"petermonky"},"content":"deadline return book /by 06-07-2022 14:00","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"petermonky"},"content":"event project meeting /at 06-08-2022 16:00","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"petermonky"},"content":"todo join sports club","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"petermonky"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"petermonky"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"petermonky"},"content":"deadline buy gift /by 22-02-2022 00:00","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"petermonky"},"content":"mark 5","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"event debate club /at 08-02-2022 10:00","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"petermonky"},"content":"unmark 5","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"petermonky"},"content":"mark 7","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"petermonky"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"petermonky"},"content":"clear","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"petermonky"},"content":"list","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"petermonky":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"petermonky"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"petermonky"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"petermonky":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"petermonky"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"petermonky"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"petermonky":2,"-":32}}]
