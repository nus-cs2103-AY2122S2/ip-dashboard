[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"1|T|1|hello to everyone","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"2|T|0|chicken nugget","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"sbhbenjamin":2}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":" * Valid commands.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"public enum Command {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"     * Bye command.","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"     * List command.","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"     * Mark command.","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"     * Unmark command.","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"     * Todo command.","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"     * Deadline command.","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"     * Event command.","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"     * Delete command.","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"    DELETE(\"delete\");","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"     * Command string.","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"    private final String command;","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructor for the Command enum.","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"     * @param command command string","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"    Command(String command) {","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"     * Checks that the given command is a valid command.","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"     * @param command command to be validated","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"     * @return boolean, whether the command is valid or not","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"    public static boolean isValidCommand(String command) {","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"        for (Command e : values()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"            if (e.command.equals(command)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"                return true;","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"        return false;","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":73}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":" * A deadline task that has a deadline property.","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"     * The deadline of the task, in yyyy-mm-dd format","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"     * The deadline of the task parsed in MMM dd yy format.","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    private String deadlineString;","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a new deadline task from the description and the","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"     * deadline. Accepts date in the format of yyyy-mm-dd;","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"     * @param description description of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"     * @param deadline deadline of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"    public DeadlineTask(String description, String deadline, boolean done) {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"        super(description, done);","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadlineString \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"    public DeadlineTask(String description, String deadline) {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadlineString \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"     * @return the string representation of the deadline task","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        return \"[D]\" + super.toString() + \" \" + \"(by: \" + this.deadlineString + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":46}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"     * Prints out the default greeting.","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"    public void greet() {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"     * Exits from the program.","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"    public void exit() {","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"        scanner.close();","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"     * Starts the program.","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    public void start() {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"        this.greet();","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"        String scannedInput \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"        while (true) {","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"            try {","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"                scannedInput \u003d scanner.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"                String[] input \u003d scannedInput.split(\" \", 2);","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"                String command \u003d input[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"                String arguments \u003d input.length \u003e 1 ? input[1] : \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"                if (!Command.isValidCommand(command)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"                    break;","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"                    taskList.listTasks();","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"                } else if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"                    int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"                    if (index \u003e taskList.size) {","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"                        throw new InvalidParameterException(\"☹ OOPS!!! The index provided is invalid.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"                    }","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"                    taskList.completeTask(index);","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"                    int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"                    if (index \u003e taskList.size) {","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"                        throw new InvalidParameterException(\"☹ OOPS!!! The index provided is invalid.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"                    taskList.undoTask(index);","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"                } else if (command.equals(\"todo\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"                    if (arguments \u003d\u003d \"\") {","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"                        throw new InvalidParameterException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"                    }","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"                    taskList.addTodoTask(arguments);","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"                    String[] argsArray \u003d arguments.split(\" /by \");","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"                    taskList.addDeadlineTask(argsArray[0], argsArray[1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"                    String[] argsArray \u003d arguments.split(\" /at \");","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"                    taskList.addEventTask(argsArray[0], argsArray[1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"                } else if (command.equals(\"delete\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"                    taskList.deleteTask(Integer.parseInt(arguments));","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"                }","lastModifiedDate":"2022-01-17"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2022-01-17"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"                System.out.println(exception.getMessage());","lastModifiedDate":"2022-01-17"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"        this.exit();","lastModifiedDate":"2022-01-17"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"     * The main method.","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"     * @param args the command line arguments","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-17"},{"lineNumber":96,"author":{"gitId":"sbhbenjamin"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"        duke.start();","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":8,"sbhbenjamin":91}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":" * An exception for the Duke class.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a new exception for the class duke.","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"     * @param errorMessage error message to be passed to the exception object","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":13}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":" * A event task that has a deadline property.","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"     * The deadline of the task.","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"     * The deadline of the task parsed in MMM dd yy format.","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"    private String deadlineString;","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a new deadline task from the description and the","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"     * deadline. Accepts date in the format of yyyy-mm-dd;","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"     * @param description description of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"     * @param deadline deadline of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"    public EventTask(String description, String deadline, boolean done) {","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        super(description, done);","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadlineString \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"    public EventTask(String description, String deadline) {","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadlineString \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"     * @return the string representation of the event task","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"        return \"[E]\" + super.toString() + \" \" + \"(by: \" + this.deadlineString + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":45}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":" * Exception that occurs when an invalid command is provided.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs an invalid command exception.","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":11}},{"path":"src/main/java/InvalidParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":" * An exception that occurs when an invalid parameter is provided.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"public class InvalidParameterException extends DukeException {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs an invalid parameter exception.","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"     * @param message error message to be passed to the exception object","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"    public InvalidParameterException(String message) {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"        super(message);","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":13}},{"path":"src/main/java/ResourceNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"public class ResourceNotFoundException extends DukeException{","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"    public ResourceNotFoundException(String errorMessage) {","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"sbhbenjamin":5}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.List;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":" * Represents a location in the hard drive.","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    public static File f;","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a storage object that represents the file data/duke.txt.","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"     * @throws ResourceNotFoundException if a file or folder cannot be found.","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"    public Storage() throws ResourceNotFoundException{","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"        File data \u003d new File(\"data\");","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        File duke \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        if (!data.exists()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"            throw new ResourceNotFoundException(\"Folder ./data/ cannot be found\");","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"        } else if (!duke.exists()){","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"            throw new ResourceNotFoundException(\"File ./data/duke.txt cannot be found\");","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        this.f \u003d duke;","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"     * Retrieves all the tasks from the storage.","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"     * @return a list of tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"     * @throws FileNotFoundException if the file cannot be found.","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    public static ArrayList\u003cTask\u003e retrieveTasks() throws FileNotFoundException {","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"        ArrayList\u003cTask\u003e taskListFromStore \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"            String[] scanned \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"            String type \u003d scanned[1];","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"            int done \u003d Integer.parseInt(scanned[2]);","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"            String description \u003d scanned[3];","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"                TodoTask task \u003d new TodoTask(description, done \u003d\u003d 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"                taskListFromStore.add(task);","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"                String deadline \u003d scanned[4];","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"                DeadlineTask task \u003d new DeadlineTask(description, deadline, done \u003d\u003d 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"                taskListFromStore.add(task);","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"                String deadline \u003d scanned[4];","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"                EventTask task \u003d new EventTask(description, deadline, done \u003d\u003d 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"                taskListFromStore.add(task);","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"        return taskListFromStore;","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"     * Append to the file.","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"     * @param input string to be appended to the file.","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"     * @throws IOException if an input or output error occurs.","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"    public static void appendToFile(String input) throws IOException{","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"        FileWriter fw \u003d new FileWriter(\"data/duke.txt\", true);","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"        fw.write(input);","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"        fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"     * Update a task in the file.","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"     * @param id id of the task to be updated.","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"     * @param done status of the task to be updated.","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"     * @throws FileNotFoundException if the file cannot be found.","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"     * @throws IOException if an input or output error occurs.","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"    public static void updateTask(int id, boolean done) throws FileNotFoundException, IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(\"data/duke.txt\"), StandardCharsets.UTF_8));","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"        for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"            String line \u003d fileContent.get(i);","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"            String[] a \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"            int idFromStore \u003d Integer.parseInt(a[0]);","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"            char d \u003d done ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"            if (idFromStore \u003d\u003d id) {","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"sbhbenjamin"},"content":"                StringBuilder updatedLine \u003d new StringBuilder(line);","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"                updatedLine.setCharAt(4, d);","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"sbhbenjamin"},"content":"                fileContent.set(i, String.valueOf(updatedLine));","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"sbhbenjamin"},"content":"                break;","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"sbhbenjamin"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":101,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":102,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"sbhbenjamin"},"content":"        Files.write(Paths.get(\"data/duke.txt\"), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"sbhbenjamin"},"content":"     * Removes a task from the file.","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":109,"author":{"gitId":"sbhbenjamin"},"content":"     * @param id id of the file to be removed.","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"sbhbenjamin"},"content":"     * @throws FileNotFoundException if the file cannot be found.","lastModifiedDate":"2022-01-22"},{"lineNumber":111,"author":{"gitId":"sbhbenjamin"},"content":"     * @throws IOException if an input or output error occurs.","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"sbhbenjamin"},"content":"    public static void removeTask(int id) throws FileNotFoundException, IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"sbhbenjamin"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(\"data/duke.txt\"), StandardCharsets.UTF_8));","lastModifiedDate":"2022-01-22"},{"lineNumber":115,"author":{"gitId":"sbhbenjamin"},"content":"        for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"sbhbenjamin"},"content":"            String line \u003d fileContent.get(i);","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"sbhbenjamin"},"content":"            String[] a \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-22"},{"lineNumber":118,"author":{"gitId":"sbhbenjamin"},"content":"            int idFromStore \u003d Integer.parseInt(a[0]);","lastModifiedDate":"2022-01-22"},{"lineNumber":119,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":120,"author":{"gitId":"sbhbenjamin"},"content":"            if (idFromStore \u003d\u003d id) {","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"sbhbenjamin"},"content":"                fileContent.remove(i);","lastModifiedDate":"2022-01-22"},{"lineNumber":122,"author":{"gitId":"sbhbenjamin"},"content":"                break;","lastModifiedDate":"2022-01-22"},{"lineNumber":123,"author":{"gitId":"sbhbenjamin"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":126,"author":{"gitId":"sbhbenjamin"},"content":"        Files.write(Paths.get(\"data/duke.txt\"), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2022-01-22"},{"lineNumber":127,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":128,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"sbhbenjamin":128}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":" * A task class.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"     * The description of a task.","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"    protected String description;","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"     * Completion status of a task.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    protected boolean done;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a task from given description.","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"     * @param description description of a task","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"    public Task(String description, boolean done) {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns the description property of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"     * @return the description of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"        return this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"     * Marks the current task as completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"     * Marks the current task as undone.","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"    public void markUndone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"        String status \u003d done ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"        return status + \" \" + this.description;","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":70}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":" * A list of tasks","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"public class TaskList {","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"    private static int id;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"    public static int size;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a task list from storage","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"        this.id \u003d this.size;","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"            this.taskList \u003d this.storage.retrieveTasks();","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"            this.size \u003d taskList.size();","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"     * Prints out the response when successfully adding a task.","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"     * @param task a new task that was added to the task list.","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"    public void printAddTaskSuccess(Task task) {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.printf(\"Got it. I\u0027ve added this task:%n%s%n\", task);","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", taskList.size());","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"     * Adds a TodoTask to the task list.","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"     * @param input the content of a todo task.","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"    public void addTodoTask(String input) {","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"        TodoTask newTask \u003d new TodoTask(input);","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"        printAddTaskSuccess(newTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"        String s \u003d String.format(\"%d|T|0|%s%n\", id, input);","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"        id++;","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"            storage.appendToFile(String.valueOf(s));","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"            System.out.println(\"Cannot write to file\");","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"     * Adds a DeadlineTask to the task list.","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"     * @param input the content of a deadline task.","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"     * @param deadline the deadline of a deadline task.","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"    public void addDeadlineTask(String input, String deadline) {","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"        DeadlineTask newTask \u003d new DeadlineTask(input, deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"        printAddTaskSuccess(newTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"        String s \u003d String.format(\"%d|D|0|%s|%s%n\", id, input, deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"        id++;","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"            storage.appendToFile(String.valueOf(s));","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"            System.out.println(\"Cannot write to file\");","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"     * Adds an EventTask to the task list.","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"     * @param input the content of an event task.","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"     * @param deadline the deadline of an event task.","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"    public void addEventTask(String input, String deadline) {","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"        EventTask newTask \u003d new EventTask(input, deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"        printAddTaskSuccess(newTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"        String s \u003d String.format(\"%d|E|0|%s|%s%n\", id, input, deadline);","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"        id++;","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"            storage.appendToFile(String.valueOf(s));","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"            System.out.println(\"Cannot write to file\");","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"sbhbenjamin"},"content":"     * Complete a Task.","lastModifiedDate":"2022-01-22"},{"lineNumber":101,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":102,"author":{"gitId":"sbhbenjamin"},"content":"     * @param taskIndex the index of a task to complete.","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"sbhbenjamin"},"content":"    public void completeTask(int taskIndex) {","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"sbhbenjamin"},"content":"        Task foundTask \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"sbhbenjamin"},"content":"        foundTask.markDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"sbhbenjamin"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"sbhbenjamin"},"content":"            storage.updateTask(taskIndex - 1, true);","lastModifiedDate":"2022-01-22"},{"lineNumber":109,"author":{"gitId":"sbhbenjamin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"sbhbenjamin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":111,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":115,"author":{"gitId":"sbhbenjamin"},"content":"     * Undo the completion of a task with the given index.","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"sbhbenjamin"},"content":"     * @param taskIndex the index of a task to undo completion.","lastModifiedDate":"2022-01-22"},{"lineNumber":118,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":119,"author":{"gitId":"sbhbenjamin"},"content":"    public void undoTask(int taskIndex) {","lastModifiedDate":"2022-01-22"},{"lineNumber":120,"author":{"gitId":"sbhbenjamin"},"content":"        Task foundTask \u003d taskList.get(taskIndex - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"sbhbenjamin"},"content":"        foundTask.markUndone();","lastModifiedDate":"2022-01-22"},{"lineNumber":122,"author":{"gitId":"sbhbenjamin"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":123,"author":{"gitId":"sbhbenjamin"},"content":"            storage.updateTask(taskIndex - 1, false);","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"sbhbenjamin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"sbhbenjamin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":126,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":127,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":128,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":129,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":130,"author":{"gitId":"sbhbenjamin"},"content":"     * List all the tasks in the task list.","lastModifiedDate":"2022-01-22"},{"lineNumber":131,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":132,"author":{"gitId":"sbhbenjamin"},"content":"    public void listTasks() {","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"sbhbenjamin"},"content":"        for (int i \u003d 1; i \u003c taskList.size() + 1; i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":136,"author":{"gitId":"sbhbenjamin"},"content":"            System.out.printf(\"%d. %s%n\", i, taskList.get(i - 1));","lastModifiedDate":"2022-01-22"},{"lineNumber":137,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":138,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-22"},{"lineNumber":139,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":140,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":141,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":142,"author":{"gitId":"sbhbenjamin"},"content":"     * Deletes a task from the task list with the given index.","lastModifiedDate":"2022-01-22"},{"lineNumber":143,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":144,"author":{"gitId":"sbhbenjamin"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2022-01-22"},{"lineNumber":145,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"sbhbenjamin"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-01-22"},{"lineNumber":147,"author":{"gitId":"sbhbenjamin"},"content":"        Task foundTask \u003d taskList.get(index - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":148,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":149,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-22"},{"lineNumber":150,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":151,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(foundTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":152,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", taskList.size());","lastModifiedDate":"2022-01-22"},{"lineNumber":153,"author":{"gitId":"sbhbenjamin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-01-22"},{"lineNumber":154,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":155,"author":{"gitId":"sbhbenjamin"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":156,"author":{"gitId":"sbhbenjamin"},"content":"            storage.removeTask(index - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":157,"author":{"gitId":"sbhbenjamin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":158,"author":{"gitId":"sbhbenjamin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":159,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":160,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":161,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"sbhbenjamin":161}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":" * A todo task.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a new todo task from the description","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"     * @param description description of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"    public TodoTask(String description, boolean done) {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"        super(description, done);","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"        super(description);","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"     * @return the string representation of the todo task","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"todo borrow book","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"todo","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"blah","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"delete 1","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"sbhbenjamin":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"sbhbenjamin":1}}]
