{"authorDailyContributionsMap":{"zunedz":[{"date":"2022-01-18","commitResults":[{"hash":"03f27e1548f53cfde71ccc0f74f7dc63259325de","messageTitle":"implemented duke basic commands, greet, echo and exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":6}}},{"hash":"ada905e927c0920c822f1d989c825531cb1985a2","messageTitle":"removed indentation and finished level 2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":4}}},{"hash":"677e563a7574b0f5b013ec237053f3093b772e34","messageTitle":"refactor code and finished level 3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":32}}},{"hash":"c86ec32d83d4950e47f68f7f2a4263a816e5d991","messageTitle":"implemented event, deadline and todo","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":52,"deletions":10}}},{"hash":"0e98c9de70e318c8aa39d30d7dbcdbf402261e76","messageTitle":"added test cases to /text-ui-test/input.txt, passed","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"c30aff624bce632d9291a9ba2746dfc35880dae1","messageTitle":"implemented error handling, fixed previous bugs","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0}}},{"hash":"f19f336ba3a78056ca8a1918fb8bf460deea2dbc","messageTitle":"fixed bugs","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":30}}},{"hash":"8a429e2588874d6b8083c1dc2c2aa138d92cbf44","messageTitle":"added delete command, updated test cases","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":19,"deletions":5}}}]},{"date":"2022-01-21","commitResults":[{"hash":"e65b16cf14a5b5b209f82e43702a1722f39d06db","messageTitle":"fixed error message and refactor codes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":12}}},{"hash":"0ebfc50d4ec1d2a3eb4914acdd6a214c7382be84","messageTitle":"implemented persistent data each time Duke start, havent updated test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":118,"deletions":8}}},{"hash":"097711d221d4ac91dc92a319dac49caa09d43f1a","messageTitle":"implement date parsing (minimal)","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":14,"deletions":6}}},{"hash":"154fbd0a49609804f7b3cef309132b59bf582f5e","messageTitle":"modify previous changes to implement date parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"a18458a00ef9e561829517d3c3d99a61abc6becb","messageTitle":"include /data in .gitignore and removed unused import statement","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4},"java":{"insertions":0,"deletions":3}}},{"hash":"6eb5d85a87e758aaf89866ac4f111ff8f8a84b20","messageTitle":"refactor code, add separate database class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":66}}},{"hash":"fe02cef9c5f4f2c205c969790ba927ca5f79f146","messageTitle":"more code refactoring","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":9}}}]},{"date":"2022-01-24","commitResults":[{"hash":"fafaaf1d561a6a3a78b68174035bfea8c97e881e","messageTitle":"refactor code into Ui, Storage, TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":50}}},{"hash":"dc4802a614b2a133d95aebd2d894e543f542de2a","messageTitle":"refactor code, add Parser","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}},{"hash":"abf8cf9e63cd1c90bc245989304dda2628add3e0","messageTitle":"refactor code, add Parser","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":32}}},{"hash":"47cbc583d9f3bdc8198a6535aa5b1462d633bd83","messageTitle":"put all classes in the respective packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":5}}},{"hash":"58e0aae57e3011a944884efb314c3fea38e4a8e4","messageTitle":"add 5 JUnit tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":0}}},{"hash":"33bcf9c0ee4ed50abe116fad6fcc474601b20bd0","messageTitle":"added javadoc for \u003e half of the public methods","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":114,"deletions":1}}},{"hash":"c0a7b4e2ba789734cc2892bddc703d2050bcd311","messageTitle":"tweak the code to comply the coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":50}}},{"hash":"e48007c54baabc7d5907fae6d69e8b1a7860c4d1","messageTitle":"implement feature for user to find for a keyword","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}}]},{"date":"2022-02-01","commitResults":[{"hash":"95e50f7dd15c606c57efc4a94f3781835b95f3d6","messageTitle":"change some methods\u0027 name to be more intuitive","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":12}}},{"hash":"4edccb70267dd22d69ff3a43a91e081705740ea9","messageTitle":"remove /data folder","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}},{"hash":"c130bc321b79393650588a6f2815e941b0d54497","messageTitle":"remove META-INF and added gradle support","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}}]},{"date":"2022-02-02","commitResults":[{"hash":"b6bb6334264168225d973baf7b8e8b3ef7fec6e0","messageTitle":"implement GUI for the chat bot using JavaFX","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":174,"deletions":0}}}]},{"date":"2022-02-11","commitResults":[{"hash":"a1518568da3a3ca38336bb345a7f23a4e67b0bf0","messageTitle":"Parser\u0027s parseCommand method: uses nested if-else","messageBody":"Nested if-else statement does not follow good coding\nquality (arrowhead style).\n\nLet\u0027s change the if-else statement with switch\nstatement instead\n\nUsing switch statement is preferable as the code\nwill look way cleaner compared to nested if-else\nstatement (good code quality)\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":30}}},{"hash":"ee06b070b224c4b268be19aca110fd03c94ace26","messageTitle":"Parser\u0027s parse method: interact with tasklist","messageBody":"Parser class should only do its job, that is parsing\nthe input without having any access to tasks.\n\nLet\u0027s decouple this part of the Parser class by\ncreating a new abstract class called Command.\n\nBy creating a new abstract class with the only job\nis to interact with taskList, now Parser\u0027s class\nonly have to deal with parsing inputs, adhering\nsingle responsibility principle.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":46}}},{"hash":"50f6c2a1a0689d589eb29273f102c4e6d8a0e97b","messageTitle":"remove unnecessary function argument","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"087cfbd3922f1a379f3754c8a7878f6e7bba3373","messageTitle":"change build.gradle mainClassName","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"2ff0588bc07014fe54fc8bb9d90aedddb3680365","messageTitle":"Use assertions to document important assumptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":9}}},{"hash":"9ce43f736acfd2ce5c9575cd01bb4131b5e01124","messageTitle":"Improve code quality, remove arrow-head shaped methods, change function names","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":16}}},{"hash":"726d312839edca4a5def22e1f62c45720133c23f","messageTitle":"implement undo command for add and delete, todo: mark and unmark","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":17}}},{"hash":"d78c0834285ab2a01ef516fe5b277a99862178a0","messageTitle":"Code refactor, improve code quality and implement undo for mark and unmark commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":30}}}]}]},"authorFileTypeContributionMap":{"zunedz":{"java":1073,"md":0,"fxml":35,"sh":0,"bat":0,"gradle":18,"txt":17}},"authorContributionVariance":{"zunedz":28229.898},"authorDisplayNameMap":{"zunedz":"CS2103T-W09-2 DAFF..DILA"}}
