[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"# Sana project template","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"3. After that, locate the `src/main/java/Sana.java` file, right-click it, and choose `Run Sana.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cyolune":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":"     * The deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":"    private String deadlineTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"     * Constructor for Deadline objects","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"     * @param deadlineName  the deadline name","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"    public Deadline(String deadlineName, String deadlineTime) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"        super(deadlineName);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"     * Returns a String representation of the Deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"     * @return  Deadline in String","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"        String box1 \u003d \"[D]\";","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"        String doneness;","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"        if (super.getDone()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"            doneness \u003d \"[X] \";","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Cyolune"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Cyolune"},"content":"            doneness \u003d \"[ ] \";","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"        String deadlineName \u003d super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"        String time \u003d \" (by: \" + deadlineTime + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"        return box1 + doneness + deadlineName + time;","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Cyolune":35}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":"     * The time of this event","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":"    private String eventTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"     * Constructor for Event objects","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"     * @param eventName  the event name","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"    public Event(String eventName, String time) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"        super(eventName);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"        this.eventTime \u003d time;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"     * Returns a String representation of the Event","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"     * @return  Event in String","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"        String box1 \u003d \"[E]\";","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"        String doneness;","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"        if (super.getDone()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"            doneness \u003d \"[X] \";","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Cyolune"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Cyolune"},"content":"            doneness \u003d \"[ ] \";","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"        String eventName \u003d super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"        String time \u003d \" (at: \" + eventTime + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"        return box1 + doneness + eventName + time;","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Cyolune":35}},{"path":"src/main/java/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":" * This class represents the exception thrown when the command give to Sana is incomplete","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":" * @author Jan","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":" * @version 1.0","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"public class IncompleteCommandException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"     * The message Sana says when the message is incomplete","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"    private static String message \u003d \"MATE, finish your sentence!\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"    public IncompleteCommandException() {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"        super(IncompleteCommandException.message);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"        return IncompleteCommandException.message;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Cyolune":20}},{"path":"src/main/java/OutOfBoundsTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":" * This class represents the exception thrown when the mark index provided to Sana is out of bounds","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":" * @author Jan","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":" * @version 1.0","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"public class OutOfBoundsTaskException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"     * The message Sana says when encountering this exception","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"    private static String message \u003d \"Heyyy, I can\u0027t find this task..\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"    public OutOfBoundsTaskException() {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"        super(OutOfBoundsTaskException.message);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"        return OutOfBoundsTaskException.message;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Cyolune":20}},{"path":"src/main/java/Sana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"import java.util.*; // Import java utils","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":" * Sana is a BIG program!","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":" * @author  Jan Alfenson Tan","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":" * @version 1.2","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"public class Sana {","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"    // The border for Sana\u0027s replies","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"    private static final String border \u003d \"_____________________________________________\";","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"     * userCommands stores the commands given to Sana from the user","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"    private LinkedList\u003cTask\u003e userTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"     * Constructor for the Sana class","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"    public Sana() {","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"        this.userTasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"     * This method prints to system IO Sana\u0027s greeting","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"Cyolune"},"content":"    public void greet() {","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"Cyolune"},"content":"        border();","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"Cyolune"},"content":"        System.out.println(\"Hi! I\u0027m BEEEEEEEG\\nWhats up?\");","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"        border();","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"Cyolune"},"content":"     * This method takes in the user\u0027s command and calls the respective Sana commands","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"Cyolune"},"content":"     * @param userCommand   the user command","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"Cyolune"},"content":"    public void commandParser(String userCommand) {","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"Cyolune"},"content":"        border();","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"Cyolune"},"content":"        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Cyolune"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"Cyolune"},"content":"                bye();","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"Cyolune"},"content":"            } else if (userCommand.equals(\"list\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"Cyolune"},"content":"                list();","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"Cyolune"},"content":"            } else if (userCommand.startsWith(\"mark\") || userCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Cyolune"},"content":"                String[] substringArr \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Cyolune"},"content":"                if (substringArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Cyolune"},"content":"                    throw new IncompleteCommandException();","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Cyolune"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Cyolune"},"content":"                int taskIndex \u003d Integer.parseInt(substringArr[1]) - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Cyolune"},"content":"                mark(taskIndex, userCommand.startsWith(\"mark\"));","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Cyolune"},"content":"            } else if (userCommand.startsWith(\"todo \")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Cyolune"},"content":"                String taskName \u003d userCommand.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Cyolune"},"content":"                addToDo(taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Cyolune"},"content":"            } else if (userCommand.startsWith(\"event \")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Cyolune"},"content":"                String temp \u003d userCommand.replaceFirst(\"event \", \"\");","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Cyolune"},"content":"                if (!temp.contains(\" /at \")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Cyolune"},"content":"                    throw new IncompleteCommandException();","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Cyolune"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Cyolune"},"content":"                String[] subStrings \u003d temp.split(\" /at \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Cyolune"},"content":"                addEvent(subStrings[0], subStrings[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Cyolune"},"content":"            } else if (userCommand.startsWith(\"deadline \")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"Cyolune"},"content":"                String temp \u003d userCommand.replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"Cyolune"},"content":"                if (!temp.contains(\" /by \")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Cyolune"},"content":"                    throw new IncompleteCommandException();","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Cyolune"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Cyolune"},"content":"                String[] subStrings \u003d temp.split(\" /by \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"Cyolune"},"content":"                addDeadline(subStrings[0], subStrings[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Cyolune"},"content":"            } else if (userCommand.startsWith(\"delete \")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"Cyolune"},"content":"                String[] substringArr \u003d userCommand.split(\" \", 2);","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Cyolune"},"content":"                if (substringArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"Cyolune"},"content":"                    throw new IncompleteCommandException();","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"Cyolune"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Cyolune"},"content":"                int taskIndex \u003d Integer.parseInt(substringArr[1]) - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"Cyolune"},"content":"                delete(taskIndex);","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Cyolune"},"content":"            } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":78,"author":{"gitId":"Cyolune"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"Cyolune"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"Cyolune"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Cyolune"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"Cyolune"},"content":"        } catch (IncompleteCommandException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"Cyolune"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"Cyolune"},"content":"        } catch (OutOfBoundsTaskException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"Cyolune"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":87,"author":{"gitId":"Cyolune"},"content":"        border();","lastModifiedDate":"2022-01-17"},{"lineNumber":88,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":89,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":90,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"Cyolune"},"content":"     * This method removes a task from the userTasks list","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"Cyolune"},"content":"     * @param taskIndex The index of the tast to be removed","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"Cyolune"},"content":"    private void delete(int taskIndex) throws OutOfBoundsTaskException {","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"Cyolune"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d userTasks.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"Cyolune"},"content":"            throw new OutOfBoundsTaskException();","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"Cyolune"},"content":"        System.out.println(\"Yay! I\u0027ll take this out!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"Cyolune"},"content":"        System.out.println(userTasks.get(taskIndex));","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"Cyolune"},"content":"        userTasks.remove(taskIndex);","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"Cyolune"},"content":"        taskNumberText();","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"Cyolune"},"content":"     * This method adds a Deadline to userTasks","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"Cyolune"},"content":"     * @param deadlineName  name of the deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"Cyolune"},"content":"     * @param deadlineTime  time of the deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"Cyolune"},"content":"    private void addDeadline(String deadlineName, String deadlineTime) throws IncompleteCommandException {","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"Cyolune"},"content":"        if (deadlineName.isBlank() || deadlineTime.isBlank()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"Cyolune"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"Cyolune"},"content":"        addTaskText();","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"Cyolune"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineName, deadlineTime);","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"Cyolune"},"content":"        userTasks.add(newDeadline);","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"Cyolune"},"content":"        System.out.println(newDeadline);","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"Cyolune"},"content":"        taskNumberText();","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"Cyolune"},"content":"     * This method adds an Event to userTasks","lastModifiedDate":"2022-01-18"},{"lineNumber":124,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"Cyolune"},"content":"     * @param eventName name of the event","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"Cyolune"},"content":"     * @param eventTime time of the event","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"Cyolune"},"content":"    private void addEvent(String eventName, String eventTime) throws IncompleteCommandException {","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"Cyolune"},"content":"        if (eventName.isBlank() || eventTime.isBlank()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"Cyolune"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-01-18"},{"lineNumber":131,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"Cyolune"},"content":"        addTaskText();","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"Cyolune"},"content":"        Event newEvent \u003d new Event(eventName, eventTime);","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"Cyolune"},"content":"        userTasks.add(newEvent);","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"Cyolune"},"content":"        System.out.println(newEvent);","lastModifiedDate":"2022-01-18"},{"lineNumber":136,"author":{"gitId":"Cyolune"},"content":"        taskNumberText();","lastModifiedDate":"2022-01-18"},{"lineNumber":137,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":138,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":140,"author":{"gitId":"Cyolune"},"content":"     * This method adds a ToDo to userTasks","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"Cyolune"},"content":"     * @param taskName  the name of the todo","lastModifiedDate":"2022-01-18"},{"lineNumber":143,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":144,"author":{"gitId":"Cyolune"},"content":"    private void addToDo(String taskName) throws IncompleteCommandException {","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"Cyolune"},"content":"        if (taskName.isBlank()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":146,"author":{"gitId":"Cyolune"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-01-18"},{"lineNumber":147,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"Cyolune"},"content":"        addTaskText();","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"Cyolune"},"content":"        ToDo newTodo \u003d new ToDo(taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"Cyolune"},"content":"        userTasks.add(newTodo);","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"Cyolune"},"content":"        System.out.println(newTodo);","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"Cyolune"},"content":"        taskNumberText();","lastModifiedDate":"2022-01-18"},{"lineNumber":153,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":156,"author":{"gitId":"Cyolune"},"content":"     * This method marks the task located at the index as done or not done","lastModifiedDate":"2022-01-17"},{"lineNumber":157,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":158,"author":{"gitId":"Cyolune"},"content":"     * @param taskIndex     the index of the task to be marked done","lastModifiedDate":"2022-01-17"},{"lineNumber":159,"author":{"gitId":"Cyolune"},"content":"     * @param completion    the completion of the task","lastModifiedDate":"2022-01-17"},{"lineNumber":160,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":161,"author":{"gitId":"Cyolune"},"content":"    private void mark(int taskIndex, boolean completion) throws OutOfBoundsTaskException {","lastModifiedDate":"2022-01-18"},{"lineNumber":162,"author":{"gitId":"Cyolune"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d userTasks.size()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":163,"author":{"gitId":"Cyolune"},"content":"            throw new OutOfBoundsTaskException();","lastModifiedDate":"2022-01-18"},{"lineNumber":164,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":165,"author":{"gitId":"Cyolune"},"content":"        userTasks.get(taskIndex).setDone(completion);","lastModifiedDate":"2022-01-18"},{"lineNumber":166,"author":{"gitId":"Cyolune"},"content":"        if (completion) {","lastModifiedDate":"2022-01-17"},{"lineNumber":167,"author":{"gitId":"Cyolune"},"content":"            System.out.println(\"You\u0027ve done it! Well done!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":168,"author":{"gitId":"Cyolune"},"content":"        } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":169,"author":{"gitId":"Cyolune"},"content":"            System.out.println(\"Oopsies! I\u0027ll change it back!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":170,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":171,"author":{"gitId":"Cyolune"},"content":"        System.out.println(userTasks.get(taskIndex));","lastModifiedDate":"2022-01-18"},{"lineNumber":172,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":173,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":174,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":175,"author":{"gitId":"Cyolune"},"content":"     * This method lists the history of user inputs to Sana","lastModifiedDate":"2022-01-17"},{"lineNumber":176,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":177,"author":{"gitId":"Cyolune"},"content":"    private void list() {","lastModifiedDate":"2022-01-17"},{"lineNumber":178,"author":{"gitId":"Cyolune"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-01-17"},{"lineNumber":179,"author":{"gitId":"Cyolune"},"content":"        System.out.println(\"Here\u0027s your tasks!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"Cyolune"},"content":"        for (Task task : userTasks) {","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"Cyolune"},"content":"            String header \u003d Integer.valueOf(index).toString() + \".\";","lastModifiedDate":"2022-01-18"},{"lineNumber":182,"author":{"gitId":"Cyolune"},"content":"            System.out.println(header + task);","lastModifiedDate":"2022-01-18"},{"lineNumber":183,"author":{"gitId":"Cyolune"},"content":"            index++;","lastModifiedDate":"2022-01-17"},{"lineNumber":184,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":185,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":186,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":187,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":188,"author":{"gitId":"Cyolune"},"content":"     * This method prints to system IO how many tasks in user tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":189,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":190,"author":{"gitId":"Cyolune"},"content":"    private void taskNumberText() {","lastModifiedDate":"2022-01-18"},{"lineNumber":191,"author":{"gitId":"Cyolune"},"content":"        String taskAmt \u003d Integer.valueOf(userTasks.size()).toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":192,"author":{"gitId":"Cyolune"},"content":"        System.out.println(\"You have \" + taskAmt + \" things here. Time to get working!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":193,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":194,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":195,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":196,"author":{"gitId":"Cyolune"},"content":"     * This method prints to system IO Sana\u0027s add task text","lastModifiedDate":"2022-01-18"},{"lineNumber":197,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":198,"author":{"gitId":"Cyolune"},"content":"    private void addTaskText() {","lastModifiedDate":"2022-01-18"},{"lineNumber":199,"author":{"gitId":"Cyolune"},"content":"        System.out.println(\"I\u0027ve added your task!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":200,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":201,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":202,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":203,"author":{"gitId":"Cyolune"},"content":"     * This method prints to system IO Sana\u0027s bye","lastModifiedDate":"2022-01-17"},{"lineNumber":204,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":205,"author":{"gitId":"Cyolune"},"content":"    private void bye() {","lastModifiedDate":"2022-01-17"},{"lineNumber":206,"author":{"gitId":"Cyolune"},"content":"        System.out.println(\"See you next time!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":207,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":208,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":209,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":210,"author":{"gitId":"Cyolune"},"content":"     * This method prints the border","lastModifiedDate":"2022-01-17"},{"lineNumber":211,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":212,"author":{"gitId":"Cyolune"},"content":"    private void border() {","lastModifiedDate":"2022-01-17"},{"lineNumber":213,"author":{"gitId":"Cyolune"},"content":"        System.out.println(border);","lastModifiedDate":"2022-01-17"},{"lineNumber":214,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":215,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":216,"author":{"gitId":"Cyolune"},"content":"    /** Obsolete","lastModifiedDate":"2022-01-18"},{"lineNumber":217,"author":{"gitId":"Cyolune"},"content":"     * Adds given task to the list of tasks given to Sana.","lastModifiedDate":"2022-01-18"},{"lineNumber":218,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":219,"author":{"gitId":"Cyolune"},"content":"     * @param taskName  name of task","lastModifiedDate":"2022-01-18"},{"lineNumber":220,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":221,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":222,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":223,"author":{"gitId":"Cyolune"},"content":"     private void addTask(String taskName) {","lastModifiedDate":"2022-01-18"},{"lineNumber":224,"author":{"gitId":"Cyolune"},"content":"     userTasks.add(new Task(taskName));","lastModifiedDate":"2022-01-18"},{"lineNumber":225,"author":{"gitId":"Cyolune"},"content":"     System.out.println(\"added: \" + taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":226,"author":{"gitId":"Cyolune"},"content":"     }","lastModifiedDate":"2022-01-18"},{"lineNumber":227,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":228,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":229,"author":{"gitId":"Cyolune"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-17"},{"lineNumber":230,"author":{"gitId":"Cyolune"},"content":"        Sana sana \u003d new Sana();","lastModifiedDate":"2022-01-17"},{"lineNumber":231,"author":{"gitId":"Cyolune"},"content":"        sana.greet();","lastModifiedDate":"2022-01-17"},{"lineNumber":232,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":233,"author":{"gitId":"Cyolune"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":234,"author":{"gitId":"Cyolune"},"content":"        while (true) {","lastModifiedDate":"2022-01-17"},{"lineNumber":235,"author":{"gitId":"Cyolune"},"content":"            String input \u003d userInput.nextLine();","lastModifiedDate":"2022-01-17"},{"lineNumber":236,"author":{"gitId":"Cyolune"},"content":"            sana.commandParser(input);","lastModifiedDate":"2022-01-17"},{"lineNumber":237,"author":{"gitId":"Cyolune"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":238,"author":{"gitId":"Cyolune"},"content":"                break;","lastModifiedDate":"2022-01-17"},{"lineNumber":239,"author":{"gitId":"Cyolune"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":240,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Cyolune":240,"-":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":" * This class represents the tasks Sana will remember","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":" * @author  Jan Alfenson Tan","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":" * @version 1.0","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"public class Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"     * true when task is done, false otherwise","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"    private boolean done;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"     * name of the task","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"    private String taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"     * Constructor for the task object","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"     * @param taskName  name of the task","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"Cyolune"},"content":"     * Returns the task name","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"     * @return taskName","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"Cyolune"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Cyolune"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Cyolune"},"content":"        return taskName;","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"Cyolune"},"content":"     * Returns whether the task is done","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"Cyolune"},"content":"     * @return  done","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"Cyolune"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"Cyolune"},"content":"        return done;","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"Cyolune"},"content":"     * Sets the task to done or not","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"Cyolune"},"content":"     * @param done  sets the task\u0027s completion","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"Cyolune"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"Cyolune"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Cyolune":55}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":" * This class represents the ToDo tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":" * @author  Jan Alfenson Tan","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":" * @version 1.0","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"     * Constructor for ToDo objects","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"     * @param taskName  the task name","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"        super(taskName);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"     * Returns a String representation of the ToDo","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"     * @return  ToDo in String","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"        String box1 \u003d \"[T]\";","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"        String doneness;","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"        if (super.getDone()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"            doneness \u003d \"[X] \";","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Cyolune"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Cyolune"},"content":"            doneness \u003d \"[ ] \";","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"        return box1 + doneness + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Cyolune":33}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":" * This class represents the exception thrown by Sana when she receives","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":" * an unknown command","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":" *","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":" * @author Jan","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":" * @version 1.0","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"     * The message Sana says when she receives an unknown command","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"    private static String message \u003d \"Oy! I don\u0027t know what you\u0027re saying!\";","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"        super(UnknownCommandException.message);","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"     * The message Sana says when she receives an unknown command","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"     * @return  message","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"        return UnknownCommandException.message;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Cyolune":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":"deadline return book /by 1st Feb","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":"event meeting /at 20th Jan 2-4pm","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"unmark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"unmark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Cyolune":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"java -classpath ..\\bin Sana \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Cyolune":1,"-":20}}]
