[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"public enum Command {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"\ttodo,","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"\tdeadline,","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"\tevent,","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"\tdelete,","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"\tmark,","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"\tunmark,","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"\tbye,","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"\tlist;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"fredtwt":10}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"\tprotected String date;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"\tpublic Deadline(String description, String date) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"\t\tsuper(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"\t\tthis.date \u003d date;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"\t@Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"\tpublic String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"\t\treturn \"[D]\" + super.toString() + \" (finish by: \" + this.date + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"fredtwt":13}},{"path":"src/main/java/Dingus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"import java.util.List;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"public class Dingus {","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"\tpublic static String startLine \u003d \"\\n--------------------------------------------------------------------\";","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"\tpublic static String endLine \u003d \"--------------------------------------------------------------------\\n\";","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"\tpublic static String greeting \u003d \"\\nDingus:\tOh it\u0027s you again...\\nDingus:\tWhat kind of trouble would you inconvenience me with this time?\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"\tpublic static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"\tpublic static void main(String[] args) {","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"\t\tScanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"\t\t// Greet","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"\t\tSystem.out.println(startLine + greeting + endLine);","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"\t\twhile (sc.hasNext()) {","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"\t\t\tString input \u003d sc.nextLine().toLowerCase();","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"\t\t\ttry {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tresponse(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"\t\t\t} catch (DingusException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tSystem.out.println(startLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tSystem.out.println(\"\u003cERROR\u003e \" + e);","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tSystem.out.println(endLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"\t\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"\t\t\tif (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"fredtwt"},"content":"\t\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"fredtwt"},"content":"\t\tsc.close();","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"fredtwt"},"content":"\tpublic static void response(String input) throws DingusException {","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"fredtwt"},"content":"\t\tString[] words \u003d input.split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"fredtwt"},"content":"\t\tCommand command;","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"fredtwt"},"content":"\t\ttry {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"fredtwt"},"content":"\t\t\tcommand \u003d Command.valueOf(words[0].toLowerCase());","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"fredtwt"},"content":"\t\t} catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"What kind of command is that?? I don\u0027t understand!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"fredtwt"},"content":"\t\tswitch (command) {","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"fredtwt"},"content":"\t\t\tcase bye:","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tSystem.out.println(startLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tSystem.out.println(\"DINGUS:\tPlease don\u0027t ever bother me again, bye\");","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tSystem.out.println(endLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"fredtwt"},"content":"\t\t\tcase list:","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t// Output List","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tString output \u003d startLine + \"\\nHere are the tasks in your list:\";","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t\tint numbering \u003d i + 1;","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t\toutput +\u003d \"\\n\" + numbering + \". \" + tasks.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t}","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"fredtwt"},"content":"\t\t\t\toutput +\u003d \"\\n\" + endLine;","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tSystem.out.println(output);","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"fredtwt"},"content":"\t\t\tcase todo:","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"fredtwt"},"content":"\t\t\t\ttodo(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"fredtwt"},"content":"\t\t\tcase deadline:","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tdeadline(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"fredtwt"},"content":"\t\t\tcase event:","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tevent(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"fredtwt"},"content":"\t\t\tcase delete:","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tdelete(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"fredtwt"},"content":"\t\t\tcase mark:","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tmark(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"fredtwt"},"content":"\t\t\tcase unmark:","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tunmark(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"fredtwt"},"content":"\tpublic static void deadline(String input) throws DingusException {","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"fredtwt"},"content":"\t\t// Adding Deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"fredtwt"},"content":"\t\tString[] deadline \u003d input.split(\"/\");","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"fredtwt"},"content":"\t\tString description \u003d deadline[0].substring(8);","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"fredtwt"},"content":"\t\tif (description.isEmpty()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Is it even possible to have a deadline for NOTHING?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"fredtwt"},"content":"\t\t} else if (deadline.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Is it even possible to have a deadline with no END DATE?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"fredtwt"},"content":"\t\t} else {","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"fredtwt"},"content":"\t\t\tTask currTask \u003d new Deadline(description, deadline[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"fredtwt"},"content":"\t\t\ttasks.add(currTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(startLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(\"Stop troubling me, I\u0027ve alread added this task:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(currTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println((tasks.size() \u003e 1) ? \"Can you even finish \" + tasks.size() + \" tasks?\"","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t\t: \"Can you even finish \" + tasks.size() + \" task?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(endLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"fredtwt"},"content":"\tpublic static void todo(String input) throws DingusException {","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"fredtwt"},"content":"\t\t// Adding Todo","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"fredtwt"},"content":"\t\tString currTask \u003d input.substring(4);","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"fredtwt"},"content":"\t\tTask curr \u003d new Todo(currTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"fredtwt"},"content":"\t\tif (currTask.isEmpty()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"So doing NOTHING is a task?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"fredtwt"},"content":"\t\t} else {","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"fredtwt"},"content":"\t\t\ttasks.add(curr);","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"fredtwt"},"content":"\t\tSystem.out.println(startLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"fredtwt"},"content":"\t\tSystem.out.println(\"Stop troubling me, I\u0027ve already added this task:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"fredtwt"},"content":"\t\tSystem.out.println(curr);","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"fredtwt"},"content":"\t\tSystem.out.println((tasks.size() \u003e 1) ? \"Can you even finish \" + tasks.size() + \" tasks?\"","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t: \"Can you even finish \" + tasks.size() + \" task?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"fredtwt"},"content":"\t\tSystem.out.println(endLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"fredtwt"},"content":"\tpublic static void event(String input) throws DingusException {","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"fredtwt"},"content":"\t\t// Adding Event","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"fredtwt"},"content":"\t\tString[] event \u003d input.split(\"/\");","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"fredtwt"},"content":"\t\tString description \u003d event[0].substring(5);","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"fredtwt"},"content":"\t\tif (description.isEmpty()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Is it even possible to have an event for NOTHING?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":124,"author":{"gitId":"fredtwt"},"content":"\t\t} else if (event.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Is it even possible to have an event with no DATE?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"fredtwt"},"content":"\t\t} else {","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"fredtwt"},"content":"\t\t\tTask currTask \u003d new Deadline(description, event[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"fredtwt"},"content":"\t\t\ttasks.add(currTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(startLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(\"Stop troubling me, I\u0027ve already added this task:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(currTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println((tasks.size() \u003e 1) ? \"Can you even finish \" + tasks.size() + \" tasks?\"","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t\t: \"Can you even finish \" + tasks.size() + \" task?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(endLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-17"},{"lineNumber":136,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-17"},{"lineNumber":137,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":138,"author":{"gitId":"fredtwt"},"content":"\tpublic static void delete(String input) throws DingusException {","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"fredtwt"},"content":"\t\tString[] info \u003d input.split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":140,"author":{"gitId":"fredtwt"},"content":"\t\tif (info.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"How am I suppose to delete something without knowing which task?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":143,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":144,"author":{"gitId":"fredtwt"},"content":"\t\ttry {","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"fredtwt"},"content":"\t\t\tInteger.parseInt(info[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":146,"author":{"gitId":"fredtwt"},"content":"\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":147,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Are you incapable of understanding what\u0027s an integer?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"fredtwt"},"content":"\t\tif (Integer.parseInt(info[1]) \u003e tasks.size() || Integer.parseInt(info[1]) \u003c 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Can\u0027t you count? How am I supposed to delete something that doesn\u0027t exist?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"fredtwt"},"content":"\t\t} else {","lastModifiedDate":"2022-01-18"},{"lineNumber":153,"author":{"gitId":"fredtwt"},"content":"\t\t\tint pos \u003d Integer.parseInt(info[1]) - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(startLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(\"I\u0027ve already deleted for you! You\u0027re welcome.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(tasks.get(pos));","lastModifiedDate":"2022-01-18"},{"lineNumber":157,"author":{"gitId":"fredtwt"},"content":"\t\t\ttasks.remove(pos);","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println((tasks.size() \u003e 1) ? \"You have \" + tasks.size() + \" tasks left!\"","lastModifiedDate":"2022-01-18"},{"lineNumber":159,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t\t: \"You have \" + tasks.size() + \" task left!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":160,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(endLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":161,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":162,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":163,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":164,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":165,"author":{"gitId":"fredtwt"},"content":"\tpublic static void mark(String input) throws DingusException {","lastModifiedDate":"2022-01-18"},{"lineNumber":166,"author":{"gitId":"fredtwt"},"content":"\t\tString[] info \u003d input.split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":167,"author":{"gitId":"fredtwt"},"content":"\t\tif (info.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":168,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"How am I suppose to mark something without knowing which task?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":169,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":170,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":171,"author":{"gitId":"fredtwt"},"content":"\t\ttry {","lastModifiedDate":"2022-01-18"},{"lineNumber":172,"author":{"gitId":"fredtwt"},"content":"\t\t\tInteger.parseInt(info[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":173,"author":{"gitId":"fredtwt"},"content":"\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":174,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Are you incapable of understanding what\u0027s an integer?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":175,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":176,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":177,"author":{"gitId":"fredtwt"},"content":"\t\tif (Integer.parseInt(info[1]) \u003e tasks.size() || Integer.parseInt(info[1]) \u003c 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":178,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Can\u0027t you count? How am I supposed to mark something that doesn\u0027t exist?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":179,"author":{"gitId":"fredtwt"},"content":"\t\t} else {","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"fredtwt"},"content":"\t\t\tint pos \u003d Integer.parseInt(info[1]) - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"fredtwt"},"content":"\t\t\tif (tasks.get(pos).isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":182,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tthrow new DingusException(\"Your task has been marked before...\");","lastModifiedDate":"2022-01-18"},{"lineNumber":183,"author":{"gitId":"fredtwt"},"content":"\t\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":184,"author":{"gitId":"fredtwt"},"content":"\t\t\ttasks.get(pos).mark();","lastModifiedDate":"2022-01-18"},{"lineNumber":185,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(startLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":186,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(\"Wasn\u0027t expecting you to finish that task, already marked for you!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":187,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(tasks.get(pos));","lastModifiedDate":"2022-01-18"},{"lineNumber":188,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println((tasks.size() \u003e 1) ? \"You have \" + tasks.size() + \" tasks left!\"","lastModifiedDate":"2022-01-18"},{"lineNumber":189,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t\t: \"You have \" + tasks.size() + \" task left!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":190,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(endLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":191,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":192,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":193,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":194,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":195,"author":{"gitId":"fredtwt"},"content":"\tpublic static void unmark(String input) throws DingusException {","lastModifiedDate":"2022-01-18"},{"lineNumber":196,"author":{"gitId":"fredtwt"},"content":"\t\tString[] info \u003d input.split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":197,"author":{"gitId":"fredtwt"},"content":"\t\tif (info.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":198,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"How am I suppose to unmark something without knowing which task?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":199,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":200,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":201,"author":{"gitId":"fredtwt"},"content":"\t\ttry {","lastModifiedDate":"2022-01-18"},{"lineNumber":202,"author":{"gitId":"fredtwt"},"content":"\t\t\tInteger.parseInt(info[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":203,"author":{"gitId":"fredtwt"},"content":"\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":204,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Are you incapable of understanding what\u0027s an integer?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":205,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":206,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":207,"author":{"gitId":"fredtwt"},"content":"\t\tif (Integer.parseInt(info[1]) \u003e tasks.size() || Integer.parseInt(info[1]) \u003c 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":208,"author":{"gitId":"fredtwt"},"content":"\t\t\tthrow new DingusException(\"Can\u0027t you count? How am I supposed to unmark something that doesn\u0027t exist?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":209,"author":{"gitId":"fredtwt"},"content":"\t\t} else {","lastModifiedDate":"2022-01-18"},{"lineNumber":210,"author":{"gitId":"fredtwt"},"content":"\t\t\tint pos \u003d Integer.parseInt(info[1]) - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":211,"author":{"gitId":"fredtwt"},"content":"\t\t\tif (!tasks.get(pos).isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":212,"author":{"gitId":"fredtwt"},"content":"\t\t\t\tthrow new DingusException(\"Your task is already unmarked, why unmark it again...\");","lastModifiedDate":"2022-01-18"},{"lineNumber":213,"author":{"gitId":"fredtwt"},"content":"\t\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":214,"author":{"gitId":"fredtwt"},"content":"\t\t\ttasks.get(pos).unmark();","lastModifiedDate":"2022-01-18"},{"lineNumber":215,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(startLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":216,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(\"Knew that you didnt\u0027t finish that task, already unmarked it for you!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":217,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(tasks.get(pos));","lastModifiedDate":"2022-01-18"},{"lineNumber":218,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println((tasks.size() \u003e 1) ? \"You have \" + tasks.size() + \" tasks left!\"","lastModifiedDate":"2022-01-18"},{"lineNumber":219,"author":{"gitId":"fredtwt"},"content":"\t\t\t\t\t: \"You have \" + tasks.size() + \" task left!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":220,"author":{"gitId":"fredtwt"},"content":"\t\t\tSystem.out.println(endLine);","lastModifiedDate":"2022-01-18"},{"lineNumber":221,"author":{"gitId":"fredtwt"},"content":"\t\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":222,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":223,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":224,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"fredtwt":224}},{"path":"src/main/java/DingusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"public class DingusException extends IllegalArgumentException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"\tprivate String message;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"\tpublic DingusException(String s) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"\t\tsuper(s);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"\t\tthis.message \u003d s;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"\t@Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"\tpublic String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"\t\treturn this.message;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"fredtwt":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"\tprotected String details;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"\tpublic Event(String description, String details) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"\t\tsuper(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"\t\tthis.details \u003d details;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"\t@Override","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"\tpublic String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"\t\treturn \"[E]\" + super.toString() + \" (at: \" + this.details + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"fredtwt":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"\tprotected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"\tprotected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"\tpublic Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"\t\tthis.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"\tpublic String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"\t\treturn isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"\tpublic void mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"\t\tthis.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"\tpublic void unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"\t@Override","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"\tpublic String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"\t\treturn \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"fredtwt":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"\tpublic Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"\t\tsuper(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"\t@Override","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"\tpublic String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"\t}","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"fredtwt":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fredtwt"},"content":"todo","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"fredtwt"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"fredtwt"},"content":"deadline","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"fredtwt"},"content":"deadline return book","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"fredtwt"},"content":"deadline return book/sunday","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"fredtwt"},"content":"event","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"fredtwt"},"content":"event zoo trip","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"fredtwt"},"content":"event zoo trip/mon 12-4pm","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"fredtwt"},"content":"todo read book","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"todo return book","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"fredtwt"},"content":"mark ","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"fredtwt"},"content":"mark a","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"fredtwt"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"fredtwt"},"content":"mark 4","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"fredtwt"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"fredtwt"},"content":"unmark ","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"fredtwt"},"content":"unmark ball","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"unmark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"fredtwt"},"content":"unmark 4","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"fredtwt"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"fredtwt"},"content":"mark 4","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"fredtwt"},"content":"mark 4","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"fredtwt"},"content":"mark 5","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"fredtwt"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"fredtwt"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"fredtwt"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"fredtwt"},"content":"potato","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"fredtwt"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"fredtwt":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"fredtwt"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Dingus.java","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"fredtwt"},"content":"java -classpath ..\\bin Dingus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"fredtwt":2,"-":19}}]
