[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String splitter \u003d \"______________________________________\";","lastModifiedDate":"2022-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String indentationBase \u003d \"\\t\";","lastModifiedDate":"2022-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        String indentationText \u003d \"\\t  \";","lastModifiedDate":"2022-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        String indentationTaskStatus \u003d \"\\t    \";","lastModifiedDate":"2022-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        boolean firstUserChat \u003d true;","lastModifiedDate":"2022-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String logo \u003d   indentationText +","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                        \"    _                  _     \\n\" + indentationText +","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                        \"   |_|                |_|    \\n\" + indentationText +","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                        \"    _  __ _ _ ____   ___ ___ \\n\" + indentationText +","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                        \"   | |/ _` | \u0027__\\\\ \\\\ / / / __|\\n\" + indentationText +","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                        \"   | | (_| | |   \\\\ V /| \\\\__ \\\\\\n\" + indentationText +","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                        \"   | |\\\\__,_|_|    \\\\_/ |_|___/\\n\" + indentationText +","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                        \"  _/ |                       \\n\" + indentationText +","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                        \" |__/                        \\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        System.out.println(String.format(\"%sHello, I\u0027m\\n%s%syour personal assistant.\", indentationText, logo, indentationText));","lastModifiedDate":"2022-01-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        System.out.println(String.format(\"%sHow should I address you?\", indentationText));","lastModifiedDate":"2022-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String userName \u003d sc.nextLine();","lastModifiedDate":"2022-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        System.out.println(String.format(\"%sSplendid! My pleasure to serve you %s \", indentationText, userName));","lastModifiedDate":"2022-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        while(true) {","lastModifiedDate":"2022-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                System.out.println(String.format(\"%sWhat %smay I assist you with today, %s? \\n\\t%s\", indentationText, (firstUserChat ? \"\" : \"else \"), userName, splitter));","lastModifiedDate":"2022-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                firstUserChat \u003d (firstUserChat\u003d\u003dtrue) ? false : firstUserChat;","lastModifiedDate":"2022-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-10"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"                userInput \u003d userInput.trim();","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                // Start of Duke\u0027s text block ","lastModifiedDate":"2022-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                System.out.println(String.format(\"%s%s\", indentationBase, splitter));","lastModifiedDate":"2022-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                // Exit - \"bye\", exits the program ","lastModifiedDate":"2022-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                if (userInput.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2022-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    System.out.println(String.format(\"%sGoodbye for now. \\n\", indentationText));","lastModifiedDate":"2022-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2022-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                // List - \"list\", lists all of the user\u0027s inputs ","lastModifiedDate":"2022-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                else if (userInput.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2022-01-10"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"                    if (taskList.size() \u003d\u003d 0) System.out.println(String.format(\"%sYour list is empty %s\", indentationText, userName));","lastModifiedDate":"2022-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    else {","lastModifiedDate":"2022-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            System.out.println(String.format(\"%s%d. %s\", indentationText, i+1, task)); ","lastModifiedDate":"2022-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2022-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2022-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                // Mark, Unmark - \"mark itemIndexNumber\", \"unmark itemIndexNumber\", marks an item as done/undone accordingly ","lastModifiedDate":"2022-01-10"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"                else if (userInput.toLowerCase().matches(\"^mark \\\\d+|^mark\") || userInput.toLowerCase().matches(\"^unmark \\\\d+|^unmark\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"                    ","lastModifiedDate":"2022-01-14"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"                    // when the user input has the \"mark/unmark\" command \u0026 an integer ","lastModifiedDate":"2022-01-14"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"                    if (userInput.toLowerCase().matches(\"^mark \\\\d+\") || userInput.toLowerCase().matches(\"^unmark \\\\d+\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"                        try {","lastModifiedDate":"2022-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                            String[] stringArray \u003d userInput.toLowerCase().split(\" \");","lastModifiedDate":"2022-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                            int taskIndex \u003d Integer.valueOf(stringArray[1]) - 1;","lastModifiedDate":"2022-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                            ","lastModifiedDate":"2022-01-10"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"                            // if user-specified task index is out of the list ","lastModifiedDate":"2022-01-14"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"                            if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2022-01-14"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"                                throw new DukeException(\"I\u0027m sorry, you\u0027re referencing a task that does not exist!\");","lastModifiedDate":"2022-01-14"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"                            }","lastModifiedDate":"2022-01-14"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                            // Mark ","lastModifiedDate":"2022-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                            if (stringArray[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                                ","lastModifiedDate":"2022-01-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                                Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-01-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                task.markAsDone();","lastModifiedDate":"2022-01-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                System.out.println(String.format(\"%sOkay, marking this task as done:\", indentationText));","lastModifiedDate":"2022-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                System.out.println(String.format(\"%s%s\", indentationTaskStatus, task));","lastModifiedDate":"2022-01-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                            ","lastModifiedDate":"2022-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                            // Unmark ","lastModifiedDate":"2022-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                            } else if (stringArray[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                ","lastModifiedDate":"2022-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                // taskList.get(taskIndex).markAsUndone();","lastModifiedDate":"2022-01-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                task.markAsDone();","lastModifiedDate":"2022-01-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                                System.out.println(String.format(\"%sOkay, marking this task as not done yet:\", indentationText));","lastModifiedDate":"2022-01-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                System.out.println(String.format(\"%s%s\", indentationTaskStatus, task));","lastModifiedDate":"2022-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                            }","lastModifiedDate":"2022-01-13"},{"lineNumber":90,"author":{"gitId":"waffledood"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2022-01-14"},{"lineNumber":91,"author":{"gitId":"waffledood"},"content":"                            System.out.println(String.format(\"%s%s\", indentationText, e.getMessage())); ","lastModifiedDate":"2022-01-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2022-01-13"},{"lineNumber":93,"author":{"gitId":"waffledood"},"content":"                    } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":94,"author":{"gitId":"waffledood"},"content":"                        throw new DukeException(\"I\u0027m sorry, you missed out the task index\");","lastModifiedDate":"2022-01-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2022-01-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":98,"author":{"gitId":"waffledood"},"content":"                // Delete - removes Tasks from the list ","lastModifiedDate":"2022-01-14"},{"lineNumber":99,"author":{"gitId":"waffledood"},"content":"                else if (userInput.matches(\"^delete \\\\d+|^delete\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":100,"author":{"gitId":"waffledood"},"content":"                    // when the user input has the \"delete\" command \u0026 an integer ","lastModifiedDate":"2022-01-14"},{"lineNumber":101,"author":{"gitId":"waffledood"},"content":"                    if (userInput.matches(\"^delete \\\\d+\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":102,"author":{"gitId":"waffledood"},"content":"                        String[] textStrings \u003d userInput.split(\" \"); ","lastModifiedDate":"2022-01-14"},{"lineNumber":103,"author":{"gitId":"waffledood"},"content":"                        int taskIndex \u003d Integer.valueOf(textStrings[1]) - 1;","lastModifiedDate":"2022-01-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":105,"author":{"gitId":"waffledood"},"content":"                        // if user-specified task index is out of the list ","lastModifiedDate":"2022-01-14"},{"lineNumber":106,"author":{"gitId":"waffledood"},"content":"                        if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2022-01-14"},{"lineNumber":107,"author":{"gitId":"waffledood"},"content":"                            throw new DukeException(\"I\u0027m sorry, you\u0027re referencing a task that does not exist!\");","lastModifiedDate":"2022-01-14"},{"lineNumber":108,"author":{"gitId":"waffledood"},"content":"                        }","lastModifiedDate":"2022-01-14"},{"lineNumber":109,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":110,"author":{"gitId":"waffledood"},"content":"                        Task task \u003d taskList.remove(taskIndex);","lastModifiedDate":"2022-01-14"},{"lineNumber":111,"author":{"gitId":"waffledood"},"content":"                        System.out.println(String.format(\"%sOkay, I\u0027ve deleted this task:\", indentationText));","lastModifiedDate":"2022-01-14"},{"lineNumber":112,"author":{"gitId":"waffledood"},"content":"                        System.out.println(String.format(\"%s%s\", indentationTaskStatus, task));","lastModifiedDate":"2022-01-14"},{"lineNumber":113,"author":{"gitId":"waffledood"},"content":"                    } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":114,"author":{"gitId":"waffledood"},"content":"                        throw new DukeException(\"I\u0027m sorry, you missed out the task index\");","lastModifiedDate":"2022-01-14"},{"lineNumber":115,"author":{"gitId":"waffledood"},"content":"                    }","lastModifiedDate":"2022-01-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                ","lastModifiedDate":"2022-01-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                // Add - adds Task to list ","lastModifiedDate":"2022-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                // 3 types of Tasks: ToDo\u0027s, Events, Deadlines ","lastModifiedDate":"2022-01-10"},{"lineNumber":120,"author":{"gitId":"waffledood"},"content":"                else if (userInput.matches(\"^todo .*|^todo\") || userInput.toLowerCase().matches(\"^event .*|^event\") || userInput.toLowerCase().matches(\"^deadline .*|^deadline\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    String[] textStrings \u003d userInput.split(\" \"); ","lastModifiedDate":"2022-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    String taskType \u003d textStrings[0].toLowerCase(); ","lastModifiedDate":"2022-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":124,"author":{"gitId":"waffledood"},"content":"                    if (userInput.toLowerCase().matches(\"^todo .+\") || userInput.toLowerCase().matches(\"^event .+\") || userInput.toLowerCase().matches(\"^deadline .+\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":125,"author":{"gitId":"waffledood"},"content":"                        ","lastModifiedDate":"2022-01-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                        String taskDescription \u003d String.join(\" \", Arrays.copyOfRange(textStrings, 1, textStrings.length));","lastModifiedDate":"2022-01-10"},{"lineNumber":127,"author":{"gitId":"waffledood"},"content":"                        Task task;","lastModifiedDate":"2022-01-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                        ","lastModifiedDate":"2022-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                        // ToDo\u0027s ","lastModifiedDate":"2022-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2022-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                            task \u003d new Todo(taskDescription); ","lastModifiedDate":"2022-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                            taskList.add(task);","lastModifiedDate":"2022-01-10"},{"lineNumber":134,"author":{"gitId":"waffledood"},"content":"                            System.out.println(String.format(\"%sNoted. I\u0027ve added this task:\", indentationText));","lastModifiedDate":"2022-01-14"},{"lineNumber":135,"author":{"gitId":"waffledood"},"content":"                            System.out.println(String.format(\"%s%s\", indentationTaskStatus, task));","lastModifiedDate":"2022-01-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                        ","lastModifiedDate":"2022-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                        // Events \u0026 Deadlines ","lastModifiedDate":"2022-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                        } else {","lastModifiedDate":"2022-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":140,"author":{"gitId":"waffledood"},"content":"                            if (!taskDescription.matches(\".+ /by .+|.+ /at .+\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":141,"author":{"gitId":"waffledood"},"content":"                                throw new DukeException(\"Your \" + taskType + \" command is incorrectly formatted. Please try again.\");","lastModifiedDate":"2022-01-14"},{"lineNumber":142,"author":{"gitId":"waffledood"},"content":"                            }","lastModifiedDate":"2022-01-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                            String[] taskDescriptionStrings \u003d taskDescription.split(\"/\");","lastModifiedDate":"2022-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                            String taskDescriptionText \u003d taskDescriptionStrings[0].strip();","lastModifiedDate":"2022-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                            String[] taskDescriptionTimeStrings \u003d taskDescriptionStrings[1].split(\" \");","lastModifiedDate":"2022-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                            String taskDescriptionTime \u003d String.join(\" \", Arrays.copyOfRange(taskDescriptionTimeStrings, 1, taskDescriptionTimeStrings.length)).strip();","lastModifiedDate":"2022-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                            // Events ","lastModifiedDate":"2022-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                            if (taskType.equals(\"event\")) { ","lastModifiedDate":"2022-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                                task \u003d new Event(taskDescriptionText, taskDescriptionTime);","lastModifiedDate":"2022-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                                taskList.add(task);","lastModifiedDate":"2022-01-10"},{"lineNumber":154,"author":{"gitId":"waffledood"},"content":"                                System.out.println(String.format(\"%sNoted. I\u0027ve added this task:\", indentationText));","lastModifiedDate":"2022-01-14"},{"lineNumber":155,"author":{"gitId":"waffledood"},"content":"                                System.out.println(String.format(\"%s%s\", indentationTaskStatus, task));","lastModifiedDate":"2022-01-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                            ","lastModifiedDate":"2022-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                            // Deadlines ","lastModifiedDate":"2022-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                            } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                                task \u003d new Deadline(taskDescriptionText, taskDescriptionTime);","lastModifiedDate":"2022-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                                taskList.add(task);","lastModifiedDate":"2022-01-10"},{"lineNumber":162,"author":{"gitId":"waffledood"},"content":"                                System.out.println(String.format(\"%sNoted. I\u0027ve added this task:\", indentationText));","lastModifiedDate":"2022-01-14"},{"lineNumber":163,"author":{"gitId":"waffledood"},"content":"                                System.out.println(String.format(\"%s%s\", indentationTaskStatus, task));","lastModifiedDate":"2022-01-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                            }","lastModifiedDate":"2022-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2022-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                        System.out.println(String.format(\"%sNow you have %d tasks in the list.\", indentationText, taskList.size()));","lastModifiedDate":"2022-01-10"},{"lineNumber":168,"author":{"gitId":"waffledood"},"content":"                    } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":169,"author":{"gitId":"waffledood"},"content":"                        throw new DukeException(\"I\u0027m sorry, your \" + taskType + \" command is missing a task description. Please try again.\");","lastModifiedDate":"2022-01-14"},{"lineNumber":170,"author":{"gitId":"waffledood"},"content":"                    }","lastModifiedDate":"2022-01-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2022-01-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    throw new DukeException(\"I\u0027m sorry, you\u0027ve input a command I don\u0027t recognize. Please try again.\");","lastModifiedDate":"2022-01-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-10"},{"lineNumber":176,"author":{"gitId":"waffledood"},"content":"            ","lastModifiedDate":"2022-01-14"},{"lineNumber":177,"author":{"gitId":"waffledood"},"content":"            catch(DukeException e) {","lastModifiedDate":"2022-01-14"},{"lineNumber":178,"author":{"gitId":"waffledood"},"content":"                System.out.println(String.format(\"%s%s\", indentationText, e.getMessage()));","lastModifiedDate":"2022-01-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        sc.close();","lastModifiedDate":"2022-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":132,"waffledood":52}}]
