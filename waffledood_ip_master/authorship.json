[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"waffledood":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"# User Guide for Jarvis ","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"![image](images/Ui.PNG)","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"### Task Reminders","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"Jarvis will intelligently check for any overdue \u0026 upcoming tasks \u0026 remind you accordingly! A separate dialog box will appear listing these overdue \u0026 upcoming tasks.","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"Jarvis is also intelligent to check against the latest Task List \u0026 include in the reminder any newly added Tasks that are overdue or upcoming!","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"![before](images/Reminder%20(Before).PNG) ","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"![after](images/Reminder%20(After).PNG)","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"### `todo` - Create a ToDo task.","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"Creates a ToDo task that is stored in the local Task List \u0026 saved to the drive.","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"Example of usage:","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"`todo buy coffee`","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"Expected outcome:","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"Noted. I\u0027ve added this task: ","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"[T][ ] buy coffee ","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"![creating a todo task](images/add%20todo.PNG)","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"### `event TASK_DESCRIPTION /at EVENT_DATE` - Create an Event task.","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"Creates an Event task that is stored in the Local Task List \u0026 saved to the drive.","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"Example of usage:","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"`event Zoom meeting /at 2022-02-02`","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"Expected outcome:","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"Noted. I\u0027ve added this task: ","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"[E][ ] meet Sam (at: Feb 2 2022) ","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"![creating an event task](images/add%20event.PNG)","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"### `deadline TASK_DESCRIPTION /by DUE_DATE` - Create a Deadline task.","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"Example of usage:","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"`deadline return book /by 2022-02-02`","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"Noted. I\u0027ve added this task:","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"[D][ ] return book (by: Feb 2 2022) ","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"![creating a deadline task](images/add%20deadline.PNG)","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"### `mark/unmark TASK_INDEX`- Mark/Unmark a Task as done/not done.","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"Marks/Unmarks a task as done/not done accordingly. Its status is accordingly updated in the local Task List \u0026 is saved to the drive as so. Note you cannot mark/unmark a task index that is not in the current Task List!","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"Example of usage:","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"waffledood"},"content":"`mark 1`","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"waffledood"},"content":"`unmark 1`","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"waffledood"},"content":"Expected outcome:","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"waffledood"},"content":"Okay, marking this task as done:","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"waffledood"},"content":"[T][X] cook lunch ","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"waffledood"},"content":"![mark](images/mark.PNG)","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"waffledood"},"content":"Okay, marking this task as not done yet:","lastModifiedDate":"2022-02-14"},{"lineNumber":88,"author":{"gitId":"waffledood"},"content":"[T][ ] buy newspaper","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":90,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":91,"author":{"gitId":"waffledood"},"content":"![unmark](images/Unmark.PNG)","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":93,"author":{"gitId":"waffledood"},"content":"### `delete TASK_INDEX`  - Delete a Task","lastModifiedDate":"2022-02-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"waffledood"},"content":"`delete 2`","lastModifiedDate":"2022-02-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":104,"author":{"gitId":"waffledood"},"content":"Okay, I\u0027ve deleted this task:","lastModifiedDate":"2022-02-14"},{"lineNumber":105,"author":{"gitId":"waffledood"},"content":"[T][ ] buy coffee ","lastModifiedDate":"2022-02-14"},{"lineNumber":106,"author":{"gitId":"waffledood"},"content":"```","lastModifiedDate":"2022-02-14"},{"lineNumber":107,"author":{"gitId":"waffledood"},"content":"![deleting a task](images/delete.PNG)","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":109,"author":{"gitId":"waffledood"},"content":"### `find TASK_DESCRIPTION` - Delete a Task","lastModifiedDate":"2022-02-14"},{"lineNumber":110,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":111,"author":{"gitId":"waffledood"},"content":"Helps you find Tasks matching the specified `TASK_DESCRIPTION`. This list of tasks will include the tasks’ original index in the Task List, so that you can easily find the specific task using the task index.","lastModifiedDate":"2022-02-14"},{"lineNumber":112,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":113,"author":{"gitId":"waffledood"},"content":"Example of usage:","lastModifiedDate":"2022-02-14"},{"lineNumber":114,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":115,"author":{"gitId":"waffledood"},"content":"`find coffee`","lastModifiedDate":"2022-02-14"},{"lineNumber":116,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":117,"author":{"gitId":"waffledood"},"content":"Expected outcome:","lastModifiedDate":"2022-02-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"waffledood"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-14"},{"lineNumber":121,"author":{"gitId":"waffledood"},"content":"6. [T][ ] buy coffee","lastModifiedDate":"2022-02-14"},{"lineNumber":122,"author":{"gitId":"waffledood"},"content":"7. [T][ ] grind coffee","lastModifiedDate":"2022-02-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":124,"author":{"gitId":"waffledood"},"content":"![finding a task](images/find.PNG)","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"waffledood":95,"-":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import duke.command.Parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import duke.task.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":" * Represents a Duke chatbot.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":" * A Duke chatbot will save or load the user\u0027s tasks in a local file.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"    private TaskList tasksList;","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    private String tasksFilePath;","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    private String dukeResponse;","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"     * Constructor to initialize Duke \u0026 its various components.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"     * @param filePath Path of savefile of tasks information","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"        assert filePath !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"        tasksFilePath \u003d filePath;","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"        storage \u003d new Storage(tasksFilePath, ui);","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"        // load TaskList from existing data","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"        tasksList \u003d new TaskList(storage.loadFileContents());","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"     * Reads user\u0027s input \u0026 executes corresponding commands.","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"     * @return","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"            dukeResponse \u003d c.execute(tasksList, ui, storage);","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"            dukeResponse \u003d e.getMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        return dukeResponse;","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"waffledood":47,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"* Represents the errors Duke might face during its operation.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"*/","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-13"}],"authorContributionMap":{"waffledood":5,"-":5}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import duke.task.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":" * AddCommand represents the user\u0027s actions of adding Todo, Event \u0026 Deadline tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    private String description;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"     * Initializes the AddCommand with the CommandType Enum \u0026 a task description.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"     * @param commandType User requested CommandType Enum","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"     * @param description Task description","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"    public AddCommand(CommandType commandType, String description) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"        super(commandType);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"     * The logic to execute the AddCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"     * @param taskList The TaskList object containing existing tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"     * @param ui The Ui object for interacting with the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"     * @param storage The Storage object for saving \u0026 loading tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"     * @throws DukeException Error if the user specifies an invalid task index.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"        // check if the user\u0027s input is just whitespaces","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"            throw new DukeException(\"I\u0027m sorry, your todo command is missing a task description. Please try again.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"        Task task;","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        switch (super.commandType) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"        case TODO:","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"            task \u003d new Todo(description, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"            taskList.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"            ui.addTask(task);","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"            assert task !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"        case EVENT:","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"            String[] taskDescriptionStrings \u003d description.split(super.commandType.getRegex());","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"            if (taskDescriptionStrings.length \u003c\u003d 1) {","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"                throw new DukeException(\"I\u0027m sorry your \" + commandType","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"                        + \" command is incorrectly formatted!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"            String taskDescriptionText \u003d taskDescriptionStrings[0].strip();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"            String taskDescriptionTime \u003d taskDescriptionStrings[1].strip();","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"            // check if the user\u0027s input is just whitespace","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"            if (taskDescriptionText.strip().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"                throw new DukeException(\"I\u0027m sorry, your \" + commandType","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"                        + \" command is missing a task description. Please try again.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"            } else if (taskDescriptionTime.strip().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"                throw new DukeException(\"I\u0027m sorry, your \" + commandType","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"                        + \" command is missing a time. Please try again.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"waffledood"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"waffledood"},"content":"                if (commandType.equals(CommandType.EVENT)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"waffledood"},"content":"                    task \u003d new Event(taskDescriptionText, taskDescriptionTime, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"waffledood"},"content":"                } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"waffledood"},"content":"                    task \u003d new Deadline(taskDescriptionText, taskDescriptionTime, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"waffledood"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"waffledood"},"content":"                taskList.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"waffledood"},"content":"                ui.addTask(task);","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"waffledood"},"content":"                assert task !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"waffledood"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"waffledood"},"content":"                return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-05"},{"lineNumber":85,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"waffledood"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"waffledood"},"content":"        case BYE:","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"waffledood"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"waffledood"},"content":"        case FIND:","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"waffledood"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"waffledood"},"content":"        case LIST:","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"waffledood"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-31"},{"lineNumber":93,"author":{"gitId":"waffledood"},"content":"        case DELETE:","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"waffledood"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"waffledood"},"content":"        case MARK:","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"waffledood"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-31"},{"lineNumber":97,"author":{"gitId":"waffledood"},"content":"        case UNMARK:","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"waffledood"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-31"},{"lineNumber":99,"author":{"gitId":"waffledood"},"content":"        default:","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"waffledood"},"content":"            throw new DukeException(\"unexpected command!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"waffledood"},"content":"        storage.updateFileContents(taskList);","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"waffledood"},"content":"        return ui.generateDukeResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"waffledood"},"content":"     * A getter method to indicate if the chat session with Duke is active.","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"waffledood"},"content":"     * @return boolean indicating if the chat session is active or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"waffledood"},"content":"    public boolean getActiveStatus() {","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"waffledood"},"content":"        return super.isActive;","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"waffledood":116}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import duke.task.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":" * Abstract class to represent the framework of a Command.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"*/","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"    protected CommandType commandType;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    protected boolean isActive;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"     * Initializes the Command object.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"     * @param commandType Enum representing the Command being executed by the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    public Command(CommandType commandType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    * Returns a boolean reflecting if the current chat session with Duke is active or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    * @return boolean indicating if the chat session is active.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    */","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"    public abstract boolean getActiveStatus();","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"     * A method that performs the logic associated with user-request command, using","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"     * TaskList, Ui \u0026 Storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"     * @param taskList The TaskList containing current tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"     * @param ui The Ui object interacting with the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"     * @param storage The Storage object for loading \u0026 saving of user\u0027s tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"    */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"waffledood":39}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.util.Map;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":" * An Enum class to represent the types of commands a user can perform.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"public enum CommandType {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"    BYE(\"bye\", null),","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"    LIST(\"list\", null),","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    MARK(\"mark\", \"\\\\d+\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"    UNMARK(\"unmark\", \"\\\\d+\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    DELETE(\"delete\", \"\\\\d+\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"    FIND(\"find\", null),","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    TODO(\"todo\", null),","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"    EVENT(\"event\", \"/at\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    DEADLINE(\"deadline\", \"/by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"    private static final Map\u003cString, CommandType\u003e commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"    static {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"        for (CommandType c : values()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"            commandMap.put(c.commandString, c);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"    private final String commandString;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"    private final String regex;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"     * Initialize the CommandType Enum, by passing in the user input String.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"     * @param commandString String representing the user\u0027s input.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"     * @param regex The regex associated with the CommandType.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"    private CommandType(String commandString, String regex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"        this.regex \u003d regex;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"     * Method to retrieve the CommandType Enum associated with the user\u0027s input.","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"     * @param commandString User input String","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"     * @return Enum representing the CommandType.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"     * @throws DukeException Error if the user input String is an unrecognized command.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"    public static CommandType getCommand(String commandString) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"        CommandType command \u003d commandMap.get(commandString);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"            throw new DukeException(\"I\u0027m sorry, you\u0027ve input a command I don\u0027t recognize. Please try again.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"        return command;","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"     * Returns the regex associated with this CommandType Enum.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"     * @return The regex associated with this CommandType Enum.","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"    public String getRegex() {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"        return this.regex;","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"waffledood":66}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import duke.task.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":" * DeleteCommand representst the user\u0027s action of deleting a task.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    private String taskIndexString;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"     * Initializes the DeleteCommand with the CommandType Enum \u0026 a task index.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"     * @param commandType User requested CommandType Enum","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"     * @param taskIndex index of task to be deleted","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    public DeleteCommand(CommandType commandType, String taskIndex) {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"        super(commandType);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"        this.taskIndexString \u003d taskIndex;","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"     * The logic to execute the DeleteCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"     * @param taskList The TaskList object containing existing tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"     * @param ui The Ui object for interacting with the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"     * @param storage The Storage object for saving \u0026 loading tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"            // check if the user input an int","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"            if (!taskIndexString.trim().matches(\"\\\\d+\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"                throw new DukeException(\"I\u0027m sorry, you missed out the task index\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"            int taskIndex \u003d Integer.valueOf(taskIndexString.trim()) - 1;","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"            // if user-specified task index is out of the list","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"            if (taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"                throw new DukeException(\"I\u0027m sorry, you\u0027re referencing a task that does not exist!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"            Task task \u003d taskList.remove(taskIndex);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"            assert task !\u003d null;","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"            ui.deleteTask(task);","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"        storage.updateFileContents(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"        return ui.generateDukeResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"     * A getter method to indicate if the chat session with Duke is active.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"     * @return boolean indicating if the chat session is active or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"    public boolean getActiveStatus() {","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"        return super.isActive;","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"waffledood":67}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.task.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":" * ExitCommand represents the user\u0027s actions of exiting the Duke program.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"     * Initializes the AddCommand with the CommandType Enum.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"     * @param commandType","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    public ExitCommand(CommandType commandType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"        super(commandType);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"     * The logic to execute the AddCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"     * @param taskList The TaskList object containing existing tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"     * @param ui The Ui object for interacting with the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"     * @param storage The Storage object for saving \u0026 loading tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"        super.isActive \u003d false;","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"     * A getter method to indicate if the chat session with Duke is active.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"     * @return boolean indicating if the chat session is active or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"    public boolean getActiveStatus() {","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"        return super.isActive;","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"waffledood":40}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"import duke.task.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"    private String searchKey;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"     * FindCommnd allows search of tasks that match the specified search key.","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"     * @param commandType request command.","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"     * @param searchKey searchKey user is looking for.","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"    public FindCommand(CommandType commandType, String searchKey) {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"        super(commandType);","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"        this.searchKey \u003d searchKey.toLowerCase().trim();","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    public boolean getActiveStatus() {","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"        return super.isActive;","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"        ArrayList\u003cTask\u003e originalTaskList \u003d TaskList.getTasks();","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"        boolean tasksMatchingSearchKey \u003d false;","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"        // cycle through existing tasks \u0026 filter tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"        for (Task task : originalTaskList) {","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"            // check if task matches searchKey","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"            if (task.getDescription().contains(searchKey)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"                filteredTaskList.add(task);","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"                tasksMatchingSearchKey \u003d true;","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        // if there are tasks that match the searchKey","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"        if (tasksMatchingSearchKey) {","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"            ui.addText(\"Here \" + ((filteredTaskList.size() \u003e 1) ? \"are\" : \"is\")","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"                    + \" the matching task\" + ((filteredTaskList.size() \u003e 1) ? \"s\" : \"\") + \" in your list: \");","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"            for (Task task: filteredTaskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"                ui.listTask(originalTaskList.indexOf(task), task);","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"            ui.addText(\"Looks like there aren\u0027t any matching tasks in your list!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"        return ui.generateDukeResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"waffledood":60}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.task.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":" * ListCommand represents the user\u0027s actions of listing all existing tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"     * Initializes the ListCommand with the CommandType Enum.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"     * @param commandType","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"    public ListCommand(CommandType commandType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"        super(commandType);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"     * The logic to execute the AddCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"     * @param taskList The TaskList object containing existing tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"     * @param ui The Ui object for interacting with the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"     * @param storage The Storage object for saving \u0026 loading tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"            ui.addText(\"Your list is empty\");","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"                ui.listTask(i, task);","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"        return ui.generateDukeResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"     * A getter method to indicate if the chat session with Duke is active.","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"     * @return boolean indicating if the chat session is active or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"    public boolean getActiveStatus() {","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        return super.isActive;","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"waffledood":49}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import duke.task.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":" * MarkCommand represents the user\u0027s actions of marking/unmarking tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    // mark boolean is true indicates the mark command, false the unmark command","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"    private boolean mark;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    private String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"     * Initializes the AddCommand with the CommandType Enum \u0026 a task description.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"     * @param commandType User requested CommandType Enum","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"     * @param description Task description","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"     * @param mark Boolean that indicates if the task is to be marked/unmarked","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"    public MarkCommand(CommandType commandType, String description, boolean mark) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"        super(commandType);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"        assert (mark \u003d\u003d true || mark \u003d\u003d false) \u0026\u0026 (description !\u003d null);","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"     * The logic to execute the AddCommand","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"     * @param taskList The TaskList object containing existing tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"     * @param ui The Ui object for interacting with the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"     * @param storage The Storage object for saving \u0026 loading tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"     * @throws DukeException Error if the user missed a task index.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"        // when the user input has the \"mark\" command \u0026 an integer","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"        if (description.toLowerCase().matches(super.commandType.getRegex())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"                int taskIndex \u003d Integer.valueOf(description) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"                // if user-specified task index is out of the list","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"                if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"                    throw new DukeException(\"I\u0027m sorry, you\u0027re referencing a task that does not exist!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"                Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"                if (mark) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"                    ui.addText(\"Okay, marking this task as done:\");","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"                    task.markAsUndone();","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"                    ui.addText(\"Okay, marking this task as not done yet:\");","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"                ui.addText(task.toString());","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"                return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"            throw new DukeException(\"I\u0027m sorry, you missed out the task index\");","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"        storage.updateFileContents(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"        return ui.generateDukeResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"waffledood"},"content":"     * A getter method to indicate if the chat session with Duke is active.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"waffledood"},"content":"     * @return boolean indicating if the chat session is active or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"waffledood"},"content":"    public boolean getActiveStatus() {","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"waffledood"},"content":"        return super.isActive;","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"waffledood":81}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":" * Helper class to parse user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"public final class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"     * Interprets user input \u0026 return correpsonding command.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"     * @param userInput user input String representing user command.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"     * @return A Command corrsponding to the user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"     * @throws DukeException Error","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"        //","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"            String[] userInputString \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"            String commandString \u003d userInputString[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"            CommandType commandType \u003d CommandType.getCommand(commandString);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"            String description \u003d userInputString.length \u003e 1 ? userInputString[1] : \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"            switch(commandType) {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"            case BYE:","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"                return new ExitCommand(commandType);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"            case DELETE:","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"                return new DeleteCommand(commandType, description);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"            case LIST:","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"                return new ListCommand(commandType);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"            case MARK:","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"                return new MarkCommand(commandType, description, true);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"                return new MarkCommand(commandType, description, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"            case FIND:","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"                return new FindCommand(commandType, description);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"            case TODO:","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"            case EVENT:","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"                return new AddCommand(commandType, description);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"            default:","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"                throw new DukeException(\"unexpected command!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"            // propagate the error higher up","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"            throw e;","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"waffledood":52}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"        // Apply effect to ImageView","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"        Rectangle clip \u003d new Rectangle(","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"                // set a clip to apply rounded border to the original image.","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitHeight()","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"        );","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"        clip.setArcWidth(20);","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        clip.setArcHeight(20);","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"        // sets the chat box \u0026 image","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"waffledood":74}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"public class Launcher {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"     * does something.","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"     * @param args","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"waffledood":16}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import java.util.Timer;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"import duke.reminder.RemindersTask;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    private Timer timer;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"    private boolean repeatingReminders \u003d true;","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"            stage.setTitle(\"Jarvis\");","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"            // Starts the Reminder feature","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"            launchReminders();","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"            // Adds a listener to close the Reminder feature when the stage is closed.","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"            stage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"                closeReminders();","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"            });","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"            System.out.println(\"e: \" + e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"     * Launches the task reminder function, either as repeated reminders or a one-time reminder.","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"    public void launchReminders() {","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"        timer \u003d new Timer();","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"        RemindersTask tasks \u003d new RemindersTask();","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"        if (repeatingReminders) {","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"            // First reminder alert dialog appears 5 seconds after launching the app, then every 60 seconds afterwards.","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"            timer.scheduleAtFixedRate(tasks, 5_000, 60_000);","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"            // First \u0026 only reminder alert dialog appears 5 seconds after launching the app.","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"            timer.schedule(tasks, 5_000);","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"    public void closeReminders() {","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"        timer.cancel();","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"waffledood":70}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.gui;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    private boolean firstUserChat \u003d true;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    private String dukeResponse;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"    private String userName;","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/da-user.jpg\"),","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"            79, 79, false, false);","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/elon-musk.jpg\"),","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"            79, 79, true, false);","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"     * Sets up the Main Window with a welcome message box from Duke.","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"                DialogBox.getDukeDialog(new Ui().showWelcome(), dukeImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"        );","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"        if (firstUserChat) {","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"            dukeResponse \u003d \"hello \" + input + \"!\";","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"                    DialogBox.getDukeDialog(dukeResponse, dukeImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"            );","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"            dukeResponse \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"                    DialogBox.getDukeDialog(dukeResponse, dukeImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"            );","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"        firstUserChat \u003d (firstUserChat \u003d\u003d true) ? false : firstUserChat;","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"waffledood"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"waffledood":78}},{"path":"src/main/java/duke/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.gui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":" * Ui class to handle interactions with User.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"    // variables for indentation","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"    private String logo \u003d \"Jarvis\";","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"    private String dukeResponse;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"     * Basic constructor to initialize the Ui object.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    public Ui() {","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"        dukeResponse \u003d new String(\"\");","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"     * Method to greet \u0026 ask for user\u0027s name.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"     * @return String representing the user\u0027s name.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"        // Jarvis introduces himself","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"        addText(\"Hello, I\u0027m \" + logo + \", your personal assistant. How should I address you?\");","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"        return generateDukeResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"     * Method to bid goodbye to the user, when the user wants to exit Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"    public String showGoodbye() {","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"        // Jarvis says goodbye \u0026 the scanner is closed","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"        return \"Goodbye for now. \\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"     * Method to print a text to screen.","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"     * @param text String of text to be printed.","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"    public void addText(String text) {","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        dukeResponse +\u003d String.format(\"%s\\n\", text);","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"        dukeResponse +\u003d \"Noted. I\u0027ve added this task: \\n\" + task.toString();","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"    public void listTask(int index, Task task) {","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"        dukeResponse +\u003d String.format((index + 1) + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"        dukeResponse +\u003d \"Okay, I\u0027ve deleted this task: \\n\" + task.toString() + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"     * Generates Duke\u0027s response, based on user\u0027s input.","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"     * @return","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"    public String generateDukeResponse() {","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"        String generatedDukeResponse \u003d dukeResponse;","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"        dukeResponse \u003d new String(\"\");","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"        return generatedDukeResponse;","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"     * Method to show an error on the screen.","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"waffledood"},"content":"     * @param errorMessage String of errorMessage to be printed.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"waffledood"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"waffledood"},"content":"        return String.format(\"%s\\n\", errorMessage);","lastModifiedDate":"2022-02-05"},{"lineNumber":77,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"waffledood":78}},{"path":"src/main/java/duke/reminder/ReminderPredicates.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.reminder;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":" * Represents different nature the Task Reminder notification can take on.","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"public class ReminderPredicates {","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    static final Predicate\u003cTask\u003e TODAY \u003d task -\u003e task.getDate() !\u003d null \u0026\u0026 task.getDate().isEqual(LocalDate.now());","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"    static final Predicate\u003cTask\u003e COMPLETED \u003d task -\u003e (task.getStatusIcon().equals(\"X\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    static final Predicate\u003cTask\u003e DUE_NOW \u003d TODAY.and(COMPLETED.negate());","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"    static final Predicate\u003cTask\u003e OVERDUE \u003d task -\u003e task.getDate() !\u003d null \u0026\u0026 task.getDate().isBefore(LocalDate.now());","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    static final Predicate\u003cTask\u003e UPCOMING \u003d task -\u003e task.getDate() !\u003d null \u0026\u0026 (ChronoUnit.DAYS.between(LocalDate.now(),","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"            task.getDate())) \u003d\u003d 1;","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    static final Predicate\u003cTask\u003e OVERDUE_OR_UPCOMING \u003d OVERDUE.or(UPCOMING);","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"waffledood":20}},{"path":"src/main/java/duke/reminder/RemindersTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.reminder;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.util.List;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import java.util.TimerTask;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":" * Represents the Task Reminder functionality.","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"public class RemindersTask extends TimerTask {","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    private String tasks \u003d new String(\"\");","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"     * Runs the task reminder function.","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    public void run() {","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"            setTypeOfReminder(ReminderPredicates.OVERDUE_OR_UPCOMING);","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"            List\u003cTask\u003e dueRems \u003d getDueTasks();","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"            showNotifications(dueRems); // shows the multiple notifications in an alert dialog","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"        });","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    private void setTypeOfReminder(Predicate\u003cTask\u003e predicateTask) {","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"        predicate \u003d predicateTask;","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"    private List\u003cTask\u003e getDueTasks() {","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"        ArrayList\u003cTask\u003e tasksArrayList \u003d TaskList.getTasks();","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"        ObservableList\u003cTask\u003e remindersObsList \u003d FXCollections.observableList(tasksArrayList);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"        return remindersObsList.stream()","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"                .filter(predicate)","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"    private void showNotifications(List\u003cTask\u003e listOfDueTasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"        alert.setTitle(\"Reminder!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"        for (Task t: listOfDueTasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"            tasks +\u003d t.getDescription() + \"\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"        alert.setContentText(tasks);","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"        if (listOfDueTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"            return;","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"        } else if (listOfDueTasks.size() \u003e 1) {","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"            alert.setHeaderText(\"Reminder on these tasks\");","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"        } else if (listOfDueTasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"            alert.setHeaderText(\"Reminder on this task\");","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"        tasks \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"waffledood":64}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":" * Deadline represents deadline tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"     * Initializes the Deadline task with a task description, its regex \u0026 a boolean indicating if it\u0027s done.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"     * @param description String of task description.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"     * @param by String of regex.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"     * @param done boolean indicating if the task is done.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"     * @throws DukeException error if the user\u0027s date input is incorrectly formatted.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    public Deadline(String description, String by, boolean done) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"        super(description, done);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"            super.date \u003d LocalDate.parse(by);","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"            throw new DukeException(\"Date was incorrectly formatted! Please format it as yyyy-mm-dd\");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"     * Getter method to return the description of a Deadline.","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the description of a Deadline.","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"        return this.description + \", \" + super.date.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"     * Overriden method to print the Deadline Task in a custom format.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the custom format of a Deadline Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"     * A getter method to print the Deadline Task in a custom format for saving to file.","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the custom format of a Deadline Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"    public String toStringSaveData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"        return String.join(\" | \", \"D\", String.valueOf(done ? 1 : 0), description, super.date.toString());","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"waffledood":47,"-":9}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":" * Event represents Event tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"     * Initializes the Event task with a task description, its regex, \u0026 boolean representing if it\u0027s done.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"     * @param description String of task description.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"     * @param at String of regex.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"     * @param done boolean indicating if the task is done.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"     * @throws DukeException error if the user\u0027s date input is incorrectly formatted.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    public Event(String description, String at, boolean done) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"        super(description, done);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"            super.date \u003d LocalDate.parse(at);","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"            throw new DukeException(\"Date was incorrectly formatted! Please format it as yyyy-mm-dd\");","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"     * Getter method to return the description of an Event.","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the description of an Event.","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"        return this.description + \", \" + super.date.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"     * Overriden method to print the Event Task in a custom format.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the custom format of an Event Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"                + super.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"     * A getter method to print the Event Task in a custom format for saving to file.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the custom format of an Event Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"    public String toStringSaveData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"        return String.join(\" | \", \"E\",","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"                String.valueOf(done ? 1 : 0), description, super.date.toString());","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"waffledood":49,"-":9}},{"path":"src/main/java/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"import duke.gui.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":" * A storage class to create a save file, load \u0026 save the user\u0027s tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"    private String taskFilePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"     * Initializes the Storage object by specifiying a path for its save file.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"     * @param taskFilePath String of the path for the save file.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"     * @param ui Ui object to handle user interaction.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    public Storage(String taskFilePath, Ui ui) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"        this.taskFilePath \u003d taskFilePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"     * A method that returns an ArrayList of current tasks if there are tasks in the save file","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"     * or creates a new empty ArrayList.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"     * @return ArrayList containing tasks or a new ArrayList.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"    public ArrayList\u003cTask\u003e loadFileContents() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"        // load tasklist data from save","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"            dir.mkdirs();","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"            File f \u003d new File(taskFilePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"            // checks if the user already has existing save data","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"            if (!f.createNewFile()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"                ui.addText(\"loading previous save data...\");","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"                System.out.println(\"loading previous save data...\");","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"                Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"                    String task \u003d s.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"                    String[] taskStrings \u003d task.split(\" \\\\| \");","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"                    String taskType \u003d taskStrings[0];","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"                    boolean taskStatus \u003d taskStrings[1].equals(\"1\");","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"                    String taskDescription \u003d taskStrings[2];","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"                    switch (taskType) {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"                    case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"                        taskList.add(new Todo(taskDescription, taskStatus));","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"                        break;","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"                        taskList.add(new Event(taskDescription, taskStrings[3], taskStatus));","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"                        break;","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"                    case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"                        taskList.add(new Deadline(taskDescription, taskStrings[3], taskStatus));","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"                        break;","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"                    default:","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"                        throw new DukeException(\"Invalid save data\");","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"                s.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"            // else creates the save data for further use","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"                ui.addText(\"creating save data...\");","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"waffledood"},"content":"        // if the file cannot be read or contains corrupt data, generate an empty list","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"waffledood"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"waffledood"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"waffledood"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"waffledood"},"content":"        return taskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"waffledood"},"content":"     * A method to update the tasks in the save file with the user\u0027s current existing tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"waffledood"},"content":"     * @param taskList ArrayList of user\u0027s current existing tasks to save to disk.","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":88,"author":{"gitId":"waffledood"},"content":"    public void updateFileContents(TaskList taskList) {","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"waffledood"},"content":"        ArrayList\u003cTask\u003e externalTaskList \u003d TaskList.getTasks();","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"waffledood"},"content":"        // write \u0026 update save data with current tasklist","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"waffledood"},"content":"            FileWriter fw \u003d new FileWriter(taskFilePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"waffledood"},"content":"            for (Task t: externalTaskList) {","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"waffledood"},"content":"                fw.write(t.toStringSaveData());","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"waffledood"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"waffledood"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"waffledood"},"content":"            fw.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"waffledood"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"waffledood"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"waffledood":103}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":" * Abstract class to represent the framework of a Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2022-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    protected boolean done;","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"     * Initializes the Task object.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"     * @param description String representing the task description.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"     * @param done boolean to indicate if the task is done or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    public Task(String description, boolean done) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-10"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"        this.date \u003d null;","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"     * Getter method to return the status of a Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the status of a Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return (done ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"     * Getter method to return the description of a Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the description of a Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"        return this.description;","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"     * Getter method to return the date associated with a Task.","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"     * @return The LocalDate representing the date of a Task.","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"        return this.date;","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"     * Setter method to mark the status of a Task as done.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (this.done \u003d\u003d true) {","lastModifiedDate":"2022-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            System.out.println(\"this item has already been marked as done\");","lastModifiedDate":"2022-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.done \u003d true;","lastModifiedDate":"2022-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"     * Setter method to mark the status of a Task as undone.","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (this.done \u003d\u003d false) {","lastModifiedDate":"2022-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            System.out.println(\"this item has already been marked as undone\");","lastModifiedDate":"2022-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.done \u003d false;","lastModifiedDate":"2022-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":71,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"waffledood"},"content":"     * Overriden method to print the Task in a custom format.","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the custom format of a Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":80,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"waffledood"},"content":"     * A getter method to print the Task in a custom format for saving to file.","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the custom format of a Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"waffledood"},"content":"    public abstract String toStringSaveData();","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"waffledood":53,"-":33}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":" * A class to contain all tasks of the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"     * Initializes the current taskList with an external ArrayList.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"     * @param taskList","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"     * A getter method to return the current taskList\u0027s size.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"     * @return int representing the current taskList\u0027s size.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"    public int size() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"     * A getter method to return if the current taskList is empty.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"     * @return boolean representing if the current taskList is empty.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"     * A getter method to return the task at an index.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"     * @param index int representing the index of the task to be retrieved.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"     * A getter method to remove the task at an index.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"     * @param index int representing the index of the task to be removed.","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"    public Task remove(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"        return taskList.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"     * A setter method to add a task at an index.","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"     * @param task Task representing the task to be added.","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"     * @return boolean indicating if the task was added successfully or not.","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"        return taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"waffledood"},"content":"     * A getter method to return the current entire taskList.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"waffledood"},"content":"     * @return ArrayList containing existing tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"waffledood"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"waffledood"},"content":"        return taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"waffledood":70}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":" * Todo represents todo tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"     * Initializes the Todo task with a task description \u0026 boolean representing if it\u0027s done.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"     * @param description String of task description.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"     * @param done boolean indicating if the task is done.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    public Todo (String description, boolean done) {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"        super(description, done);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"     * Overriden method to print the Todo Task in a custom format.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the custom format of a Todo Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"     * A getter method to print the Todo Task in a custom format for saving to file.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"     * @return A String representing the custom format of a Todo Task.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"    public String toStringSaveData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"        return String.join(\" | \", \"T\", String.valueOf(done ? 1 : 0), description);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"waffledood":25,"-":10}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\"  style\u003d\"-fx-background-color: #3b3a3a; -fx-border-radius: 5; -fx-background-radius: 5; -fx-label-padding: 3;\" textFill\u003d\"aliceblue\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"79.0\" fitWidth\u003d\"79.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"waffledood":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"ALWAYS\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #696766;\"/\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"waffledood":19}},{"path":"test/duke/command/CommandTypeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"class CommandTypeTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"    void getCommand_validCommands_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"            assertEquals(CommandType.BYE, CommandType.getCommand(\"bye\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"            assertEquals(CommandType.LIST, CommandType.getCommand(\"list\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"            assertEquals(CommandType.MARK, CommandType.getCommand(\"mark\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"            assertEquals(CommandType.UNMARK, CommandType.getCommand(\"unmark\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"            assertEquals(CommandType.DELETE, CommandType.getCommand(\"delete\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"            assertEquals(CommandType.TODO, CommandType.getCommand(\"todo\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"            assertEquals(CommandType.EVENT, CommandType.getCommand(\"event\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"            assertEquals(CommandType.DEADLINE, CommandType.getCommand(\"deadline\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"            fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"    void getCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"            CommandType.getCommand(\"invalidCommand\");","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"            fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"            assertEquals(\"I\u0027m sorry, you\u0027ve input a command I don\u0027t recognize. Please try again.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"waffledood":36}},{"path":"test/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"class DeadlineTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"    void format_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"            Deadline deadline \u003d new Deadline(\"new deadline task\", \"1st Jan 2021\", false);","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"            fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"            assertEquals(\"Date was incorrectly formatted! Please format it as yyyy-mm-dd\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"    void format_correctDateFormat_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"            Deadline deadline \u003d new Deadline(\"new deadline task\", \"2021-01-01\", false);","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"            assertEquals(\"[D][ ] new deadline task (by: Jan 1 2021)\", deadline.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"            fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"waffledood":29}},{"path":"test/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"class EventTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"    void format_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"            Event event \u003d new Event(\"new event task\", \"1st Jan 2021\", false);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"            fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"            assertEquals(\"Date was incorrectly formatted! Please format it as yyyy-mm-dd\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"    void format_correctDateFormat_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"            Event event \u003d new Event(\"new event task\", \"2021-01-01\", false);","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"            assertEquals(\"[E][ ] new event task (at: Jan 1 2021)\", event.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"            fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"waffledood":30}},{"path":"test/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"class TaskListTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    void checkSize_add1Task_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"waffledood"},"content":"        taskList.add( new Todo(\"todo task description\", false) );","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"waffledood"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"waffledood"},"content":"    void checkEmpty_add0Task_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"waffledood"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"waffledood"},"content":"        assertEquals(true, taskList.isEmpty());","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"waffledood"},"content":"    void getTask_add1Task_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"waffledood"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"waffledood"},"content":"        taskList.add(new Todo(\"todo task description\", false));","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"waffledood"},"content":"        Task retrievedTask \u003d taskList.get(0);","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"waffledood"},"content":"        assertEquals(retrievedTask.toString(), \"[T][ ] todo task description\");","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"waffledood"},"content":"    void removeTask_add1Task_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"waffledood"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"waffledood"},"content":"        taskList.add(new Todo(\"todo task description\", false));","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"waffledood"},"content":"        Task removedTask \u003d taskList.remove(0);","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"waffledood"},"content":"        assertEquals(removedTask.toString(), \"[T][ ] todo task description\");","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"waffledood"},"content":"    void addTask_add1Task_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"waffledood"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"waffledood"},"content":"        assertEquals(true, taskList.add(new Todo(\"todo task description\", false)));","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"waffledood"},"content":"    void getTasks_addFewTasks_success() {","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"waffledood"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"waffledood"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"waffledood"},"content":"            tasks.add(new Todo(\"todo description\", false));","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"waffledood"},"content":"            tasks.add(new Deadline(\"deadline description\", \"2021-01-01\", false));","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"waffledood"},"content":"            tasks.add(new Event(\"event description\", \"2021-01-01\", false));","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"waffledood"},"content":"            TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"waffledood"},"content":"            assertEquals(tasks, taskList.getTasks());","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"waffledood"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"waffledood"},"content":"            fail();","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"waffledood"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"waffledood":62}},{"path":"test/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waffledood"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"waffledood"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"waffledood"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"waffledood"},"content":"class TodoTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"waffledood"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"waffledood"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"waffledood"},"content":"    void testStringConversion() {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"waffledood"},"content":"        Todo todo \u003d new Todo(\"new todo task\", false);","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"waffledood"},"content":"        assertEquals(\"[T][ ] new todo task\", todo.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"waffledood"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"waffledood"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"waffledood":14}}]
