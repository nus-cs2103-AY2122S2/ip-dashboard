[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"# PikaBot project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"This is a project template for a greenfield Java project. Given below are instructions on how to use it.","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"3. After that, locate the `src/main/java/PikaBot/pikabot.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     _________________________________","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"     Hello! I\u0027m PikaBot","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"     What can I do for you? ã‚·","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"     _________________________________","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dionegoh":8,"-":15}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"[E][X] eat dinner (at: 26-Jan-2022)","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"[D][ ] finish assignment (by: 26-Jan-2022)","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"dionegoh":2}},{"path":"src/main/java/pikabot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.DeadlineCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.DeleteCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.EventCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.InvalidCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.ListCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.MarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.TodoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.UnmarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"import pikabot.exception.DeadlineException;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"import pikabot.exception.EventException;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"import pikabot.exception.TodoException;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":" * Parses user input from CLI into a Task command.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"     * Returns a command after parsing input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"     * @param inputArr Array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"     * @return Command.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"    public static Command parseCommand(String[] inputArr) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"        switch(inputArr[0].toLowerCase(Locale.ROOT)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"            return new DeadlineCommand(inputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"        case \"delete\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"            return new DeleteCommand(inputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"        case \"event\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"            return new EventCommand(inputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"        case \"list\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"dionegoh"},"content":"            return new ListCommand(inputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"dionegoh"},"content":"        case \"mark\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"dionegoh"},"content":"            return new MarkCommand(inputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"dionegoh"},"content":"        case \"todo\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"dionegoh"},"content":"            return new TodoCommand(inputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"dionegoh"},"content":"        case \"unmark\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"dionegoh"},"content":"            return new UnmarkCommand(inputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"dionegoh"},"content":"        default: {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"dionegoh"},"content":"            return new InvalidCommand(inputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"dionegoh"},"content":"     * Returns a Todo command after parsing input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"dionegoh"},"content":"     * @param todoArray String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"dionegoh"},"content":"     * @return Todo command.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"dionegoh"},"content":"     * @throws TodoException If input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"dionegoh"},"content":"    public static Todo parseTodo(String[] todoArray) throws TodoException {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"dionegoh"},"content":"        if (todoArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"dionegoh"},"content":"            throw new TodoException();","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"dionegoh"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"dionegoh"},"content":"            String description \u003d todoArray[1];","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"dionegoh"},"content":"            return new Todo(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"dionegoh"},"content":"     * Returns a Deadline commmand after parsing input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"dionegoh"},"content":"     * @param deadlineArray String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"dionegoh"},"content":"     * @return Deadline command.","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"dionegoh"},"content":"     * @throws DeadlineException If input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"dionegoh"},"content":"    public static Deadline parseDeadline(String[] deadlineArray) throws DeadlineException {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"dionegoh"},"content":"        if (deadlineArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"dionegoh"},"content":"            throw new DeadlineException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"dionegoh"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"dionegoh"},"content":"            String[] deadlineDetails \u003d deadlineArray[1].split(\"/by \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"dionegoh"},"content":"            if (deadlineDetails.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"dionegoh"},"content":"                throw new DeadlineException(\"The description of a deadline must contain \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"dionegoh"},"content":"                    \"a deadline in the numerical format YYYY-MM-DD\");","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"dionegoh"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"dionegoh"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"dionegoh"},"content":"                    DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"dionegoh"},"content":"                    return new Deadline(deadlineDetails[0], LocalDate.parse(deadlineDetails[1], dtf));","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"dionegoh"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"dionegoh"},"content":"                    throw new DeadlineException(\"Invalid deadline! Deadline has to be a \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"dionegoh"},"content":"                        \"valid date in numerical format YYYY-MM-DD\");","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"dionegoh"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"dionegoh"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"dionegoh"},"content":"     * Returns an Event command after parsing input from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"dionegoh"},"content":"     * @param eventArray String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"dionegoh"},"content":"     * @return Event command.","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"dionegoh"},"content":"     * @throws EventException If input is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"dionegoh"},"content":"    public static Event parseEvent(String[] eventArray) throws EventException {","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"dionegoh"},"content":"        if (eventArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"dionegoh"},"content":"            throw new EventException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"dionegoh"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"dionegoh"},"content":"            String[] eventDetails \u003d eventArray[1].split(\"/at \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"dionegoh"},"content":"            if (eventDetails.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"dionegoh"},"content":"                throw new EventException(\"The description of an event must contain a date in \" +","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"dionegoh"},"content":"                    \"the numerical format YYYY-MM-DD\");","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"dionegoh"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"dionegoh"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"dionegoh"},"content":"                    DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"dionegoh"},"content":"                    return new Event(eventDetails[0], LocalDate.parse(eventDetails[1], dtf));","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"dionegoh"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"dionegoh"},"content":"                    throw new EventException(\"Invalid exception! Event has to have a valid date in \" +","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"dionegoh"},"content":"                        \"numerical format YYYY-MM-DD\");","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"dionegoh"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"dionegoh"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":135}},{"path":"src/main/java/pikabot/PikaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":" * Runs the whole application PikaBot, an application","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":" * that serves as a ChatBot to keep track of your tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"public class PikaBot {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"    static String FILEPATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"     * Boots up PikaBot application.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"     * @param args Command line arguments entered by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"        Ui.printWelcomeText();","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"        if (storage.doesFileExist()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"                taskList \u003d Storage.fileToTaskList(new File(FILEPATH));","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"                Ui.printExceptionMessage(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"        String[] strInputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"        while (!strInputArr[0].equals(\"bye\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"            Command command \u003d Parser.parseCommand(strInputArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"            command.execute(taskList, storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"            strInputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"dionegoh"},"content":"        Ui.printClosingText();","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"dionegoh"},"content":"        sc.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":53}},{"path":"src/main/java/pikabot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":" * Saves the tasks in the computer whenever the task list changes and","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":" * loads the data from the computer when PikaBot starts up.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"    String filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"     * @param filePath Path of data file on computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"     * Checks if data file exists on user\u0027s computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"     * @return Boolean value whether data file exists.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"    public boolean doesFileExist() {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"        return Files.exists(Paths.get(filePath));","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"dionegoh"},"content":"     * Parses data file from computer into a TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"dionegoh"},"content":"     * @param f Data file to be read from.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"dionegoh"},"content":"     * @return TaskList of tasks parsed from data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"dionegoh"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"dionegoh"},"content":"    public static TaskList fileToTaskList(File f) throws FileNotFoundException {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"dionegoh"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"dionegoh"},"content":"        ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"dionegoh"},"content":"        TaskList taskList \u003d new TaskList(arrList);","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"dionegoh"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"dionegoh"},"content":"            String taskStr \u003d sc.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"dionegoh"},"content":"            char taskType \u003d taskStr.charAt(1);","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"dionegoh"},"content":"            boolean isTaskDone \u003d (taskStr.charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"dionegoh"},"content":"            taskStr \u003d taskStr.substring(7);","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"dionegoh"},"content":"            if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"dionegoh"},"content":"                String[] taskDetails \u003d taskStr.split(\"\\\\(by: \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"dionegoh"},"content":"                String description \u003d taskDetails[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"dionegoh"},"content":"                String date \u003d taskDetails[1].substring(0, taskDetails[1].length()-1);","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"dionegoh"},"content":"                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"d-MMM-yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"dionegoh"},"content":"                Deadline deadline \u003d new Deadline(description, LocalDate.parse(date, dtf));","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"dionegoh"},"content":"                if (isTaskDone) {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"dionegoh"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"dionegoh"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"dionegoh"},"content":"                taskList.add(deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"dionegoh"},"content":"            } else if (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"dionegoh"},"content":"                String[] taskDetails \u003d taskStr.split(\"\\\\(at: \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"dionegoh"},"content":"                String description \u003d taskDetails[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"dionegoh"},"content":"                String date \u003d taskDetails[1].substring(0, taskDetails[1].length()-1);","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"dionegoh"},"content":"                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"d-MMM-yyyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"dionegoh"},"content":"                Event event \u003d new Event(description, LocalDate.parse(date, dtf));","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"dionegoh"},"content":"                if (isTaskDone) {","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"dionegoh"},"content":"                    event.markAsDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"dionegoh"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"dionegoh"},"content":"                taskList.add(event);","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"dionegoh"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"dionegoh"},"content":"                Todo todo \u003d new Todo(taskStr);","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"dionegoh"},"content":"                if (isTaskDone) {","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"dionegoh"},"content":"                    todo.markAsDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"dionegoh"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"dionegoh"},"content":"                taskList.add(todo);","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"dionegoh"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"dionegoh"},"content":"        return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"dionegoh"},"content":"     * Writes tasks to data file on computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"dionegoh"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"dionegoh"},"content":"     * @throws IOException If the named file exists","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"dionegoh"},"content":"     * but is a directory rather than a regular file,","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"dionegoh"},"content":"     * does not exist but cannot be created, or cannot","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"dionegoh"},"content":"     * be opened for any other reason.","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"dionegoh"},"content":"    public void TaskListToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"dionegoh"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"dionegoh"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"dionegoh"},"content":"            fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"dionegoh"},"content":"        fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"dionegoh"},"content":"     * Adds new task to data file on computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"dionegoh"},"content":"     * @param taskToAdd Task to be added to data file on computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"dionegoh"},"content":"     * @throws IOException If the named file exists but is","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"dionegoh"},"content":"     * a directory rather than a regular file, does not exist","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"dionegoh"},"content":"     * but cannot be created, or cannot be opened for any other reason.","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"dionegoh"},"content":"    public void appendToFile(Task taskToAdd) throws IOException{","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"dionegoh"},"content":"        if (! doesFileExist()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"dionegoh"},"content":"            String[] pathDetails \u003d filePath.split(\"/\", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"dionegoh"},"content":"            String folderStr \u003d pathDetails[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"dionegoh"},"content":"            File folder \u003d new File(folderStr);","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"dionegoh"},"content":"            folder.mkdir();","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"dionegoh"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"dionegoh"},"content":"        fw.write(taskToAdd.toString() + \"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"dionegoh"},"content":"        fw.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"dionegoh":136}},{"path":"src/main/java/pikabot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":" * Contains tasks and performs operations to add, delete, mark, and find tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"     * Constructs a TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"     * @param taskList ArrayList of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"        return this.taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"     * Calculates the current number of tasks in the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"     * @return Number of tasks in the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"    public int noOfTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"     * Retrieves a task at a particular index in the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"     * @param index Index of task to be retrieved, zero-based indexing.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"     * @return Task retrieved.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"dionegoh"},"content":"     * @param task Task to be added to the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"dionegoh"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"dionegoh"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"dionegoh"},"content":"     * Removes a task from the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"dionegoh"},"content":"     * @param taskNumber Task to be removed from the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"dionegoh"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"dionegoh"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"dionegoh"},"content":"            taskList.remove(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"dionegoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionCustomisedMessage(\"Invalid task number!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"dionegoh"},"content":"     * Marks a task from the TaskList as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"dionegoh"},"content":"     * @param taskNumber Index of task to be marked as done, one-based indexing.","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"dionegoh"},"content":"    public void markTaskAsDone(int taskNumber) {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"dionegoh"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"dionegoh"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"dionegoh"},"content":"            currTask.markAsDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"dionegoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionCustomisedMessage(\"Invalid task number!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"dionegoh"},"content":"     * Unmarks a task from the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"dionegoh"},"content":"     * @param taskNumber Index of task to be unmarked, one-based indexing.","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"dionegoh"},"content":"    public void markTaskAsUndone(int taskNumber) {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"dionegoh"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"dionegoh"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"dionegoh"},"content":"            currTask.markAsUndone();","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"dionegoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionCustomisedMessage(\"Invalid task number!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"dionegoh"},"content":"     * Finds tasks with description containing a keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"dionegoh"},"content":"     * @param word Keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"dionegoh"},"content":"     * @return An arrayList containing tasks with the keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"dionegoh"},"content":"    public ArrayList\u003cTask\u003e find(String word) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"dionegoh"},"content":"        ArrayList\u003cTask\u003e matchedArr \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"dionegoh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"dionegoh"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"dionegoh"},"content":"            if (description.contains(word)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"dionegoh"},"content":"                matchedArr.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"dionegoh"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"dionegoh"},"content":"        return matchedArr;","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":116}},{"path":"src/main/java/pikabot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":" * Interacts with the user by printing out statements.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"    static String LINE \u003d \"_________________________________\";","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"    static String INDENTATION \u003d \"     \";","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"     * Prints out welcome message when PikaBot starts running.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"    public static void printWelcomeText() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE + \"\\n\" + INDENTATION + \"Hello! I\u0027m PikaBot\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"            \"\\n\" + INDENTATION + \"What can I do for you? ã‚·\\n\" + INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"     * Prints out exit text when PikaBot is closed.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"    public static void printClosingText() {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE + \"\\n\" + INDENTATION + \"Bye. Hope to see you again!\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"            \"\\n\" + INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"     * Prints out list of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList containing tasks to print.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"    public static void printListOfTasks(TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + \"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"        int length \u003d taskList.noOfTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"        while (taskNumber \u003c\u003d length) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"            System.out.println(INDENTATION + taskNumber + \".\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"                taskList.get(taskNumber - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"            taskNumber++;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"dionegoh"},"content":"     * Prints out indication that a task has been marked as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"dionegoh"},"content":"     * @param task Task that has been marked as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"dionegoh"},"content":"    public static void indicateMarked(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"dionegoh"},"content":"     * Prints out indication that a task has been unmarked.","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"dionegoh"},"content":"     * @param task Task that has been unmarked.","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"dionegoh"},"content":"    public static void indicateUnmarked(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + \"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"dionegoh"},"content":"     * Prints out indication that a task has been added.","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"dionegoh"},"content":"     * @param task Task that has been added.","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList that task has been added to.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"dionegoh"},"content":"    public static void indicateAddedTask(Task task, TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE + \"\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"dionegoh"},"content":"            INDENTATION + \"Got it. I\u0027ve added this task:\" + \"\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"dionegoh"},"content":"            INDENTATION + \"  \" + task + \"\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"dionegoh"},"content":"            INDENTATION + \"Now you have \" + taskList.noOfTasks() + \" tasks in the list.\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"dionegoh"},"content":"            \"\\n\" + INDENTATION + LINE);","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"dionegoh"},"content":"     * Prints out indication that a task has been removed.","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"dionegoh"},"content":"     * @param task Task that has been removed.","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList that task has been removed from.","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"dionegoh"},"content":"    public static void indicateRemovedTask(Task task, TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + \"  \" + task);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + \"Now you have \" + taskList.noOfTasks() + \" tasks in the list\");","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"dionegoh"},"content":"     * Prints out exception message.","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"dionegoh"},"content":"     * @param e Exception caught.","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"dionegoh"},"content":"    public static void printExceptionMessage(Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"dionegoh"},"content":"     * Prints out customised exception message.","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"dionegoh"},"content":"     * @param message Customised message.","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"dionegoh"},"content":"    public static void printExceptionCustomisedMessage(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + message);","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"dionegoh"},"content":"        System.out.println(INDENTATION + LINE);","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":122}},{"path":"src/main/java/pikabot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":" * Represents a command given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"     * Executes the command, depending on the type of command given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList containing existing list of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"    public abstract void execute(TaskList taskList, Storage storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":18}},{"path":"src/main/java/pikabot/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"import pikabot.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"import pikabot.exception.DeadlineException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":" * Represents a command to create a Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    String[] deadlineCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"     * Constructs a DeadlineCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"     * @param deadlineCommand String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"    public DeadlineCommand(String[] deadlineCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"        this.deadlineCommand \u003d deadlineCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"     * Executes DeadlineCommand by creating a Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList to add the Deadline task to.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"            Deadline currDeadline \u003d Parser.parseDeadline(deadlineCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"            taskList.add(currDeadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"            Ui.indicateAddedTask(currDeadline, taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"            storage.appendToFile(currDeadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"        } catch (DeadlineException | IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionMessage(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionCustomisedMessage(\"Invalid deadline! Deadline has to \" +","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"                \"be a valid date in numerical format YYYY-MM-DD.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":50}},{"path":"src/main/java/pikabot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"    String[] deleteCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"     * Constructs a DeleteCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"     * @param deleteCommand String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"    public DeleteCommand(String[] deleteCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"        this.deleteCommand \u003d deleteCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"     * Executes DeleteCommand by deleting a task from TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList containing task to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"        int taskNumberToDelete \u003d Integer.parseInt(deleteCommand[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"        Task taskToDelete \u003d taskList.get(taskNumberToDelete - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"        taskList.delete(taskNumberToDelete);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"            storage.TaskListToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionMessage(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"        Ui.indicateRemovedTask(taskToDelete, taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":47}},{"path":"src/main/java/pikabot/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"import pikabot.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"import pikabot.exception.EventException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":" * Represents a command to create an EventCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    String[] eventCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"     * Constructs an EventCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"     * @param eventCommand String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"    public EventCommand(String[] eventCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"        this.eventCommand \u003d eventCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"     * Executes EventCommand by creating an Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList to add the Event task to.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"            Event currEvent \u003d Parser.parseEvent(eventCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"            taskList.add(currEvent);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"            Ui.indicateAddedTask(currEvent, taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"            storage.appendToFile(currEvent);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"        } catch (EventException | IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionMessage(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionCustomisedMessage(\"The description of an event must\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"dionegoh"},"content":"                \"contain a date in the numerical format YYYY-MM-DD\");","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":52}},{"path":"src/main/java/pikabot/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"import pikabot.exception.InvalidTaskCommandException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":" * Represents a command that is invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    String[] invalidCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"     * Constructs an InvalidCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     * @param invalidCommand String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"    public InvalidCommand(String[] invalidCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"        this.invalidCommand \u003d invalidCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"     * Throws an InvalidTaskCommandException when method is invoked.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"     * @throws InvalidTaskCommandException When method is invoked.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"    public static void invalidTask() throws InvalidTaskCommandException {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"        throw new InvalidTaskCommandException();","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"     * Executes InvalidCommand by printing out a InvalidTaskCommandException message.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList containing current tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"            invalidTask();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"        } catch (InvalidTaskCommandException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionMessage(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":47}},{"path":"src/main/java/pikabot/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":" * Represents a command to list all existing tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"    String[] listCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"     * Constructs a ListCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"     * @param listCommand String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    public ListCommand(String[] listCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"        this.listCommand \u003d listCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"     * Executes ListCommand by printing out existing tasks in a list.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList containing list of tasks to print.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"        Ui.printListOfTasks(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":33}},{"path":"src/main/java/pikabot/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":" * Represents a command that marks a task as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"    String[] markCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"     * Constructs a MarkCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"     * @param markCommand String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    public MarkCommand(String[] markCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"        this.markCommand \u003d markCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"     * Executes MarkCommand by marking a task as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList containing the task to be marked.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"        int taskToMark \u003d Integer.parseInt(markCommand[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"        taskList.markTaskAsDone(taskToMark);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"            storage.TaskListToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionMessage(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"        Ui.indicateMarked(taskList.get(taskToMark - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":44}},{"path":"src/main/java/pikabot/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"import pikabot.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"import pikabot.exception.TodoException;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":" * Represents a command to create a Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    String[] todoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"     * Constructs a TodoCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"     * @param todoCommand String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"    public TodoCommand(String[] todoCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"        this.todoCommand \u003d todoCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"     * Executes TodoCommand by creating a Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList to add the Todo task to.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"            Todo currTodo \u003d Parser.parseTodo(todoCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"            taskList.add(currTodo);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"            Ui.indicateAddedTask(currTodo, taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"            storage.appendToFile(currTodo);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"        } catch (TodoException | IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionMessage(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":48}},{"path":"src/main/java/pikabot/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":" * Represents a command that unmarks a marked task.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"    String[] unmarkCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"     * Constructs an UnmarkCommand.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"     * @param markCommand String array containing input string from user.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    public UnmarkCommand(String[] markCommand) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"        this.unmarkCommand \u003d markCommand;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"     * Executes UnmarkCommand by unmarking a marked task.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"     * @param taskList TaskList containing the task to be unmarked.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"     * @param storage Storage to update data file in computer.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"        int taskToUnmark \u003d Integer.parseInt(unmarkCommand[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"        taskList.markTaskAsUndone(taskToUnmark);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"            storage.TaskListToFile(taskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"            Ui.printExceptionMessage(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"        Ui.indicateUnmarked(taskList.get(taskToUnmark - 1));","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":45}},{"path":"src/main/java/pikabot/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":" * Represents an exception thrown when an invalid Deadline task is given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"public class DeadlineException extends PikaBotException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"     * Constructs a DeadlineException.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"     * @param message Message to be printed when DeadlineException is thrown.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    public DeadlineException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"        super(\"â˜¹ OOPS!!! \" + message);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"dionegoh":17}},{"path":"src/main/java/pikabot/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":" * Represents an exception thrown when an invalid Event task is given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"public class EventException extends PikaBotException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"     * Constructs an EventException.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"     * @param message Message to be printed when EventException is thrown.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    public EventException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"        super(\"â˜¹ OOPS!!! \" + message);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"dionegoh":18}},{"path":"src/main/java/pikabot/exception/InvalidTaskCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":" * Represents an exception thrown when an invalid Task is given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"public class InvalidTaskCommandException extends PikaBotException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"     * Constructs an InvalidTaskCommandException.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"    public InvalidTaskCommandException() {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"dionegoh":14}},{"path":"src/main/java/pikabot/exception/PikaBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":" * Represents an exception specific to PikaBot application.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"public class PikaBotException extends Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"     * Constructs a PikaBotException.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"     * @param message Message to be printed when a PikaBotException is thrown.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    public PikaBotException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":16}},{"path":"src/main/java/pikabot/exception/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":" * Represents an exception thrown when an invalid Todo task is given by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"public class TodoException extends PikaBotException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"     * Constructs a TodoException.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"    public TodoException() {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"        super(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"dionegoh":14}},{"path":"src/main/java/pikabot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":" * Represents a Task with a date as a deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"     * Constructs a Deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"     * @param byDate Date that task has to be completed by.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    public Deadline(String description, LocalDate byDate) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"     * Converts Deadline to a formatted string.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"     * @return Formatted string representation of Deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"        return \"[D]\" + super.toString() + \"(by: \" +","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"            this.byDate.format(DateTimeFormatter.ofPattern(\"d-MMM-yyyy\")) + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dionegoh":34}},{"path":"src/main/java/pikabot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":" * Represents a Task with an event date.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"    protected LocalDate dateAt;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"     * Constructs an Event.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"     * @param dateAt Date of event.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    public Event(String description, LocalDate dateAt) {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"        this.dateAt \u003d dateAt;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"     * Converts Event to a formatted string.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"     * @return Formatted string representation of Event.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"        return \"[E]\" + super.toString() + \"(at: \" +","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"            this.dateAt.format(DateTimeFormatter.ofPattern(\"d-MMM-yyyy\")) + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dionegoh":35}},{"path":"src/main/java/pikabot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":" * Represents a task with a description and keeps track of whether the task is done.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"     * Constructs a Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"     * Retrieves status of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"     * @return String indicating whether task is done.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"     * Updates status of Task to done.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"     * Updates status of Task to not done.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"dionegoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"dionegoh"},"content":"     * Retrieves description of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"dionegoh"},"content":"     * @return String description of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"dionegoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"dionegoh"},"content":"        return this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"dionegoh"},"content":"     * Converts Task to a formatted string.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"dionegoh"},"content":"     * @return Formatted string representation of Task.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"dionegoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"dionegoh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dionegoh":62}},{"path":"src/main/java/pikabot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":" * Represents a Task that is a Todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"     * Constructs a Todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"     * Converts Todo to a formatted string.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"     * @return Formatted string representation of Todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dionegoh":26}},{"path":"src/test/java/pikabot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import pikabot.exception.TodoException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"    public void todo_withNoDescription_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"            String[] strArr \u003d {\"todo\"};","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"            Todo currTodo \u003d Parser.parseTodo(strArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"            fail();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"            assertEquals(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\",","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"    public void deadline_withInvalidDateFormat_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"            String[] strArr \u003d {\"deadline\", \"finish hw /by 09-08-2022\"};","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"            Deadline currDeadline \u003d Parser.parseDeadline(strArr);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"            fail();","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"            assertEquals(\"â˜¹ OOPS!!! Invalid deadline! Deadline \" +","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"                    \"has to be a valid date in numerical format YYYY-MM-DD\", e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":40}},{"path":"src/test/java/pikabot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"package pikabot;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"import pikabot.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"dionegoh"},"content":"public class TaskListTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"dionegoh"},"content":"    TaskList tasklist;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"dionegoh"},"content":"    public void initialiseDummy() {    //Dummy taskList containing a task","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"dionegoh"},"content":"        ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"        Todo todo \u003d new Todo(\"Testing!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"dionegoh"},"content":"        arrList.add(todo);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"dionegoh"},"content":"        this.tasklist \u003d new TaskList(arrList);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"dionegoh"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"dionegoh"},"content":"    public void addedTaskToList_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"        initialiseDummy();","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"dionegoh"},"content":"        this.tasklist.add(new Todo(\"Test again!\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"dionegoh"},"content":"        String addedTaskStr \u003d this.tasklist.get(1).toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"dionegoh"},"content":"        assertEquals(\"[T][ ] Test again!\", addedTaskStr);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"dionegoh"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"dionegoh"},"content":"    public void markTaskInTaskList_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"dionegoh"},"content":"        initialiseDummy();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"dionegoh"},"content":"        this.tasklist.markTaskAsDone(1);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"dionegoh"},"content":"        String todoStr \u003d this.tasklist.get(0).toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"dionegoh"},"content":"        assertEquals(\"[T][X] Testing!\", todoStr);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"dionegoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"dionegoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"dionegoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"dionegoh":37}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"[E][ ] wake up (at: 26-Jan-2022)","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"[D][ ] submit homework (by: 30-Jan-2022)","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"dionegoh":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dionegoh"},"content":"todo sleep","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"dionegoh"},"content":"event wake up /at 2022-01-26","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"dionegoh"},"content":"event sleep /at tmr","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"dionegoh"},"content":"deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"dionegoh"},"content":"deadline submit homework /by 2022-01-30","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"dionegoh"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"dionegoh"},"content":"delete 1","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"dionegoh"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"dionegoh"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"dionegoh":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"dionegoh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/pikabot/*.java","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"dionegoh"},"content":"java -classpath ../bin pikabot.PikaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dionegoh":2,"-":36}}]
