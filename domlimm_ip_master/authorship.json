[{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.commands;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import duke.common.Utils;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import duke.constants.Constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":" * Adds task to list based on user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    private String fullCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     * Creates new AddCommand object that receives user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"     * @param fullCommand fullCommand holds contents of the task to be added.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    public AddCommand(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"     * Executes the add command.","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"        String[] taskArr \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        String type \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"        String textToAdd \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"            taskArr \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"            type \u003d taskArr[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"            if (type.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"                String[] taskData \u003d taskArr[1].split(\" /by \");","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"                LocalDate by \u003d LocalDate.parse(taskData[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"                task \u003d new Deadline(taskData[0], by);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"                textToAdd \u003d String.format(","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"                        \"D | %s | %s | %s\",","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"                        (task.getCompleted()) ? \"1\" : \"0\",","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"                        task.getDescription(),","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"                        taskData[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"            } else if (type.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"                String[] taskData \u003d taskArr[1].split(\" /at \");","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"                LocalDate at \u003d LocalDate.parse(taskData[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"                task \u003d new Event(taskData[0], at);","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"                textToAdd \u003d String.format(","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"                        \"E | %s | %s | %s\",","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"                        (task.getCompleted()) ? \"1\" : \"0\",","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"                        task.getDescription(),","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"                        taskData[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"            } else if (type.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"                if (taskArr[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"                    throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"                ","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"                task \u003d new Todo(taskArr[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"                textToAdd \u003d String.format(","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"                        \"T | %s | %s\",","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"                        (task.getCompleted()) ? \"1\" : \"0\",","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"                        task.getDescription());","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"            taskList.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"            storage.writeToFile(textToAdd);","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"            int noOfTasks \u003d taskList.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"            String pluralTask \u003d (noOfTasks \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"domlimm"},"content":"            result +\u003d \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"domlimm"},"content":"            result +\u003d \"Now you have \" + noOfTasks + \" \" + pluralTask + \" in the list.\";","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"domlimm"},"content":"            ui.output(result);","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"domlimm"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"domlimm"},"content":"            if (Utils.isValidType(type)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"domlimm"},"content":"                if (Utils.isMissingData(taskArr)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"                    ui.output(\"OOPS!!! Some data of your \" + type + \" task is missing. :-(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"domlimm"},"content":"                    return;","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"domlimm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"domlimm"},"content":"                ui.output(\"OOPS!!! The description of a \" + type + \" cannot be empty. :-(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"domlimm"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"domlimm"},"content":"                ui.output(Constants.UNKNOWN_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"domlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.STORAGE_ADD_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"domlimm"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.INVALID_DATE_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":108}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.commands;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":" * Requires individual command that extends this class to implement said methods.","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"     * Executes the individual command.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"     * @param taskList taskList holds the list of tasks and its Create, Retrieve, Update, Delete functions.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"     * @param ui ui displays feedback to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"     * @param storage storage handles storage reads and writes.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"     * @throws DukeException Throw when an error occurs during command execution.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"     * Notifies main class when user wants to exit the program.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"     * @return Returns false always until exit command is run.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":28}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.commands;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import duke.common.Utils;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import duke.constants.Constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":" * Deletes task from list based on specified index by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    private String args;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"     * Creates new DeleteCommand object that receives the index by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"     * @param args args holds the task number to be deleted.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    public DeleteCommand(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"    ","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"     * Executes the delete command.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"            if (this.args.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"            if (!Utils.isNumeric(this.args, ui)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"            int index \u003d Integer.parseInt(this.args);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"            int noOfTasks \u003d taskList.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"            String task \u003d taskList.getTasks().get(index - 1).toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"            ","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"            taskList.delete(--index);","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"            storage.writeToFile(\"\", index, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"            noOfTasks \u003d taskList.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"            String result \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"            String pluralTask \u003d (noOfTasks \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"            result +\u003d (noOfTasks \u003e 0)","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"                    ? \"  \" + task + \"\\nNow you have \" + noOfTasks + \" \" + pluralTask + \" in the list.\"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"                    : \"  \" + task + \"\\nNow you have no task left.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"            ui.output(result);","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.INVALID_INDEX_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.INVALID_DELETE_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.STORAGE_DELETE_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":64}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.commands;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":" * Exits the program.","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"     * Executes the exit command.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"        ui.bye();","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"     * Notifies the main function to end the program.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":27}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.commands;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import java.util.List;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    private String args;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    public FindCommand(String args) {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"            ArrayList\u003cTask\u003e allTasks \u003d taskList.getTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"            int length \u003d allTasks.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"            if (length \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"                ui.output(\"No tasks found based on keyword! Also, quit lazing around!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"                return;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"            List\u003cTask\u003e filteredTasks \u003d","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"                    allTasks","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"                    .stream()","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"                    .filter(task -\u003e task.getDescription().contains(this.args))","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"            int filteredLength \u003d filteredTasks.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"            if (filteredLength \u003c 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"                ui.output(\"No tasks found based on keyword! Also, quit lazing around!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"                return;","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"            for (int i \u003d 0; i \u003c filteredLength; ++i) {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"                sb.append(i + 1 + \". \" + filteredTasks.get(i).toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"                if (i + 1 !\u003d length) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"                    sb.append(\"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"            ui.output(sb.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"domlimm":59}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.commands;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":" * Lists all tasks in the task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"     * Executes the list command.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"        int length \u003d taskList.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"        if (length \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"            ui.output(\"No tasks found! Quit lazing around!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"            return;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskList.getTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        for (int i \u003d 0; i \u003c length; ++i) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"            sb.append(i + 1 + \". \" + allTasks.get(i).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"            if (i + 1 !\u003d length) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        ui.output(sb.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":41}},{"path":"src/main/java/duke/commands/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.commands;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import duke.constants.Constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":" * Search task list based on keyword.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    private String args;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"     * Creates SearchCommand object with user input keyword.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"     * @param args args is the keyword that user specified.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    public SearchCommand(String args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"     * Executes the search command.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"            if (this.args.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"            LocalDate date \u003d LocalDate.parse(this.args);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"            int index \u003d 0;","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"            ArrayList\u003cTask\u003e allTasks \u003d taskList.getTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"            int length \u003d allTasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"            if (length \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"                ui.output(\"No tasks found based on given date! Also, quit lazing around!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"                return;","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"            sb.append(\"Here are the tasks with date, \"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"                    + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"                    + \", in your list:\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"            for (int i \u003d 0; i \u003c length; ++i) {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"                boolean shouldAppend \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"                Task task \u003d allTasks.get(i);","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"                if (task.getType() \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"                    if (deadline.getDate().isEqual(date)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"                        sb.append(++index + \". \" + deadline.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"                        shouldAppend \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"                } else if (task.getType() \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"                    if (event.getDate().isEqual(date)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"                        sb.append(++index + \". \" + event.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"                        shouldAppend \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"                if (shouldAppend) {","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"                    sb.append(\"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"            ui.output((index \u003e 0) ? sb.toString() : Constants.NO_TASK_SEARCH_MSG);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.INVALID_DATE_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":85}},{"path":"src/main/java/duke/commands/ToggleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.commands;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import duke.common.Utils;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import duke.constants.Constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":" * Marks whether a task is done.","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"public class ToggleCommand extends Command {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    private String args;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    private boolean isMark;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"     * Creates new ToggleCommand object that receives user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     * @param args args is used to check for user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"     * @param isMark isMark indicates if a user has done the task.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    public ToggleCommand(String args, boolean isMark) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"        this.args \u003d args;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"     * Executes the toggle command.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"            if (this.args.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"            if (!Utils.isNumeric(this.args, ui)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"            int index \u003d Integer.parseInt(this.args);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"            Task updatedTask \u003d taskList.toggleCompleted(this.isMark, --index);","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"            String taskString \u003d updatedTask.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"            String updateString \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"            if (taskString.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"                String date \u003d ((Deadline) updatedTask)","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"                        .getDate()","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"                        .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"                updateString \u003d String.format(","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"                        \"D | %s | %s | %s\",","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"                        (updatedTask.getCompleted()) ? \"1\" : \"0\",","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"                        updatedTask.getDescription(),","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"                        date);","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"            } else if (taskString.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"                String date \u003d ((Event) updatedTask)","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"                        .getDate()","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"                        .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"                updateString \u003d String.format(","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"                        \"E | %s | %s | %s\",","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"                        (updatedTask.getCompleted()) ? \"1\" : \"0\",","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"                        updatedTask.getDescription(),","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"                        date);","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"                updateString \u003d String.format(","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"                        \"T | %s | %s\",","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"                        (updatedTask.getCompleted()) ? \"1\" : \"0\",","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"                        updatedTask.getDescription());","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"            ","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"            storage.writeToFile(updateString, index, false);","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"            String output \u003d (isMark)","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"                    ? \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"domlimm"},"content":"                    : \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"            ui.output(output + taskString);","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.INVALID_INDEX_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"domlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.STORAGE_UPDATE_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"domlimm"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.INVALID_MARK_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":94}},{"path":"src/main/java/duke/common/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.common;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":" * This is a custom exception class for Duke that extends the Exception class.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"     * Creates a DukeException object that receives a string for when","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"     * a DukeException is thrown and to be displayed to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"     * @param error Error contains the message passed by a function that throws DukeException.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"    public DukeException(String error) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"        super(error);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"domlimm":15}},{"path":"src/main/java/duke/common/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.common;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":" * Provides utilities used when processing commands given by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"public class Utils {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"     * Checks if the add command specifically has either todo, event or deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"     * @param type Type is the first word input by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"     * @return If add command has a valid type.","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    public static boolean isValidType(String type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"        if (type.equalsIgnoreCase(\"todo\") ||","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"                type.equalsIgnoreCase(\"event\") ||","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"                type.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"            return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     * Checks if an input of event or deadline task has incompleted data provided by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"     * @param taskArr TaskArr is an array broken down from the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"     * @return If a new deadline or event has missing data in it.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"    public static boolean isMissingData(String[] taskArr) {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"        if (taskArr.length \u003c 3 \u0026\u0026 !taskArr[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"            return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"     * Checks if user\u0027s input excluding the command itself, specifically the arguments, are numeric. ","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"     * @param arg arg is the argument provided by user.","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"     * @param ui ui displays feedback to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"     * @return If user input argument is numeric.","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"    public static boolean isNumeric(String arg, Ui ui) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        if (arg \u003d\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"            return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"            Integer.parseInt(arg);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"            return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":56}},{"path":"src/main/java/duke/constants/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":" * Holds all the immutable strings used for displaying to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"public final class Constants {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"    private Constants() {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    public static final String BOT_ART \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"\t    \"     /\\\\   | |   | |          \\n\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"\t    \"    /  \\\\  | |__ | |__  _   _ \\n\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"\t    \"   / /\\\\ \\\\ | \u0027_ \\\\| \u0027_ \\\\| | | |\\n\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"\t    \"  / ____ \\\\| |_) | |_) | |_| |\\n\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"\t    \" /_/    \\\\_\\\\_.__/|_.__/ \\\\__, |\\n\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"\t    \"                        __/ |\\n\" +","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"\t    \"                       |___/ \";","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    public static final String BOT_NAME \u003d \"Abby\";","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    public static final String GREET \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"\t\t\tConstants.BOT_ART + \"\\nHello! I\u0027m \"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"\t\t\t+ Constants.BOT_NAME + \"\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"    public static final String BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    public static final String UNKNOWN_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"\t    \t\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    public static final String INVALID_INDEX_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"\t    \t\"OOPS!!! I can\u0027t find that in your task list :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    public static final String BROKEN_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"\t    \t\"YOU BROKE ME :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    public static final String INVALID_MARK_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"\t    \t\"OOPS!!! I need a number to update that task :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    public static final String INVALID_DELETE_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"\t    \t\"OOPS!!! I need a number to delete that task :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    public static final String INVALID_DATE_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"\t    \t\"OOPS!!! I cannot recognise that date format. :-(\"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"\t    \t+ \"\\nAlso, in this date format yyyy-mm-dd please!\";","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    public static final String NO_TASK_SEARCH_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"\t    \t\"I can\u0027t find any tasks of that date. :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"\tpublic static final String STORAGE_ADD_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"\t\t\t\"OOPS!!! Facing some issues in saving your task to disk. :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"    public static final String STORAGE_READ_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"\t    \t\"OOPS!!! Facing some issues in reading your tasks from disk. :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"\tpublic static final String STORAGE_UPDATE_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"\t\t\t\"OOPS!!! Facing some issues in updating your task to disk. :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"\tpublic static final String STORAGE_DELETE_MSG \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"\t\t\t\"OOPS!!! Facing some issues in deleting your task to disk. :-(\";","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"    public static final String FILE_PATH \u003d \"data/\";","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"    public static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":50}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.main;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import duke.constants.Constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":" * Acts as a task manager that keeps tracks of all your tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    ","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"     * Creates a Duke object that initializes all the necessary components for the task manager program.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"     * @param filePath filePath is the relative path to the text file that stores user\u0027s tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"        ","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"            this.taskList \u003d new TaskList(storage.loadFromFile());","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"     * Runs, handles and processes the commands input by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"    public void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        ui.hello();","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"            try {","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"                Parser parser \u003d new Parser(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"                Command c \u003d parser.parse();","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"                ui.output(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"     * Boots up the entire task manager application.","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"     * @param args Args is the command line arguments received from user.","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"        new Duke(Constants.FILE_PATH + Constants.FILE_NAME).run();","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"domlimm":62,"-":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import duke.commands.SearchCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import duke.commands.ToggleCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import duke.common.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import duke.constants.Constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":" * Parses or processes commands given by user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    private String fullCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"     * Creates a new Parser object to be used throughout the lifetime of the program.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"     * @param fullCommand fullCommand is the entire string of the user input.","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    public Parser(String fullCommand) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"     * Parses or processes commands given by user input. Also, processing the arguments if given.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"     * @return The individual command that the user has input.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"     * @throws DukeException If the command is not known to Abby.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"        String[] inputArr \u003d this.fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"        String command \u003d inputArr[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        String args \u003d (inputArr.length \u003e 1) ? inputArr[1] : \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"        } else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        } else if (command.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"            return new ToggleCommand(args, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        } else if (command.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"            return new ToggleCommand(args, false);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"        } else if (command.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"            return new DeleteCommand(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        } else if (command.equalsIgnoreCase(\"search\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"            return new SearchCommand(args);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"        } else if (isAdd(command)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"            return new AddCommand(fullCommand);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"        } else if (command.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"            return new FindCommand(args);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"            throw new DukeException(Constants.UNKNOWN_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"    private boolean isAdd(String command) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"        return command.equalsIgnoreCase(\"todo\") ||","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"                command.equalsIgnoreCase(\"deadline\") ||","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"                command.equalsIgnoreCase(\"event\");","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":64}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import duke.constants.Constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":" * Handles storage reads and writes.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    private String filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"     * Creates a Storage object that allows program to perform storage","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     * reads and writes throughout lifetime of program.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"     * @param filePath filePath is the relative path to the text file that stores user\u0027s tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"     * Loads tasks from local disk file into program tasks list.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"     * @return List of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"     * @throws IOException If error reading from local disk text file.","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        Scanner sc;","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        File directory \u003d new File(Constants.FILE_PATH);","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"            directory.mkdir();","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"            file.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        sc \u003d new Scanner(file);","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"            String[] taskData \u003d task.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"            Boolean completed \u003d Integer.parseInt(taskData[1]) \u003d\u003d 1;","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"            if (task.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"                Todo todo \u003d new Todo(taskData[2]);","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"                todo.setCompleted(completed);","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"                allTasks.add(todo);","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"            } else if (task.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"                Deadline deadline \u003d new Deadline(","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"                        taskData[2], LocalDate.parse(taskData[3]));","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"                deadline.setCompleted(completed);","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"                allTasks.add(deadline);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"            } else if (task.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"                Event event \u003d new Event(","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"                        taskData[2], LocalDate.parse(taskData[3]));","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"                event.setCompleted(completed);","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"                allTasks.add(event);","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"        sc.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"        return allTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"domlimm"},"content":"     * Writes to local disk text file.","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"domlimm"},"content":"     * @param taskString taskString is the task to be written.","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"domlimm"},"content":"     * @throws IOException If error writing to local disk text file.","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"domlimm"},"content":"    public void writeToFile(String taskString) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"domlimm"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"domlimm"},"content":"        fw.write(taskString);","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"domlimm"},"content":"        fw.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"domlimm"},"content":"        fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"domlimm"},"content":"     * Writes to local disk text file. Used for updating and deleting task.","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"domlimm"},"content":"     * @param taskString taskString is the task to be written.","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"domlimm"},"content":"     * @param index index is the task number of this transaction.","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"domlimm"},"content":"     * @param isDelete isDelete is an indicator of updating or deleting of task.","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"domlimm"},"content":"     * @throws IOException If error writing to local disk text file.","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"domlimm"},"content":"    public void writeToFile(String taskString, int index, boolean isDelete) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"domlimm"},"content":"        Path filePath \u003d Paths.get(Constants.FILE_PATH, Constants.FILE_NAME);","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"domlimm"},"content":"        ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"domlimm"},"content":"                Files.readAllLines(filePath, StandardCharsets.UTF_8));","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"domlimm"},"content":"        if (isDelete) {","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"domlimm"},"content":"            fileContent.remove(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"domlimm"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"domlimm"},"content":"            fileContent.set(index, taskString);","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"domlimm"},"content":"        Files.write(filePath, fileContent);","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":120}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" * Represents a deadline task with its description and deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"     * Creates a Deadline task with its description and deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"     * @param description description of deadline task.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"     * @param date date is the deadline of task.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"     * Gets the deadline of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"     * @return Returns the deadline of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        return this.date;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"     * Returns a formatted string of a Deadline task.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"                super.getStatusIcon(),","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"                super.getDescription(),","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"                this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"domlimm":40}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" * Represents an event task with its description and date of event.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"     * Creates an Event task with its description and date of event.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"     * @param description description of event task.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"     * @param date date of event.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    public Event(String description, LocalDate date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"        super(description, \u0027E\u0027);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"     * Gets the date of event of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"     * @return Returns the date of event of this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        return this.date;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"     * Returns a formatted string of an Event task.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"        return String.format(\"[E][%s] %s (at: %s)\",","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"                super.getStatusIcon(),","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"                super.getDescription(),","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"                this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"domlimm":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":" * Represents a parent task for all child tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":" * With its description, completion status and its type i.e. Todo, Deadline or Event.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"    private String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"    private boolean completed;","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"    private char type;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"     * @param type type of the task.","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    public Task(String description, char type) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"        this.completed \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"     * Gets description of task.","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     * @return Description of task.","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"        return this.description;","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"     * Checks if task is completed.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"     * @return Task completed.","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    public boolean getCompleted() {","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        return this.completed;","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"     * Gets the representation of whether task is completed.","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"     * @return X marks task is completed.","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        return (this.completed) ? \"X\" : \" \";","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"     * Gets the type of task.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"     * @return Either Todo, Deadline or Event.","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"    public char getType() {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"        return this.type;","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"     * Updates that task is completed.","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"     * @param setCompleted setCompleted is whether task is done.","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"    public void setCompleted(boolean setCompleted) {","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"        this.completed \u003d setCompleted;","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"     * Returns a formatted string of a general task.","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"domlimm":70}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":" * Holds the list of tasks and its Create, Retrieve, Update, Delete functions.","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"     * Creates a new TaskList object that holds tasks and CRUD functions.","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"     * Creates a new TaskList object that holds tasks and CRUD functions.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"     * @param tasks tasks is the list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"     * Adds task to list.","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     * @param task task is the task to be added.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"     * Gets all tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"     * @return Returns list of tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"     * Marks or unmarks a task.","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"     * @param isMark isMark represents if user wants to mark a task.","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"     * @param index index represents which task the user wants to mark.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"     * @return Returns the updated task.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"    public Task toggleCompleted(boolean isMark, int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        Task updateTask \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"        updateTask.setCompleted(isMark);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        return updateTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"     * Deletes the task.","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"     * @param index index represents which task the user wants to delete.","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"    public void delete(int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"     * @return Returns the number of tasks in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"    public int size() {","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":71}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":" * Represents a todo task with only description of it.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"     * Creates a Todo task with its description.","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"     * @param description description of todo task.","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    ","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"     * Returns a formatted string of a Todo task.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"        return String.format(\"[T][%s] %s\",","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"                super.getStatusIcon(), super.getDescription());","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"domlimm":23}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import duke.constants.Constants;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":" * Displays feedback to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    private Scanner sc;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"     * Creates Ui object to be used throughout the program\u0027s lifetime.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    public Ui() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"     * Greets the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"    public void hello() {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"        output(Constants.GREET);","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     * Displays any feedback to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"     * @param output output is provided by functions that want to display text to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"    public void output(String output) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        String result \u003d","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"                \"____________________________________________________________\\n\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"                + output","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"                + \"\\n____________________________________________________________\\n\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        System.out.printf(\"%s\", result);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"     * Display a message when there is an issue loading from the text file that holds tasks.","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        output(Constants.STORAGE_READ_MSG);","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"    public void bye() {","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"        output(Constants.BYE);","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"     * Takes in user input and cleans up.","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"     * @return Returns the trimmed (no whitespaces around) command for command processing.","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"        String command \u003d sc.nextLine().trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"        return command;","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"     * Shows the error feedback to the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"     * @param errorMsg errorMsg is error feedback to be shown to user.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"    public void showGenericError(String errorMsg) {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"        output(errorMsg);","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"domlimm":70}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    public void dummyDeadline() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-01-21\");","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", date);","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"2022-01-21\", deadline.getDate().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-01-21\");","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", date);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"[D][ ] Test Deadline (by: Jan 21 2022)\", deadline.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"domlimm":25}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"public class EventTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    public void dummyEvent() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-01-21\");","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"        Event event \u003d new Event(\"Test Event\", date);","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"2022-01-21\", event.getDate().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-01-21\");","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"        Event event \u003d new Event(\"Test Event\", date);","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"[E][ ] Test Event (at: Jan 21 2022)\", event.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"domlimm":25}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"    public void dummyTask() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"        Task task \u003d new Task(\"Test Task\", \u0027T\u0027);","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"Test Task\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"        assertEquals(\u0027T\u0027, task.getType());","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"        assertFalse(task.getCompleted());","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"    public void testUnmarkedStatusIcon() {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"        Task task \u003d new Task(\"Test Task\", \u0027T\u0027);","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"    public void testMarkedStatusIcon() {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"        Task task \u003d new Task(\"Test Task\", \u0027T\u0027);","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"        task.setCompleted(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    public void testToggleCompleted() {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"        Task task \u003d new Task(\"Test Task\", \u0027T\u0027);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"        assertFalse(task.getCompleted(), \"Test Task is not done.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        task.setCompleted(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        assertTrue(task.getCompleted(), \"Test Task is done.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"        Task task \u003d new Task(\"Test Task\", \u0027T\u0027);","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"[ ] Test Task\", task.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"domlimm":50}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"    public void dummyTodo() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"        Todo todo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"Test Todo\", todo.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    public void testToString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"        Todo todo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"        assertEquals(\"[T][ ] Test Todo\", todo.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"domlimm":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"todo read book","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"todo join sports club","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"mark 4","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"blah","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"todo adding this again","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"abby breaks!","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"mark 10","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"mark read book","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"unmark 10","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"unmark readbook","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"deadline everything works now? /by NOW!","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"delete 3","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"delete read book","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"domlimm":27}}]
