[{"path":"data/MnskyData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"[D][?] lol /by 2022-05-13","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"[E][?] k /at 2023-12-10 13:20","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"[E][X] j /at 23:04","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"Graphcalibur":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"    private String by;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"    private LocalDate byDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"    private LocalTime byTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"    public Deadline(String taskName, String by, LocalDate byDate, LocalTime byTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"        super(taskName);","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"        String genericTaskname \u003d super.getGenericTaskName();","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"        String dateString \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"        String timeString \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"        boolean dateExists \u003d this.byDate !\u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"        boolean timeExists \u003d this.byTime !\u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"        if (dateExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"            dateString \u003d this.byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        if (timeExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"            timeString \u003d this.byTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        if (dateExists \u0026\u0026 timeExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"            return String.format(\"[D]%s (by: %s, %s)\", genericTaskname, dateString, timeString);","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        } else if (dateExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"            return String.format(\"[D]%s (by: %s)\", genericTaskname, dateString);","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        } else if (timeExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"            return String.format(\"[D]%s (by: %s)\", genericTaskname, timeString);","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"            return String.format(\"[D]%s (by: %s)\", genericTaskname, this.by);","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"    public String getSaveData() {","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        return String.format(\"[D]%s /by %s\",  super.getGenericTaskName(), this.by);","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"Graphcalibur":48}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"    private String at;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"    private LocalDate atDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"    private LocalTime atTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"    public Event(String taskName, String at, LocalDate atDate, LocalTime atTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"        super(taskName);","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"        this.atTime \u003d atTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"        String genericTaskname \u003d super.getGenericTaskName();","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"        String dateString \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"        String timeString \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"        boolean dateExists \u003d this.atDate !\u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"        boolean timeExists \u003d this.atTime !\u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"        if (dateExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"            dateString \u003d this.atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"        if (timeExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"            timeString \u003d this.atTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        if (dateExists \u0026\u0026 timeExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"            return String.format(\"[E]%s (at: %s, %s)\", genericTaskname, dateString, timeString);","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"        } else if (dateExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"            return String.format(\"[E]%s (at: %s)\", genericTaskname, dateString);","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        } else if (timeExists) {","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"            return String.format(\"[E]%s (at: %s)\", genericTaskname, timeString);","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"            return String.format(\"[E]%s (at: %s)\", genericTaskname, this.at);","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"    public String getSaveData() {","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        return String.format(\"[E]%s /at %s\", super.getGenericTaskName(), at);","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"Graphcalibur":49}},{"path":"src/main/java/Mnsky.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"public class Mnsky {","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    private Scanner con;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    private static final String dataFileName \u003d \"data/MnskyData.txt\";","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"     * Constructor for the Mnsky object.","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    public Mnsky() {","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"         this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"         this.con \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"         this.readFromDataFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"     * Prints the passed message with \"MNSKY: \" before it.","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"     * @param msg The message that should be printed after \"MNSKY: \"","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    private void printMnsky(String msg) {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        System.out.print(\"MNSKY: \");","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        System.out.println(msg);","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"     * Prints the greeting message for the chatbot.","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    public void greeting() {","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"Hi, I\u0027m\");","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"MM      MM  NN      NN   SSSSSSS   KK     KK  YY      YY\");","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"MMMM  MMMM  NNNN    NN  SSSS       KK   KK      YY  YY\");","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"MM  MM  MM  NN  NN  NN    SSSSS    KKKKK          YY\");","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"MM      MM  NN    NNNN       SSSS  KK   KK        YY\");","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"MM      MM  NN      NN  SSSSSSS    KK     KK      YY\");","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"I can help!\");","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"     * Retrieves user input from stdin.","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"     * @return The user\u0027s input","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"    private String getInput() {","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        System.out.println();","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"        return this.con.nextLine();","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"     * Prints out the bye messages.","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"    private void bye() {","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"I can help!\");","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"        System.out.println(\"[MNSKY has shut itself down]\");","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"     * Prints out the list of tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"    private void printList() {","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"        if (this.list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"            System.out.println(\"[MNSKY presents an empty task list.]\");","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"        } else {","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"            for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"                System.out.printf(\"%d. %s\\n\", i + 1, this.list.get(i));","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"     * Retrieves and returns the value of the index parameter from the input.","lastModifiedDate":"2022-01-17"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"     * @param command The name of the command that called this function.","lastModifiedDate":"2022-01-17"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"     * @param inputSplit The input, split into an array using space.","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"     * @return The value of the index parameter.","lastModifiedDate":"2022-01-17"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"     * @throws MnskyException Thrown if the index parameter is missing, not an integer, or out of bounds of the list.","lastModifiedDate":"2022-01-17"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"    private int retrieveIndex(String command, String[] inputSplit) throws MnskyException {","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"        if (inputSplit.length \u003c 2) {","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"            throw new MnskyMissingParameterException(command, \"index\");","lastModifiedDate":"2022-01-17"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"        if (!inputSplit[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"            throw new MnskyInvalidParameterException(command, \"index\");","lastModifiedDate":"2022-01-17"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"        int index \u003d Integer.parseInt(inputSplit[1]) - 1;","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"        if (index \u003c 0 || index \u003e\u003d this.list.size()) {","lastModifiedDate":"2022-01-17"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"            throw new MnskyInvalidParameterException(command, \"index\");","lastModifiedDate":"2022-01-17"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"        return index;","lastModifiedDate":"2022-01-17"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":106,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":107,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"     * Marks the task corresponding to the given index parameter as done, if it exists.","lastModifiedDate":"2022-01-17"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"     * @param inputSplit The input, split into an array using space.","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"Graphcalibur"},"content":"     * @throws MnskyException Thrown if the index parameter is missing, not an integer, or out of bounds of the list.","lastModifiedDate":"2022-01-17"},{"lineNumber":111,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":112,"author":{"gitId":"Graphcalibur"},"content":"    private void mark(String[] inputSplit) {","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"Graphcalibur"},"content":"        int index \u003d this.retrieveIndex(\"mark\", inputSplit);","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"Graphcalibur"},"content":"        this.list.get(index).mark();","lastModifiedDate":"2022-01-16"},{"lineNumber":115,"author":{"gitId":"Graphcalibur"},"content":"        System.out.println(this.list.get(index));","lastModifiedDate":"2022-01-16"},{"lineNumber":116,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":117,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":118,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":119,"author":{"gitId":"Graphcalibur"},"content":"     * Unmarks the task corresponding to the given index parameter so it is not done, if it exists.","lastModifiedDate":"2022-01-17"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"     * @param inputSplit The input, split into an array using space.","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"     * @throws MnskyException Thrown if the index parameter is missing, not an integer, or out of bounds of the list.","lastModifiedDate":"2022-01-17"},{"lineNumber":122,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":123,"author":{"gitId":"Graphcalibur"},"content":"    private void unmark(String[] inputSplit) throws MnskyException {","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"        int index \u003d this.retrieveIndex(\"mark\", inputSplit);","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"        this.list.get(index).unmark();","lastModifiedDate":"2022-01-16"},{"lineNumber":126,"author":{"gitId":"Graphcalibur"},"content":"        System.out.println(this.list.get(index));","lastModifiedDate":"2022-01-16"},{"lineNumber":127,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":129,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":130,"author":{"gitId":"Graphcalibur"},"content":"     * Adds the given task to the list while printing a message.","lastModifiedDate":"2022-01-22"},{"lineNumber":131,"author":{"gitId":"Graphcalibur"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2022-01-22"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"Graphcalibur"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"        this.list.add(task);","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"Graphcalibur"},"content":"        System.out.printf(\"[MNSKY added task %s to their list]\\n\", task.getName());","lastModifiedDate":"2022-01-22"},{"lineNumber":136,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":137,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":138,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":139,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a new task by parsing the input.","lastModifiedDate":"2022-01-22"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"     * @param input The input string.","lastModifiedDate":"2022-01-17"},{"lineNumber":141,"author":{"gitId":"Graphcalibur"},"content":"     * @throws MnskyException Thrown if the name parameter is missing.","lastModifiedDate":"2022-01-17"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"     * @return The new task.","lastModifiedDate":"2022-01-22"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"    private Task parseTask(String input) throws MnskyException {","lastModifiedDate":"2022-01-22"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"        if (inputSplit.length \u003c 2) {","lastModifiedDate":"2022-01-22"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"            throw new MnskyMissingParameterException(\"todo\", \"name\");","lastModifiedDate":"2022-01-17"},{"lineNumber":148,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":149,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":150,"author":{"gitId":"Graphcalibur"},"content":"        String taskName \u003d inputSplit[1];","lastModifiedDate":"2022-01-22"},{"lineNumber":151,"author":{"gitId":"Graphcalibur"},"content":"        return new Task(taskName);","lastModifiedDate":"2022-01-22"},{"lineNumber":152,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":153,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":154,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a new deadline (a task with a \"by\" parameter included) by parsing the input.","lastModifiedDate":"2022-01-22"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"     * @param inputSplit The input, split into an array using space.","lastModifiedDate":"2022-01-22"},{"lineNumber":157,"author":{"gitId":"Graphcalibur"},"content":"     * @throws MnskyException Thrown if the name or the by parameter is missing.","lastModifiedDate":"2022-01-17"},{"lineNumber":158,"author":{"gitId":"Graphcalibur"},"content":"     * @return The new deadline.","lastModifiedDate":"2022-01-22"},{"lineNumber":159,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":160,"author":{"gitId":"Graphcalibur"},"content":"    private Deadline parseDeadline(String[] inputSplit) throws MnskyException {","lastModifiedDate":"2022-01-22"},{"lineNumber":161,"author":{"gitId":"Graphcalibur"},"content":"        if (inputSplit.length \u003c 2) {","lastModifiedDate":"2022-01-22"},{"lineNumber":162,"author":{"gitId":"Graphcalibur"},"content":"            throw new MnskyMissingParameterException(\"deadline\", \"name\");","lastModifiedDate":"2022-01-17"},{"lineNumber":163,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":164,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":165,"author":{"gitId":"Graphcalibur"},"content":"        int by_index \u003d 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":166,"author":{"gitId":"Graphcalibur"},"content":"        for (; by_index \u003c inputSplit.length; by_index++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":167,"author":{"gitId":"Graphcalibur"},"content":"            if (inputSplit[by_index].equals(\"/by\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":168,"author":{"gitId":"Graphcalibur"},"content":"                break;","lastModifiedDate":"2022-01-16"},{"lineNumber":169,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":170,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"        if (by_index \u003e\u003d inputSplit.length) {","lastModifiedDate":"2022-01-22"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"            throw new MnskyMissingParameterException(\"deadline\", \"by\");","lastModifiedDate":"2022-01-17"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":176,"author":{"gitId":"Graphcalibur"},"content":"        String deadlineName \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, by_index));","lastModifiedDate":"2022-01-22"},{"lineNumber":177,"author":{"gitId":"Graphcalibur"},"content":"        String by \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, by_index + 1, inputSplit.length));","lastModifiedDate":"2022-01-22"},{"lineNumber":178,"author":{"gitId":"Graphcalibur"},"content":"        LocalDate byDate \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":179,"author":{"gitId":"Graphcalibur"},"content":"        LocalTime byTime \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":180,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":181,"author":{"gitId":"Graphcalibur"},"content":"        // Check to see if there are any dates or times in the first two words after the /by command","lastModifiedDate":"2022-01-22"},{"lineNumber":182,"author":{"gitId":"Graphcalibur"},"content":"        if (by_index + 1 \u003c inputSplit.length) {","lastModifiedDate":"2022-01-22"},{"lineNumber":183,"author":{"gitId":"Graphcalibur"},"content":"            byDate \u003d this.parseDate(inputSplit[by_index + 1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":184,"author":{"gitId":"Graphcalibur"},"content":"            if (byDate !\u003d null \u0026\u0026 by_index + 2 \u003c inputSplit.length) {","lastModifiedDate":"2022-01-22"},{"lineNumber":185,"author":{"gitId":"Graphcalibur"},"content":"                byTime \u003d this.parseTime(inputSplit[by_index + 2]);","lastModifiedDate":"2022-01-22"},{"lineNumber":186,"author":{"gitId":"Graphcalibur"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":187,"author":{"gitId":"Graphcalibur"},"content":"                byTime \u003d this.parseTime(inputSplit[by_index + 1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":188,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":189,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":190,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":191,"author":{"gitId":"Graphcalibur"},"content":"        return new Deadline(deadlineName, by, byDate, byTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":192,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":193,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":194,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":195,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a new event (a task with an \"at\" parameter included) by parsing the input.","lastModifiedDate":"2022-01-22"},{"lineNumber":196,"author":{"gitId":"Graphcalibur"},"content":"     * @param inputSplit The input, split into an array using space.","lastModifiedDate":"2022-01-22"},{"lineNumber":197,"author":{"gitId":"Graphcalibur"},"content":"     * @throws MnskyException Thrown if the name or the at parameter is missing.","lastModifiedDate":"2022-01-17"},{"lineNumber":198,"author":{"gitId":"Graphcalibur"},"content":"     * @return The new event.","lastModifiedDate":"2022-01-22"},{"lineNumber":199,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":200,"author":{"gitId":"Graphcalibur"},"content":"    private Event parseEvent(String[] inputSplit) throws MnskyException {","lastModifiedDate":"2022-01-22"},{"lineNumber":201,"author":{"gitId":"Graphcalibur"},"content":"        if (inputSplit.length \u003c 2) {","lastModifiedDate":"2022-01-22"},{"lineNumber":202,"author":{"gitId":"Graphcalibur"},"content":"            throw new MnskyMissingParameterException(\"event\", \"name\");","lastModifiedDate":"2022-01-17"},{"lineNumber":203,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":204,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":205,"author":{"gitId":"Graphcalibur"},"content":"        int at_index \u003d 1;","lastModifiedDate":"2022-01-16"},{"lineNumber":206,"author":{"gitId":"Graphcalibur"},"content":"        for (; at_index \u003c inputSplit.length; at_index++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":207,"author":{"gitId":"Graphcalibur"},"content":"            if (inputSplit[at_index].equals(\"/at\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":208,"author":{"gitId":"Graphcalibur"},"content":"                break;","lastModifiedDate":"2022-01-16"},{"lineNumber":209,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":210,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":211,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":212,"author":{"gitId":"Graphcalibur"},"content":"        if (at_index \u003e\u003d inputSplit.length) {","lastModifiedDate":"2022-01-22"},{"lineNumber":213,"author":{"gitId":"Graphcalibur"},"content":"            throw new MnskyMissingParameterException(\"event\", \"at\");","lastModifiedDate":"2022-01-17"},{"lineNumber":214,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":215,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":216,"author":{"gitId":"Graphcalibur"},"content":"        String eventName \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, at_index));","lastModifiedDate":"2022-01-22"},{"lineNumber":217,"author":{"gitId":"Graphcalibur"},"content":"        String at \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, at_index + 1, inputSplit.length));","lastModifiedDate":"2022-01-22"},{"lineNumber":218,"author":{"gitId":"Graphcalibur"},"content":"        LocalDate atDate \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":219,"author":{"gitId":"Graphcalibur"},"content":"        LocalTime atTime \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":220,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":221,"author":{"gitId":"Graphcalibur"},"content":"        // Check to see if there are any dates or times in the first two words after the /by command","lastModifiedDate":"2022-01-22"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"        if (at_index + 1 \u003c inputSplit.length) {","lastModifiedDate":"2022-01-22"},{"lineNumber":223,"author":{"gitId":"Graphcalibur"},"content":"            atDate \u003d this.parseDate(inputSplit[at_index + 1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":224,"author":{"gitId":"Graphcalibur"},"content":"            if (atDate !\u003d null \u0026\u0026 at_index + 2 \u003c inputSplit.length) {","lastModifiedDate":"2022-01-22"},{"lineNumber":225,"author":{"gitId":"Graphcalibur"},"content":"                atTime \u003d this.parseTime(inputSplit[at_index + 2]);","lastModifiedDate":"2022-01-22"},{"lineNumber":226,"author":{"gitId":"Graphcalibur"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":227,"author":{"gitId":"Graphcalibur"},"content":"                atTime \u003d this.parseTime(inputSplit[at_index + 1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":228,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":229,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":230,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":231,"author":{"gitId":"Graphcalibur"},"content":"        return new Event(eventName, at, atDate, atTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":232,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":233,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":234,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":235,"author":{"gitId":"Graphcalibur"},"content":"     * Deletes the task corresponding to the given index parameter, if it exists.","lastModifiedDate":"2022-01-17"},{"lineNumber":236,"author":{"gitId":"Graphcalibur"},"content":"     * @param inputSplit The input, split into an array using space.","lastModifiedDate":"2022-01-22"},{"lineNumber":237,"author":{"gitId":"Graphcalibur"},"content":"     * @throws MnskyException Thrown if the index parameter is missing, not an integer, or out of bounds of the list.","lastModifiedDate":"2022-01-17"},{"lineNumber":238,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":239,"author":{"gitId":"Graphcalibur"},"content":"    private void delete(String[] inputSplit) throws MnskyException {","lastModifiedDate":"2022-01-22"},{"lineNumber":240,"author":{"gitId":"Graphcalibur"},"content":"        int index \u003d this.retrieveIndex(\"delete\", inputSplit);","lastModifiedDate":"2022-01-22"},{"lineNumber":241,"author":{"gitId":"Graphcalibur"},"content":"        System.out.printf(\"[MNSKY has deleted the task %s from the list.]\\n\", this.list.get(index).getName());","lastModifiedDate":"2022-01-22"},{"lineNumber":242,"author":{"gitId":"Graphcalibur"},"content":"        this.list.remove(index);","lastModifiedDate":"2022-01-17"},{"lineNumber":243,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":244,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":245,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":246,"author":{"gitId":"Graphcalibur"},"content":"     * Creates the data folder.","lastModifiedDate":"2022-01-22"},{"lineNumber":247,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":248,"author":{"gitId":"Graphcalibur"},"content":"    private void createDataFolder() {","lastModifiedDate":"2022-01-22"},{"lineNumber":249,"author":{"gitId":"Graphcalibur"},"content":"        File newFolder \u003d new File(\"data/\");","lastModifiedDate":"2022-01-22"},{"lineNumber":250,"author":{"gitId":"Graphcalibur"},"content":"        newFolder.mkdir();","lastModifiedDate":"2022-01-22"},{"lineNumber":251,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":252,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":253,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":254,"author":{"gitId":"Graphcalibur"},"content":"     * Saves the current state of the list to the data file.","lastModifiedDate":"2022-01-22"},{"lineNumber":255,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":256,"author":{"gitId":"Graphcalibur"},"content":"    private void writeToDataFile() {","lastModifiedDate":"2022-01-22"},{"lineNumber":257,"author":{"gitId":"Graphcalibur"},"content":"        FileWriter fileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":258,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":259,"author":{"gitId":"Graphcalibur"},"content":"        // If directory for data file doesn\u0027t exist, create it first","lastModifiedDate":"2022-01-22"},{"lineNumber":260,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":261,"author":{"gitId":"Graphcalibur"},"content":"            fileWriter \u003d new FileWriter(Mnsky.dataFileName);","lastModifiedDate":"2022-01-22"},{"lineNumber":262,"author":{"gitId":"Graphcalibur"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":263,"author":{"gitId":"Graphcalibur"},"content":"            this.createDataFolder();","lastModifiedDate":"2022-01-22"},{"lineNumber":264,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":265,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":266,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":267,"author":{"gitId":"Graphcalibur"},"content":"            fileWriter \u003d new FileWriter(Mnsky.dataFileName);","lastModifiedDate":"2022-01-22"},{"lineNumber":268,"author":{"gitId":"Graphcalibur"},"content":"            BufferedWriter bufferedWriter  \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2022-01-22"},{"lineNumber":269,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":270,"author":{"gitId":"Graphcalibur"},"content":"            for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2022-01-22"},{"lineNumber":271,"author":{"gitId":"Graphcalibur"},"content":"                bufferedWriter.write(this.list.get(i).getSaveData());","lastModifiedDate":"2022-01-22"},{"lineNumber":272,"author":{"gitId":"Graphcalibur"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":273,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":274,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":275,"author":{"gitId":"Graphcalibur"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2022-01-22"},{"lineNumber":276,"author":{"gitId":"Graphcalibur"},"content":"            bufferedWriter.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":277,"author":{"gitId":"Graphcalibur"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":278,"author":{"gitId":"Graphcalibur"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":279,"author":{"gitId":"Graphcalibur"},"content":"            System.out.println(\"[MNSKY had trouble committing the task list to its memory!]\");","lastModifiedDate":"2022-01-22"},{"lineNumber":280,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":281,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":282,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":283,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":284,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a LocalDate object based on the input string.","lastModifiedDate":"2022-01-22"},{"lineNumber":285,"author":{"gitId":"Graphcalibur"},"content":"     * @param input The input string to create a LocalDate object from","lastModifiedDate":"2022-01-22"},{"lineNumber":286,"author":{"gitId":"Graphcalibur"},"content":"     * @return The created LocalDate object if the input string is in a valid date format, null otherwise.","lastModifiedDate":"2022-01-22"},{"lineNumber":287,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":288,"author":{"gitId":"Graphcalibur"},"content":"    private LocalDate parseDate(String input) {","lastModifiedDate":"2022-01-22"},{"lineNumber":289,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":290,"author":{"gitId":"Graphcalibur"},"content":"            return LocalDate.parse(input);","lastModifiedDate":"2022-01-22"},{"lineNumber":291,"author":{"gitId":"Graphcalibur"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":292,"author":{"gitId":"Graphcalibur"},"content":"            return null;","lastModifiedDate":"2022-01-22"},{"lineNumber":293,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":294,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":295,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":296,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":297,"author":{"gitId":"Graphcalibur"},"content":"     * Adds all the tasks from the data file into the list.","lastModifiedDate":"2022-01-22"},{"lineNumber":298,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":299,"author":{"gitId":"Graphcalibur"},"content":"    private void readFromDataFile() {","lastModifiedDate":"2022-01-22"},{"lineNumber":300,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":301,"author":{"gitId":"Graphcalibur"},"content":"            Scanner fileScanner \u003d new Scanner(new File(Mnsky.dataFileName));","lastModifiedDate":"2022-01-22"},{"lineNumber":302,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":303,"author":{"gitId":"Graphcalibur"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":304,"author":{"gitId":"Graphcalibur"},"content":"                String nextLine \u003d fileScanner.nextLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":305,"author":{"gitId":"Graphcalibur"},"content":"                String[] nextLineSplit \u003d nextLine.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":306,"author":{"gitId":"Graphcalibur"},"content":"                Task nextTask \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":307,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":308,"author":{"gitId":"Graphcalibur"},"content":"                if (nextLine.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-01-22"},{"lineNumber":309,"author":{"gitId":"Graphcalibur"},"content":"                    nextTask \u003d this.parseTask(nextLine);","lastModifiedDate":"2022-01-22"},{"lineNumber":310,"author":{"gitId":"Graphcalibur"},"content":"                } else if (nextLine.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-01-22"},{"lineNumber":311,"author":{"gitId":"Graphcalibur"},"content":"                    nextTask \u003d this.parseDeadline(nextLineSplit);","lastModifiedDate":"2022-01-22"},{"lineNumber":312,"author":{"gitId":"Graphcalibur"},"content":"                } else if (nextLine.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-01-22"},{"lineNumber":313,"author":{"gitId":"Graphcalibur"},"content":"                    nextTask \u003d this.parseEvent(nextLineSplit);","lastModifiedDate":"2022-01-22"},{"lineNumber":314,"author":{"gitId":"Graphcalibur"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":315,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":316,"author":{"gitId":"Graphcalibur"},"content":"                if (nextTask !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":317,"author":{"gitId":"Graphcalibur"},"content":"                    this.list.add(nextTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":318,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":319,"author":{"gitId":"Graphcalibur"},"content":"                    if (nextLine.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-01-22"},{"lineNumber":320,"author":{"gitId":"Graphcalibur"},"content":"                        nextTask.mark();","lastModifiedDate":"2022-01-22"},{"lineNumber":321,"author":{"gitId":"Graphcalibur"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":322,"author":{"gitId":"Graphcalibur"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":323,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":324,"author":{"gitId":"Graphcalibur"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":325,"author":{"gitId":"Graphcalibur"},"content":"            this.writeToDataFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":326,"author":{"gitId":"Graphcalibur"},"content":"        } catch (MnskyException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":327,"author":{"gitId":"Graphcalibur"},"content":"            System.out.println(\"[MNSKY is having trouble remembering the previous task list...]\");","lastModifiedDate":"2022-01-22"},{"lineNumber":328,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":329,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":330,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":331,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":332,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a LocalTime object based on the input string.","lastModifiedDate":"2022-01-22"},{"lineNumber":333,"author":{"gitId":"Graphcalibur"},"content":"     * @param input The input string to create a LocalTime object from","lastModifiedDate":"2022-01-22"},{"lineNumber":334,"author":{"gitId":"Graphcalibur"},"content":"     * @return The created LocalTime object if the input string is in a valid time format, null otherwise.","lastModifiedDate":"2022-01-22"},{"lineNumber":335,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":336,"author":{"gitId":"Graphcalibur"},"content":"    private LocalTime parseTime(String input) {","lastModifiedDate":"2022-01-22"},{"lineNumber":337,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":338,"author":{"gitId":"Graphcalibur"},"content":"            return LocalTime.parse(input);","lastModifiedDate":"2022-01-22"},{"lineNumber":339,"author":{"gitId":"Graphcalibur"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":340,"author":{"gitId":"Graphcalibur"},"content":"            return null;","lastModifiedDate":"2022-01-22"},{"lineNumber":341,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":342,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":343,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":344,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":345,"author":{"gitId":"Graphcalibur"},"content":"     * Parses the input and executes the logic depending on the type of input.","lastModifiedDate":"2022-01-16"},{"lineNumber":346,"author":{"gitId":"Graphcalibur"},"content":"     * @return True if the user input \"bye\" and thus wants to stop talking to the chatbot.","lastModifiedDate":"2022-01-16"},{"lineNumber":347,"author":{"gitId":"Graphcalibur"},"content":"     *          False otherwise.","lastModifiedDate":"2022-01-16"},{"lineNumber":348,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":349,"author":{"gitId":"Graphcalibur"},"content":"    public boolean parseInput() {","lastModifiedDate":"2022-01-16"},{"lineNumber":350,"author":{"gitId":"Graphcalibur"},"content":"        String input \u003d this.getInput();","lastModifiedDate":"2022-01-16"},{"lineNumber":351,"author":{"gitId":"Graphcalibur"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":352,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":353,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":354,"author":{"gitId":"Graphcalibur"},"content":"            switch (inputSplit[0]) {","lastModifiedDate":"2022-01-22"},{"lineNumber":355,"author":{"gitId":"Graphcalibur"},"content":"                case \"bye\":","lastModifiedDate":"2022-01-16"},{"lineNumber":356,"author":{"gitId":"Graphcalibur"},"content":"                    this.bye();","lastModifiedDate":"2022-01-16"},{"lineNumber":357,"author":{"gitId":"Graphcalibur"},"content":"                    return false;","lastModifiedDate":"2022-01-16"},{"lineNumber":358,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":359,"author":{"gitId":"Graphcalibur"},"content":"                case \"list\":","lastModifiedDate":"2022-01-16"},{"lineNumber":360,"author":{"gitId":"Graphcalibur"},"content":"                    this.printList();","lastModifiedDate":"2022-01-16"},{"lineNumber":361,"author":{"gitId":"Graphcalibur"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":362,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":363,"author":{"gitId":"Graphcalibur"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":364,"author":{"gitId":"Graphcalibur"},"content":"                    this.mark(inputSplit);","lastModifiedDate":"2022-01-22"},{"lineNumber":365,"author":{"gitId":"Graphcalibur"},"content":"                    this.writeToDataFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":366,"author":{"gitId":"Graphcalibur"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":367,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":368,"author":{"gitId":"Graphcalibur"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":369,"author":{"gitId":"Graphcalibur"},"content":"                    this.unmark(inputSplit);","lastModifiedDate":"2022-01-22"},{"lineNumber":370,"author":{"gitId":"Graphcalibur"},"content":"                    this.writeToDataFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":371,"author":{"gitId":"Graphcalibur"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":372,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":373,"author":{"gitId":"Graphcalibur"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-16"},{"lineNumber":374,"author":{"gitId":"Graphcalibur"},"content":"                    this.addTask(this.parseTask(input));","lastModifiedDate":"2022-01-22"},{"lineNumber":375,"author":{"gitId":"Graphcalibur"},"content":"                    this.writeToDataFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":376,"author":{"gitId":"Graphcalibur"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":377,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":378,"author":{"gitId":"Graphcalibur"},"content":"                case \"event\":","lastModifiedDate":"2022-01-16"},{"lineNumber":379,"author":{"gitId":"Graphcalibur"},"content":"                    this.addTask(this.parseEvent(inputSplit));","lastModifiedDate":"2022-01-22"},{"lineNumber":380,"author":{"gitId":"Graphcalibur"},"content":"                    this.writeToDataFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":381,"author":{"gitId":"Graphcalibur"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":382,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":383,"author":{"gitId":"Graphcalibur"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-16"},{"lineNumber":384,"author":{"gitId":"Graphcalibur"},"content":"                    this.addTask(this.parseDeadline(inputSplit));","lastModifiedDate":"2022-01-22"},{"lineNumber":385,"author":{"gitId":"Graphcalibur"},"content":"                    this.writeToDataFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":386,"author":{"gitId":"Graphcalibur"},"content":"                    break;","lastModifiedDate":"2022-01-16"},{"lineNumber":387,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":388,"author":{"gitId":"Graphcalibur"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-17"},{"lineNumber":389,"author":{"gitId":"Graphcalibur"},"content":"                    this.delete(inputSplit);","lastModifiedDate":"2022-01-22"},{"lineNumber":390,"author":{"gitId":"Graphcalibur"},"content":"                    this.writeToDataFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":391,"author":{"gitId":"Graphcalibur"},"content":"                    break;","lastModifiedDate":"2022-01-17"},{"lineNumber":392,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":393,"author":{"gitId":"Graphcalibur"},"content":"                default:","lastModifiedDate":"2022-01-16"},{"lineNumber":394,"author":{"gitId":"Graphcalibur"},"content":"                    this.printMnsky(\"...\");","lastModifiedDate":"2022-01-16"},{"lineNumber":395,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":396,"author":{"gitId":"Graphcalibur"},"content":"        } catch (MnskyException m) {","lastModifiedDate":"2022-01-17"},{"lineNumber":397,"author":{"gitId":"Graphcalibur"},"content":"            this.printMnsky(\"..?\");","lastModifiedDate":"2022-01-17"},{"lineNumber":398,"author":{"gitId":"Graphcalibur"},"content":"            System.out.println(m);","lastModifiedDate":"2022-01-17"},{"lineNumber":399,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":400,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":401,"author":{"gitId":"Graphcalibur"},"content":"        this.printMnsky(\"I can help!\");","lastModifiedDate":"2022-01-16"},{"lineNumber":402,"author":{"gitId":"Graphcalibur"},"content":"        return true;","lastModifiedDate":"2022-01-16"},{"lineNumber":403,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":404,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":405,"author":{"gitId":"Graphcalibur"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-16"},{"lineNumber":406,"author":{"gitId":"Graphcalibur"},"content":"        Mnsky mnsky \u003d new Mnsky();","lastModifiedDate":"2022-01-16"},{"lineNumber":407,"author":{"gitId":"Graphcalibur"},"content":"        mnsky.greeting();","lastModifiedDate":"2022-01-16"},{"lineNumber":408,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":409,"author":{"gitId":"Graphcalibur"},"content":"        while (mnsky.parseInput()) {}","lastModifiedDate":"2022-01-16"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Graphcalibur":409,"-":2}},{"path":"src/main/java/MnskyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"public class MnskyException extends RuntimeException {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"        return \"[MNSKY ran into an unknown exception.]\";","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Graphcalibur":6}},{"path":"src/main/java/MnskyInvalidParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"public class MnskyInvalidParameterException extends MnskyException {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"    String parameterName;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"    String command;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"     * Constructor for the class.","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"     * @param command The command that created and threw this exception.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"     * @param parameterName The name of the parameter that caused this exception to be thrown.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"    public MnskyInvalidParameterException(String command, String parameterName) {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"        this.parameterName \u003d parameterName;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"     * Overrides the string representation of the exception to its message.","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"     * @return The message of the exception.","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"        return String.format(\"[MNSKY can\u0027t figure out what to do with the given \u0027%s\u0027 parameter for the \u0027%s\u0027 command.]\",","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"                this.parameterName, this.command);","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Graphcalibur":24}},{"path":"src/main/java/MnskyMissingParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"public class MnskyMissingParameterException extends MnskyException {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"    String parameterName;","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"    String command;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"     * Constructor for the class.","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"     * @param command The command that created and threw this exception.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"     * @param parameterName The name of the parameter that caused this exception to be thrown.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"    public MnskyMissingParameterException(String command, String parameterName) {","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"        this.parameterName \u003d parameterName;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"     * Overrides the string representation of the exception to its message.","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"     * @return The message of the exception.","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    public String toString() {","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"        return String.format(\"[MNSKY can\u0027t find the \u0027%s\u0027 parameter for the \u0027%s\u0027 command.]\",","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"                this.parameterName, this.command);","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Graphcalibur":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"public class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"    private String taskName;","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"    private boolean done;","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"     * Constructor for the Task object.","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"     * @param name The name for the task.","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    public void mark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"     * Unmarks the task so it\u0027s not yet done.","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    public String getName() {return this.taskName;}","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    public String getGenericTaskName() {","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        return String.format(\"[%s] %s\", this.done ? \"X\" : \"?\", this.taskName);","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"     * Overrides the string representation of the task to just the task name.","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"     * @return The task name.","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"        return \"[T]\" + this.getGenericTaskName();","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"    public String getSaveData() {","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        return this.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"Graphcalibur":46}},{"path":"text-ui-test/data/MnskyData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"[T][?] remove abornacee mavee","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"[D][X] finish coding problem four /by idk when im free lol","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"[E][?] the purge /at november 31 2022 4:33 pm","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"[D][?] submit project /by 2022-05-13 08:00","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"[E][?] prayer /at 23:10","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"Graphcalibur":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"aggjleglgkjsg","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"todo remove abornacee mavee","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"deadline finish coding problem four /by idk when im free lol","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"event the purge /at november 31 2022 4:33 pm","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"todo lol","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"deadline submit project /by 2022-05-13 08:00","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"event prayer /at 23:10","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"mark 2","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"mark 3","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"unmark 3","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"delete 4","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"Graphcalibur":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"java -classpath ../bin Mnsky \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Graphcalibur":1,"-":37}}]
