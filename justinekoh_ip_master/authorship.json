[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"    mainClassName \u003d \"bob.Launcher\"","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justinekoh":17,"-":43}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"ret\u003d0","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    fi","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"done","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"exit $ret","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"justinekoh":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"awk \u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"    BEGIN {","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    {","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"        ret \u003d 1","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    END {","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        exit ret","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"\u0027","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"justinekoh":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"awk \u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"    BEGIN {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"    {","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"            ret \u003d 1","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"    END {","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"        exit ret","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"\u0027","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"justinekoh":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"    fi","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"done","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"exit $ret","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"justinekoh":11}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":" * Driver class containing the main method for entry to program.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"public class Bob {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * Creates a Bob instance with storage and taskList instantiated.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    public Bob() {","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"        String folderPath \u003d \"./data\";","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        String filePath \u003d \"./data/bob.txt\";","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"        storage \u003d Storage.createStorage(folderPath, filePath);","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"        taskList \u003d storage.load();","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"     * Passes user input to Bob logic and returns a response.","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     * @param input Input into the program.","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"     * @return Response from the program after processing input.","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"        assert storage !\u003d null \u0026\u0026 taskList !\u003d null;","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"        return Parser.parse(input, taskList, storage) + \"\\n\";","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":34}},{"path":"src/main/java/bob/CorruptedEntryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":" * Thrown when a Duke saved file cannot be parsed correctly.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"public class CorruptedEntryException extends Exception {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"    public CorruptedEntryException(String message, Throwable error) {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"        super(message, error);","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"    public CorruptedEntryException(Throwable error) {","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"        super(error);","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"    public CorruptedEntryException(String message) {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"        super(message);","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":20}},{"path":"src/main/java/bob/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"public class Deadline extends bob.Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Deadline object, given description and a deadline in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Deadline instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"     * @param by          A string representing deadline in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"        super(description);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"        this.by \u003d LocalDateTime.parse(by);","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Deadline object, given description, deadline and status.","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Deadline instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"     * @param by          A string representing deadline in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"     * @param isDone      Status of the Deadline instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"        this.by \u003d LocalDateTime.parse(by);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"     * Generates a string representing this Task object for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this Task for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"    public String generateSavedEntry() {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"D|%s|%s\", isDone ? \"1\" : \"0\", description + \"/by \"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"                + by.format(DateTimeFormatter.ISO_DATE_TIME));","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"     * Returns a string representation of this Task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"    public String toString() {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":57}},{"path":"src/main/java/bob/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":" * This control represents a dialog box consisting of a Circle to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"    private Circle displayPicture;","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"    private void flip() {","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"     * Creates and returns a DialogBox object for user with given text and user image.","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"     * @param text Text from user.","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"     * @param img  User image.","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"     * @return DialogBox object for user with given text and user image.","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"     * Creates and returns a DialogBox object for Bob with given text and Bob image.","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"     * @param text Response from Bob.","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"     * @param img  Bob image.","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"     * @return DialogBox object for Bob with response and Bob image.","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"    public static DialogBox getBobDialog(String text, Image img) {","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"        db.flip();","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"        return db;","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"justinekoh":77}},{"path":"src/main/java/bob/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":" * Represents a task with an associated time.","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"public class Event extends bob.Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Event object, given description and a time in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Event instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"     * @param time        A string representing time in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    public Event(String description, String time) throws DateTimeParseException {","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"        super(description);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"        this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Event object, given description, time and status.","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Event instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"     * @param time        A string representing time in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"     * @param isDone      Status of the Event instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"    public Event(String description, String time, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"        this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"     * Generates a string representing this Task object for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this Task for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"    public String generateSavedEntry() {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"E|%s|%s\", isDone ? \"1\" : \"0\", description + \"/at \"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"                + time.format(DateTimeFormatter.ISO_DATE_TIME));","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"     * Returns a string representation of this Task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"    public String toString() {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"                time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":57}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":" * Launches the program with the GUI.","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"public class Launcher {","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"     * Main method that drives the program startup.","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"justinekoh":18}},{"path":"src/main/java/bob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":" * Bridges the gap between Bob logic and GUI.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    private Bob bob \u003d new Bob();","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"     * Starts an application.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     * @param stage Stage for JavaFX.","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"            stage.setTitle(\"BOB\");","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"            assert bob !\u003d null;","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(bob);","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"            stage.show();","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"justinekoh":39}},{"path":"src/main/java/bob/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    private Bob bob;","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"    private final Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bob.jpg\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"     * Used by JavaFX to initialize the MainWindow.","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"                DialogBox.getBobDialog(Ui.greet() + \"\\n\", bobImage)","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"        );","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"    public void setBob(Bob b) {","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"        bob \u003d b;","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"            return;","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"        if (input.strip().equals(\"bye\")) {","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"                    DialogBox.getBobDialog(Ui.bye(), bobImage)","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"            );","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"            System.exit(0);","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"        String response \u003d bob.getResponse(input);","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"                DialogBox.getBobDialog(response, bobImage)","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"        );","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"justinekoh":69}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":" * The Parser class consists of static methods to handle and execute user input commands.","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"public class Parser {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"     * Parses user input and executes the desired command.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * @param tasks     Current task list.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     * @param storage   Storage instance associated with current Bob program.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    public static String parse(String userInput, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        String response;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"        assert !userInput.isEmpty();","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"            String command \u003d userInput.split(\" \")[0].strip().toLowerCase();","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"            boolean tasksIsDiff \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"            switch (command) {","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"            case \"list\":","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"                response \u003d tasks.list();","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"                //fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"                //fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"                response \u003d update(command, userInput, tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"                response \u003d newToDo(userInput, tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"                response \u003d newDeadline(userInput, tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"            case \"event\":","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"                response \u003d newEvent(userInput, tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"            case \"find\":","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"                response \u003d find(userInput, tasks);","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"            case \"archive\":","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"                response \u003d archive(tasks);","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"            case \"commands\":","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"                response \u003d getCommands();","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"            default:","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"                response \u003d Ui.invalidCommand(command);","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"            if (tasksIsDiff) {","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"                assert storage !\u003d null;","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"                storage.writeTaskListToFile(tasks);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"            response \u003d Ui.insufficientArgs();","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"            response \u003d Ui.noSuchItem();","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"            response \u003d Ui.invalidInt();","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"            response \u003d Ui.invalidTimeFormat();","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"        return response;","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"    private static String update(String command, String userInput, TaskList tasks) {","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"        int idx \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"        return tasks.update(command, idx);","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"    private static String newToDo(String userInput, TaskList tasks) {","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"justinekoh"},"content":"        Task newTodo \u003d new ToDo(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"justinekoh"},"content":"        return tasks.add(newTodo);","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"justinekoh"},"content":"    private static String newEvent(String userInput, TaskList tasks) {","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"justinekoh"},"content":"        String time \u003d userInput.split(\"/at \")[1];","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"justinekoh"},"content":"        String eventDesc \u003d userInput.split(\"/at \")[0].strip();","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"justinekoh"},"content":"        eventDesc \u003d eventDesc.substring(eventDesc.indexOf(\" \")).strip();","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"justinekoh"},"content":"        Task newEvent \u003d new Event(eventDesc, time);","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"justinekoh"},"content":"        return tasks.add(newEvent);","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"justinekoh"},"content":"    private static String newDeadline(String userInput, TaskList tasks) {","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"justinekoh"},"content":"        String by \u003d userInput.split(\"/by \")[1];","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"justinekoh"},"content":"        String deadlineDesc \u003d userInput.split(\"/by \")[0];","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"justinekoh"},"content":"        deadlineDesc \u003d deadlineDesc.substring(deadlineDesc.indexOf(\" \")).strip();","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"justinekoh"},"content":"        Task newDeadline \u003d new Deadline(deadlineDesc, by);","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"justinekoh"},"content":"        return tasks.add(newDeadline);","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"justinekoh"},"content":"    private static String find(String userInput, TaskList tasks) {","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"justinekoh"},"content":"        String keyword \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"justinekoh"},"content":"        return tasks.find(keyword);","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"justinekoh"},"content":"    private static String getCommands() {","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"justinekoh"},"content":"        return Ui.command();","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"justinekoh"},"content":"    private static String archive(TaskList tasks) {","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"justinekoh"},"content":"        tasks.archive();","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"justinekoh"},"content":"        return Ui.archive();","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":120}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.io.File;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"import java.util.List;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":" * A Storage object handles the storage and modification of entries in the Bob program.","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"public class Storage {","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"    private final File file;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    private Storage(String filePath) {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     * Static factory method to create a new Storage object.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"     * @param directoryPath String representing path to directory in which file is saved.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"     * @param filePath      String representing path to saved file.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     * @return Newly created Storage object with save file initialized.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"    public static Storage createStorage(String directoryPath, String filePath) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"        Storage newStorage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"                boolean isMkdirSuccess \u003d directory.mkdir();","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"                assert isMkdirSuccess;","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"            if (!newStorage.file.exists()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"                boolean isCreateFileSuccess \u003d newStorage.file.createNewFile();","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"                assert isCreateFileSuccess;","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"        return newStorage;","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"     * Loads all saved entries in the file associated with this Storage instance into a list.","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"     * @return A TaskList loaded from the saved file.","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"    public TaskList load() {","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"                String[] tokens \u003d nextLine.strip().split(\"\\\\|\");","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"                String taskType \u003d tokens[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"                boolean isDone \u003d tokens[1].equals(\"1\");","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"                String taskDescription \u003d tokens[2];","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"                Task newTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"                switch (taskType) {","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"                case \"T\":","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"                    newTask \u003d newToDo(isDone, taskDescription);","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"                    break;","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"                case \"E\":","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"                    newTask \u003d newEvent(isDone, taskDescription);","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"                    break;","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"                case \"D\":","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"                    newTask \u003d newDeadline(isDone, taskDescription);","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"                    break;","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"                default:","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"                    throw new CorruptedEntryException(\"Saved file has corrupted entries! :(\");","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"                list.add(newTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"        } catch (CorruptedEntryException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"        return new TaskList(list);","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"justinekoh"},"content":"    private Task newToDo(boolean isDone, String taskDescription) {","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"justinekoh"},"content":"        return new ToDo(taskDescription, isDone);","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"justinekoh"},"content":"    private Task newEvent(boolean isDone, String taskDescription) {","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"justinekoh"},"content":"        String[] taskDescriptionTime \u003d taskDescription.split(\"/at \");","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"justinekoh"},"content":"        String eventTaskName \u003d taskDescriptionTime[0];","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"justinekoh"},"content":"        String time \u003d taskDescriptionTime[1];","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"justinekoh"},"content":"        return new Event(eventTaskName, time, isDone);","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"justinekoh"},"content":"    private Task newDeadline(boolean isDone, String taskDescription) {","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"justinekoh"},"content":"        String[] taskDescriptionSplit \u003d taskDescription.split(\"/by \");","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"justinekoh"},"content":"        String deadlineTaskName \u003d taskDescriptionSplit[0];","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"justinekoh"},"content":"        String deadline \u003d taskDescriptionSplit[1];","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"justinekoh"},"content":"        return new Deadline(deadlineTaskName, deadline, isDone);","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"justinekoh"},"content":"     * Converts a given list of tasks into a String and writes it to the file associated with this Storage instance.","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"justinekoh"},"content":"     * @param tasks List of tasks to be written to file.","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"justinekoh"},"content":"    public void writeTaskListToFile(TaskList tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"justinekoh"},"content":"        StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"justinekoh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"justinekoh"},"content":"            tasksString.append(tasks.get(i).generateSavedEntry());","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"justinekoh"},"content":"            tasksString.append(\"\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"justinekoh"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"justinekoh"},"content":"            fileWriter.write(tasksString.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"justinekoh"},"content":"            fileWriter.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"justinekoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"justinekoh"},"content":"            System.out.println(\"Error writing to file!:( : \" + e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":124}},{"path":"src/main/java/bob/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":" * Abstract parent class of all task types.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Task object, given a status boolean value.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"     * @param isDone      Boolean value describing status of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"     * Gets the description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"     * @return Description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"        return description;","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"     * Returns a status icon depending on the status of this Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"     * @return A status icon, \"X\" or \" \".","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"     * Changes the status of this Task to done.","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"    public void toggleDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"     * Changes the status of this Task to not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"    public void toggleNotDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"     * Generates a string representing this Task object for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this Task for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"    public abstract String generateSavedEntry();","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"     * Returns a string representation of this Task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description.strip();","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"justinekoh":79}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.util.List;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":" * A wrapper class around a List of Tasks, providing access and modification methods.","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"public class TaskList {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * Creates a new empty TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"     * Creates a new TaskList with the provided List of Tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"     * @param tasks List of Tasks to create a TaskList from.","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"    public String add(Task task) {","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"        return Ui.newTask(task, tasks.size());","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"     * Returns the Task at position specified by idx.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"     * @param idx Position of Task to be returned","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"     * @return Task to be returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"    public Task get(int idx) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"        assert 0 \u003c\u003d idx \u0026\u0026 idx \u003c tasks.size();","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"        return tasks.get(idx);","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"     * Returns the Tasks in the TaskList.","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"    public String list() {","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"        String str \u003d Ui.list();","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"        for (Task entry : tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"            str +\u003d \"    \" + count++ + \".\" + entry + \"\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"        return str + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"     * Updates the TaskList according to the given command.","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"     * @param command Command to indicate action.","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"     * @param idx     Index of task to be acted upon.","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"    public String update(String command, int idx) {","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"        assert 0 \u003c\u003d idx \u0026\u0026 idx \u003c tasks.size();","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"        switch (command) {","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"            tasks.get(idx - 1).toggleDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"            return Ui.mark(tasks.get(idx - 1));","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"            tasks.get(idx - 1).toggleNotDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"            return Ui.unmark(tasks.get(idx - 1));","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"            Task removedTask \u003d tasks.remove(idx - 1);","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"            String str \u003d Ui.delete(tasks.size(), removedTask);","lastModifiedDate":"2022-02-21"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"            return str;","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"            return \"Invalid command!\";","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"justinekoh"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"justinekoh"},"content":"     * @return Size of TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"justinekoh"},"content":"    public int size() {","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"justinekoh"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"justinekoh"},"content":"     * Lists all Tasks in the TaskList that contains a keyword.","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"justinekoh"},"content":"     * @param keyword String used to find matching Tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"justinekoh"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"justinekoh"},"content":"        String str \u003d Ui.find();","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"justinekoh"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"justinekoh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"justinekoh"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"justinekoh"},"content":"                str +\u003d \"    \" + count++ + \".\" + task + \"\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"justinekoh"},"content":"        return str + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"justinekoh"},"content":"     * Returns a string describing the status of the archive command.","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"justinekoh"},"content":"    public void archive() {","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"justinekoh"},"content":"        String folderPath \u003d \"./data\";","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"justinekoh"},"content":"        String filePath \u003d \"./data/bob_archive.txt\";","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"justinekoh"},"content":"        Storage archiveStorage \u003d Storage.createStorage(folderPath, filePath);","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"justinekoh"},"content":"        archiveStorage.writeTaskListToFile(this);","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"justinekoh"},"content":"        tasks.clear();","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":123}},{"path":"src/main/java/bob/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":" * Represents a task to be done.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"public class ToDo extends bob.Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a ToDo object, given description.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the ToDo instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"        super(description);","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a ToDo object, given description and status.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the ToDo instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"     * @param isDone      Status of the ToDo instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"     * Generates a string representing this Task object for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this Task for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"    public String generateSavedEntry() {","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"T|%s|%s\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"     * Returns a string representation of this Task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"    public String toString() {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":45}},{"path":"src/main/java/bob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":" * This class handles all output by the program to the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"public class Ui {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"     * Greets the user on program startup.","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"     * @return Greetings to the user.","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"    public static String greet() {","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"                + \"Hello! I\u0027m Bob!\\n\" + \"Loading saved entries...\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"                + \"Type \\\"commands\\\" to see a list of commands.\\n\"","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"     * Returns Ui message for archive command.","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"     * @return Ui message for archive command.","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    public static String archive() {","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"                + \"Archived all existing entries! Your list is now empty.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"                + \"You can find your archived entries in /data/bob_archive.txt \"","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"                + \"in the directory where Bob is saved.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message describing all supported commands.","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"     * @return UI message describing all supported commands.","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"    public static String command() {","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"                + \"Here are all supported commands!\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"                + \"    1. Todo JOB: adds JOB to list of tasks.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"                + \"    2. Event JOB /at TIME: adds an event called JOB happening at TIME to list of tasks.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"                + \"    3. Deadline JOB /by TIME: adds a deadline for JOB at TIME to list of tasks.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"                + \"    4. List: lists all tasks in the list.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"                + \"    5. Delete INTEGER: deletes the entry indexed by INTEGER from the list.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"                + \"    6. Mark INTEGER: marks the entry indexed by INTEGER as done.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"                + \"    7. Unmark INTEGER: marks the entry indexed by INTEGER as not done.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"                + \"    8. Find KEYWORD: returns a list of entries that contains KEYWORD.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"                + \"    9. Archive: moves all existing entries to another file and clears the current list.\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"                + \"    10. Commands: returns a list of supported commands with descriptions.\\n\"","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when program exits.","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when program exits.","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"    public static String bye() {","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message for the list command.","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"     * @return UI message for the list command.","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"    public static String list() {","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"                + \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when a task is marked.","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"     * @param task Task to be marked.","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when a task is marked.","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"    public static String mark(Task task) {","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n    \" + task + \"\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when a task is unmarked.","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"justinekoh"},"content":"     * @param task Task to be unmarked.","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when a task is unmarked.","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"justinekoh"},"content":"    public static String unmark(Task task) {","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"justinekoh"},"content":"                + \"OK, I\u0027ve marked this task as not done yet:\\n\" + task + \"\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when a Task is deleted.","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"justinekoh"},"content":"     * @param tasksSize New size of TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"justinekoh"},"content":"     * @param task      Task to be removed.","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when a Task is deleted.","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"justinekoh"},"content":"    public static String delete(int tasksSize, Task task) {","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"justinekoh"},"content":"                + \"Noted. I\u0027ve removed this task:\\n    \" + task","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"justinekoh"},"content":"                + \"\\nNow you have \" + tasksSize + \" tasks in the list.\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when a new Task is added.","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"justinekoh"},"content":"     * @param task      Newly added Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"justinekoh"},"content":"     * @param tasksSize New size of TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when a new Task is added.","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"justinekoh"},"content":"    public static String newTask(Task task, int tasksSize) {","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"justinekoh"},"content":"                + \"Got it. I\u0027ve added this task:\\n    \" + task + \"\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"justinekoh"},"content":"                + \"Now you have \" + tasksSize + \" tasks in the list.\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message for a search result.","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"justinekoh"},"content":"     * @return UI message for a search result.","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"justinekoh"},"content":"    public static String find() {","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"justinekoh"},"content":"                + \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":137,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":138,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when an invalid command is given.","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"justinekoh"},"content":"     * @param command Invalid command to be echoed.","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when an invalid command is given.","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"justinekoh"},"content":"    public static String invalidCommand(String command) {","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"justinekoh"},"content":"                + \"I don\u0027t understand: \" + command + \"\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"justinekoh"},"content":"                + \"Please repeat!:(\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when insufficient arguments are given.","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when insufficient arguments are given.","lastModifiedDate":"2022-02-18"},{"lineNumber":155,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"justinekoh"},"content":"    public static String insufficientArgs() {","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"justinekoh"},"content":"                + \"Insufficient arguments for this command! :(\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":159,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":160,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when no such item exists in the TaskList.","lastModifiedDate":"2022-02-18"},{"lineNumber":164,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":165,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when no such item exists in the TaskList.","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"justinekoh"},"content":"    public static String noSuchItem() {","lastModifiedDate":"2022-02-18"},{"lineNumber":168,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":169,"author":{"gitId":"justinekoh"},"content":"                + \"There is no such item! :0\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":170,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":171,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when invalid integers are given.","lastModifiedDate":"2022-02-18"},{"lineNumber":175,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":176,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when invalid integers are given.","lastModifiedDate":"2022-02-18"},{"lineNumber":177,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"justinekoh"},"content":"    public static String invalidInt() {","lastModifiedDate":"2022-02-18"},{"lineNumber":179,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":180,"author":{"gitId":"justinekoh"},"content":"                + \"Please use a valid integer! 12345!\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":181,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":182,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"justinekoh"},"content":"     * Returns UI message when time is in invalid format.","lastModifiedDate":"2022-02-18"},{"lineNumber":186,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":187,"author":{"gitId":"justinekoh"},"content":"     * @return UI message when time is in invalid format.","lastModifiedDate":"2022-02-18"},{"lineNumber":188,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"justinekoh"},"content":"    public static String invalidTimeFormat() {","lastModifiedDate":"2022-02-18"},{"lineNumber":190,"author":{"gitId":"justinekoh"},"content":"        return Ui.printLine()","lastModifiedDate":"2022-02-18"},{"lineNumber":191,"author":{"gitId":"justinekoh"},"content":"                + \"Please input the time in the correct format! yyyy-mm-ddThh:mm:ss\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":192,"author":{"gitId":"justinekoh"},"content":"                + Ui.printLine();","lastModifiedDate":"2022-02-18"},{"lineNumber":193,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":194,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"justinekoh"},"content":"     * Returns a line to format output.","lastModifiedDate":"2022-02-18"},{"lineNumber":197,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":198,"author":{"gitId":"justinekoh"},"content":"     * @return A line in string format.","lastModifiedDate":"2022-02-18"},{"lineNumber":199,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":200,"author":{"gitId":"justinekoh"},"content":"    public static String printLine() {","lastModifiedDate":"2022-02-18"},{"lineNumber":201,"author":{"gitId":"justinekoh"},"content":"        return \"----------------------------------------\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":202,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":203,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":203}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"         prefWidth\u003d\"520.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"               HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"                \u003cFont name\u003d\"Lao MN\" size\u003d\"13.0\"/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"                \u003cInsets/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"36.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\"/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"justinekoh":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"686.0\"","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"            prefWidth\u003d\"532.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"            fx:controller\u003d\"bob.MainWindow\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"644.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"454.0\"","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"                   promptText\u003d\"Enter a command...\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"                \u003cFont name\u003d\"Lao MN\" size\u003d\"13.0\"/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"                \u003cInsets/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\"","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"                mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"                textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"                \u003cFont name\u003d\"Lao MN\" size\u003d\"14.0\"/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\"","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"                    maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" pannable\u003d\"true\"","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"                    prefHeight\u003d\"643.0\" prefWidth\u003d\"532.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"                    \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"                        \u003cInsets/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"                    \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"justinekoh":46}},{"path":"src/test/java/bob/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"public class UiTest {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"    public void taskListTest() {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"        bob.TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"        tasks.add(new ToDo(\"this\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":15}},{"path":"src/test/test/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"T|0|that","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"justinekoh":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justinekoh":1,"-":33}}]
