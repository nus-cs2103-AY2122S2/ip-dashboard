[{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"public class Bob {","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"        Ui.greet();","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"        // Initialization","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"        String folderPath \u003d \"./data\";","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"        String filePath \u003d \"./data/bob.txt\";","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"        Storage storage \u003d Storage.createStorage(folderPath, filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"        TaskList taskList \u003d storage.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"        String cmd \u003d sc.nextLine().strip();","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"        while (!cmd.split(\" \")[0].equals(\"bye\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"            Parser.parse(cmd, taskList, storage);","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"            cmd \u003d sc.nextLine().strip();","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"        Ui.bye();","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":25}},{"path":"src/main/java/bob/CorruptedEntryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":" * Thrown when a Duke saved file cannot be parsed correctly.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"public class CorruptedEntryException extends Exception {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"    public CorruptedEntryException(String message, Throwable error) {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"        super(message, error);","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"    public CorruptedEntryException(Throwable error) {","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"        super(error);","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"    public CorruptedEntryException(String message) {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"        super(message);","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":20}},{"path":"src/main/java/bob/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"public class Deadline extends bob.Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Deadline object, given description and a deadline in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Deadline instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"     * @param by          A string representing deadline in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"        super(description);","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"        this.by \u003d LocalDateTime.parse(by);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Deadline object, given description, deadline and status.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Deadline instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"     * @param by          A string representing deadline in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"     * @param isDone      Status of the Deadline instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"        this.by \u003d LocalDateTime.parse(by);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"     * Generates a string representing this Task object for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this Task for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"    public String generateSavedEntry() {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"D|%s|%s\", isDone ? \"1\" : \"0\", description + \"/by \"","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"                + by.format(DateTimeFormatter.ISO_DATE_TIME));","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"     * Returns a string representation of this Task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"    public String toString() {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":56}},{"path":"src/main/java/bob/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":" * Represents a task with an associated time.","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"public class Event extends bob.Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Event object, given description and a time in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Event instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"     * @param time        A string representing time in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"        super(description);","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"        this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Event object, given description, time and status.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Event instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"     * @param time        A string representing time in parseable format.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"     * @param isDone      Status of the Event instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"    public Event(String description, String time, boolean isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"        this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"     * Generates a string representing this Task object for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this Task for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"    public String generateSavedEntry() {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"E|%s|%s\", isDone ? \"1\" : \"0\", description + \"/at \"","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"                + time.format(DateTimeFormatter.ISO_DATE_TIME));","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"     * Returns a string representation of this Task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"    public String toString() {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"                time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":56}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":" * The Parser class consists of static methods to handle and execute user input commands.","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"public class Parser {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"     * Parses user input and executes the desired command.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * @param tasks     Current task list.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     * @param storage   Storage instance associated with current Bob program.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    public static void parse(String userInput, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"            String cmd \u003d userInput.split(\" \")[0].strip();","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"            boolean tasksIsDiff \u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"            switch (cmd) {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"            case \"list\":","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"                tasks.list();","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"            case \"mark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"                //fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"            case \"unmark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"                //fallthrough","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"            case \"delete\":","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"                int idx \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"                tasks.update(cmd, idx);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"            case \"todo\":","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"                Task newTodo \u003d new ToDo(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"                String by \u003d userInput.split(\"/by \")[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"                String deadlineDesc \u003d userInput.split(\"/by \")[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"                deadlineDesc \u003d deadlineDesc.substring(deadlineDesc.indexOf(\" \")).strip();","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"                Task newDeadline \u003d new Deadline(deadlineDesc, by);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"            case \"event\":","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"                String time \u003d userInput.split(\"/at \")[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"                String eventDesc \u003d userInput.split(\"/at \")[0].strip();","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"                eventDesc \u003d eventDesc.substring(eventDesc.indexOf(\" \")).strip();","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"                Task newEvent \u003d new Event(eventDesc, time);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"                tasksIsDiff \u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"            case \"find\":","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"                String keyword \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"                tasks.find(keyword);","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"                break;","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"            default:","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"                Ui.invalidCommand(cmd);","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"            if (tasksIsDiff) {","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"                storage.writeTaskListToFile(tasks);","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"            Ui.insufficientArgs();","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"            Ui.noSuchItem();","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"            Ui.invalidInt();","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"            Ui.invalidTimeFormat();","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":84}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.io.File;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"import java.util.List;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":" * A Storage object handles the storage and modification of entries in the Bob program.","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"public class Storage {","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"    private final File file;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    private Storage(String filePath) {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     * Static factory method to create a new Storage object.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"     * @param directoryPath String representing path to directory in which file is saved.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"     * @param filePath      String representing path to saved file.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     * @return Newly created Storage object with save file initialized.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"    public static Storage createStorage(String directoryPath, String filePath) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"        Storage newStorage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"                directory.mkdir();","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"            if (!newStorage.file.exists()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"                newStorage.file.createNewFile();","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"        return newStorage;","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"     * Loads all saved entries in the file associated with this Storage instance into a list.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"     * @return A TaskList loaded from the saved file.","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"    public TaskList load() {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"                String[] tokens \u003d nextLine.strip().split(\"\\\\|\");","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"                String taskType \u003d tokens[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"                boolean isDone \u003d tokens[1].equals(\"1\");","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"                String taskDescription \u003d tokens[2];","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"                Task newTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"                switch (taskType) {","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"                case (\"T\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"                    newTask \u003d new ToDo(taskDescription, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"                    break;","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"                case (\"E\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"                    String[] taskDescriptionTime \u003d taskDescription.split(\"/at \");","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"                    String eventTaskName \u003d taskDescriptionTime[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"                    String time \u003d taskDescriptionTime[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"                    newTask \u003d new Event(eventTaskName, time, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"                    break;","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"                case (\"D\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"                    String[] taskDescriptionSplit \u003d taskDescription.split(\"/by \");","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"                    String deadlineTaskName \u003d taskDescriptionSplit[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"                    String deadline \u003d taskDescriptionSplit[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"                    newTask \u003d new Deadline(deadlineTaskName, deadline, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"                    break;","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"                default:","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"                    throw new CorruptedEntryException(\"Saved file has corrupted entries! :(\");","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"justinekoh"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"justinekoh"},"content":"                list.add(newTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"justinekoh"},"content":"        } catch (CorruptedEntryException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"justinekoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"justinekoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"justinekoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"justinekoh"},"content":"        return new TaskList(list);","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"justinekoh"},"content":"     * Converts a given list of tasks into a String and writes it to the file associated with this Storage instance.","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"justinekoh"},"content":"     * @param tasks List of tasks to be written to file.","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"justinekoh"},"content":"    public void writeTaskListToFile(TaskList tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"justinekoh"},"content":"        StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"justinekoh"},"content":"        ","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"justinekoh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"justinekoh"},"content":"            tasksString.append(tasks.get(i).generateSavedEntry());","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"justinekoh"},"content":"            tasksString.append(\"\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"justinekoh"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"justinekoh"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"justinekoh"},"content":"            fileWriter.write(tasksString.toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"justinekoh"},"content":"            fileWriter.close();","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"justinekoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"justinekoh"},"content":"            System.out.println(\"Error writing to file!:( : \" + e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":117}},{"path":"src/main/java/bob/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":" * Abstract parent class of all task types.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a Task object, given a status boolean value.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"     * @param isDone      Boolean value describing status of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"     * Gets the description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"     * @return Description of the Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"        return description;","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"     * Returns a status icon depending on the status of this Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"     * @return A status icon, \"X\" or \" \".","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"     * Toggles the status of this Task.","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"    public void toggleStatus() {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"     * Changes the status of this Task to done.","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"    public void toggleDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"     * Changes the status of this Task to not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"    public void toggleNotDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"     * Generates a string representing this Task object for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this Task for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"    public abstract String generateSavedEntry();","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"     * Returns a string representation of this Task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description.strip();","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"justinekoh":86}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"import java.util.List;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":" * A wrapper class around a List of Tasks, providing access and modification methods.","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"public class TaskList {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"     * Creates a new empty TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"     * Creates a new TaskList with the provided List of Tasks.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"     * @param tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"        Ui.newTask(task, tasks.size());","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"     * Returns the Task at position specified by idx.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"     * @param idx Position of Task to be returned","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"     * @return Task to be returned.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"    public Task get(int idx) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"        return tasks.get(idx);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"     * Prints the Tasks in the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"    public void list() {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"        Ui.list();","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"        for (Task entry : tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"            System.out.println(\"    \" + count++ + \".\" + entry);","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"     * Updates the TaskList according to the given command.","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"     * @param cmd Command to indicate action.","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"     * @param idx Index of task to be acted upon.","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"    public void update(String cmd, int idx) {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"        switch (cmd) {","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"            tasks.get(idx - 1).toggleDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"            Ui.mark(tasks.get(idx - 1));","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"            tasks.get(idx - 1).toggleNotDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"            Ui.unmark(tasks.get(idx - 1));","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"            Ui.delete(tasks.size(), tasks.get(idx - 1));","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"            tasks.remove(idx - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"            System.out.println(\"Invalid command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"justinekoh"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"justinekoh"},"content":"     * @return Size of TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"justinekoh"},"content":"    public int size() {","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"justinekoh"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"justinekoh"},"content":"     * Lists all Tasks in the TaskList that contains a keyword.","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"justinekoh"},"content":"     * @param keyword String used to find matching Tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"justinekoh"},"content":"    public void find(String keyword) {","lastModifiedDate":"2022-02-07"},{"lineNumber":103,"author":{"gitId":"justinekoh"},"content":"        Ui.find();","lastModifiedDate":"2022-02-07"},{"lineNumber":104,"author":{"gitId":"justinekoh"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":105,"author":{"gitId":"justinekoh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"justinekoh"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":107,"author":{"gitId":"justinekoh"},"content":"                System.out.println(\"    \" + count++ + \".\" + task);","lastModifiedDate":"2022-02-07"},{"lineNumber":108,"author":{"gitId":"justinekoh"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"justinekoh"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":110,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-07"},{"lineNumber":111,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":112}},{"path":"src/main/java/bob/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":" * Represents a task to be done.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"public class ToDo extends bob.Task {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a ToDo object, given description.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the ToDo instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"        super(description);","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"     * Constructor for a ToDo object, given description and status.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"     * @param description Description of the ToDo instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"     * @param isDone      Status of the ToDo instance.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"        super(description, isDone);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"     * Generates a string representing this Task object for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this Task for saving.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"    public String generateSavedEntry() {","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"        return String.format(\"T|%s|%s\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"     * Returns a string representation of this Task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"     * @return A string representing this task for display.","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"    public String toString() {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":45}},{"path":"src/main/java/bob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":" * This class handles all output by the program to the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"public class Ui {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"     * Greets the user on program startup.","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"    public static void greet() {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Hello! I\u0027m Bob!\\n\" + \"Loading saved entries...\");","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when program exits.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"    public static void bye() {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message for the list command.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"justinekoh"},"content":"    public static void list() {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when a task is marked.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"justinekoh"},"content":"     * @param task Task to be marked.","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"justinekoh"},"content":"    public static void mark(Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n    \" + task);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when a task is unmarked.","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"justinekoh"},"content":"     * @param task Task to be unmarked.","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"justinekoh"},"content":"    public static void unmark(Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n    \" + task);","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when a Task is deleted.","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"justinekoh"},"content":"     * @param tasksSize New size of TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"justinekoh"},"content":"     * @param task      Task to be removed.","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"justinekoh"},"content":"    public static void delete(int tasksSize, Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n    \" + task);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Now you have \" + tasksSize + \" tasks in the list.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when a new Task is added.","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"justinekoh"},"content":"     * @param task      Newly added Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"justinekoh"},"content":"     * @param tasksSize New size of TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"justinekoh"},"content":"    public static void newTask(Task task, int tasksSize) {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n    \" + task);","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Now you have \" + tasksSize + \" tasks in the list.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"justinekoh"},"content":"    public static void find() {","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when an invalid command is given.","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"justinekoh"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"justinekoh"},"content":"     * @param cmd Invalid command to be echoed.","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"justinekoh"},"content":"    public static void invalidCommand(String cmd) {","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"I don\u0027t understand: \" + cmd);","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Please repeat!:(\");","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when insufficient arguments are given.","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"justinekoh"},"content":"    public static void insufficientArgs() {","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Insufficient arguments for this command! :(\");","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when no such item exists in the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"justinekoh"},"content":"    public static void noSuchItem() {","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"There is no such item! :0\");","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when invalid integers are given.","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"justinekoh"},"content":"    public static void invalidInt() {","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Please use a valid integer! 12345!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"justinekoh"},"content":"     * Prints UI message when time is in invalid format.","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"justinekoh"},"content":"    public static void invalidTimeFormat() {","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"Please input the time in the correct format! yyyy-mm-ddThh:mm:ss\");","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"justinekoh"},"content":"        Ui.printLine();","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"justinekoh"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"justinekoh"},"content":"     * Prints a line to format output.","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"justinekoh"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"justinekoh"},"content":"    public static void printLine() {","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"justinekoh"},"content":"        System.out.println(\"----------------------------------------\");","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":141}},{"path":"src/test/java/bob/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"package bob;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"public class UiTest {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"    public void storageTest() {","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"        bob.Storage storage \u003d Storage.createStorage(\"./test\", \"./test/test.txt\");","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"        assertEquals(storage.load().get(0).toString(), new ToDo(\"that\").toString());","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"justinekoh"},"content":"    @Test","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"justinekoh"},"content":"    public void taskListTest() {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"justinekoh"},"content":"        bob.TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"justinekoh"},"content":"        tasks.add(new ToDo(\"this\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"justinekoh"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"justinekoh"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"justinekoh"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"justinekoh"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":21}},{"path":"src/test/test/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"T|0|that","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"justinekoh":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justinekoh"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"justinekoh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"justinekoh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"justinekoh"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"justinekoh"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"justinekoh"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"justinekoh"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"justinekoh"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"justinekoh":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justinekoh":1,"-":33}}]
