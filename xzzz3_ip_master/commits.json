{"authorDailyContributionsMap":{"xzzz3":[{"date":"2022-01-18","commitResults":[{"hash":"8ea9850eacf5a774458af737557cebfe6de39dbe","messageTitle":"Initialized for Level-1, added basic customization and responses.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":7}}},{"hash":"be7d387bf9f355b79580818109b1cb405e9b8a29","messageTitle":"Included an ArrayList for level-2, and added the Add and Display functionality.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"91ab3f73b0baa789dde496b4224dceedf3cfa756","messageTitle":"Cleaning up code with helper functions and switch statements.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":20}}},{"hash":"1734081f685d952ee5ac103d5e6921f192628c75","messageTitle":"Added Task class to assist with the marking, as well as the mark function.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":2}}},{"hash":"54bae45910964234e9514a7ed536b2819cf7d729","messageTitle":"Added inherited classes: todo, deadlines and events.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"86897157b0c71280f84ad5292343d76cf0b26942","messageTitle":"Modified the respond function to make it work with different task types, as well as added more lively responses.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":8}}}]},{"date":"2022-01-19","commitResults":[{"hash":"a82296a262e608f3f20bf3386daee4c103ffb5bb","messageTitle":"Done TextUiTesting, updated the behaviour and edited the expected file to the updated and correct behaviour.","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"dd729f642820547ee8d4e3af24b92f98da95b644","messageTitle":"Added several error classes to handle different errors, caused by the three task types.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":10}}},{"hash":"f289aa0953a0cb690900ed67a732304118421d39","messageTitle":"Added method for deleting tasks from the list.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"0fc828a5493e2c524c2666220b05bd3e57249b44","messageTitle":"Minor improvements by removing unnecessary toString methods.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2022-01-25","commitResults":[{"hash":"e1047099582bd43f3c45cb842dc43bde64b05549","messageTitle":"Switch Case statements are not in the convention form.","messageBody":"It should adhere to the indentation convention.\n\nLet\u0027s:\n* Edit the indentation to fit the conventional standard.\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":47}}},{"hash":"a2b4aed718fa52717714b0c85a22d44b614e05a7","messageTitle":"Add test file for future testing","messageBody":"Currently lacking a test file\n\nWe need a test file for future testing to be done\n\nLet\u0027s:\n* add a test file\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}}]},{"date":"2022-01-26","commitResults":[{"hash":"0f0a097309a46618243d09365855cee499528cd7","messageTitle":"Add toText function for tasks to facilitate file saving","messageBody":"The toString function is too wordy for file-saving in the harddrive.\nThe amount of words also make it difficult for reading later on.\n\nLet\u0027s:\n* Add a toText method to generate a concise summary of the task\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":5}}},{"hash":"60f7e0d3caad03dbb4ab568156b3e9d39383d8f2","messageTitle":"Add file access functions","messageBody":"File saving to hard drive is needed for the list.\n\nLet\u0027s:\n* Add read and write functions to the chatbot so that it can read\nand modify the text file that stores the list.\n* Invoke these functions at the start and end of each session to\nupdate the text file.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":0}}},{"hash":"287e66922e07af471c24964cd8b4e8c3b00f51d5","messageTitle":"Deadline and Event classes: Add date parsing functionality","messageBody":"The deadline and event classes take in only string that are date\ndescriptions. They cannot translate numerical date values in string.\n\nSometimes this functionality will be needed as it is more machine\nfriendly and may be preferred by people.\n\nLet\u0027s:\n* Change the constructors to check for parse-able date strings\n* Parse the date strings if applicable\n* Use the parsed date string as the stored date instead\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":6}}},{"hash":"c43350f605f69b6e4253d79a8ed50465f1adb3b0","messageTitle":"Main Duke class: Trim input","messageBody":"The user input does not have the space trimmed for date values. For\ninstance, evaluating the date of \"/by 5pm\" gives \" 5pm\" with a space\nat the start, which leads to unexpected behaviors.\n\nLet\u0027s:\n* Trim the string whenever applicable to remove leading spaces\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"d4254c023a5d9af09cc111fb774e10a5e3337cb5","messageTitle":"Ui Class: Add new Ui Class to consolidate the ui functions","messageBody":"The output functions are done using system.output within the Main\nfile, which was not fully adhering to OOP standards.\n\nLet\u0027s:\n* Create a new Ui class to consolidate all the Ui functions.\n* Edit the original Main class to substitute previous output functions\nto Ui class methods.\n* Remove exceptions that are now unnecessary with the addition of a\nUi class.\n","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":62}}},{"hash":"7e64131f856223a9b6564fbd831d4313a00b7510","messageTitle":"Storage class: Add storage class and supporting methods","messageBody":"The chatbot requires a storage class to deal with loading tasks from\nthe file and saving tasks in the file.\n\nA separate class is preferred for OOP standards.\n\nLet\u0027s:\n* Create the storage class.\n* Add LoadingExceptions class for storage class methods to throw.\n* Edit the Ui class to work with storage class.\n","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"dc7e86d3ad3baab43d4eeb46f261bba30a627703","messageTitle":"Parser class: Add new Parser class","messageBody":"Require a Parser class to deal with making sense of the user command.\n\nLet\u0027s:\n* Add a Parser class to parse user commands, when the command needs\nto be split into multiple parts.\n\nAdditional Remarks: Did not quite get what a parser class is useful\nfor, as most parts of the code are rather blended together and cannot\nbe shifted to Parser. May require future changes to perfect Parser.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"4486892e3f42dce959886b813983a59dd9ae41f4","messageTitle":"TaskList Class: Add new TaskList Class to store the task list.","messageBody":"A TaskList class is required to contain the tasklist itself, so as\nto separate the tasklist from the chatbot implementation.\n\nLet\u0027s:\n* Create the new TaskList class.\n* Add basic functionalities.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"b28f92ba62729f033cde1f56372a48445a96dda7","messageTitle":"Main Duke class: Update Functionalities with the new OOP additions.","messageBody":"The class is outdated with the new OOP additions which can be used\nto substitute some of the chatbot\u0027s code.\n\nLet\u0027s:\n* Move relevant parts to the other classes.\n* Debug the Duke class with the new addition.\n* Clean up.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":77}}}]},{"date":"2022-01-27","commitResults":[{"hash":"2df7960326f4f5468d3108c403788718867ed9c6","messageTitle":"All classes: Package into duke.test package","messageBody":"Classes are scattered. They should be consolidated into a package\nfor ease of use and for good practice.\n\nLet\u0027s:\n* Package all of them except main into duke.test package\n* Import the package in the main Duke class\n* Move them to the right location in the hard drive\n\nNote that in the future there may be other packages based on the use.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":46}}},{"hash":"fba795e9530840cfedce75357dea74b19d9c9693","messageTitle":"Parser Class: Move some codes in main Duke class to Parser class","messageBody":"Some code that are more suitable for Parser class to handle are in\nthe main Duke class.\n\nThis can potentially cause dependability, as the main class is handling\nsome of the Parser class\u0027s codes.\n\nLet\u0027s:\n* Move the relevant parts to Parser class, mainly the exception\nchecking and trimming of results\n* Ensure that the result passed back to the main Duke class is\nprocessed and ready for use, which corresponds to the purpose of a\nParser class.\n* Add a new exception IncompleteArgumentException for Parser exceptions.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":13}}},{"hash":"28897ff01fdb00ef26006a5757c63215db9fcff6","messageTitle":"Junit test files: Add test files","messageBody":"The classes require unit testing with test files.\n\nThis is to ensure ease of testing in the future and also a consolidated\ntesting platform.\n\nLet\u0027s:\n* Add test files for Parser and ToDo\n* Add relevant testing methods for different scenarios\n* Check that all of them are functioning as expected\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":2}}},{"hash":"02bf19bc0f3cefe71c18a7440955605db23bf153","messageTitle":"All Classes: Add JavaDoc comments","messageBody":"The classes only includes the methods. Without JavaDoc comments,\nit will be difficult for external users to understand the purpose of\nthese methods.\n\nLet\u0027s:\n* Add JavaDoc comments to all the methods in all classes.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":273,"deletions":24}}},{"hash":"c0c21df6b976baf6de2dc51b1eb835a9e3304d1e","messageTitle":"Storage class: Remove unnecessary full method names","messageBody":"Some of the methods are called using their full package names in\nthe storage class, like duke.task.Deadline().\n\nThis is wordy and can lead to messy code.\n\nLet\u0027s:\n* Remove these instances of full names.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"17a9c324d3dac8c2f3e99a0d134d1aed9eaf8f56","messageTitle":"Duke, TaskList and Ui class: Add functionality for Find function","messageBody":"The chatbot requires a find functionality that outputs matching file\nnames.\n\nThis can help the end user find the interested files more easily.\n\nLet\u0027s:\n* In Duke class, add response trigger to \"find\" command.\n* In TaskList class, add method to find the relevant tasks.\n* In Ui class, add method to output the relevant tasks found.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":12}}},{"hash":"8e22da07484530f4100dd0b18f8e675f821eb535","messageTitle":"Task class: Change Boolean attribute done to isDone","messageBody":"The done attribute as a Boolean do not follow the coding standards,\nwhich is that they should sound like the English language when\nevaluated to true or false.\n\nLet\u0027s:\n* Change the Done attribute to isDone in Task.\n* Change all instances where Done is used to isDone\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":16}}}]},{"date":"2022-02-03","commitResults":[{"hash":"58488cbec83cfd3a929e237ed449c237d9c1c246","messageTitle":"Gradle files: Add Gradle to the project","messageBody":"Gradle can help to automate the build process as well as other\nprocesses such as unit testing for the project. Thus, adding gradle\nwill be an important improvement for the project.\n\nLet\u0027s:\n* Merge the gradle support branch\n* Initialize the gradle file\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":1,"deletions":1}}},{"hash":"7e2ce872255eb64f6382c6dc3674a53173dab674","messageTitle":"Checkstyle files: Add checkstyle plugin","messageBody":"The project code has no checkstyle and only relies on the IDE\u0027s\nprompts for code formatting. A checkstyle plugin can help to improve\nthe consistency and correctness of the code.\n\nLet\u0027s:\n* Add the checkstyle plug in from IntelliJ\u0027s marketplace\n* Use the plugin with project checkstyle files\n","fileTypesAndContributionMap":{"sh":{"insertions":74,"deletions":0}}},{"hash":"ec0c97787d69c5263f39d555040e837dc33e42ca","messageTitle":"All Java classes: Edit code with checkstyle","messageBody":"Some parts of the code have been tagged problematic with the new\ncheckstyle plugin.\n\nLet\u0027s:\n* Use the checkstyle hints to improve the coding quality\n* Minor fixes to the syntax for some classes\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":32}}},{"hash":"2a8d6d0160e0320fab868e6385d3ba2a0dba31eb","messageTitle":"GUI setup classes: Add GUI basics to XzzzBot","messageBody":"The chat bot is more complete with a GUI instead of a text-based UI.\n\nLet\u0027s:\n* Follow the tutorial and add basic GUI to the bot.\n* Continue to work on more features to make the GUI have the correct\nfunctionality.\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":172,"deletions":17}}},{"hash":"2d084350da5d79428cbe7e26e3feb801eb3b0994","messageTitle":"GUI and Ui related files: Update text Ui to become GUI","messageBody":"The UI of XzzzBot is a text-based UI, and can be improved to a GUI\nwith the newly added FXML. This can improve the user experience.\n\nLet\u0027s:\n* Update the text-based printing methods in the Ui class to accommodate\nGUI functionalities\n* Remove certain uncommon symbols that cannot be represented on GUI\n* Update the main Duke class to work with the FXML files\n","tags":["Level-10"],"fileTypesAndContributionMap":{"java":{"insertions":131,"deletions":117}}}]},{"date":"2022-02-08","commitResults":[{"hash":"b6217d0a948745eab1c818ff94ab8010eef4518c","messageTitle":"Duke, Storage, TaskList, ToDo, Ui Classes: Add Assert functions","messageBody":"There are certain states of the program that are assumed to hold true.\nBy using assertions, these states can be checked, in case the functions\nwork unexpectedly, or when the future changes affect the current\nassumptions.\n\nLet\u0027s:\n* Add assert statements to check state of the program\n* Clean up some code with the use of assert statements\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":6}}},{"hash":"fe1259ea54def6c2a78e003d6af82262e42d7a85","messageTitle":"Duke, MainWindow, TaskList, Ui Classes: Review code quality","messageBody":"Some of the codes did not follow the code quality, such as verb-sounding\nmethods.\n\nBy reviewing and changing them, the code can be more readable for readers\nand more understandable for collaborators.\n\nLet\u0027s:\n* Change the method names to fit the coding conventions\n* Change the switch-case statement to be clearer visually\n","tags":["A-FullCommitMessage","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":39}}}]},{"date":"2022-02-09","commitResults":[{"hash":"407fb43dac58baa6633d8686074ea03a23df411d","messageTitle":"Task sub-classes: Update DateTime object to store date instead of String","messageBody":"The tasks with specified dates are currently storing them as strings\ninstead of date objects. While this is easier to implement, it makes\nthem harder to compare.\n\nFor the Increment on detecting date anomalies, such comparison is\nrequired and thus the date formats need to be updated accordingly.\n\nLet\u0027s:\n* Change the stored date\u0027s representations to LocalDateTime\n* Update functionalities\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":17}}},{"hash":"848ad798d5e487e15cb1b803b95f3a9c35ff2242","messageTitle":"Task Classes (mainly Event class): Add detection for date clashes","messageBody":"Sometimes users may store events that happen at the same time. These\nshould be immediately reflected to them as they cannot do two events\nat the same time.\n\nLet\u0027s:\n* Add a date detection function in the TaskList class\n* Modify the other classes to respond to situations where the event\nclashes\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":2}}}]},{"date":"2022-02-17","commitResults":[{"hash":"c5d72b2ce31ec48ecce237943b300d140c3f3f9d","messageTitle":"README.md: Update User Guide (UG)","messageBody":"For Xzzzbot to be used by others, a UG is necessary to provide a\nquick summary of all the commands and features.\n\nLet\u0027s:\n* Update the README file to include a summarized UG.\n* Fix some Ui bugs found along the way.\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"md":{"insertions":174,"deletions":10}}},{"hash":"57cf7211416e195af6936eaad1011ce8dca12511","messageTitle":"JavaFX related classes (Main, MainWindow):","messageBody":"Some of the expected functions like closing after saying \"bye\" is\nmissing. Those can help to make the user experience better.\n\nLet\u0027s:\n* Add in close and save functionalities.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"java":{"insertions":8,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"xzzz3":{"java":1127,"md":162,"fxml":35,"sh":74,"bat":0,"gradle":17,"txt":0}},"authorContributionVariance":{"xzzz3":28836.377},"authorDisplayNameMap":{"xzzz3":"CS2103-F10-2 XING..HENG"}}
