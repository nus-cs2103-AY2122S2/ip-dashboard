[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"    mainClassName \u003d \"duke.task.Launcher\"","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"    archiveBaseName \u003d \"Xzzz\"","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xzzz3":17,"-":44}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"ret\u003d0","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    fi","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"done","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"exit $ret","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"awk \u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"    BEGIN {","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    {","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"        ret \u003d 1","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    END {","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"        exit ret","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"\u0027","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"awk \u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"    BEGIN {","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    {","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"            ret \u003d 1","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    END {","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        exit ret","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"\u0027","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"    fi","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"done","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"exit $ret","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"-- --","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"-- --","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"### 1. Add tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"XzzzBot adds your task to the list. It supports 3 task typpes: ","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"`todo`, `deadline`, and `event`.","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"### 2. Delete tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"XzzzBot removes unwanted tasks for you from the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"### 3. List tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"See all the task you have added!","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"### 4. Mark and unmark tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"Tasks are meant to be done. Once done, you can mark them as done! ","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"Or unmark them, if you wish.","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"### 5. Find tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"Forgot where a task is? Search for it with keywords.","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"-- --","lastModifiedDate":"2022-02-17"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"### `todo {task name}` - Add a `todo` task","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"Adds a `todo` task to Xzzzbot\u0027s list.","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"`todo cs2103 publish project`","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"The `todo` task is added.","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"okie!! i have added:","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"[T][ ] cs2103 publish project","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"now there are 1 tasks in the list! get to work","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"### `deadline {task name} /by {date}` - Add a `deadline` task","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"Adds a `deadline` task to Xzzzbot\u0027s list.","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"A `deadline` task must come with a date string in `yyyy-mm-dd` format.","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"Example of usage:","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"`deadline homework /by 2022-02-20`","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"The `deadline` task is added.","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"okie!! i have added:","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"[D][ ] homework (by: Feb 20 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"now there are 2 tasks in the list! get to work","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"### `event {task name} /at {date}` - Add an `event` task","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"Adds an `event` task to Xzzzbot\u0027s list.","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"An `event` task must come with a date string in `yyyy-mm-dd` format.","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"Example of usage:","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"`event cs2103 lecture /at 2022-02-18`","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"The `event` task is added.","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"okie!! i have added:","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"[E][ ] cs2103 (at: Feb 18 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"now there are 3 tasks in the list! get to work","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"### `delete {index}` - Delete the task at list index","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"Deletes the task with the given `index` in the task list. ","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"`index` should be within the list length.","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"Example of usage:","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"xzzz3"},"content":"`delete 1`","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"xzzz3"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"xzzz3"},"content":"The task is now deleted.","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"xzzz3"},"content":"OK!!! i have removed this task:","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"xzzz3"},"content":"[T][ ] cs2103 publish project","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"xzzz3"},"content":"now there are 1 tasks in the list! get to work","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"### `list` - View the list of tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"xzzz3"},"content":"View the list of tasks that have been added to Xzzzbot.","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"xzzz3"},"content":"Example of usage:","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"xzzz3"},"content":"`list`","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"xzzz3"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":115,"author":{"gitId":"xzzz3"},"content":"The list of tasks is provided.","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"xzzz3"},"content":"here are your tasks","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"xzzz3"},"content":"1. [T][ ] cs2103 publish project","lastModifiedDate":"2022-02-17"},{"lineNumber":120,"author":{"gitId":"xzzz3"},"content":"2. [D][ ] submission (by: Feb 25 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":121,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":122,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"xzzz3"},"content":"### `mark {index}` - Marks the task at index as done","lastModifiedDate":"2022-02-17"},{"lineNumber":124,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":125,"author":{"gitId":"xzzz3"},"content":"Marks the task at the given `index` as done.","lastModifiedDate":"2022-02-17"},{"lineNumber":126,"author":{"gitId":"xzzz3"},"content":"`index` should be within the list length.","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":128,"author":{"gitId":"xzzz3"},"content":"Example of usage:","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"xzzz3"},"content":"`mark 1`","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"xzzz3"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"xzzz3"},"content":"The task is marked as done.","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"xzzz3"},"content":"yay!!! this task is now marked as done","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"xzzz3"},"content":"[D][X] homework (by: Feb 20 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"xzzz3"},"content":"### `unmark {index}` - Marks the task at index as undone","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"xzzz3"},"content":"Marks the task at the given `index` as undone.","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"xzzz3"},"content":"`index` should be within the list length.","lastModifiedDate":"2022-02-17"},{"lineNumber":145,"author":{"gitId":"xzzz3"},"content":"This method is the reverse of the `mark` method.","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"xzzz3"},"content":"Example of usage:","lastModifiedDate":"2022-02-17"},{"lineNumber":148,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"xzzz3"},"content":"`unmark 1`","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"xzzz3"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":152,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":153,"author":{"gitId":"xzzz3"},"content":"The task is marked as undone.","lastModifiedDate":"2022-02-17"},{"lineNumber":154,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":155,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":156,"author":{"gitId":"xzzz3"},"content":"this task is now marked as not done yet... do it soon!","lastModifiedDate":"2022-02-17"},{"lineNumber":157,"author":{"gitId":"xzzz3"},"content":"[D][ ] homework (by: Feb 20 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":158,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":159,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":160,"author":{"gitId":"xzzz3"},"content":"### `find {keyword}` - Search for tasks that contains the keyword","lastModifiedDate":"2022-02-17"},{"lineNumber":161,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":162,"author":{"gitId":"xzzz3"},"content":"Search for all tasks that contains the given `keyword` and return a list","lastModifiedDate":"2022-02-17"},{"lineNumber":163,"author":{"gitId":"xzzz3"},"content":"of all filtered tasks.","lastModifiedDate":"2022-02-17"},{"lineNumber":164,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":165,"author":{"gitId":"xzzz3"},"content":"Example of usage:","lastModifiedDate":"2022-02-17"},{"lineNumber":166,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":167,"author":{"gitId":"xzzz3"},"content":"`find cs2103`","lastModifiedDate":"2022-02-17"},{"lineNumber":168,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":169,"author":{"gitId":"xzzz3"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":170,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":171,"author":{"gitId":"xzzz3"},"content":"View a list of all the tasks containing the given keyword.","lastModifiedDate":"2022-02-17"},{"lineNumber":172,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":173,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":174,"author":{"gitId":"xzzz3"},"content":"Here are the matching tasks in the list:","lastModifiedDate":"2022-02-17"},{"lineNumber":175,"author":{"gitId":"xzzz3"},"content":"1. [T][ ] cs2103 homework","lastModifiedDate":"2022-02-17"},{"lineNumber":176,"author":{"gitId":"xzzz3"},"content":"2. [T][X] cs2103 submission","lastModifiedDate":"2022-02-17"},{"lineNumber":177,"author":{"gitId":"xzzz3"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"xzzz3"},"content":"### `bye` - Terminate the program","lastModifiedDate":"2022-02-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"xzzz3"},"content":"Terminates the program and exit.","lastModifiedDate":"2022-02-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":185,"author":{"gitId":"xzzz3"},"content":"`bye`","lastModifiedDate":"2022-02-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"xzzz3"},"content":"Exits the program.","lastModifiedDate":"2022-02-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"xzzz3"},"content":"Cya later~","lastModifiedDate":"2022-02-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"xzzz3":162,"-":31}},{"path":"src/main/java/duke/task/DateClashException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"public class DateClashException extends IllegalArgumentException {","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"    public DateClashException(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"        super(message);","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"xzzz3":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":" * Represents a task with a time to do it by. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to the task represented by","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":" * a String name and a String by which specified the date to do it by.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"public class Deadline extends duke.task.Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of a \u003ccode\u003eDeadline\u003c/code\u003e object with the specified name and date to do it by.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     * @param name Name of the deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     * @param by   Date to do the deadline task by.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    public Deadline(String name, String by) throws DateTimeParseException {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"        System.out.println(by);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"        } catch (DateTimeParseException storedException) {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"            this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofLocalizedDate(FormatStyle.valueOf(\"MMM dd yyyy\")));","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"        // to add today, tomorrow, and all 3\u0027s time included format","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the \u003ccode\u003eDeadline\u003c/code\u003e object to be read by the users in \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"     * @return User-friendly string representation of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the \u003ccode\u003eDeadline\u003c/code\u003e object to be saved in the hard drive for future","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"     * uses. It is more concise and computer-friendly than the \u003ccode\u003etoString\u003c/code\u003e method.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"     * @return Computer-friendly string representation of the deadline for storing of data.","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"    public String toText() {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"        return \"D | \" + (this.getIsDone() ? 1 : 0) + \" | \" + this.getName() + \" | \" + this.by + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"        return this.by;","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"xzzz3":57}},{"path":"src/main/java/duke/task/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":61}},{"path":"src/main/java/duke/task/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":" * Represents the Duke Chatbot. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to a Duke chatbot.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     * Creates a new instance of \u003ccode\u003eDuke\u003c/code\u003e\u003e object and initializes its attributes.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    public Duke() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"        ui.greet();","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"            storage.checkFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"            taskList \u003d new TaskList(storage.readFile());","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"        } catch (LoadingException ex) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"            taskList \u003d new TaskList(new ArrayList\u003cTask\u003e(100));","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"     * Creates and runs a new \u003ccode\u003eDuke\u003c/code\u003e object.","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"     * @param args an array of Strings.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"        new Duke().run();","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"     * Runs the \u003ccode\u003eDuke\u003c/code\u003e object, and saves its data after the run finishes.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"    public void run() {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"        storage.saveFile(taskList.getToDoList());","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"     * Reads the user input and responds based on it.","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"     * If the input matches none of the command, prompts the user to re-enter.","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"    public String respond(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"        int idxOfSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2022-02-08"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"        String command;","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"        String restOfInput \u003d \"\";","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"        if (idxOfSpace \u003e -1) {","lastModifiedDate":"2022-02-08"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"            command \u003d input.substring(0, idxOfSpace);","lastModifiedDate":"2022-02-08"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"            restOfInput \u003d input.substring(idxOfSpace).trim();","lastModifiedDate":"2022-02-08"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"            command \u003d input;","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"        switch (command) {","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"            return ui.goodbye();","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"        case \"list\":","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"            return ui.displayList(taskList.getToDoList());","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"            int idx \u003d Integer.parseInt(restOfInput);","lastModifiedDate":"2022-02-08"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"            if (idx - 1 \u003c 0 || idx - 1 \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"                return ui.showIdxOutOfBoundError();","lastModifiedDate":"2022-02-08"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"            return mark(idx);","lastModifiedDate":"2022-02-08"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"            Task newTask;","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"            command \u003d restOfInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"xzzz3"},"content":"            try {","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"                newTask \u003d makeToDo(command);","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"            } catch (ToDoIllegalArgumentException ex) {","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"xzzz3"},"content":"                return ui.showIllegalArgumentError(ex);","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"xzzz3"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-02-08"},{"lineNumber":96,"author":{"gitId":"xzzz3"},"content":"            return ui.confirmAddition(newTask, taskList.getToDoList());","lastModifiedDate":"2022-02-08"},{"lineNumber":97,"author":{"gitId":"xzzz3"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"            try {","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"                String[] s \u003d parser.parseDeadline(restOfInput);","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"xzzz3"},"content":"                newTask \u003d new Deadline(s[0], s[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"xzzz3"},"content":"            } catch (IncompleteArgumentException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"xzzz3"},"content":"                return ui.showIncompleteArgumentError();","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"            } catch (DateTimeParseException dateEx) {","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"                return ui.showDateTimeParseError();","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"xzzz3"},"content":"            taskList.add(newTask);","lastModifiedDate":"2022-02-08"},{"lineNumber":108,"author":{"gitId":"xzzz3"},"content":"            return ui.confirmAddition(newTask, taskList.getToDoList());","lastModifiedDate":"2022-02-08"},{"lineNumber":109,"author":{"gitId":"xzzz3"},"content":"        case \"event\":","lastModifiedDate":"2022-02-08"},{"lineNumber":110,"author":{"gitId":"xzzz3"},"content":"            try {","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"xzzz3"},"content":"                String[] s \u003d parser.parseEvent(restOfInput);","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"xzzz3"},"content":"                newTask \u003d new Event(s[0], s[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"xzzz3"},"content":"            } catch (IncompleteArgumentException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"xzzz3"},"content":"                return ui.showIncompleteArgumentError();","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"xzzz3"},"content":"            } catch (DateTimeParseException dateEx) {","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"xzzz3"},"content":"                return ui.showDateTimeParseError();","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":118,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"xzzz3"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"xzzz3"},"content":"                taskList.add(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"xzzz3"},"content":"            } catch (DateClashException ex) {","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"xzzz3"},"content":"                return ui.showDateClashError();","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"xzzz3"},"content":"            return ui.confirmAddition(newTask, taskList.getToDoList());","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"xzzz3"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"xzzz3"},"content":"            idx \u003d Integer.parseInt(restOfInput);","lastModifiedDate":"2022-02-08"},{"lineNumber":127,"author":{"gitId":"xzzz3"},"content":"            if (idx - 1 \u003c 0 || idx - 1 \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":128,"author":{"gitId":"xzzz3"},"content":"                return ui.showIdxOutOfBoundError();","lastModifiedDate":"2022-02-08"},{"lineNumber":129,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":130,"author":{"gitId":"xzzz3"},"content":"            return remove(idx);","lastModifiedDate":"2022-02-08"},{"lineNumber":131,"author":{"gitId":"xzzz3"},"content":"        case \"find\":","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"xzzz3"},"content":"            ArrayList\u003cTask\u003e relevantTasks \u003d taskList.find(restOfInput);","lastModifiedDate":"2022-02-03"},{"lineNumber":133,"author":{"gitId":"xzzz3"},"content":"            return ui.showFindResult(relevantTasks);","lastModifiedDate":"2022-02-03"},{"lineNumber":134,"author":{"gitId":"xzzz3"},"content":"        default:","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"xzzz3"},"content":"            return ui.doNotUnderstand();","lastModifiedDate":"2022-02-03"},{"lineNumber":136,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":137,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":138,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"xzzz3"},"content":"     * Reverses the boolean \u003ccode\u003edone\u003c/code\u003e attribute of the task at the given list index.","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":142,"author":{"gitId":"xzzz3"},"content":"     * @param idx Index of the task in the \u003ccode\u003etaskList\u003c/code\u003e;","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"xzzz3"},"content":"    public String mark(int idx) {","lastModifiedDate":"2022-02-03"},{"lineNumber":145,"author":{"gitId":"xzzz3"},"content":"        assert (idx - 1 \u003e\u003d 0) : \"Index of the element should be positive\";","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"xzzz3"},"content":"        assert (idx - 1 \u003c taskList.getSize()) : \"Index of the element should be within the size of the list\";","lastModifiedDate":"2022-02-08"},{"lineNumber":147,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":148,"author":{"gitId":"xzzz3"},"content":"        taskList.get(idx - 1).mark();","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"xzzz3"},"content":"        if (taskList.get(idx - 1).getIsDone()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"xzzz3"},"content":"            return ui.markAsDone(taskList.getToDoList(), idx);","lastModifiedDate":"2022-02-03"},{"lineNumber":151,"author":{"gitId":"xzzz3"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"xzzz3"},"content":"            return ui.unmarkAsDone(taskList.getToDoList(), idx);","lastModifiedDate":"2022-02-03"},{"lineNumber":153,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"xzzz3"},"content":"     * Returns a \u003ccode\u003eToDo\u003c/code\u003e with the specified name.","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":159,"author":{"gitId":"xzzz3"},"content":"     * @param name Name of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"xzzz3"},"content":"     * @return new instance of \u003ccode\u003eToDo\u003c/code\u003e with the specified name.","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"xzzz3"},"content":"     * @throws ToDoIllegalArgumentException If the name is an empty string.","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"xzzz3"},"content":"    public Task makeToDo(String name) throws ToDoIllegalArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"xzzz3"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"xzzz3"},"content":"            throw new ToDoIllegalArgumentException(\"Illegal Argument\");","lastModifiedDate":"2022-01-19"},{"lineNumber":166,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":167,"author":{"gitId":"xzzz3"},"content":"        return new ToDo(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":169,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":170,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"xzzz3"},"content":"     * Removes the \u003ccode\u003etask\u003c/code\u003e at the specified index of the \u003ccode\u003etaskList\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":173,"author":{"gitId":"xzzz3"},"content":"     * @param idx Index of the \u003ccode\u003etask\u003c/code\u003e in the \u003ccode\u003etaskList\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"xzzz3"},"content":"    public String remove(int idx) {","lastModifiedDate":"2022-02-03"},{"lineNumber":176,"author":{"gitId":"xzzz3"},"content":"        assert (idx - 1 \u003e\u003d 0) : \"Index of the element should be positive\";","lastModifiedDate":"2022-02-08"},{"lineNumber":177,"author":{"gitId":"xzzz3"},"content":"        assert (idx - 1 \u003c taskList.getSize()) : \"Index of the element should be within the size of the list\";","lastModifiedDate":"2022-02-08"},{"lineNumber":178,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":179,"author":{"gitId":"xzzz3"},"content":"        Task removed \u003d taskList.remove(idx - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"xzzz3"},"content":"        return ui.confirmRemoval(removed, taskList.getToDoList());","lastModifiedDate":"2022-02-03"},{"lineNumber":181,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":182,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"xzzz3"},"content":"    String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":184,"author":{"gitId":"xzzz3"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":185,"author":{"gitId":"xzzz3"},"content":"            storage.saveFile(taskList.getToDoList());","lastModifiedDate":"2022-02-17"},{"lineNumber":186,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":187,"author":{"gitId":"xzzz3"},"content":"        return \"Xzzzbot: \" + respond(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":188,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":189,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":190,"author":{"gitId":"xzzz3"},"content":"    String greet() {","lastModifiedDate":"2022-02-08"},{"lineNumber":191,"author":{"gitId":"xzzz3"},"content":"        return ui.greet();","lastModifiedDate":"2022-02-08"},{"lineNumber":192,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xzzz3":191,"-":2}},{"path":"src/main/java/duke/task/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e that can be thrown by the Duke chatbot class. A \u003ccode\u003eDukeException\u003c/code\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" * object is represented by its string message.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of the \u003ccode\u003eDukeException\u003c/code\u003e class with the specified message.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"     * @param message The exception message.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"        super(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the Exception.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     * @return String representation of the Exception.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    public abstract String toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"xzzz3":23}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":" * Represents a task with a time to do it at. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to the task represented by","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":" * a String name and a String at which specified the time to do it at.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"public class Event extends duke.task.Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of a \u003ccode\u003eEvent\u003c/code\u003e object with the specified name and time to do it at.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     * @param name Name of the event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     * @param at   Time to do the Event task at.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    public Event(String name, String at) throws DateTimeParseException {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"        } catch (DateTimeParseException storedException) {","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"            this.at \u003d LocalDate.parse(at, DateTimeFormatter.ofLocalizedDate(FormatStyle.valueOf(\"MMM dd yyyy\")));","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the \u003ccode\u003eEvent\u003c/code\u003e object to be read by the users in \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"     * @return User-friendly string representation of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the \u003ccode\u003eEvent\u003c/code\u003e object to be saved in the hard drive for future","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"     * uses. It is more concise and computer-friendly than the \u003ccode\u003etoString\u003c/code\u003e method.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"     * @return Computer-friendly string representation of the event for storing of data.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"    public String toText() {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"        return \"E | \" + (this.getIsDone() ? 1 : 0) + \" | \" + this.getName() + \" | \" + this.at + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"        return this.at;","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"xzzz3":55}},{"path":"src/main/java/duke/task/IncompleteArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Represents an exception caused by attempting to create a \u003ccode\u003eTask\u003c/code\u003e object with incomplete","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" * arguments. A \u003ccode\u003eIncompleteArgumentException\u003c/code\u003e is represented by an error message.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"public class IncompleteArgumentException extends IllegalArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of \u003ccode\u003eIncompleteArgumentException\u003c/code\u003e with the specified Exception message.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    public IncompleteArgumentException(String message) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"        super(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"xzzz3":15}},{"path":"src/main/java/duke/task/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":12}},{"path":"src/main/java/duke/task/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Represents an exception when reading the saved data file, caused by the data being in the wrong format.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" * A \u003ccode\u003eLoadingException\u003c/code\u003e is represented by a String message.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"public class LoadingException extends duke.task.DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of \u003ccode\u003eLoadingException\u003c/code\u003e with the specified Exception message.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    public LoadingException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the Exception, which notifies the user of the cause and solution.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"        return \"UH-OH!! seems like the file is not in the right format... \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"                + \"don\u0027t worry! I\u0027ll start a new file for you!\";","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"xzzz3":24}},{"path":"src/main/java/duke/task/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"            stage.setTitle(\"Xzzz\");","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"            stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":32}},{"path":"src/main/java/duke/task/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/nobitaCrying.jpg\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Doraemon.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(d.greet(), dukeImage));","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"    @FXML","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":56}},{"path":"src/main/java/duke/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Represents a parser used to make sense of user input. A \u003ccode\u003eParser\u003c/code\u003e object corresponds to a parser.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of \u003ccode\u003eParser\u003c/code\u003e object.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"    public Parser() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"     * Returns the parsed array of String for Deadline inputs.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"     * @param string User input for Deadline creation.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"     * @return parsed String array, with first element being the name and second element being date-by.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     * @throws IncompleteArgumentException If the string is not in the right format, i.e. two parts separated by \"/by\".","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    public String[] parseDeadline(String string) throws IncompleteArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"        String[] result \u003d string.split(\"/by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"        for (int i \u003d 0; i \u003c result.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"            result[i] \u003d result[i].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"        if (result.length \u003c 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"            throw new IncompleteArgumentException(\"Incomplete Argument\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"        return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"     * Returns the parsed array of String for Event inputs.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"     * @param string User input for Event creation.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"     * @return parsed String array, with first element being the name and second element being date-at.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"     * @throws IncompleteArgumentException If the string is not in the right format, i.e. two parts separated by \"/at\".","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"    public String[] parseEvent(String string) throws IncompleteArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"        String[] result \u003d string.split(\"/at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"        for (int i \u003d 0; i \u003c result.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"            result[i] \u003d result[i].trim();","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"        if (result.length \u003c 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"            throw new IncompleteArgumentException(\"Incomplete Argument\");","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"        return result;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"xzzz3":50}},{"path":"src/main/java/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":" * Represents a storage to deal with loading tasks from the file and saving tasks in the file in the hard drive.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of the \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    public Storage() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"     * Creates a file at Path \"data/duke.txt\" if it does not exist.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"     * If the file exists, do nothing.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    public void checkFile() throws IOException {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"        Files.createDirectory(Paths.get(\"data\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"        Files.createFile(Paths.get(\"data/duke.txt\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"     * Saves the list data to the file at Path \"data/duke.txt\".","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"     * @param toDoList The List of items to be saved.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    public void saveFile(ArrayList\u003cTask\u003e toDoList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"            StringBuilder textToAdd \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"            for (Task task : toDoList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"                textToAdd.append(task.toText());","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"            fw.write(textToAdd.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"            fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"            saveFile(toDoList);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"     * Reads the file at Path \"data/duke.txt\" and returns the content as a list.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"     * @return ArrayList of \u003ccode\u003eTasks\u003c/code\u003e from the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"     * @throws LoadingException If the file is not in the correct format.","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"    public ArrayList\u003cTask\u003e readFile() throws LoadingException {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"        File dataFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"        ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"            Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"            String[] taskLine;","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"                taskLine \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"                switch (taskLine[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"                case \"T\":","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"                    toDoList.add(new ToDo(taskLine[2]));","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"                case \"D\":","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"                    toDoList.add(new Deadline(taskLine[2], taskLine[3]));","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"                case \"E\":","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"                    toDoList.add(new Event(taskLine[2], taskLine[3]));","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"                default:","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"                    throw new LoadingException(\"Wrong input\");","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"                if (taskLine[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"                    toDoList.get(toDoList.size() - 1).mark();","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"            return toDoList;","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"        } catch (IndexOutOfBoundsException | FileNotFoundException ex) {","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"            throw new LoadingException(\"Index Out of Bounds\");","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"xzzz3":92}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object is represented by its name and a boolean indicating whether it is done.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"    private final String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"     * Returns a new \u003ccode\u003eTask\u003c/code\u003e object with the specified name and isDone status.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"     * @param name Name of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"     * @param isDone isDone status of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"     * Returns a new \u003ccode\u003eTask\u003c/code\u003e object with the specified name that is not yet done.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"     * @param name Name of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    public Task(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"        this(name, false);","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"     * Reverses the isDone status of the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"    public void mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"     * @return String representation of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"     * Returns the isDone status of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"     * @return isDone status of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"     * Returns the name of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"     * @return Name of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"    public String getName() {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"        return this.name;","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"    public abstract LocalDate getDate();","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"    public abstract String toText();","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"xzzz3":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":" * Represents a list of \u003ccode\u003eTasks\u003c/code\u003e. A \u003ccode\u003eTaskList\u003c/code\u003e object is represented by an ArrayList of Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    private ArrayList\u003cTask\u003e toDoList;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    private HashSet\u003cLocalDate\u003e dateList;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of the \u003ccode\u003eTaskList\u003c/code\u003e object with the specified ArrayList.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"     * @param arr ArrayList of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    public TaskList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"        this.toDoList \u003d arr;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"        this.dateList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"     * Returns the ArrayList of \u003ccode\u003eTasks\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"     * @return ArrayList of \u003ccode\u003eTasks\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    public ArrayList\u003cTask\u003e getToDoList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"        return toDoList;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the list.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"     * @param task \u003ccode\u003eTask\u003c/code\u003e to be added to the list.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"        if (!(task instanceof Event)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"            this.toDoList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"            return;","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"        LocalDate date \u003d task.getDate();","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"        if (dateList.contains(date)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"            throw new DateClashException(\"Date clash with other task\");","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"        dateList.add(date);","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"        toDoList.add(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"     * Returns the \u003ccode\u003eTask\u003c/code\u003e at the specified index of the list.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"     * @return \u003ccode\u003eTask\u003c/code\u003e at the index.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"    public Task get(int idx) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"        return this.toDoList.get(idx);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"     * Removes the \u003ccode\u003eTask\u003c/code\u003e at the index of the list and returns it.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"     * @return \u003ccode\u003eTask\u003c/code\u003e removed at the index.","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"    public Task remove(int idx) {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"        return this.toDoList.remove(idx);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"     * Returns a list of \u003ccode\u003eTasks\u003c/code\u003e that contains the specified keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"     * @param keyword The keyword to be searched.","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"     * @return List of relevant tasks that contains the keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"        ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"        for (Task task : toDoList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"            if (task.getName().contains(keyword)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"                relevantTasks.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"        return relevantTasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"     * Returns the size of the list","lastModifiedDate":"2022-02-08"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"     * @return Size of the list","lastModifiedDate":"2022-02-08"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"    public int getSize() {","lastModifiedDate":"2022-02-08"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"        return this.toDoList.size();","lastModifiedDate":"2022-02-08"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"xzzz3":89}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" * Represents a task. A \u003ccode\u003eToDo\u003c/code\u003e object corresponds to the task represented by","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":" * a String name.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of a \u003ccode\u003eToDo\u003c/code\u003e object with the specified name.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"     * @param name Name of the deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"        super(name);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the \u003ccode\u003eToDo\u003c/code\u003e object to be read by the users in \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"     * @return User-friendly string representation of the todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the \u003ccode\u003eToDo\u003c/code\u003e object to be saved in the hard drive for future","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"     * uses. It is more concise and computer-friendly than the \u003ccode\u003etoString\u003c/code\u003e method.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"     * @return Computer-friendly string representation of the todo for storing of data.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"    public String toText() {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"        return \"T | \" + (this.getIsDone() ? 1 : 0) + \" | \" + this.getName() + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"        return null;","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"xzzz3":42}},{"path":"src/main/java/duke/task/ToDoIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":" * Represents an exception caused by attempting to create a \u003ccode\u003eToDo\u003c/code\u003e object with invalid or incomplete","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":" * arguments. A \u003ccode\u003eToDoIllegalArgumentException\u003c/code\u003e is represented by an error message.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"public class ToDoIllegalArgumentException extends IllegalArgumentException {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of \u003ccode\u003eToDoIllegalArgumentException\u003c/code\u003e with the specified Exception message.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    public ToDoIllegalArgumentException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"        super(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     * Returns a String representation of the exception.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     * @return String representation of the exception.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"        return \"UH-OH!! you gotta fill in the description to create a valid todo\";","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"xzzz3":24}},{"path":"src/main/java/duke/task/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":" * Represents a UI that deals with interactions with the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"     * Returns a new instance of the \u003ccode\u003eUi\u003c/code\u003e class.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    public Ui() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"     * Returns the greeting message","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"     * @return Greeting message is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"    public String greet() {","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"        String logo \u003d \"__  __ ____________\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"                + \"\\\\ \\\\/ /|_  /_  /_  /\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"                + \" \u003e  \u003c  / / / / / / \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"                + \"/_/\\\\_\\\\/___/___/___| \\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        return logo + \"Hello uwu! I\u0027m xzzz, \\n\" + \"You can check your schedwle here! \\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"     * Returns the goodbye message.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"     * @return Goodbye message is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"    public String goodbye() {","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"xzzz3"},"content":"        return \"Cya later~\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"xzzz3"},"content":"     * Returns the list for display.","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"xzzz3"},"content":"     * @param toDoList List to be displayed.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"xzzz3"},"content":"     * @return A display of the list is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"xzzz3"},"content":"    public String displayList(ArrayList\u003cTask\u003e toDoList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"xzzz3"},"content":"        if (toDoList.isEmpty()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"xzzz3"},"content":"            return \"you have finished all your tasks! Y A Y!!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":45,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"xzzz3"},"content":"        int number \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"xzzz3"},"content":"        String result \u003d \"here are your tasks\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"xzzz3"},"content":"        for (Task item : toDoList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"xzzz3"},"content":"            result +\u003d number + \". \" + item.toString() + \"\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"xzzz3"},"content":"            number++;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"xzzz3"},"content":"        if (toDoList.isEmpty()) {","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"xzzz3"},"content":"            return \"you have no tasks as of now! \\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"xzzz3"},"content":"        } else {","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"xzzz3"},"content":"            return result;","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"xzzz3"},"content":"     * Returns the error caused by illegal argument.","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"xzzz3"},"content":"     * @param ex IllegalArgument error.","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"xzzz3"},"content":"     * @return The error message for illegal argument is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"xzzz3"},"content":"    public String showIllegalArgumentError(Exception ex) {","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"xzzz3"},"content":"        return ex.toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"xzzz3"},"content":"     * Returns the error caused by incomplete argument.","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"xzzz3"},"content":"     * @return The error message for incomplete argument is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"xzzz3"},"content":"    public String showIncompleteArgumentError() {","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"xzzz3"},"content":"        return \"UH-OH!! you gotta fill in the description and deadline date \"","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"xzzz3"},"content":"                + \"/ event date to create a valid task\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"xzzz3"},"content":"     * Returns the confirmation for addition of a \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003etoDoList\u003c/code\u003e.","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"xzzz3"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"xzzz3"},"content":"     * @param toDoList List for the task to be added to.","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"xzzz3"},"content":"     * @return The confirmation for addition is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"xzzz3"},"content":"    public String confirmAddition(Task newTask, ArrayList\u003cTask\u003e toDoList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"xzzz3"},"content":"        return \"okie!! i have added: \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"xzzz3"},"content":"                + newTask + \"\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"xzzz3"},"content":"                + \"now there are \" + toDoList.size() + \" tasks in the list! get to work \\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"xzzz3"},"content":"     * Returns a message to indicate the bot does not understand the command.","lastModifiedDate":"2022-02-03"},{"lineNumber":91,"author":{"gitId":"xzzz3"},"content":"     * @return The default response for unrecognizable command is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"xzzz3"},"content":"    public String doNotUnderstand() {","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"xzzz3"},"content":"        return \"sowwy i don\u0027t understand what that means try something else pwease?? \\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"xzzz3"},"content":"     * Returns a confirmation that a \u003ccode\u003eTask\u003c/code\u003e at the index in the list has been marked as done.","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"xzzz3"},"content":"     * @param toDoList List of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"xzzz3"},"content":"     * @param idx Index of the task that has been marked.","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"xzzz3"},"content":"     * @return The confirmation of the marking is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":103,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"xzzz3"},"content":"    public String markAsDone(ArrayList\u003cTask\u003e toDoList, int idx) {","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"xzzz3"},"content":"        return \"yay!!! this task is now marked as done \\n\" + toDoList.get(idx - 1).toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":106,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"xzzz3"},"content":"     * Returns a confirmation that a \u003ccode\u003eTask\u003c/code\u003e at the index in the list has been marked as undone.","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"xzzz3"},"content":"     * @param toDoList List of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"xzzz3"},"content":"     * @param idx Index of the task that has been unmarked.","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"xzzz3"},"content":"     * @return The confirmation of the unmarking is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"xzzz3"},"content":"    public String unmarkAsDone(ArrayList\u003cTask\u003e toDoList, int idx) {","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"xzzz3"},"content":"        return \"this task is now marked as not done yet... do it soon! \\n\" + toDoList.get(idx - 1).toString();","lastModifiedDate":"2022-02-03"},{"lineNumber":116,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"xzzz3"},"content":"     * Returns the confirmation for removal of a \u003ccode\u003eTask\u003c/code\u003e from the \u003ccode\u003etoDoList\u003c/code\u003e.","lastModifiedDate":"2022-02-03"},{"lineNumber":120,"author":{"gitId":"xzzz3"},"content":"     * @param removed Task to be removed.","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"xzzz3"},"content":"     * @param toDoList List for the task to be removed from.","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"xzzz3"},"content":"     * @return The confirmation of the removal is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"xzzz3"},"content":"    public String confirmRemoval(Task removed, ArrayList\u003cTask\u003e toDoList) {","lastModifiedDate":"2022-02-03"},{"lineNumber":125,"author":{"gitId":"xzzz3"},"content":"        return \"OKI!! i have removed this task: \\n\" + removed + \"\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":126,"author":{"gitId":"xzzz3"},"content":"                + \"now there are \" + toDoList.size() + \" tasks in the list! get to work \\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":127,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"xzzz3"},"content":"     * Returns the error caused by invalid loading of the file.","lastModifiedDate":"2022-02-03"},{"lineNumber":131,"author":{"gitId":"xzzz3"},"content":"     * @return The error message of a loading error is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"xzzz3"},"content":"    public String showLoadingError() {","lastModifiedDate":"2022-02-03"},{"lineNumber":134,"author":{"gitId":"xzzz3"},"content":"        return \"UH-OH!! seems like the file is not in the right format...\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":135,"author":{"gitId":"xzzz3"},"content":"                + \"don\u0027t worry! I\u0027ll start a new file for you! \\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":136,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"xzzz3"},"content":"     * Returns the specified relevant tasks for the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"xzzz3"},"content":"     * @param relevantTasks List of relevant tasks containing a keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"xzzz3"},"content":"     * @return The result of the find operation is returned.","lastModifiedDate":"2022-02-03"},{"lineNumber":142,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"xzzz3"},"content":"    public String showFindResult(ArrayList\u003cTask\u003e relevantTasks) {","lastModifiedDate":"2022-02-03"},{"lineNumber":144,"author":{"gitId":"xzzz3"},"content":"        if (relevantTasks.isEmpty()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"xzzz3"},"content":"            return \"There are no matching tasks :( \\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"xzzz3"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"xzzz3"},"content":"            String result \u003d \"Here are the matching tasks in the list : \\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":148,"author":{"gitId":"xzzz3"},"content":"            int counter \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"xzzz3"},"content":"            for (Task task : relevantTasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"xzzz3"},"content":"                result +\u003d counter + \". \" + task + \"\\n\";","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"xzzz3"},"content":"                counter++;","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"xzzz3"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"xzzz3"},"content":"            return result;","lastModifiedDate":"2022-02-03"},{"lineNumber":154,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":157,"author":{"gitId":"xzzz3"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":158,"author":{"gitId":"xzzz3"},"content":"     * Returns the error caused by index out of bound error.","lastModifiedDate":"2022-02-08"},{"lineNumber":159,"author":{"gitId":"xzzz3"},"content":"     * @return The error message of a index out of bound error is returned.","lastModifiedDate":"2022-02-08"},{"lineNumber":160,"author":{"gitId":"xzzz3"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":161,"author":{"gitId":"xzzz3"},"content":"    public String showIdxOutOfBoundError() {","lastModifiedDate":"2022-02-08"},{"lineNumber":162,"author":{"gitId":"xzzz3"},"content":"        return \"UH-OH!! the index should be between 1 and the size of the task list!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":163,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":164,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":165,"author":{"gitId":"xzzz3"},"content":"    public String showDateTimeParseError() {","lastModifiedDate":"2022-02-09"},{"lineNumber":166,"author":{"gitId":"xzzz3"},"content":"        return \"please enter the date in the following format: yyyy-mm-dd !!\";","lastModifiedDate":"2022-02-09"},{"lineNumber":167,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":168,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":169,"author":{"gitId":"xzzz3"},"content":"    public String showDateClashError() {","lastModifiedDate":"2022-02-09"},{"lineNumber":170,"author":{"gitId":"xzzz3"},"content":"        return \"this task clashes with another task in your list, maybe reschedule one of them?\";","lastModifiedDate":"2022-02-09"},{"lineNumber":171,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":172,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"xzzz3":172}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.task.MainWindow\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"xzzz3":19}},{"path":"test/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"class DukeTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"xzzz3":4}},{"path":"test/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"import duke.task.IncompleteArgumentException;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"import duke.task.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"    public void parsingDeadline_validArgument_success() throws Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"        String[] strArr \u003d {\"read book\", \"tmr\"};","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"        assertArrayEquals(strArr, new Parser().parseDeadline(\"read book /by tmr\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    public void parsingEvent_validArgument_success() throws Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"        String[] strArr \u003d {\"read book\", \"night\"};","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"        assertArrayEquals(strArr, new Parser().parseEvent(\"read book /at night\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    public void parsingDeadline_incompleteArgument_exceptionThrown() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"xzzz3"},"content":"            String[] strArr \u003d {\"read book\", \"tmr\"};","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"xzzz3"},"content":"            assertArrayEquals(strArr, new Parser().parseDeadline(\"read book\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"xzzz3"},"content":"        } catch (IncompleteArgumentException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"xzzz3"},"content":"            assertEquals(\"Incomplete Argument\", ex.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"xzzz3"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"xzzz3":31}},{"path":"test/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xzzz3"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"xzzz3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"xzzz3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"xzzz3"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"xzzz3"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"xzzz3"},"content":"    public void toStringConversion_validToDo_success() throws Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"xzzz3"},"content":"        assertEquals(\"[T][ ] read book\", new ToDo(\"read book\").toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"xzzz3"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"xzzz3"},"content":"    public void toTextConversion_validToDo_success() throws Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"xzzz3"},"content":"        assertEquals(\"T | 0 | read book\" + \"\\n\", new ToDo(\"read book\").toText());","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"xzzz3"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"xzzz3"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"xzzz3"},"content":"    public void testMark() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"xzzz3"},"content":"        ToDo testToDo \u003d new ToDo(\"read book\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"xzzz3"},"content":"        testToDo.mark();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"xzzz3"},"content":"        assertEquals(\"[T][X] read book\", testToDo.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"xzzz3"},"content":"        assertEquals(\"T | 1 | read book\" + \"\\n\", testToDo.toText());","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"xzzz3"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"xzzz3"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"xzzz3":24}}]
