[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"# duke.main.Duke project template","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"Ardentsoul":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"Ardentsoul":15}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" * Represents a subclass of Command.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003eAddCommand\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     * @param task the task to be instantiated with.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"        super(task, null, null);","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     * Adds the task into the arraylist.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     * @param taskList taskList the task to be added into the arraylist.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"     * @return the task to be printed out by GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        taskList.addToList(super.task);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"        String output \u003d \"Task added!\\n   \" + task.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"        String totalNumOfTasks \u003d taskList.totalTasks(taskList.getTaskArrayListSize());","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"        return output + \"\\n\" + totalNumOfTasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" * An abstract class to handle the commands of the logic from Parser class.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    protected Task task;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    protected Integer num;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    protected String keyword;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"     * Since it is an abstract class, Command cannot be instantiated.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"     * @param task the task to be stored.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * @param num the number to be stored.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     * @param keyword the keyword to be stored.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    public Command(Task task, Integer num, String keyword) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        this.num \u003d num;","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"     * Executes tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"     * @param tasks tasks the task to be executed.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"     * @return the String to be printed depending on what has been executed.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    public abstract String execute(TaskList tasks);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":35}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" * Represents a subclass of Command.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003eDeleteCommand\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     * @param task the task to be instantiated with.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    public DeleteCommand(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"        super(task, null, null);","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     * Deletes the task into the arraylist.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     * @param taskList the task to be deleted from the arraylist.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"     * @return the task to be printed out by GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        taskList.deleteFromList(super.task);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"        String firstMessage \u003d \"Hmm... kinda sus you deleted this task...\";","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"        String secondMessage \u003d task.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"        String totalNumOfTasks \u003d taskList.totalTasks(taskList.getTaskArrayListSize());","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        return firstMessage + \"\\n   \" + secondMessage + \"\\n\" + totalNumOfTasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":33}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" * Represents a subclass of Command.","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003eExitCommand\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"        super(null, null, null);","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"     * Exits Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     * @param tasks the task to be exited.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @return the task to be printed out by GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        return Ui.showGoodbye();","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":27}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" * Represents a subclass of Command.","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003eFindCommand\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     * @param keyword the word to be searched in the arraylist of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        super(null, null, keyword);","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * Finds the word in the task arraylist.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @param taskList the task to be found in the arraylist.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     * @return the task to be printed out by GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"        return taskList.findTaskInList(keyword);","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" * Represents a subclass of Command.","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003eMarkCommand\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     * @param num the index in the arraylist to be marked.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public MarkCommand(Integer num) {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        super(null, num, null);","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * Marks the task in the arraylist.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @param taskList the task to be marked in the arraylist.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     * @return the task to be printed out by GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"            taskList.mark(num);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"            String firstMessage \u003d \"The bar on the top left of your screen just increased! Keep going!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"            String secondMessage \u003d taskList.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"            return firstMessage + \"\\n   \" + secondMessage;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"            return \"The task number is kinda sus... it\u0027s outta bounds!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":35}},{"path":"src/main/java/duke/command/PrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" * Represents a subclass of Command.","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"public class PrintCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003ePrintCommand\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    public PrintCommand() {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"        super(null, null, null);","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"     * Prints the tasks in the arraylist.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * @param taskList the tasks to be printed.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     * @return the task to be printed out by GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        String firstMessage \u003d \"Here are the tasks in your device:\";","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        return firstMessage + \"\\n   \" + taskList.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":27}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.command;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" * Represents a subclass of Command.","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003eUnmarkCommand\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     * @param num the index in the arraylist to be marked.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public UnmarkCommand(Integer num) {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        super(null, num, null);","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * Unmarks the task in the arraylist.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @param taskList the task to be marked in the arraylist.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     * @return the task to be printed out by GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"            taskList.unmark(num);","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"            String firstMessage \u003d \"Surely you aren\u0027t the imposter... right??\";","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"            String secondMessage \u003d taskList.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"            return firstMessage + \"\\n   \" + secondMessage;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"            return \"The task number is kinda sus... it\u0027s outta bounds!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":35}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Represents the main exception class that handles errors specific to Duke.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"     * A constructor for \u003ccode\u003eDukeException\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     * @param msg a message to display if exception is called.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"        super(msg);","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"Ardentsoul":15}},{"path":"src/main/java/duke/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Represents a duke exception subclass that handles empty inputs.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" * E.g., \"\".","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"     * Displays message if this exception is called.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    public EmptyInputException() {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"        super(\"You cannot enter an empty command! Please enter a command.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"Ardentsoul":14}},{"path":"src/main/java/duke/exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Represents a duke exception subclass that handles incomplete inputs.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" * E.g., \"deadline\".","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"public class IncompleteInputException extends DukeException {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"     * Displays message if this exception is called.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    public IncompleteInputException(String input) {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"        super(input + \" is an incomplete command! Please enter another command.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"Ardentsoul":14}},{"path":"src/main/java/duke/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Represents a duke exception subclass that handles unknown inputs.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" * E.g., \"test\".","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"public class UnknownInputException extends DukeException {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"     * Displays message if this exception is called.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    public UnknownInputException() {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"        super(\"This is an unrecognised command! Please enter another command.\");","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"Ardentsoul":14}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.main;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"    private void flip() {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"     * Gets the user dialog box.","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"     * @param text the user\u0027s input.","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"     * @param img the user\u0027s image.","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"     * @return a user dialog box with user input and image.","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"     * Gets Duke dialog box.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"     * @param text the Duke\u0027s input.","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"     * @param img the Duke\u0027s image.","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"     * @return a Duke dialog box with Duke input and image.","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"        db.flip();","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"        return db;","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Ardentsoul":74}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.main;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.Parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.Storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.Ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":" * Represents a Duke bot to record tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":" *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":" * @author Zachary Chan","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":" * @version 0.1","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"     * Initializes a \u003ccode\u003eDuke\u003c/code\u003e object using a Duke constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    public Duke() {","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"     * Initializes the Storage Class.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"     * @throws IOException if file/directory not found.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    public void initializeStorage() throws IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        storage \u003d new Storage(\"/DukeSaveDirectory/DukeSaveFile.txt\", System.getProperty(\"user.home\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"        storage.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"     * Generates a response to user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"     * @param input takes in the user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"     * @return a String to be printed in the GUI.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"            String output \u003d c.execute(tasks);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"            Storage.updateTextFile();","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"            return output;","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"            return ui.showDukeError(e.getMessage());","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"Ardentsoul":54}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.main;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"public class Launcher {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     * Launches the main application.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     * @param args the arguments input by user.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Ardentsoul":17}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.main;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * Starts the GUI for Duke using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @param stage the base GUI for Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"            stage.show();","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Ardentsoul":36}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.main;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/amongustwerk2.png\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/redamongus.png\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"     * Initializes the dialogContainer value properties.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"     * Initializes Storage class for Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"     * @param d object to be initialized.","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"            duke.initializeStorage();","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"            // if user load then got no folder/file, duke will prompt","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"                    DialogBox.getDukeDialog(e.getMessage(), dukeImage)","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"            );","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        // regardless show welcome msg","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage));","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"        );","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Ardentsoul":72}},{"path":"src/main/java/duke/operations/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.operations;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.PrintCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"import duke.exceptions.EmptyInputException;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"import duke.exceptions.IncompleteInputException;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"import duke.exceptions.UnknownInputException;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":" * Represents a parser for Duke. It deals with making sense of the user command.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"     * Converts an input of type String into LocalDate. E.g., 12-12-2022.","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"     * @param str input date of format \"dd-MM-yyyy\". E.g., 12-12-2022.","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"     * @return input of type LocalDate of format \"dd-MM-yyyy\". E.g., 12-12-2022.","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    public static LocalDate convertStringToLocalDate(String str) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"        return LocalDate.parse(str, formatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"     * Converts an input of type String into LocalTime. E.g., 1900.","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"     * @param str input time of format \"HHmm\". E.g., 1900.","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"     * @return input of type LocalTime of format \"HHmm\". E.g., 1900.","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"    public static LocalTime convertStringToLocalTime(String str) {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"        return LocalTime.parse(str, formatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"     * Converts an input of type LocalDate into String. E.g., 12-12-2022.","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"     * @param date input date of format \"dd-MM-yyyy\". E.g., 12-12-2022.","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"     * @return input of type String of format \"dd-MM-yyyy\". E.g., 12-12-2022.","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"    public static String convertLocalDateToString(LocalDate date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"        return date.format(formatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"     * Converts an input of type LocalTime into String. E.g., 1900.","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"     * @param time input time of format \"HHmm\". E.g., 1900.","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"     * @return input of type String of format \"HHmm\". E.g., 1900.","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"    public static String convertLocalTimeToString(LocalTime time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"        return time.format(formatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"     * Parses the user input and handles the various commands depending on the input.","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"     * E.g., if user keys in \"todo run\", this task will go to the respective if block and handle it.","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"     * @param input the user input.","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"     * @return a \u003ccode\u003eCommand\u003c/code\u003e that executes the logic.","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"     * @throws DukeException handles incomplete and unknown inputs. E.g., \"deadline do project /by 12312312\".","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"        // Create a String array to read various functions","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"        String[] strs \u003d input.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"        // Store first word as variable","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"        String firstWord \u003d strs[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"            throw new EmptyInputException();","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"        } else if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"Ardentsoul"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"Ardentsoul"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"            return new PrintCommand();","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"Ardentsoul"},"content":"        } else if (firstWord.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":"            return handleMarkInput(strs[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"Ardentsoul"},"content":"        } else if (firstWord.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"Ardentsoul"},"content":"            return handleUnmarkInput(strs[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"Ardentsoul"},"content":"        } else if (firstWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"            String subString \u003d input.substring(4).trim(); // take the remaining of the input String after \"todo\"","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"            if (subString.length() \u003d\u003d 0) { // Check for empty description","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"                throw new IncompleteInputException(firstWord);","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"                return handleToDoInput(subString);","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"        } else if (firstWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"            String subString \u003d input.substring(8).trim(); // take the remaining of the input String after \"deadline\"","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"            if (subString.length() \u003d\u003d 0) { // Check for empty description","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"                throw new IncompleteInputException(firstWord);","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"                return handleDeadlineInput(subString);","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"Ardentsoul"},"content":"        } else if (firstWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"Ardentsoul"},"content":"            String subString \u003d input.substring(5).trim(); // take the remaining of the input String after \"event\"","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"Ardentsoul"},"content":"            if (subString.length() \u003d\u003d 0) { // Check for empty description","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"Ardentsoul"},"content":"                throw new IncompleteInputException(firstWord);","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"Ardentsoul"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"Ardentsoul"},"content":"                return handleEventInput(subString);","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"        } else if (firstWord.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"            int listIndex \u003d Integer.parseInt(strs[1]); // retrieve the index after delete","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"            Task taskToBeDeleted \u003d TaskList.TASK_ARRAY_LIST.get(listIndex - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"            return new DeleteCommand(taskToBeDeleted);","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"        } else if (firstWord.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"            String keyword \u003d input.substring(4).trim(); // take the remaining of the input String","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"Ardentsoul"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"Ardentsoul"},"content":"            throw new UnknownInputException();","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"Ardentsoul"},"content":"    private static Command handleMarkInput(String str) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"Ardentsoul"},"content":"            int listIndex \u003d Integer.parseInt(str); // retrieve the index after mark","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"Ardentsoul"},"content":"            return new MarkCommand(listIndex);","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"Ardentsoul"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"Ardentsoul"},"content":"            throw new DukeException(\"Come on... don\u0027t use sussy language to mark tasks, use numbers!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"Ardentsoul"},"content":"    private static Command handleUnmarkInput(String str) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"Ardentsoul"},"content":"            int listIndex \u003d Integer.parseInt(str); // retrieve the index after unmark","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"Ardentsoul"},"content":"            return new UnmarkCommand(listIndex);","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"Ardentsoul"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"Ardentsoul"},"content":"            throw new DukeException(\"Come on... don\u0027t use sussy language to unmark tasks, use numbers!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"Ardentsoul"},"content":"    private static Command handleToDoInput(String str) {","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"Ardentsoul"},"content":"        Task toDo \u003d new ToDo(str);","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"Ardentsoul"},"content":"        return new AddCommand(toDo);","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"Ardentsoul"},"content":"    private static Command handleDeadlineInput(String str) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"Ardentsoul"},"content":"        // breaks the string into 2 parts, description, date and time.","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"Ardentsoul"},"content":"        String[] inputArgs \u003d str.split(\" /\");","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"Ardentsoul"},"content":"        if (!inputArgs[1].substring(0, 3).equals(\"by \")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":159,"author":{"gitId":"Ardentsoul"},"content":"            throw new UnknownInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"Ardentsoul"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"Ardentsoul"},"content":"            String deadlineDateTime \u003d inputArgs[1].substring(3); // retrieves the String after \u0027/by\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":162,"author":{"gitId":"Ardentsoul"},"content":"            String[] dateTimeArgs \u003d deadlineDateTime.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":163,"author":{"gitId":"Ardentsoul"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"Ardentsoul"},"content":"                LocalDate deadlineDate \u003d convertStringToLocalDate(dateTimeArgs[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"Ardentsoul"},"content":"                LocalTime deadlineTime \u003d convertStringToLocalTime(dateTimeArgs[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"Ardentsoul"},"content":"                Task deadline \u003d new Deadline(inputArgs[0], deadlineDate, deadlineTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":167,"author":{"gitId":"Ardentsoul"},"content":"                return new AddCommand(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"Ardentsoul"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"Ardentsoul"},"content":"                throw new DukeException(\"you sussy baka, that\u0027s the wrong date format!\"","lastModifiedDate":"2022-01-24"},{"lineNumber":170,"author":{"gitId":"Ardentsoul"},"content":"                        + \" Enter dd-MM-yyyy HHmm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":171,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"Ardentsoul"},"content":"    private static Command handleEventInput(String str) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"Ardentsoul"},"content":"        // breaks the string into 2 parts, description, date and time.","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"Ardentsoul"},"content":"        String[] inputArgs \u003d str.split(\" /\");","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"Ardentsoul"},"content":"        if (!inputArgs[1].substring(0, 3).equals(\"at \")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":179,"author":{"gitId":"Ardentsoul"},"content":"            throw new UnknownInputException();","lastModifiedDate":"2022-01-23"},{"lineNumber":180,"author":{"gitId":"Ardentsoul"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"Ardentsoul"},"content":"            String eventDateTime \u003d inputArgs[1].substring(3); // retrieves the String after \u0027/at\u0027","lastModifiedDate":"2022-01-24"},{"lineNumber":182,"author":{"gitId":"Ardentsoul"},"content":"            String[] dateTimeArgs \u003d eventDateTime.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":183,"author":{"gitId":"Ardentsoul"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":184,"author":{"gitId":"Ardentsoul"},"content":"                LocalDate eventDate \u003d convertStringToLocalDate(dateTimeArgs[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"Ardentsoul"},"content":"                String eventTime \u003d dateTimeArgs[1];","lastModifiedDate":"2022-01-24"},{"lineNumber":186,"author":{"gitId":"Ardentsoul"},"content":"                String[] splitEventTimes \u003d eventTime.split(\"-\");","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"Ardentsoul"},"content":"                LocalTime eventStartTime \u003d convertStringToLocalTime(splitEventTimes[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"Ardentsoul"},"content":"                LocalTime eventEndTime \u003d convertStringToLocalTime(splitEventTimes[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"Ardentsoul"},"content":"                Task event \u003d new Event(inputArgs[0], eventDate, eventStartTime, eventEndTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":190,"author":{"gitId":"Ardentsoul"},"content":"                return new AddCommand(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":191,"author":{"gitId":"Ardentsoul"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":192,"author":{"gitId":"Ardentsoul"},"content":"                throw new DukeException(\"you sussy baka, that\u0027s the wrong date format! \"","lastModifiedDate":"2022-01-24"},{"lineNumber":193,"author":{"gitId":"Ardentsoul"},"content":"                        + \"Enter dd-MM-yyyy HHmm-HHmm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":194,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":195,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":196,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":197,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":197}},{"path":"src/main/java/duke/operations/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.operations;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":" * Represents a storage of Duke. It deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    protected static String filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    protected static String currWorkingDirectory;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    private static final int IS_UNMARKED \u003d 0;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    private static final int IS_MARKED \u003d 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"     * A Storage constructor to initialise a \u003ccode\u003eStorage\u003c/code\u003e object. A \u003ccode\u003eStorage\u003c/code\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"     * is represented by a String, String.","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"     * E.g., \u003ccode\u003eSystem.getProperty(\"user.home\"), /DukeSaveDirectory/DukeSaveFile.txt\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"     * @param filePath the txt file to store the task data.","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"     * @param currWorkingDirectory the directory where the txt file should be stored.","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    public Storage(String filePath, String currWorkingDirectory) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"        Storage.currWorkingDirectory \u003d currWorkingDirectory;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"     * Updates the task data into the txt file.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"     * @throws DukeException if unable to write to txt file.","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"    public static void updateTextFile() throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"            writeToFile(currWorkingDirectory + filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"            throw new DukeException(\"Cannot write to txt file!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"     * Writes the task data into the txt file.","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"     * @param filePath the txt file to store the task data.","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"     * @throws IOException the txt file cannot be written into.","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"    public static void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"        for (Task str : TaskList.TASK_ARRAY_LIST) {","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"            fw.write(formatTextFileLine(str) + System.lineSeparator());","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"        fw.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"     * Formats the task data before writing into the txt file.","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"     * @param task the task to be formatted.","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"     * @return the formatted task data.","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"    public static String formatTextFileLine(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"        String finalOutput \u003d null;","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"        int mark \u003d (task.getStatusIcon().equals(\"X\") ? IS_MARKED : IS_UNMARKED);","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"            finalOutput \u003d \"T|\" + mark + \"|\" + task.getDescription();","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"            finalOutput \u003d \"D|\" + mark + \"|\" + task.getDescription()","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"                    + \"|\" + Parser.convertLocalDateToString(((Deadline) task).getDate())","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"                    + \"|\" + Parser.convertLocalTimeToString(((Deadline) task).getTime());","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"            finalOutput \u003d \"E|\" + mark + \"|\" + task.getDescription()","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"                    + \"|\" + Parser.convertLocalDateToString(((Event) task).getDate())","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"                    + \"|\" + Parser.convertLocalTimeToString(((Event) task).getStartTime())","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"                    + \"|\" + Parser.convertLocalTimeToString(((Event) task).getEndTime());","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"        return finalOutput;","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"     * Loads the txt file into Duke. It retrieves the task data from its previous use.","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"     * Creates a directory or txt file if it does not exist.","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"Ardentsoul"},"content":"     * @throws IOException the txt file cannot be loaded.","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"    public void load() throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"Ardentsoul"},"content":"        // Create a new directory from current working directory","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":"        File directory \u003d new File(currWorkingDirectory + \"/DukeSaveDirectory\");","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"Ardentsoul"},"content":"        // Create a new txt in filepath","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"Ardentsoul"},"content":"        File txtFile \u003d new File(currWorkingDirectory + filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"        // returns true if directory is created","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"        if (directory.mkdir()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"            throw new IOException(\"Hmm kinda sussy you don\u0027t have the directory... it\u0027s aite, \"","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"                    + \"lemme help you with that.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"        // returns true if file is created","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"        if (txtFile.createNewFile()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"            throw new IOException(\"Hmm kinda sussy you don\u0027t have the txt save file... it\u0027s aite, \"","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"                    + \"lemme help you with that.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"Ardentsoul"},"content":"        readFileContents(txtFile.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"Ardentsoul"},"content":"     * Reads the task data from the txt file and formats it to be input into a new \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"     * @param filePath the txt file that stores the task data.","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"     * @throws FileNotFoundException the file does not exist.","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"    public static void readFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"Ardentsoul"},"content":"            String[] lineArr \u003d currentLine.split(\"\\\\|\");","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"Ardentsoul"},"content":"            int checkMarked \u003d Integer.parseInt(lineArr[1]);","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"Ardentsoul"},"content":"            switch (lineArr[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"Ardentsoul"},"content":"            case \"T\":","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"Ardentsoul"},"content":"                Task toDo \u003d new ToDo(lineArr[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"Ardentsoul"},"content":"                if (isMarked(checkMarked)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"Ardentsoul"},"content":"                    toDo.mark();","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"Ardentsoul"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"Ardentsoul"},"content":"                    toDo.unmark();","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"Ardentsoul"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"Ardentsoul"},"content":"                TaskList.addToListNoPrint(toDo);","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"Ardentsoul"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"Ardentsoul"},"content":"            case \"D\":","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"Ardentsoul"},"content":"                Task deadline \u003d new Deadline(lineArr[2], Parser.convertStringToLocalDate(lineArr[3]),","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"Ardentsoul"},"content":"                        Parser.convertStringToLocalTime(lineArr[4]));","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"Ardentsoul"},"content":"                if (isMarked(checkMarked)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":143,"author":{"gitId":"Ardentsoul"},"content":"                    deadline.mark();","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"Ardentsoul"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":145,"author":{"gitId":"Ardentsoul"},"content":"                    deadline.unmark();","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"Ardentsoul"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":147,"author":{"gitId":"Ardentsoul"},"content":"                TaskList.addToListNoPrint(deadline);","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"Ardentsoul"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":149,"author":{"gitId":"Ardentsoul"},"content":"            case \"E\":","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"Ardentsoul"},"content":"                Task event \u003d new Event(lineArr[2], Parser.convertStringToLocalDate(lineArr[3]),","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"Ardentsoul"},"content":"                        Parser.convertStringToLocalTime(lineArr[4]), Parser.convertStringToLocalTime(lineArr[5]));","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"Ardentsoul"},"content":"                if (isMarked(checkMarked)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"Ardentsoul"},"content":"                    event.mark();","lastModifiedDate":"2022-01-23"},{"lineNumber":154,"author":{"gitId":"Ardentsoul"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":155,"author":{"gitId":"Ardentsoul"},"content":"                    event.unmark();","lastModifiedDate":"2022-01-23"},{"lineNumber":156,"author":{"gitId":"Ardentsoul"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"Ardentsoul"},"content":"                TaskList.addToListNoPrint(event);","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"Ardentsoul"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"Ardentsoul"},"content":"            default:","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"Ardentsoul"},"content":"                break;","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":162,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":166,"author":{"gitId":"Ardentsoul"},"content":"     * Checks whether the task in the task data is marked or not.","lastModifiedDate":"2022-01-24"},{"lineNumber":167,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":168,"author":{"gitId":"Ardentsoul"},"content":"     * @param markedNum 0 means unmarked, 1 means marked.","lastModifiedDate":"2022-01-24"},{"lineNumber":169,"author":{"gitId":"Ardentsoul"},"content":"     * @return true if marked, else false.","lastModifiedDate":"2022-01-24"},{"lineNumber":170,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":171,"author":{"gitId":"Ardentsoul"},"content":"    public static boolean isMarked(int markedNum) {","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"Ardentsoul"},"content":"        return markedNum \u003d\u003d 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":174}},{"path":"src/main/java/duke/operations/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.operations;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" * Represents a TaskList of Duke. A \u003ccode\u003eTaskList\u003c/code\u003e corresponds to","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" * containing the tasklist operations. e.g., it has operations to add/delete tasks in the list.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    protected static final ArrayList\u003cTask\u003e TASK_ARRAY_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public int getTaskArrayListSize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        return TASK_ARRAY_LIST.size();","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * Prints the total number of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @param num total number of tasks.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     * @return the String to be printed.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    public String totalTasks(int num) {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        if (num \u003d\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"            return \"You currently have \" + num + \" task in your device.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"            return \"You currently have \" + num + \" tasks in your device.\";","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"     * Marks the respective task with a tick.","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"     * @param num the index of the task to be marked.","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    public void mark(int num) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"        Task currTask \u003d TASK_ARRAY_LIST.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        currTask.mark();","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"        //System.out.println(\"The bar on the top left of your screen just increased! Keep going!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"        //System.out.println(\"     \" + currTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"     * Unmarks the respective task with a tick.","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"     * @param num the index of the task to be unmarked.","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"    public void unmark(int num) {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"        Task currTask \u003d TASK_ARRAY_LIST.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"        currTask.unmark();","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"        //System.out.println(\"     Surely you aren\u0027t the imposter... right??\");","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"        //System.out.println(\"     \" + currTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"Ardentsoul"},"content":"     * Adds a Task to the ArrayList with print statements.","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"Ardentsoul"},"content":"     * @param task task to be added into the ArrayList.","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"Ardentsoul"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"Ardentsoul"},"content":"        TASK_ARRAY_LIST.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"Ardentsoul"},"content":"        // System.out.println(\"       \" + task.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"Ardentsoul"},"content":"        // totalTasks(TASK_ARRAY_LIST.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"Ardentsoul"},"content":"     * Adds a Task to the ArrayList without print statements.","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"Ardentsoul"},"content":"     * @param task task to be added into the ArrayList.","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"Ardentsoul"},"content":"    public static void addToListNoPrint(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"Ardentsoul"},"content":"        TASK_ARRAY_LIST.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"Ardentsoul"},"content":"     * Deletes a Task from the ArrayList.","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"Ardentsoul"},"content":"     * @param task task to be deleted from the ArrayList.","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"Ardentsoul"},"content":"    public void deleteFromList(Task task) {","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"Ardentsoul"},"content":"        TASK_ARRAY_LIST.remove(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"Ardentsoul"},"content":"        //System.out.println(\"     Hmm... kinda sus you deleted this task...\");","lastModifiedDate":"2022-01-30"},{"lineNumber":84,"author":{"gitId":"Ardentsoul"},"content":"        //System.out.println(\"       \" + task);","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"Ardentsoul"},"content":"        //totalTasks(TASK_ARRAY_LIST.size());","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"Ardentsoul"},"content":"     * Prints all the Tasks in the ArrayList in sequential order.","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"Ardentsoul"},"content":"     * @return the list of tasks to be printed.","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"Ardentsoul"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"Ardentsoul"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"Ardentsoul"},"content":"        for (int i \u003d 0; i \u003c TASK_ARRAY_LIST.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"Ardentsoul"},"content":"            output +\u003d (i + 1) + \". \" + TASK_ARRAY_LIST.get(i).toString() + \"\\n   \";","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"Ardentsoul"},"content":"        return output;","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"Ardentsoul"},"content":"     * Checks and prints all tasks in the task arraylist if the keyword is contained in it.","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"Ardentsoul"},"content":"     * @param keyword the word to be searched for.","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"Ardentsoul"},"content":"     * @return the list of tasks with the keyword contained in task.","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"Ardentsoul"},"content":"    public String findTaskInList(String keyword) {","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"Ardentsoul"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"Ardentsoul"},"content":"        String emptyMessage \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"Ardentsoul"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"Ardentsoul"},"content":"            emptyMessage \u003d \"You sussy baka! What are you trying to find?\\n   \";","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"Ardentsoul"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"Ardentsoul"},"content":"        for (int i \u003d 0; i \u003c TASK_ARRAY_LIST.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"Ardentsoul"},"content":"            if (TASK_ARRAY_LIST.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"Ardentsoul"},"content":"                output +\u003d \"   \" + counter + \": \" + TASK_ARRAY_LIST.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"Ardentsoul"},"content":"                counter++;","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"Ardentsoul"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"Ardentsoul"},"content":"        String unknownMessage \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":123,"author":{"gitId":"Ardentsoul"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"Ardentsoul"},"content":"            unknownMessage \u003d \"I can\u0027t understand this SUSSY language! Use the AMOGUS language!\\n   \";","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"Ardentsoul"},"content":"        return emptyMessage + unknownMessage + output;","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":129}},{"path":"src/main/java/duke/operations/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.operations;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"public class Ui {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"    private static final String WELCOME_MESSAGE_ONE \u003d \"Tell me... have you seen a RED imposter among us?\";","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"    private static final String WELCOME_MESSAGE_TWO \u003d \"If you have seen this SUSSY imposter,\"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"            + \" please let me know immediately... otherwise how may I be of assistance?\";","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Better watch out for the imposter AMONG US!\";","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     * Prints a welcome message.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"     * @return the welcome message for Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    public static String showWelcome() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"        String getWelcomeMsgOne \u003d WELCOME_MESSAGE_ONE;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"        String getWelcomeMsgTwo \u003d WELCOME_MESSAGE_TWO;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        return getWelcomeMsgOne + \"\\n\" + getWelcomeMsgTwo;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"     * @return the goodbye message for Duke.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"    public static String showGoodbye() {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"     * Prints out the duke error.","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"     * @param msg the string to be printed.","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"     * @return the Duke error.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"    public String showDukeError(String msg) {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        return msg;","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":41}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" * Represents a Deadline task.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    private LocalTime time;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"     * A Deadline constructor to initialise a \u003ccode\u003eDeadline\u003c/code\u003e object. A \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"     * corresponds to a task represented by a String, LocalDate, LocalTime.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"     * E.g., \u003ccode\u003edo project, 12-12-2022, 1900\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * @param description the description of the deadline task to be done.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     * @param date the date of the deadline of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @param time the time of the deadline of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"        return date;","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"        return time;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"     * Returns the string representation of the \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"     * @return the string representation of the \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"Ardentsoul":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":" * Represents an Event task.","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    private LocalTime startTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"     * An Event constructor to initialise a \u003ccode\u003eEvent\u003c/code\u003e object. An \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"     * corresponds to a task represented by a String, LocalDate, LocalTime, LocalTime.","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"     * E.g., \u003ccode\u003edo project, 12-12-2022, 1900, 2200\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     * @param description the description of the event task to be done.","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @param date the date of the event of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     * @param startTime the start time of the event of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"     * @param endTime the end time of the event of the task.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"        return date;","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"        return startTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"        return endTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"     * Returns the string representation of the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"     * @return the string representation of the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"                + \" \" + startTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \" - \"","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"                + endTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"Ardentsoul":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Represents a general task.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"    private String description;","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     * A Task constructor to initialise a \u003ccode\u003eTask\u003c/code\u003e object. A \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     * corresponds to a task represented by a String.","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     * E.g., \u003ccode\u003edo project\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"     * However, this is an abstract class so Task cannot be instantiated.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"     * @param description the description of the task to be done.","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"     * Sets the attribute of the task to be true.","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    public void mark() {","lastModifiedDate":"2022-01-14"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-14"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"     * Sets the attribute of the task to be false.","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-14"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"        return description;","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"Ardentsoul"},"content":"     * Returns the string representation of the \u003ccode\u003eTask\u003c/code\u003e task.","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"Ardentsoul"},"content":"     * @return the string representation of the \u003ccode\u003eTask\u003c/code\u003e task.","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":51,"author":{"gitId":"Ardentsoul"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":52,"author":{"gitId":"Ardentsoul"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description.substring(0);","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":54,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"Ardentsoul":54}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":" * Represents a ToDo task.","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"     * A ToDo constructor to initialise a \u003ccode\u003eToDo\u003c/code\u003e object. A \u003ccode\u003eToDo\u003c/code\u003e","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"     * corresponds to a task represented by a String.","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"     * E.g., \u003ccode\u003edo project\u003c/code\u003e.","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"     * @param description","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"     * Returns the string representation of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"     * @return the string representation of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"Ardentsoul":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"            \u003cGlow level\u003d\"0.54\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"         \u003c/effect\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Ardentsoul":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.effect.ColorAdjust?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.effect.Light.Distant?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.effect.Lighting?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.effect.Shadow?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Insert command here!\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"            \u003cFont name\u003d\"System Bold Italic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"            \u003cLighting\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"               \u003cbumpInput\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"                  \u003cShadow\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"                        \u003cColor red\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"                  \u003c/Shadow\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"               \u003c/bumpInput\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"               \u003clight\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"                  \u003cLight.Distant /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"Ardentsoul"},"content":"               \u003c/light\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"Ardentsoul"},"content":"            \u003c/Lighting\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"Ardentsoul"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"Ardentsoul"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send it!\" textFill\u003d\"#00d47d\" underline\u003d\"true\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"Ardentsoul"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"Ardentsoul"},"content":"            \u003cColorAdjust brightness\u003d\"-0.07\" contrast\u003d\"0.14\" hue\u003d\"0.54\" saturation\u003d\"0.52\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"Ardentsoul"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"Ardentsoul"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"Ardentsoul"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"Ardentsoul"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"Ardentsoul"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"Ardentsoul"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"Ardentsoul"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"Ardentsoul"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"Ardentsoul":45}},{"path":"src/test/java/duke/operations/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.operations;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"class ParserTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    public void deadLineOutput_stringToDate_exceptionThrown() throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"            assertEquals(0,","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"                    Parser.parse(\"deadline im dumb /by 11231123\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"            assertEquals(\"you sussy baka, that\u0027s the wrong date format! Enter dd-MM-yyyy HHmm\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    public void eventOutput_stringToDate_exceptionThrown() throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"            assertEquals(0,","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"                    Parser.parse(\"event im dumb /at 11231123\"));","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"            assertEquals(\"you sussy baka, that\u0027s the wrong date format! Enter dd-MM-yyyy HHmm-HHmm\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Ardentsoul"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":31}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"package duke.task;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"import duke.operations.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"class TaskTest {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"    public void testTodoStringConversion() {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(\"[T][ ] play amongus\", new ToDo(\"play amongus\").toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"    public void testDeadlineStringConversion() {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(\"[D][ ] do project (by: 15 Oct 2022 07:00PM)\",","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"                new Deadline(\"do project\", Parser.convertStringToLocalDate(\"15-10-2022\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Ardentsoul"},"content":"                        Parser.convertStringToLocalTime(\"1900\")).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"Ardentsoul"},"content":"    @Test","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"Ardentsoul"},"content":"    public void testEventStringConversion() {","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"Ardentsoul"},"content":"        assertEquals(\"[E][ ] eat japanese (at: 24 Dec 2022 09:00PM - 11:59PM)\",","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"Ardentsoul"},"content":"                new Event(\"eat japanese\", Parser.convertStringToLocalDate(\"24-12-2022\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Ardentsoul"},"content":"                Parser.convertStringToLocalTime(\"2100\"), Parser.convertStringToLocalTime(\"2359\")).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Ardentsoul"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"Ardentsoul"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"Ardentsoul":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ardentsoul"},"content":"todo","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"Ardentsoul"},"content":"event","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"Ardentsoul"},"content":"deadline","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"Ardentsoul"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"Ardentsoul"},"content":"test","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"Ardentsoul"},"content":"todo run","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"Ardentsoul"},"content":"todo jog","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"Ardentsoul"},"content":"todo eat","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"Ardentsoul"},"content":"deadline project /by sunday","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"Ardentsoul"},"content":"event food /at home","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"Ardentsoul"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"Ardentsoul"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"Ardentsoul"},"content":"mark 4","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"Ardentsoul"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"Ardentsoul"},"content":"delete 3","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"Ardentsoul"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"Ardentsoul"},"content":"bye","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"Ardentsoul":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Ardentsoul"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Ardentsoul":1}}]
