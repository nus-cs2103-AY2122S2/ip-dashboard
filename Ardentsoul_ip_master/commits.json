{"authorDailyContributionsMap":{"Ardentsoul":[{"date":"2022-01-14","commitResults":[{"hash":"6781d488b6c6388b9750d6696bd1febbce91af31","messageTitle":"Added a greet, echo, exit function.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":6}}},{"hash":"321021b62ecbd68d4c70f09a4517e8ea3b56b173","messageTitle":"Added an add and list function implemented an arraylist to store the task \u0026 created a Task class","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":1}}},{"hash":"0e73fe8c2f36d254edd7e5ec08ac694b29eb2c62","messageTitle":"Added mark and unmark functions Format changes to Duke.java Added support for checking completion of tasks","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":7}}}]},{"date":"2022-01-15","commitResults":[{"hash":"6a9a37a68e0ca9488f8cdd3d3120b58544feca25","messageTitle":"Added Deadline, Event and Todo classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"0e1e4954a4fc4f5e0dcea054bb06765940ecc859","messageTitle":"Added todo, deadline, event function","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":12}}},{"hash":"e4a2c0fa3e5084cf2e4f260ea54bddcfa916a676","messageTitle":"Removed mascot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":24}}},{"hash":"40ce9c4cd95126fdcf8030cada9980a3fa4dcc34","messageTitle":"Testing the Automated Text UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}},{"hash":"4eaa7425c2567fb71bb9e55ac9caf20aa60f4684","messageTitle":"Updated Text-ui-test","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2}}},{"hash":"5ad7706c3675d72f1c7f78babcd1ab2930130c6f","messageTitle":"Added 4 Exception classes Updated Duke.java to catch errors","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":70}}},{"hash":"fed5b5f9cb4fca4e05552fba6fed781f1e47c01c","messageTitle":"test cases for Level-5","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":1}}},{"hash":"96ccc5669b9454b661ac499681ffc8da44211ca9","messageTitle":"Created several methods for encapsulation Added a delete function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":33}}},{"hash":"761c625f1ed7fa7d6590b14f3b20ebdaf5547648","messageTitle":"test cases for level-6","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":5}}},{"hash":"0a1decdf9a6480a7dc2c7e72880f39b3cb17ae7e","messageTitle":"Encapsulated the list() function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":6}}},{"hash":"aa8b092e6b4bf234b67c6fe9508b165da261288b","messageTitle":"Renamed list() to printList() Grammar changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2022-01-17","commitResults":[{"hash":"68fe8d353f3b315029958b72c1cab98168fda1aa","messageTitle":"Handled 1 more exception \u0026 text changes","messageBody":"Deadline and Event function catches error when there is no space after by/at.\nChanged some String outputs to suit among us theme.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":16}}}]},{"date":"2022-01-21","commitResults":[{"hash":"fbe4325e82068031b371e11feeb0849d6fbd0cef","messageTitle":"Add Javadocs to Duke.java","messageBody":"There were no descriptions to the methods in Duke.java\n\nAdding the Javadocs allows us to better understand what the methods\nare meant to do.\n","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":2}}}]},{"date":"2022-01-22","commitResults":[{"hash":"0b5d72200bf93c559a29d4f7a94113ad344e592e","messageTitle":"Complete Level-7","messageBody":"Added a auto save function\n","fileTypesAndContributionMap":{"java":{"insertions":216,"deletions":79}}},{"hash":"6ae79fa7db71a4bf78bcdb96000f8160d7b5cdd4","messageTitle":"Update Level-7","messageBody":"Changed method name from readTxtFile() to readTextFile()\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"a9ea7cd050ca5288468f4df12ac5b1b06658d9b3","messageTitle":"Update Level-7","messageBody":"Edited message in error handling for txt not found\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"d804a9deebb19dc4a32090076f8c40b13d1d91ff","messageTitle":"Update Level-7","messageBody":"Updated the error messages if the directory or txt is not found\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"ddc396160e016e94ecd4d8b04ae50ff863a5c638","messageTitle":"Complete Level-8","messageBody":"A formatDateTime method was added to take a String input, parse it,\nand output the date in a readable format. This is applicable to\ndeadline and event commands.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":2}}}]},{"date":"2022-01-23","commitResults":[{"hash":"3b15613cbb5fbd2476e91d0ad3be45c6df04ad94","messageTitle":"Add temporary classes","messageBody":"This is just for saving a copy\n","fileTypesAndContributionMap":{"java":{"insertions":482,"deletions":3}}},{"hash":"32efe750608ba723497a07377d32260ba12cb43e","messageTitle":"Update partially correct Duke and Fix several bugs","messageBody":"Currently updating OOP and included creation of directory and file\nif they do not exist. Also made it OS-independent.\n","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":364}}},{"hash":"33502625b15f6289839f764709c727d9064d0a9e","messageTitle":"Update A-MoreOOP","messageBody":"Restructured the original code to be more OOP. Fixed Level-7 \u0026\nLevel-8 at the same time.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":35}}},{"hash":"5ea031b2ece4e75f773ed187e83897bd96a2e15a","messageTitle":"Update A-MoreOOP","messageBody":"The directory and txt file names have been changed to be\nmore specific instead of \u0027/data/tasks.txt\u0027.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":4}}},{"hash":"0d03657876d5a8465ad3ce1d031786158a496e8b","messageTitle":"Update A-Packages","messageBody":"Divided the classes in to 5 packages.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":16},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"aa8331aa5da75e8b29d132b6956a0d3861ed88a1","messageTitle":"Update Level-8 and A-MoreOOP","messageBody":"Deadline and Event classes take in LocalDate and Local Time.\nRestructured the read and write of the txt file.\n","fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":33}}},{"hash":"46cb87a7a6b5714025b21d6bbaf2128ac6346a4e","messageTitle":"Add A-JUnit tests for Parser and Task","messageBody":"Applied Gradle to test own testcases.\n\nChecked for String conversion of all 3 types of tasks, isExit(),\nand exception thrown when input date/time is wrong\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":23}}},{"hash":"442d8e4ec7368007e49fbd45ab5916f7eaec99b9","messageTitle":"Implement a find feature to Duke","messageBody":"A find function has been added. This is will search for words\nthat contain the keyword in each Task.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":10}}}]},{"date":"2022-01-24","commitResults":[{"hash":"e9085f604d31a1acdb3d2d34ae7f737a63696450","messageTitle":"Update A-JavaDoc partially","messageBody":"Half of the JavaDoc is complete.\n","fileTypesAndContributionMap":{"java":{"insertions":224,"deletions":13}}},{"hash":"c7556ece6a7633a4fcb2ec91f298a72b9f9d1103","messageTitle":"Update A-JavaDoc fully","messageBody":"Added all JavaDocs to all methods currently implemented.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":0}}},{"hash":"7619d10c076ef4ee0f9c56b983f0c3244fbf3ded","messageTitle":"Update A-CodingStandard","messageBody":"Changed some code to fit the coding standard.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":26}}},{"hash":"acc51fd0c0464346dfd0b1cdf60cbf60823eb582","messageTitle":"Update Javadocs for Find feature","messageBody":"Added in JavaDocs for find method and prints a message when\nnothing is keyed after \"find\".\nEdited a few comments in Parser.java.\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":15}}},{"hash":"720d20566a071a388def7bf954b7990bc5aded38","messageTitle":"Update A-CodingStandard","messageBody":"Updated coding standard for imports in Parser class.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}}]},{"date":"2022-01-27","commitResults":[{"hash":"597b0e0f9a523d9e7d3da64c8c884e1e0671d063","messageTitle":"Update A-CodingStandard","messageBody":"Changed Parse to Parses in header comments for parse method.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"fc129ba169ac5977e91eafd9c0affa4ada981a95","messageTitle":"Update A-CodingStandards","messageBody":"Encapsulated the logic of mark, unmark, todo, deadline and event\ninto methods.\n","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":68}}}]},{"date":"2022-01-29","commitResults":[{"hash":"91f48f8cf3869a044f474522c987f07c3f1b4174","messageTitle":"Rectify A-Jar \u0026 A-JUnit","messageBody":"Shadow Gradle was rectified to the correct relative path for Duke\nand updated the JUnit test files.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":2,"deletions":2}}},{"hash":"3bd15cbbdb69540105e790ad9277ff0ab949b73d","messageTitle":"Update A-CheckStyle halfway","messageBody":"Updated checkstyle in code. It is still partially done.\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":74}}},{"hash":"2fbde8c49ef603bba0c51dd1244e1604265c5b77","messageTitle":"Update A-Checkstyle completely","messageBody":"Finished correcting the checkstyle for the code.\n","tags":["A-Checkstyle"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":19}}}]},{"date":"2022-01-30","commitResults":[{"hash":"05076d2552878580650b3340792a6d45dabcf9bc","messageTitle":"Add Level-10 GUI for Duke","messageBody":"Added GUI using FXML and checked checkstyle.\n","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":329,"deletions":268}}}]},{"date":"2022-02-01","commitResults":[{"hash":"faa04ad98416043d6f5663a2bc6d7b98791da230","messageTitle":"Update Level-10 GUI","messageBody":"Made the GUI look slightly better and changed the image of the\nuser.\n","fileTypesAndContributionMap":{"fxml":{"insertions":34,"deletions":4},"java":{"insertions":1,"deletions":1}}}]},{"date":"2022-02-05","commitResults":[{"hash":"b47780c9bf9c4bd631b2544987decec1274eec73","messageTitle":"Update build.gradle","messageBody":"The mainClassName under application was changed to\nduke.main.Launcher so that the jar file can be run.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"afa2aae483bd4351a14140930027ece8056b63df","messageTitle":"Remove Emojis from Exception classes","messageBody":"Emojis were removed since they were not being able to be displayed\non the GUI.\n","tags":["A-Jar-3"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"fc0987c25433cefb407f45df03f115737acc981a","messageTitle":"Refactor methods in Parser, Storage, and TaskList classes","messageBody":"Parser and Storage classes have long methods, uses magic numbers,\nand does not apply Single Level of Abstraction Principle (SLAP)\nproperly. TaskList class contains dead code.\n\nThe common behaviours across Parser and Storage class cause some\ncode duplication and does not maximize readability.\n\nExtracting the common behaviour between Parser and Storage classes\nand splitting them into several short methods allows us to minimize\ncode duplication and improve readability. For example, the magic\nnumbers in these two classes can be avoided during the the handling\nof the three different task events.\n\nLet\u0027s create several new methods to contain the logic of handling\nthese three tasks(todo, deadline, event) called handleTodo,\nhandleDeadline, handleEvent.\n\nSLAP is preferable in this situation because it makes the parse\nmethod more readable.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":62}}}]},{"date":"2022-02-06","commitResults":[{"hash":"22ae9580e6625162f1e9c266662249f8090a72dd","messageTitle":"Refactor parse method in Parser","messageBody":"Parse method is not as reader friendly.\nUi class contains duplicate code.\n\nThe common behaviours across Parser and Ui class do not maximize\nreadability.\n\nExtracting the common behaviour between Parser and Ui classes\nand converting them into switch case statements allows us to\nimprove readability. For example, using switch case statements to\nhandle the logic of the parse method makes the code more readable.\n\nLet\u0027s refactor the parse method to be a switch case statement\ninstead of if-else statements and delete duplicate code in Ui\nclass.\n\nSwitch case statements are preferable in this situation because\nit makes the mode more readable.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":16}}},{"hash":"c9c703c86ae563a87179f305667a85fd0d927f2d","messageTitle":"Update Mark and Unmark Command classes","messageBody":"Concatenated the Strings under one variable and return that\nvariable.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":6}}},{"hash":"ec8ad1d4737d1f074d7470407410d1df8d10a146","messageTitle":"Update Mark and Unmark Command classes","messageBody":"Concatenated the Strings under one variable and return that\nvariable.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"c1ed2250a9aab79f20033d103d411cb92f54bc34","messageTitle":"Add assert method into delete method","messageBody":"Added an assert feature to check whether index keyed after delete\nis more than 0.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"010a53ba164fbd480bf88ba8c81f87eb4e0259b0","messageTitle":"Add Exit command for GUI","messageBody":"Exit command has a behaviour (e.g. hasExit).\n\nClosing the application without pressing\nthe \u0027X\u0027 button on the top left of the GUI allows the user\nan alternative to close the application.\n\nImplementing this behaviour gives the user an alternative to exit\nthe application with the Exit command. Furthermore, a delay of\n1.5 seconds has been added after the exit command is typed by the\nuser. This means that after 1.5 seconds from entering the\nExit command, the application will automatically close.\n","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":9}}},{"hash":"ccbb0ea38da49c59e8bd43b5d78c5605ec78ddb6","messageTitle":"Delete Text-Ui-test folder","messageBody":"This folder is not needed anymore since Duke is UI based now.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":17},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":0,"deletions":38}}}]},{"date":"2022-02-09","commitResults":[{"hash":"729cbb6b4b384c1319c36426ceb495be424a30d0","messageTitle":"Add Tag and Untag features","messageBody":"Additional features such as tagging and untagging have been added\ninto Duke bot. This is so as to make the bot more versatile and\nhandle more user inputs.\n\nThese features give more flexibility to the bot and\nusers will also have additional functions to use when trying the\nbot.\n\nImplementing these features allow the user to be able to add\nadditional tags to their tasks to further express his/her\nshort comments or untag their comment. For example,\ntagging/untagging can be done for all tasks that are present in\nthe user\u0027s list.\n\nLet\u0027s create handleTag and handleUntag methods to process the logic\nof these features in the Parser class.\n\nUsing composition is preferable over inheritance when adding the\nTag class into the Task class because a Task HAS A Tag. Thus,\nTag is an attribute of Task.\n","fileTypesAndContributionMap":{"java":{"insertions":275,"deletions":15}}},{"hash":"698510d64a9a3a3fe1f50fe13cd663834ecc5647","messageTitle":"Add Javadoc comment for Tag class","messageBody":"Added missing javadoc comment for Tag class.\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"6e7446c23d4991051793bc52245aeeadcbb4afbf","messageTitle":"Add missing Javadoc","messageBody":"Added missing @param javadoc for IncompleteInputException class.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2022-02-11","commitResults":[{"hash":"499c13275a5625eb9f3b4b10e803f082640392dc","messageTitle":"Update GUI","messageBody":"Updated GUI to be more aesthetically pleasing to look at. GUI has\nbeen tweaked to imitate dark mode.\n","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"fxml":{"insertions":10,"deletions":29},"java":{"insertions":2,"deletions":1}}}]},{"date":"2022-02-12","commitResults":[{"hash":"b0b8cd509bb5dad7cf9ea97c0191e4608b9f5e2e","messageTitle":"Add A-UserGuide","messageBody":"Added a user guide so that users will know how to use the program.\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":212,"deletions":14}}}]},{"date":"2022-02-16","commitResults":[{"hash":"43c16f1f340580b29a1a1182cde846c17059cba9","messageTitle":"Update README.txt","messageBody":"Updated README.txt to follow github description.\n","fileTypesAndContributionMap":{"md":{"insertions":29,"deletions":20}}}]}]},"authorFileTypeContributionMap":{"Ardentsoul":{"java":1666,"md":228,"fxml":46,"sh":0,"bat":0,"gradle":15,"txt":0}},"authorContributionVariance":{"Ardentsoul":74524.45},"authorDisplayNameMap":{"Ardentsoul":"CS2103T-T09-3 ZACH..CHAN"}}
