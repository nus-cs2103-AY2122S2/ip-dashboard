[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"# butler.Butler project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"3. After that, locate the `src/main/java/butler.Butler.java` file, right-click it, and choose `Run butler.Butler.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryantanlien":2,"-":22}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"@rem","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"@rem","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"@rem","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"@rem","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"@rem","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"@rem","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"@rem","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"@rem Find java.exe","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"echo.","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"ryantanlien"},"content":"echo.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"ryantanlien"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"ryantanlien"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"ryantanlien"},"content":"goto fail","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"ryantanlien"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"ryantanlien"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"ryantanlien"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"ryantanlien"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"ryantanlien"},"content":"echo.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"ryantanlien"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"ryantanlien"},"content":"echo.","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"ryantanlien"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"ryantanlien"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"ryantanlien"},"content":"goto fail","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"ryantanlien"},"content":":execute","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"ryantanlien"},"content":"@rem Setup the command line","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"ryantanlien"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"ryantanlien"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"ryantanlien"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"ryantanlien"},"content":":end","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"ryantanlien"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"ryantanlien"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"ryantanlien"},"content":":fail","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"ryantanlien"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"ryantanlien"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"ryantanlien"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"ryantanlien"},"content":"exit /b 1","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"ryantanlien"},"content":":mainEnd","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"ryantanlien"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"ryantanlien"},"content":":omega","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"ryantanlien":89}},{"path":"src/main/java/butler/Butler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.command.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.UiApp;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"public class Butler {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    private static Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"        Application.launch(UiApp.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    public Butler() {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"    public static String respond(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"            command.execute(taskList, storage, ui);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"            return ui.getMessage();","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"        } catch (ButlerInputException exception) {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"            return exception.getMessage();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"    public static String greet() {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"        return \"Greetings! I\u0027m Butler!\\n\" + \"What can I do for you today Master?\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ryantanlien":36}},{"path":"src/main/java/butler/ButlerInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":" * Represents an exception thrown by Butler","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":" *","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"public class ButlerInputException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"    public ButlerInputException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ryantanlien":11}},{"path":"src/main/java/butler/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.task.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.task.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.task.ToDo;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    /** A list of Tasks */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"    /** Default constructor */","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"     * Gets the task from the Task ArrayList at the desired index.","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"     * @param index Index of the Task of the ArrayList.","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"     * @return Task at the desired index.","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"     * @return The size of the Task ArrayList, representing the number of tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"    public int size() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"     * Finds all the tasks with descriptions that contain sub-strings that match the searchString.","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"     * @param searchString String to match description sub-string.","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"     * @return Butler response that contains all tasks with descriptions that contain sub-strings that","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"     * match the searchString.","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"    public String find(String searchString) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"ryantanlien"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"ryantanlien"},"content":"        String output \u003d \"Here are the matching tasks in your list, Master: \\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"ryantanlien"},"content":"        while (i \u003c tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"ryantanlien"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"ryantanlien"},"content":"            if (task.getDescription().contains(searchString)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"ryantanlien"},"content":"                output +\u003d String.valueOf(i + 1) + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"ryantanlien"},"content":"            i++;","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"ryantanlien"},"content":"        return output;","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"ryantanlien"},"content":"     * Add a Deadline containing a description and a date and time to complete the task by a certain deadline.","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the Task, which is a Deadline.","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"ryantanlien"},"content":"     * @param dateTime String representing the date and time to complete the Deadline by.","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"ryantanlien"},"content":"     * @return Butler response that confirms success status of adding the Deadline to the TaskList, and reiterates","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"ryantanlien"},"content":"     * the task being added and the number of tasks currently in the list.","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws a ButlerInputException if user input is not satisfactory.","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"ryantanlien"},"content":"    public String addDeadlineToList(String description, String dateTime) throws ButlerInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ryantanlien"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Sorry Master, but the description of a Deadline cannot be empty.\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ryantanlien"},"content":"        if (dateTime.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Sorry Master, but the date/time of a Deadline cannot be empty.\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ryantanlien"},"content":"        Task task \u003d new Deadline(description, dateTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"ryantanlien"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"ryantanlien"},"content":"        return \"Noted Master. I\u0027ll add this task to your list.\\n\" + \"   \" + task.toString() +","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"ryantanlien"},"content":"                \"\\nThere are now \" + tasks.size() + \" tasks in your list.\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"ryantanlien"},"content":"     * Add a ToDo containing a description of the task","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the Task, which is a ToDo.","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"ryantanlien"},"content":"     * @return Butler response that confirms success status of adding the ToDo to the TaskList, and reiterates","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"ryantanlien"},"content":"     * the task being added and the number of tasks currently in the list.","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws a ButlerInputException if user input is not satisfactory.","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"ryantanlien"},"content":"    public String addToDoToList(String description) throws ButlerInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"ryantanlien"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Sorry Master, but the description of a ToDo cannot be empty.\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"ryantanlien"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"ryantanlien"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"ryantanlien"},"content":"        return \"Noted Master. I\u0027ll add this task to your list.\\n\" + \"   \" + task.toString() +","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"ryantanlien"},"content":"                \"\\nThere are now \" + tasks.size() + \" tasks in your list.\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":100,"author":{"gitId":"ryantanlien"},"content":"     * Add an Event containing a description and a date and time to complete the task at a certain time.","lastModifiedDate":"2022-02-04"},{"lineNumber":101,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the Task, which is an Event.","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"ryantanlien"},"content":"     * @param dateTime String representing the date and time to complete the Event at.","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"ryantanlien"},"content":"     * @return Butler response that confirms success status of adding the Event to the TaskList, and reiterates","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"ryantanlien"},"content":"     * the task being added and the number of tasks currently in the list.","lastModifiedDate":"2022-02-04"},{"lineNumber":106,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws a ButlerInputException if user input is not satisfactory.","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"ryantanlien"},"content":"    public String addEventToList(String description, String dateTime) throws ButlerInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"ryantanlien"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Sorry Master, but the description of an Event cannot be empty.\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"ryantanlien"},"content":"        if (dateTime.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Sorry Master, but the date/time of an Event cannot be empty.\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"ryantanlien"},"content":"        Task task \u003d new Event(description, dateTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"ryantanlien"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"ryantanlien"},"content":"        return \"Noted Master. I\u0027ll add this task to your list.\\n\" + \"   \" + task.toString() +","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"ryantanlien"},"content":"                \"\\nThere are now \" + tasks.size() + \" tasks in your list.\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":122,"author":{"gitId":"ryantanlien"},"content":"     * Deletes a task from the taskList at a certain index, with the first index starting from 1.","lastModifiedDate":"2022-02-04"},{"lineNumber":123,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":124,"author":{"gitId":"ryantanlien"},"content":"     * @param index The index of the desired task to be deleted.","lastModifiedDate":"2022-02-04"},{"lineNumber":125,"author":{"gitId":"ryantanlien"},"content":"     * @return Butler response that confirms the success status of deleting a Task from the TaskList, and reiterates","lastModifiedDate":"2022-02-04"},{"lineNumber":126,"author":{"gitId":"ryantanlien"},"content":"     * the task being deleted, and the number of tasks currently in the list.","lastModifiedDate":"2022-02-04"},{"lineNumber":127,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws a ButlerInputException if user input is not satisfactory.","lastModifiedDate":"2022-02-04"},{"lineNumber":128,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":129,"author":{"gitId":"ryantanlien"},"content":"    public String deleteTaskFromList(int index) throws ButlerInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"ryantanlien"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Master list item number \"","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"ryantanlien"},"content":"                    + String.valueOf(index + 1) + \"does not exist. \\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"ryantanlien"},"content":"        Task task \u003d tasks.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"ryantanlien"},"content":"        return \"Noted Master. I\u0027ll remove this task from your list.\\n\" + \"   \" + task.toString() +","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"ryantanlien"},"content":"                \"\\n There are now \" + tasks.size() + \" tasks in your list.\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":140,"author":{"gitId":"ryantanlien"},"content":"     * Marks a task in the taskList as done, given it\u0027s index, with the first index starting from 1.","lastModifiedDate":"2022-02-04"},{"lineNumber":141,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":142,"author":{"gitId":"ryantanlien"},"content":"     * @param index The index of the desired task to be marked.","lastModifiedDate":"2022-02-04"},{"lineNumber":143,"author":{"gitId":"ryantanlien"},"content":"     * @return Butler response that confirms the success status of marking the Task in the TaskList and reiterates","lastModifiedDate":"2022-02-04"},{"lineNumber":144,"author":{"gitId":"ryantanlien"},"content":"     * the task being marked.","lastModifiedDate":"2022-02-04"},{"lineNumber":145,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws a ButlerInputException if user input is not satisfactory.","lastModifiedDate":"2022-02-04"},{"lineNumber":146,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":147,"author":{"gitId":"ryantanlien"},"content":"    public String markAsDone(int index) throws ButlerInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"ryantanlien"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Master, list item number \"","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"ryantanlien"},"content":"                    + String.valueOf(index + 1) + \" does not exist.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"ryantanlien"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"ryantanlien"},"content":"        task.markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"ryantanlien"},"content":"        String string \u003d \"Congratulations Master, I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"ryantanlien"},"content":"        return string + \"   [\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":159,"author":{"gitId":"ryantanlien"},"content":"     * Marks a task in the taskList as not done, given it\u0027s index, with the first index starting from 1.","lastModifiedDate":"2022-02-04"},{"lineNumber":160,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":161,"author":{"gitId":"ryantanlien"},"content":"     * @param index The index of the desired task to be marked.","lastModifiedDate":"2022-02-04"},{"lineNumber":162,"author":{"gitId":"ryantanlien"},"content":"     * @return Butler response that confirms the success status of marking the Task in the TaskList and reiterates","lastModifiedDate":"2022-02-04"},{"lineNumber":163,"author":{"gitId":"ryantanlien"},"content":"     * the task being marked.","lastModifiedDate":"2022-02-04"},{"lineNumber":164,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws a ButlerInputException if user input is not satisfactory.","lastModifiedDate":"2022-02-04"},{"lineNumber":165,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":166,"author":{"gitId":"ryantanlien"},"content":"    public String markAsUndone(int index) throws ButlerInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"ryantanlien"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Master, list item number \"","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"ryantanlien"},"content":"                    + String.valueOf(index + 1) + \" does not exist.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"ryantanlien"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"ryantanlien"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"ryantanlien"},"content":"        String string \u003d \"Very well Master, I\u0027ve marked this task as not done yet: \\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"ryantanlien"},"content":"        return string + \"   [\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":178,"author":{"gitId":"ryantanlien"},"content":"     * Views the list in its entirety","lastModifiedDate":"2022-02-04"},{"lineNumber":179,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":180,"author":{"gitId":"ryantanlien"},"content":"     * @return Butler response that confirms the success status of viewing the TaskList, and lists all tasks in the list","lastModifiedDate":"2022-02-04"},{"lineNumber":181,"author":{"gitId":"ryantanlien"},"content":"     * with a String representation.","lastModifiedDate":"2022-02-04"},{"lineNumber":182,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":183,"author":{"gitId":"ryantanlien"},"content":"    public String viewList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"ryantanlien"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"ryantanlien"},"content":"        String output \u003d \"Here are the tasks in your list Master: \\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"ryantanlien"},"content":"        while (i \u003c tasks.size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"ryantanlien"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"ryantanlien"},"content":"            output +\u003d String.valueOf(i + 1) + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"ryantanlien"},"content":"            i++;","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"ryantanlien"},"content":"        return output;","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":193}},{"path":"src/main/java/butler/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"     * In this case it prints a farewell message","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"        ui.setMessage(\"Farewell Master. Glad to be of service.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"            Thread.sleep(2000);","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"        } catch (InterruptedException exception) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":27}},{"path":"src/main/java/butler/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws ButlerInputException when inputs passed by the user are inappropriate.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    public abstract void execute(TaskList taskList, Storage storage, Ui ui) throws ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ryantanlien":19}},{"path":"src/main/java/butler/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /** Description of what needs to be done for the task */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"    private String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    /** String representation of date and time not following any format */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    private String dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a DeadlineCommand object that executes a specified command.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     * @param dateTime string representation of date and time provided by user.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"    public DeadlineCommand(String description, String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * In this case it adds a Deadline to the taskList and stores the updated list in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     * Then it prints a success message to output, else it prints a failure message.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws the ButlerInputException thrown by sub-methods.","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws ButlerInputException {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"        String message \u003d taskList.addDeadlineToList(description, dateTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"        storage.writeTaskListToFile(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"        ui.setMessage(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":42}},{"path":"src/main/java/butler/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /** Index of taskList that is to be deleted */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"    int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a DeleteCommand object that executes a specified command.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * @param index Index of taskList that is to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"     * In this case it deletes a task at a given index from the taskList and stores the updated list in a file.","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"     * Then it prints a success message to output, else it prints a failure message.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws the ButlerInputException thrown by sub-methods.","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws ButlerInputException {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"        String message \u003d taskList.deleteTaskFromList(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"        storage.writeTaskListToFile(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"        ui.setMessage(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":38}},{"path":"src/main/java/butler/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /** Description of what needs to be done for the task */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"    private String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    /** String representation of date and time not following any format */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    private String dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * Constructs an EventCommand object that executes a specified command.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     * @param dateTime string representation of date and time provided by user.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"    public EventCommand(String description, String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * In this case it adds an Event to the taskList and stores the updated list in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     * Then it prints a success message to output, else it prints a failure message.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws the ButlerInputException thrown by sub-methods.","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws ButlerInputException {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"        String message \u003d taskList.addEventToList(description, dateTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"        storage.writeTaskListToFile(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"        ui.setMessage(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":42}},{"path":"src/main/java/butler/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"    private String searchString;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"    public FindCommand(String searchString) {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"        this.searchString \u003d searchString;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     * In this case, searches through the taskList to find a task whose description contains a","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     * substring matching the searchString.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"        String message \u003d taskList.find(searchString);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"        ui.setMessage(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"ryantanlien":29}},{"path":"src/main/java/butler/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"     * In this case it throws a ButlerInputException to be handled down the line.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws the ButlerInputException as when user inputs cannot be understood","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws ButlerInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"        throw new ButlerInputException(\"I\u0027m sorry Master, but I do not know what that means. \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"                \"Please provide a valid command.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":25}},{"path":"src/main/java/butler/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"     * In this case it lists all tasks currently in the task list in a pre-defined format.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"        ui.setMessage(taskList.viewList());","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":21}},{"path":"src/main/java/butler/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /** Index of taskList that is to be marked */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"    int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a MarkCommand object that executes a specified command.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * @param index Index of taskList that is to be marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"     * In this case it marks a task at a given index from the taskList and stores the update list in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"     * Then it prints a success message to output, else it prints a failure message.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws the ButlerInputException thrown by sub-methods.","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws ButlerInputException {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"        String message \u003d taskList.markAsDone(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"        storage.writeTaskListToFile(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"        ui.setMessage(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":38}},{"path":"src/main/java/butler/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /** Description of what needs to be done for the task */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"    String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a TodoCommand object that executes a specified command.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"     * In this case it adds ToDo to the taskList and stores the updated list in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"     * Then it prints a success message to output, else it prints a failure message.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws the ButlerInputException thrown by sub-methods.","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws ButlerInputException {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"        String message \u003d taskList.addToDoToList(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"        storage.writeTaskListToFile(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"        ui.setMessage(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":38}},{"path":"src/main/java/butler/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.util.Storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.util.ui.Ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /** Index of taskList that is to be unmarked */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"    int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a UnmarkCommand object that executes a specified command.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * @param index Index of taskList that is to be marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"     * Executes command behavior.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"     * In this case it unmarks a task at a given index from the taskList and stores the update list in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"     * Then it prints a success message to output, else it prints a failure message.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     * @param taskList A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * @param storage A handler class that handles file I/O, storing taskList details in a file.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     * @param ui A handler class that handles user input and output.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException Throws the ButlerInputException after handling the NumberFormatException.","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws ButlerInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"            String message \u003d taskList.markAsUndone(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"            storage.writeTaskListToFile(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"            ui.setMessage(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"            throw new ButlerInputException(\"Error. Sorry Master, \" +","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"                    \"but a mark or unmark command must be followed by one Integer.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":43}},{"path":"src/main/java/butler/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.util.LocalDateTimeManager;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"    /** String representation of date and time not following any format */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"    private String dateAndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"    /** String representation of formatted LocalDateTime objects */","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    private String localDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a Deadline object that must be completed by a certain date and time.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * If a date and time provided does not follow the dateFormatter provided, treats it as a string.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * @param dateAndTime string representation of date and time provided by user.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"    public Deadline(String description, String dateAndTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"        localDateTime \u003d LocalDateTimeManager.toLocalDateTime(dateAndTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"     * Returns symbolic representation of task type.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * @return String Representation of task type.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"        return \"[D]\";","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"     * Represents Deadline Object as a String","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"     * @return String Representation of task as a whole.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"        if (!localDateTime.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"            return this.getTaskType() + super.toString() + \" \" + localDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"        return this.getTaskType() + super.toString() + \" (by: \" + dateAndTime + \")\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ryantanlien":46}},{"path":"src/main/java/butler/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.util.LocalDateTimeManager;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"    ","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"    /** String representation of date and time not following any format */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"    private String dateAndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"    /** String representation of formatted LocalDateTime objects */","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    private String localDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"     * Constructs an Event object that must be attended at a certain date and time.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * If a date and time provided does not follow the dateFormatter provided, treats it as a string.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     * @param dateAndTime string representation of date and time provided by user.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"    public Event(String description, String dateAndTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"        localDateTime \u003d LocalDateTimeManager.toLocalDateTime(dateAndTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"     * Returns symbolic representation of task type.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * @return String Representation of task type.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"        return \"[E]\";","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"     * Represents Event object as a String","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"     * @return String Representation of task as a whole.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"        if (!localDateTime.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"            return this.getTaskType() + super.toString() + \" \" + localDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"        return this.getTaskType() + super.toString() + \" (at: \" + dateAndTime + \")\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ryantanlien":47}},{"path":"src/main/java/butler/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"    ","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"    /** Description of what needs to be done for the task */","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"    private String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"    /** Is the task complete or not */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a task object with a provided description.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"     * Returns the task description.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"     * @return String Task Description.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"        return this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     * Returns symbolic representation of whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"     * @return String Representation of task completeness as a X.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"     * Marks the task as done by toggling the boolean to true.","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"     * @return Boolean Whether the task is complete.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"        return isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"ryantanlien"},"content":"     * Marks the task as not done by toggling the boolean to false.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"ryantanlien"},"content":"     * @return Boolean Whether the task is complete.","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"ryantanlien"},"content":"    public boolean markAsUndone() {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ryantanlien"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"ryantanlien"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"ryantanlien"},"content":"     * Represents Task object as a String.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"ryantanlien"},"content":"     * @return String Representation of task as a whole.","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"ryantanlien"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"ryantanlien"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" +","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"ryantanlien"},"content":"                this.description + \"\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ryantanlien":68}},{"path":"src/main/java/butler/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a ToDo object with a provided description.","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     * Returns symbolic representation of task type.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     * @return String Representation of task type.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"        return \"[T]\";","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"     * Represents ToDo object as a String","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"     * @return String Representation of task as a whole.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"        return this.getTaskType() + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ryantanlien":32}},{"path":"src/main/java/butler/util/LocalDateTimeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.util;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"public class LocalDateTimeManager {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"     * Reformats a date and time string that follows a LocalDate and LocalTime format.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"     * The default implementation is to reformat a time that follows the ISO_LOCAL_TIME format, and a date that follows","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"     * the ISO_LOCAL_DATE format.","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"     * If the date or time cannot be formatted, handles the DateTimeException and returns a null value.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     * @param dateTime String representation of date and time.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     * @return Formatted date and time or null.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    public static String toLocalDateTime(String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"        String[] dateThenTime \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"        if (dateThenTime.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"            return \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"        String date \u003d dateThenTime[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"        String time \u003d dateThenTime[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"            LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"            LocalTime localTime \u003d LocalTime.parse(time);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"            String newLocalDate \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"            String newLocalTime \u003d localTime.format(DateTimeFormatter.ofPattern(\"Hm\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"            if (newLocalTime.length() \u003d\u003d 3) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"                newLocalTime \u003d \"0\" + newLocalTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"            return newLocalDate + \" \" + newLocalTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"        } catch (DateTimeException exception) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"            return \"Input date followed by time\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"                + \"Date must be in the format: YY-MM-DD\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"                + \"Time must be in the format: hh:mm:ss\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":42}},{"path":"src/main/java/butler/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.util;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.ButlerInputException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.command.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import butler.command.ByeCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import butler.command.DeadlineCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"import butler.command.DeleteCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"import butler.command.EventCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"import butler.command.FindCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"import butler.command.InvalidCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"import butler.command.ListCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"import butler.command.MarkCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"import butler.command.TodoCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"import butler.command.UnmarkCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"     * Parses user input and check if it matches any predefined commands.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"     * Predefined commands are:","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"     * bye","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"     * list","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"     * mark","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"     * unmark","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"     * todo","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"     * deadline","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"     * event","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"     * find","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     * delete","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     * @param input User input.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"     * @return Command Relevant command to execute given the input.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"     * @throws ButlerInputException This exception is thrown via the InvalidCommand if input matches no given commands.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"    public static Command parse(String input) throws ButlerInputException {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"        String[] stringArray \u003d input.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"        String firstWord \u003d stringArray[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"        if (firstWord.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"        } else if (firstWord.equals(\"list\") \u0026\u0026 stringArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"        } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"            if (stringArray.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"                throw new ButlerInputException(\"Error. Sorry Master, \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"                        \"but a mark or unmark command must be followed by one Integer.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ryantanlien"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ryantanlien"},"content":"                return new MarkCommand(Integer.parseInt(stringArray[1]) - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ryantanlien"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ryantanlien"},"content":"                throw new ButlerInputException(\"Error. Sorry Master, \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ryantanlien"},"content":"                       \"but a mark or unmark command must be followed by one Integer.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ryantanlien"},"content":"        } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"ryantanlien"},"content":"            if (stringArray.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ryantanlien"},"content":"                throw new ButlerInputException(\"Error. Sorry Master, \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ryantanlien"},"content":"                        \"but a mark or unmark command must be followed by one Integer.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ryantanlien"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ryantanlien"},"content":"                return new UnmarkCommand(Integer.parseInt(stringArray[1]) - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ryantanlien"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ryantanlien"},"content":"                throw new ButlerInputException(\"Error. Sorry Master, \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"ryantanlien"},"content":"                        \"but a mark or unmark command must be followed by one Integer.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"ryantanlien"},"content":"        } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"ryantanlien"},"content":"            StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ryantanlien"},"content":"            String[] dStringArray \u003d input.split(\" /at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ryantanlien"},"content":"            String[] strArray \u003d dStringArray[0].split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ryantanlien"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ryantanlien"},"content":"                if (i \u003d\u003d strArray.length - 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ryantanlien"},"content":"                    description.append(strArray[i]);","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ryantanlien"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ryantanlien"},"content":"                    description.append(strArray[i] + \" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"ryantanlien"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ryantanlien"},"content":"            return new TodoCommand(description.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"ryantanlien"},"content":"        } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"ryantanlien"},"content":"            StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"ryantanlien"},"content":"            StringBuilder dateTime \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"ryantanlien"},"content":"            String[] dStringArray \u003d input.split(\" /by \");","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"ryantanlien"},"content":"            String[] strArray \u003d dStringArray[0].split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"ryantanlien"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"ryantanlien"},"content":"                if (i \u003d\u003d strArray.length - 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"ryantanlien"},"content":"                    description.append(strArray[i]);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"ryantanlien"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"ryantanlien"},"content":"                    description.append(strArray[i] + \" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"ryantanlien"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"ryantanlien"},"content":"            if (dStringArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"ryantanlien"},"content":"                dateTime.append(dStringArray[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"ryantanlien"},"content":"            return new DeadlineCommand(description.toString(), dateTime.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"ryantanlien"},"content":"        } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"ryantanlien"},"content":"            StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"ryantanlien"},"content":"            StringBuilder dateTime \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"ryantanlien"},"content":"            String[] dStringArray \u003d input.split(\" /at \");","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"ryantanlien"},"content":"            String[] strArray \u003d dStringArray[0].split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"ryantanlien"},"content":"            for (int i \u003d 1; i \u003c strArray.length; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"ryantanlien"},"content":"                if (i \u003d\u003d strArray.length - 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"ryantanlien"},"content":"                    description.append(strArray[i]);","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"ryantanlien"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"ryantanlien"},"content":"                    description.append(strArray[i] + \" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"ryantanlien"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"ryantanlien"},"content":"            if (dStringArray.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"ryantanlien"},"content":"                dateTime.append(dStringArray[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"ryantanlien"},"content":"            return new EventCommand(description.toString(), dateTime.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"ryantanlien"},"content":"        } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"ryantanlien"},"content":"            if (stringArray.length \u003c 2) {","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"ryantanlien"},"content":"                throw new ButlerInputException(\"Error. Sorry Master, \" +","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"ryantanlien"},"content":"                        \"but a find command must be followed by a description.\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"ryantanlien"},"content":"            StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"ryantanlien"},"content":"            for (int i \u003d 1; i \u003c stringArray.length; i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"ryantanlien"},"content":"                if (i \u003d\u003d stringArray.length - 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"ryantanlien"},"content":"                    description.append(stringArray[i]);","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"ryantanlien"},"content":"                } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"ryantanlien"},"content":"                    description.append(stringArray[i] + \" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"ryantanlien"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"ryantanlien"},"content":"            return new FindCommand(description.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"ryantanlien"},"content":"        } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"ryantanlien"},"content":"            if (stringArray.length !\u003d 2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"ryantanlien"},"content":"                throw new ButlerInputException(\"Error. Sorry Master, \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"ryantanlien"},"content":"                        \"but a delete command must only be followed by one Integer.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"ryantanlien"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"ryantanlien"},"content":"                return new DeleteCommand(Integer.parseInt(stringArray[1]) - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"ryantanlien"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"ryantanlien"},"content":"                throw new ButlerInputException(\"Error. Sorry Master, \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"ryantanlien"},"content":"                        \"but a delete command must only be followed by one Integer.\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"ryantanlien"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"ryantanlien"},"content":"            return new InvalidCommand();","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ryantanlien":137}},{"path":"src/main/java/butler/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.util;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import butler.task.Task;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    /** Default path for storage file. */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    private final static String DEFAULT_PATH_NAME \u003d \"src/main/resources/list.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"    /** Actual path for storage file. */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"    private String PATH_NAME;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     * Constructs a Storage object and intialises actual path to given path.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"     * If no path is given, actual path is default path.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"     * @param pathName Given path.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"    public Storage(String pathName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"        if (pathName.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"            PATH_NAME \u003d DEFAULT_PATH_NAME;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"            PATH_NAME \u003d pathName;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"    private File createFile(String pathName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"        File folder \u003d new File(\"src/main/resources\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"        if (!folder.isDirectory()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"            folder.mkdirs();","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"        File file \u003d new File(pathName);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"                return file;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"        return file;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"ryantanlien"},"content":"    private File getFileObject() {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ryantanlien"},"content":"        File file \u003d createFile(PATH_NAME);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"ryantanlien"},"content":"        return file;","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"ryantanlien"},"content":"    private void writeToFile(File file, String string) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ryantanlien"},"content":"        FileWriter fileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"ryantanlien"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"ryantanlien"},"content":"            fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"ryantanlien"},"content":"            fileWriter.write(string);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"ryantanlien"},"content":"            fileWriter.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"ryantanlien"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"ryantanlien"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"ryantanlien"},"content":"     * Writes contents of taskList to the file at actual path.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"ryantanlien"},"content":"     * @param tasks A managed list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"ryantanlien"},"content":"    public void writeTaskListToFile(TaskList tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ryantanlien"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ryantanlien"},"content":"        StringBuilder fileOutput \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ryantanlien"},"content":"        while (i \u003c tasks.size()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ryantanlien"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"ryantanlien"},"content":"            fileOutput.append(String.valueOf(i + 1)).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"ryantanlien"},"content":"            i++;","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ryantanlien"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"ryantanlien"},"content":"        writeToFile(getFileObject(), fileOutput.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ryantanlien":78}},{"path":"src/main/java/butler/util/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.util.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"    private Label text;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"    /** Default constructor","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     * @param l Label component of the DialogBox","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"     * @param iv Image associated to the DialogBox, typically that of the chat bot or user","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"        text \u003d l;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"    protected static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"    protected static DialogBox getButlerDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"ryantanlien"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"ryantanlien":49}},{"path":"src/main/java/butler/util/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.util.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"public class Ui {","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"    private String message;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"     * Gets the message stored in this handler class.","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"     * @return The message stored in this class.","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    public String getMessage() {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"        return this.message;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"     * Sets the message stored in this handler class.","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    public void setMessage(String message) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"ryantanlien":23}},{"path":"src/main/java/butler/util/ui/UiApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler.util.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.Butler;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"ryantanlien"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"ryantanlien"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"ryantanlien"},"content":"public class UiApp extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"ryantanlien"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"ryantanlien"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"ryantanlien"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"ryantanlien"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"ryantanlien"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"ryantanlien"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"ryantanlien"},"content":"    private Image butler \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaButler.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"ryantanlien"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"ryantanlien"},"content":"     * Starts the application GUI.","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"ryantanlien"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"ryantanlien"},"content":"     * @param stage","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"ryantanlien"},"content":"     * @throws Exception","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"ryantanlien"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"ryantanlien"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"ryantanlien"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"ryantanlien"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"ryantanlien"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"ryantanlien"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"ryantanlien"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"ryantanlien"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"ryantanlien"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"ryantanlien"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"ryantanlien"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"ryantanlien"},"content":"        stage.setTitle(\"Butler\");","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"ryantanlien"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"ryantanlien"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"ryantanlien"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"ryantanlien"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"ryantanlien"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"ryantanlien"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"ryantanlien"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"ryantanlien"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"ryantanlien"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"ryantanlien"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"ryantanlien"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"ryantanlien"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"ryantanlien"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"ryantanlien"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"ryantanlien"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"ryantanlien"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"ryantanlien"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"ryantanlien"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"ryantanlien"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"ryantanlien"},"content":"        //Functionality to handle user input","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"ryantanlien"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"ryantanlien"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"ryantanlien"},"content":"        });","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"ryantanlien"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"ryantanlien"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"ryantanlien"},"content":"        });","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"ryantanlien"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":89,"author":{"gitId":"ryantanlien"},"content":"        stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":92,"author":{"gitId":"ryantanlien"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"ryantanlien"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"ryantanlien"},"content":"        Label butlerText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"ryantanlien"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"ryantanlien"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"ryantanlien"},"content":"                DialogBox.getButlerDialog(butlerText, new ImageView(butler))","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"ryantanlien"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"ryantanlien"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":100,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":101,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"ryantanlien"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":103,"author":{"gitId":"ryantanlien"},"content":"        return Butler.respond(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":104,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":105,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":106,"author":{"gitId":"ryantanlien"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-04"},{"lineNumber":107,"author":{"gitId":"ryantanlien"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":108,"author":{"gitId":"ryantanlien"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":110,"author":{"gitId":"ryantanlien"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-04"},{"lineNumber":111,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"ryantanlien":112}},{"path":"src/main/resources/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"1. [D][ ] Code Gui","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":" (by: NOW)","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"ryantanlien":3}},{"path":"src/test/java/butler/ButlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package butler;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"public class ButlerTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"    public void butlerGreeting_returnGreeting() {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"        Butler butler \u003d new Butler();","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"        Assertions.assertEquals(\"Greetings! I\u0027m Butler!\\n\" + \"What can I do for you today Master?\\n\",","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"                butler.greet());","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"ryantanlien":13}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantanlien"},"content":"package task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"ryantanlien"},"content":"import butler.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"ryantanlien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"ryantanlien"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"ryantanlien"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"ryantanlien"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"ryantanlien"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"ryantanlien"},"content":"    public void deadlineGetTaskType_returnTaskTypeString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"ryantanlien"},"content":"        Deadline deadline \u003d new Deadline(\"hello\", \"Sat 4pm\");","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"ryantanlien"},"content":"        Assertions.assertEquals(\"[D]\",deadline.getTaskType());","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"ryantanlien"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"ryantanlien"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"ryantanlien":13}}]
