[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"# _Ducky User Guide_ ü¶Ü","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"\u003e \"Be like a duck. Calm on the surface, but always paddling like the dickens underneath.\" - Micheal Caine ([Source](https://quotecatalog.com/quote/michael-caine-be-like-a-duck-baVAqop#:~:text\u003d%E2%80%9CBe%20like%20a%20duck.,paddling%20like%20the%20dickens%20underneath.%E2%80%9D))","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"### Ducky is an interactive tool for you to track your tasks in one place. It\u0027s","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"- Cute üê£","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"- ~~Easy~~ **Very _easy_** to use","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"- Text-based üßë‚Äçüíª","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"\u003cimg width\u003d\"592\" alt\u003d\"Ui\" src\u003d\"https://user-images.githubusercontent.com/61443625/156412118-9594a743-3d6d-4911-9521-6799d0a0556c.png\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"## Features ","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"### Adding tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"Let Ducky add either a todo, event, or deadline task with a task description. üåü","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"### Deleting tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"Made a mistake? üò± Don\u0027t worry! Ducky can help to delete existing tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"### Listing tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"Want to see the tasks you\u0027ve made? üóí ","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"Ducky can show you the tasks you\u0027ve made so far.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"### Marking/ Unmarking tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"Completed a task? ‚úîÔ∏è","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"Ducky can help you mark and unmark the tasks you\u0027ve made so far.","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"### Saving your tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"Want to save your tasks in a local file? ‚¨áÔ∏è","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"Ducky can help save your tasks in a text file after you exit the GUI. ","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"## Usage","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"### `help` - Viewing help","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"Shows a message on the different functionalities Ducky can do.","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"Example of usage: ","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"`help`","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome:","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"Shows a list of commands that the user can do with Ducky.","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027list\u0027 to see what you have in your task list","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027todo \u003cmessage\u003e\u0027 to put a todo in your list","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027deadline \u003cmessage\u003e /by \u003cdeadline\u003e\u0027 to put a deadline in your list.","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"    - Date must be in \u0027DD MMMM YYYY\u0027 format or given in days.","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"    - e.g. mon or monday","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027event \u003cmessage\u003e /at \u003cdate\u003e\u0027 to put an event in your list.","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"    - Date must be in \u0027DD MMMM YYYY\u0027 format or given in days.","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"    - e.g. mon or monday","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027mark \u003cx\u003e\u0027 to mark a task in your list","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027unmark \u003cx\u003e\u0027 to unmark a task in your list","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027find \u003cx\u003e\u0027 to find a task in your list","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"    - x is the word in task description to be found","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"### `todo` - Adding a todo","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"Adds a todo type task to Ducky.","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"`todo homework 5`","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky adds a todo task to the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"I have added the following todo:","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"[T][ ] homework 5","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"You now have 2 tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"### `event` - Adding an event","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"Adds an event task with the given description and event date to Ducky.","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"Format: `event \u003cdescription\u003e /at \u003ctime\u003e`","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"- `event line dancing /at monday`","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"- `event line dancing /at mon`","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"- `event line dancing /at 21 february 2022`","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky adds the event to the list","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"I have added the following event:","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"[E][ ] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-03-03"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"You now have 3 tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"### `deadline` - Adding a deadline","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"Adds a deadline task with the given description and due date to Ducky.","lastModifiedDate":"2022-03-03"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"Format: `deadline \u003cdescription\u003e /by \u003ctime\u003e`","lastModifiedDate":"2022-03-03"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"- `deadline buy groceries /by monday`","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"- `deadline buy groceries for cs /by mon`","lastModifiedDate":"2022-03-03"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"- `deadline buy groceries /by 21 february 2022`","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky adds the deadline to the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"I have added the following deadline:","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"[D][ ] buy groceries (at: 21 February 2022)","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"You now have 4 tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"### `delete` - Deleting a task","lastModifiedDate":"2022-03-03"},{"lineNumber":126,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"Deletes a task with the given index in Ducky.","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"punnyhuimin"},"content":"Format: `delete \u003cindex of task\u003e`","lastModifiedDate":"2022-03-03"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"- `delete 4`","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky deletes the task from the list and shows what was deleted.","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"I have removed this from your tasks:","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"[D][ ] buy groceries (at: 21 February 2022)","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"punnyhuimin"},"content":"You now have 3 tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":142,"author":{"gitId":"punnyhuimin"},"content":"### `list` - Show all tasks","lastModifiedDate":"2022-03-03"},{"lineNumber":143,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":144,"author":{"gitId":"punnyhuimin"},"content":"Shows all the tasks that Ducky has recorded.","lastModifiedDate":"2022-03-03"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":146,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":147,"author":{"gitId":"punnyhuimin"},"content":"- `list`","lastModifiedDate":"2022-03-03"},{"lineNumber":148,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":149,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky shows the list of tasks you have added.","lastModifiedDate":"2022-03-03"},{"lineNumber":150,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":151,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":152,"author":{"gitId":"punnyhuimin"},"content":"Here are your tasks:","lastModifiedDate":"2022-03-03"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"1. [T][ ] walk the dog","lastModifiedDate":"2022-03-03"},{"lineNumber":154,"author":{"gitId":"punnyhuimin"},"content":"2. [T][ ] homework 5","lastModifiedDate":"2022-03-03"},{"lineNumber":155,"author":{"gitId":"punnyhuimin"},"content":"3. [E][ ] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-03-03"},{"lineNumber":156,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":157,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":158,"author":{"gitId":"punnyhuimin"},"content":"### `find` - Find a task","lastModifiedDate":"2022-03-03"},{"lineNumber":159,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":160,"author":{"gitId":"punnyhuimin"},"content":"Finds a task with the given key phrases in Ducky.","lastModifiedDate":"2022-03-03"},{"lineNumber":161,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":162,"author":{"gitId":"punnyhuimin"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2022-03-03"},{"lineNumber":163,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":164,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":165,"author":{"gitId":"punnyhuimin"},"content":"- `find dancing`","lastModifiedDate":"2022-03-03"},{"lineNumber":166,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":167,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky finds the task with the word \"dancing\".","lastModifiedDate":"2022-03-03"},{"lineNumber":168,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":169,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":170,"author":{"gitId":"punnyhuimin"},"content":"Here are the tasks that contains \"dancing\":","lastModifiedDate":"2022-03-03"},{"lineNumber":171,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":172,"author":{"gitId":"punnyhuimin"},"content":"1. [E][ ] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-03-03"},{"lineNumber":173,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":174,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":175,"author":{"gitId":"punnyhuimin"},"content":"### `mark` - Mark a task","lastModifiedDate":"2022-03-03"},{"lineNumber":176,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":177,"author":{"gitId":"punnyhuimin"},"content":"Marks a task with the given index as done from Ducky.","lastModifiedDate":"2022-03-03"},{"lineNumber":178,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":179,"author":{"gitId":"punnyhuimin"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2022-03-03"},{"lineNumber":180,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":181,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":182,"author":{"gitId":"punnyhuimin"},"content":"- `mark 3`","lastModifiedDate":"2022-03-03"},{"lineNumber":183,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":184,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky marks the third task in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":185,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":186,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":187,"author":{"gitId":"punnyhuimin"},"content":"Ok, I have marked the following task:","lastModifiedDate":"2022-03-03"},{"lineNumber":188,"author":{"gitId":"punnyhuimin"},"content":"[E][X] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-03-03"},{"lineNumber":189,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":190,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":191,"author":{"gitId":"punnyhuimin"},"content":"### `unmark` - Unmark a task","lastModifiedDate":"2022-03-03"},{"lineNumber":192,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":193,"author":{"gitId":"punnyhuimin"},"content":"Unmarks a task with the given index as done from Ducky.","lastModifiedDate":"2022-03-03"},{"lineNumber":194,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":195,"author":{"gitId":"punnyhuimin"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2022-03-03"},{"lineNumber":196,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":197,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":198,"author":{"gitId":"punnyhuimin"},"content":"- `unmark 3`","lastModifiedDate":"2022-03-03"},{"lineNumber":199,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":200,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky unmarks the third task in the list.","lastModifiedDate":"2022-03-03"},{"lineNumber":201,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":202,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":203,"author":{"gitId":"punnyhuimin"},"content":"Sure, I have unmarked the following task:","lastModifiedDate":"2022-03-03"},{"lineNumber":204,"author":{"gitId":"punnyhuimin"},"content":"[E][ ] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-03-03"},{"lineNumber":205,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":206,"author":{"gitId":"punnyhuimin"},"content":"### `bye` - Exit Ducky","lastModifiedDate":"2022-03-03"},{"lineNumber":207,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":208,"author":{"gitId":"punnyhuimin"},"content":"Exits Ducky and saves the tasks to the duke.txt file.","lastModifiedDate":"2022-03-03"},{"lineNumber":209,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":210,"author":{"gitId":"punnyhuimin"},"content":"Format: `bye`","lastModifiedDate":"2022-03-03"},{"lineNumber":211,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":212,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-03-03"},{"lineNumber":213,"author":{"gitId":"punnyhuimin"},"content":"- `bye`","lastModifiedDate":"2022-03-03"},{"lineNumber":214,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":215,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky says bye and hopes to see you again. ü•∫","lastModifiedDate":"2022-03-03"},{"lineNumber":216,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":217,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":218,"author":{"gitId":"punnyhuimin"},"content":"Your tasks have been saved in duke.txt","lastModifiedDate":"2022-03-03"},{"lineNumber":219,"author":{"gitId":"punnyhuimin"},"content":"This window will close in 3 seconds","lastModifiedDate":"2022-03-03"},{"lineNumber":220,"author":{"gitId":"punnyhuimin"},"content":"Bye~ Hope to see you again soon!*‚úßÔΩ•Ôæü:*(*‚ù¶œâ‚ù¶)*:ÔΩ•Ôæü‚úß*","lastModifiedDate":"2022-03-03"},{"lineNumber":221,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-03-03"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":234,"author":{"gitId":"punnyhuimin"},"content":"3. After that, locate the `src/main/java/duke/Launcher.java` file, right-click it, and choose `Run Launcher.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see a Ducky Java window opening.","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"-":14,"punnyhuimin":220}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \"5.1.0\"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"javafx {","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    version \u003d \"11\"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.8.2\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.8.2\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"//checkstyle {","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"//    toolVersion \u003d \"8.29\"","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"//}","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":38,"punnyhuimin":30}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"# _Ducky User Guide_ ü¶Ü","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"\u003e \"Be like a duck. Calm on the surface, but always paddling like the dickens underneath.\" - Micheal Caine ([Source](https://quotecatalog.com/quote/michael-caine-be-like-a-duck-baVAqop#:~:text\u003d%E2%80%9CBe%20like%20a%20duck.,paddling%20like%20the%20dickens%20underneath.%E2%80%9D))","lastModifiedDate":"2022-02-16"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"### Ducky is an interactive tool for you to track your tasks in one place. It\u0027s","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"- Cute üê£","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"- ~~Easy~~ **Very _easy_** to use","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"- Text-based üßë‚Äçüíª","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"![](Ui.png)","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"### Adding tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"Let Ducky add either a todo, event, or deadline task with a task description. üåü","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"### Deleting tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"Made a mistake? üò± Don\u0027t worry! Ducky can help to delete existing tasks.","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"### Listing tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"Want to see the tasks you\u0027ve made? üóí ","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"Ducky can show you the tasks you\u0027ve made so far.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"### Marking/ Unmarking tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"Completed a task? ‚úîÔ∏è","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"Ducky can help you mark and unmark the tasks you\u0027ve made so far.","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"### Saving your tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"Want to save your tasks in a local file? ‚¨áÔ∏è","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"Ducky can help save your tasks in a text file after you exit the GUI. ","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"### `help` - Viewing help","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"Shows a message on the different functionalities Ducky can do.","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"`help`","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"Shows a list of commands that the user can do with Ducky.","lastModifiedDate":"2022-02-16"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027list\u0027 to see what you have in your task list","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027todo \u003cmessage\u003e\u0027 to put a todo in your list","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027deadline \u003cmessage\u003e /by \u003cdeadline\u003e\u0027 to put a deadline in your list.","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"    - Date must be in \u0027DD MMMM YYYY\u0027 format or given in days.","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"    - e.g. mon or monday","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027event \u003cmessage\u003e /at \u003cdate\u003e\u0027 to put an event in your list.","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    - Date must be in \u0027DD MMMM YYYY\u0027 format or given in days.","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"    - e.g. mon or monday","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027mark \u003cx\u003e\u0027 to mark a task in your list","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027unmark \u003cx\u003e\u0027 to unmark a task in your list","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"\u003e Type \u0027find \u003cx\u003e\u0027 to find a task in your list","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"    - x is the word in task description to be found","lastModifiedDate":"2022-02-16"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"### `todo` - Adding a todo","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"Adds a todo type task to Ducky.","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"`todo homework 5`","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky adds a todo task to the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"I have added the following todo:","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"[T][ ] homework 5","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"You now have 2 tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"### `event` - Adding an event","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"Adds an event task with the given description and event date to Ducky.","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"Format: `event \u003cdescription\u003e /at \u003ctime\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"- `event line dancing /at monday`","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"- `event line dancing /at mon`","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"- `event line dancing /at 21 february 2022`","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky adds the event to the list","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"I have added the following event:","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"[E][ ] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"You now have 3 tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"### `deadline` - Adding a deadline","lastModifiedDate":"2022-02-16"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"Adds a deadline task with the given description and due date to Ducky.","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"Format: `deadline \u003cdescription\u003e /by \u003ctime\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"- `deadline buy groceries /by monday`","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"- `deadline buy groceries for cs /by mon`","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"- `deadline buy groceries /by 21 february 2022`","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky adds the deadline to the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"I have added the following deadline:","lastModifiedDate":"2022-02-16"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"[D][ ] buy groceries (at: 21 February 2022)","lastModifiedDate":"2022-02-16"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"You now have 4 tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"### `delete` - Deleting a task","lastModifiedDate":"2022-02-16"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"punnyhuimin"},"content":"Deletes a task with the given index in Ducky.","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"punnyhuimin"},"content":"Format: `delete \u003cindex of task\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":129,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"- `delete 4`","lastModifiedDate":"2022-02-16"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky deletes the task from the list and shows what was deleted.","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"I have removed this from your tasks:","lastModifiedDate":"2022-02-16"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"[D][ ] buy groceries (at: 21 February 2022)","lastModifiedDate":"2022-02-16"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"You now have 3 tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":139,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"punnyhuimin"},"content":"### `list` - Show all tasks","lastModifiedDate":"2022-02-16"},{"lineNumber":142,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"punnyhuimin"},"content":"Shows all the tasks that Ducky has recorded.","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":146,"author":{"gitId":"punnyhuimin"},"content":"- `list`","lastModifiedDate":"2022-02-16"},{"lineNumber":147,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":148,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky shows the list of tasks you have added.","lastModifiedDate":"2022-02-16"},{"lineNumber":149,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":150,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":151,"author":{"gitId":"punnyhuimin"},"content":"Here are your tasks:","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"punnyhuimin"},"content":"1. [T][ ] walk the dog","lastModifiedDate":"2022-02-16"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"2. [T][ ] homework 5","lastModifiedDate":"2022-02-16"},{"lineNumber":154,"author":{"gitId":"punnyhuimin"},"content":"3. [E][ ] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-02-16"},{"lineNumber":155,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":156,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":157,"author":{"gitId":"punnyhuimin"},"content":"### `find` - Find a task","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":159,"author":{"gitId":"punnyhuimin"},"content":"Finds a task with the given key phrases in Ducky.","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"punnyhuimin"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":163,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"punnyhuimin"},"content":"- `find dancing`","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":166,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky finds the task with the word \"dancing\".","lastModifiedDate":"2022-02-16"},{"lineNumber":167,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":168,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":169,"author":{"gitId":"punnyhuimin"},"content":"Here are the tasks that contains \"dancing\":","lastModifiedDate":"2022-02-16"},{"lineNumber":170,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":171,"author":{"gitId":"punnyhuimin"},"content":"1. [E][ ] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-02-16"},{"lineNumber":172,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":173,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":174,"author":{"gitId":"punnyhuimin"},"content":"### `mark` - Mark a task","lastModifiedDate":"2022-02-16"},{"lineNumber":175,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":176,"author":{"gitId":"punnyhuimin"},"content":"Marks a task with the given index as done from Ducky.","lastModifiedDate":"2022-02-16"},{"lineNumber":177,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":178,"author":{"gitId":"punnyhuimin"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":179,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":180,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":181,"author":{"gitId":"punnyhuimin"},"content":"- `mark 3`","lastModifiedDate":"2022-02-16"},{"lineNumber":182,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":183,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky marks the third task in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":184,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":185,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":186,"author":{"gitId":"punnyhuimin"},"content":"Ok, I have marked the following task:","lastModifiedDate":"2022-02-16"},{"lineNumber":187,"author":{"gitId":"punnyhuimin"},"content":"[E][X] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-02-16"},{"lineNumber":188,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":189,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":190,"author":{"gitId":"punnyhuimin"},"content":"### `unmark` - Unmark a task","lastModifiedDate":"2022-02-16"},{"lineNumber":191,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":192,"author":{"gitId":"punnyhuimin"},"content":"Unmarks a task with the given index as done from Ducky.","lastModifiedDate":"2022-02-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"punnyhuimin"},"content":"Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"punnyhuimin"},"content":"- `unmark 3`","lastModifiedDate":"2022-02-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky unmarks the third task in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":202,"author":{"gitId":"punnyhuimin"},"content":"Sure, I have unmarked the following task:","lastModifiedDate":"2022-02-16"},{"lineNumber":203,"author":{"gitId":"punnyhuimin"},"content":"[E][ ] line dancing (at: 21 February 2022)","lastModifiedDate":"2022-02-16"},{"lineNumber":204,"author":{"gitId":"punnyhuimin"},"content":"```","lastModifiedDate":"2022-02-16"},{"lineNumber":205,"author":{"gitId":"punnyhuimin"},"content":"### `bye` - Exit Ducky","lastModifiedDate":"2022-02-16"},{"lineNumber":206,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":207,"author":{"gitId":"punnyhuimin"},"content":"Exits Ducky and saves the tasks to the duke.txt file.","lastModifiedDate":"2022-02-16"},{"lineNumber":208,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":209,"author":{"gitId":"punnyhuimin"},"content":"Format: `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":210,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":211,"author":{"gitId":"punnyhuimin"},"content":"Example of usage:","lastModifiedDate":"2022-02-16"},{"lineNumber":212,"author":{"gitId":"punnyhuimin"},"content":"- `bye`","lastModifiedDate":"2022-02-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":214,"author":{"gitId":"punnyhuimin"},"content":"Expected outcome: Ducky says bye and hopes to see you again. ü•∫","lastModifiedDate":"2022-02-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":217,"author":{"gitId":"punnyhuimin"},"content":"Your tasks have been saved in duke.txt","lastModifiedDate":"2022-02-16"},{"lineNumber":218,"author":{"gitId":"punnyhuimin"},"content":"This window will close in 3 seconds","lastModifiedDate":"2022-02-16"},{"lineNumber":219,"author":{"gitId":"punnyhuimin"},"content":"Bye~ Hope to see you again soon!*‚úßÔΩ•Ôæü:*(*‚ù¶œâ‚ù¶)*:ÔΩ•Ôæü‚úß*","lastModifiedDate":"2022-02-16"},{"lineNumber":220,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":27,"punnyhuimin":193}},{"path":"src/main/java/duke/Checker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":" * Checks the command inputted by the user and filters it into the various Enum Status.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"public class Checker {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    private String command;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    private Status state;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    public enum Status {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        BYE,","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"        HELP,","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"        LIST,","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"        EVENT,","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        DEADLINE,","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        TODO,","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"        DELETE,","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"        MARK,","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"        UNMARK,","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"        FIND","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    };","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor of the Checker class.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     * Used to classify the status of the commands to be passed into Parser.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     * @param input Command inputted by the user. E.g. help, delete, event.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException Thrown if the command inputted does not match any in-built commands.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    public Checker(String input) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        command \u003d input;","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        if (this.command.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.BYE;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"help\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.HELP;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.LIST;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.DELETE;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.TODO;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.DEADLINE;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.EVENT;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.UNMARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"find\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.FIND;","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(String.format(\"Sorry, I did not catch that! \\\\(T.T)/\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"                    + \"type \u0027help\u0027 to see all commands I can help with.\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the enum status generated from the input command.","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"     * @return State based on the input. E.g. help, delete, event.","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"        return state;","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"punnyhuimin":68}},{"path":"src/main/java/duke/DateChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":" * Checks the date inputted by the user and filters it into the various Enum dates.","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"public class DateChecker {","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    private String dateInput;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    private Dates date;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    public enum Dates {","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        MONDAY,","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"        TUESDAY,","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"        WEDNESDAY,","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"        THURSDAY,","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        FRIDAY,","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        SATURDAY,","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"        SUNDAY,","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"        NODAYS","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    };","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor of the DateChecker class.","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     * Used to classify the types of dates to be passed into DateHelper.","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     * @param input Day inputted by the user. E.g. Mon, Sun, Thur","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    public DateChecker(String input) {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"        dateInput \u003d input.toLowerCase();","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        boolean isMonday \u003d dateInput.equals(\"mon\") || dateInput.equals(\"monday\");","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        boolean isTuesday \u003d dateInput.equals(\"tues\") || dateInput.equals(\"tuesday\") || dateInput.equals(\"tue\");","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        boolean isWednesday \u003d dateInput.equals(\"weds\") || dateInput.equals(\"wednesday\") || dateInput.equals(\"wed\");","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"        boolean isThursday \u003d dateInput.equals(\"thurs\") || dateInput.equals(\"thursday\") || dateInput.equals(\"thur\");","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        boolean isFriday \u003d dateInput.equals(\"fri\") || dateInput.equals(\"friday\");","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        boolean isSaturday \u003d dateInput.equals(\"sat\") || dateInput.equals(\"saturday\");","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        boolean isSunday \u003d dateInput.equals(\"sun\") || dateInput.equals(\"sunday\");","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        if (isMonday) {","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.MONDAY;","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isTuesday) {","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.TUESDAY;","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isWednesday) {","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.WEDNESDAY;","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isThursday) {","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.THURSDAY;","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isFriday) {","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.FRIDAY;","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isSaturday) {","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.SATURDAY;","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        } else if (isSunday) {","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.SUNDAY;","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"            date \u003d Dates.NODAYS;","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the enum date generated from the input date.","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"     * @return Date based on the input. E.g. mon, tues, thurs.","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"    public Dates getDate() {","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"        return date;","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"punnyhuimin":65}},{"path":"src/main/java/duke/DateHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Date;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Calendar;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import duke.DateChecker.Dates;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":" * DateHelper is used to help convert Strings into the proper date time formats.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":" * It also helps to check for the validity of the date inputted.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":" * If the date input is invalid, (e.g. missing the day, short form months), it throws a DukeException.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"public class DateHelper {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    private Date formattedDatetime;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    private String dateFormat;","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    private int daysAfter \u003d 0;","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    private static final String INVALID_DATE \u003d \"Oops, please put a valid time format!\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"            + \"Let\u0027s try again ~(^.^)~\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"            + \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     * Constructs a DateHelper.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     * @param time Time input is based on the datetime provided by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException Thrown when there is an invalid datetime format.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    public DateHelper(String time) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        patternType(time);","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            String pattern \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"            DateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            simpleDateFormat.setLenient(false);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"            Date date \u003d simpleDateFormat.parse(dateFormat);","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"            formattedDatetime \u003d date;","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"                String pattern \u003d \"dd MMMM yyyy\";","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"                DateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"                simpleDateFormat.setLenient(false);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"                Date date \u003d simpleDateFormat.parse(dateFormat);","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"                formattedDatetime \u003d date;","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ParseException err) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(INVALID_DATE);","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"     * Method meant to detect what type of date user inputs.","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"     * This method is meant to format inputs that are not valid date types, but are natural dates.","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"     * @param flexInput This is the date input provided by the user.","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"    // Solution to get current day of week adapted from https://coderanch.com/t/385117/java/date-Monday","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    private void patternType(String flexInput) {","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"        DateChecker dateCheck \u003d new DateChecker(flexInput);","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"        Dates inputtedDay \u003d dateCheck.getDate(); // This gives the enum date which is like \"MONDAY\"","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"        Calendar now \u003d Calendar.getInstance();","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"        int today \u003d now.get(Calendar.DAY_OF_WEEK);","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"        switch (inputtedDay) {","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"        case MONDAY:","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"            if (today !\u003d Calendar.MONDAY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"                daysAfter \u003d (Calendar.SATURDAY - today + 2) % 7;","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d formatDate(now);","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"        case TUESDAY:","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"            if (today !\u003d Calendar.TUESDAY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"                daysAfter \u003d (Calendar.SATURDAY - today + 3) % 7;","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d formatDate(now);","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"        case WEDNESDAY:","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"            if (today !\u003d Calendar.WEDNESDAY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"                daysAfter \u003d (Calendar.SATURDAY - today + 4) % 7;","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d formatDate(now);","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"        case THURSDAY:","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"            if (today !\u003d Calendar.THURSDAY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"                daysAfter \u003d (Calendar.SATURDAY - today + 5) % 7;","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d formatDate(now);","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"        case FRIDAY:","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"            if (today !\u003d Calendar.FRIDAY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"                daysAfter \u003d (Calendar.SATURDAY - today + 6) % 7;","lastModifiedDate":"2022-02-17"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d formatDate(now);","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"        case SATURDAY:","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"            if (today !\u003d Calendar.SATURDAY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"                daysAfter \u003d (Calendar.SATURDAY - today) % 7;","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d formatDate(now);","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"        case SUNDAY:","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"            if (today !\u003d Calendar.SUNDAY) {","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"                daysAfter \u003d (Calendar.SATURDAY - today + 1) % 7;","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d formatDate(now);","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"        case NODAYS:","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"            dateFormat \u003d flexInput;","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"     * This formats the Date to String. Used in DateHelper only.","lastModifiedDate":"2022-02-10"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"     * @param now Calendar class object meant to format the date.","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"     * @return Date in String format.","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"    private String formatDate(Calendar now) {","lastModifiedDate":"2022-02-10"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"        now.add(Calendar.DAY_OF_YEAR, daysAfter);","lastModifiedDate":"2022-02-10"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"        Date date \u003d now.getTime();","lastModifiedDate":"2022-02-10"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMMM yyyy\");","lastModifiedDate":"2022-02-10"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2022-02-10"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"        return dateFormat.format(date);","lastModifiedDate":"2022-02-10"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"punnyhuimin"},"content":"     * Returns the formatted date time based on the user\u0027s input.","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"punnyhuimin"},"content":"     * @return Returns a formatted date time (i.e. dd MMMM yyyy).","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"    public String getDatetime() {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMMM yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"        assert formattedDatetime !\u003d null : \"No time was given previously\";","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"        String strDate \u003d dateFormat.format(formattedDatetime);","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"        return strDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"punnyhuimin":138}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"        DialogBox userDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"        // @@yunbinmo punnyhuimin-reused","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"        // Reused from https://github.com/yunbinmo/ip/blob/master/src/main/java/spike/ui/DialogBox.java","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"        // Sets the color of the dialog box based on who is talking. Minor modifications made to the color to","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        // match Ducky.","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"        userDialog.getChildren().get(0).setStyle(\"-fx-background-color: #3d341a; -fx-background-radius: 10;\");","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"        // @@yunbinmo","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"        return userDialog;","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"        // @@yunbinmo punnyhuimin-reused","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"        // Reused from https://github.com/yunbinmo/ip/blob/master/src/main/java/spike/ui/DialogBox.java","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"        // Sets the color of the dialog box based on who is talking. Minor modifications made to the color to","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"        // match Ducky.","lastModifiedDate":"2022-04-05"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"        db.getChildren().get(0).setStyle(\"-fx-background-color: #bd8b04; -fx-background-radius: 10;\");","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"        // @@yunbinmo","lastModifiedDate":"2022-04-05"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"    public static DialogBox getWarningDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"        // @@yunbinmo punnyhuimin-reused","lastModifiedDate":"2022-04-05"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"        // Reused from https://github.com/yunbinmo/ip/blob/master/src/main/java/spike/ui/DialogBox.java","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"        // Sets the color of the dialog box based on who is talking. Minor modifications made to the color to","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"        // match Ducky.","lastModifiedDate":"2022-04-05"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"        db.getChildren().get(0).setStyle(\"-fx-background-color: #f56c42; -fx-background-radius: 10;\");","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"        // @@yunbinmo","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"        db.flip();","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"        return db;","lastModifiedDate":"2022-02-16"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"punnyhuimin":86}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":" * Duke is the main class that houses a \u0027run\u0027 command to call on other classes to process the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":" * It helps the user to record down tasks such as Events, Deadlines, and Todos.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":" * It can also save the user\u0027s tasks into a text file, and load it up when the user interacts with Ducky again.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" *","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" * @author Pun Hui Min","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"public class Duke {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    private String filename;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    private boolean isError;","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor method for Duke.","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     * @param filepath text file name. Typically called \u0027duke.txt\u0027.","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        filename \u003d filepath;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"            tasks \u003d storage.readFile(filepath);","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"            isError \u003d true;","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the response of Ducky upon user input.","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"     * @param input User input in GUI (i.e. commands).","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"     * @return Ducky\u0027s response the user\u0027s input.","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"            Command c \u003d new Parser(input).parse();","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"            String response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"            storage.saveFile(tasks.formatTasks());","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"            isError \u003d false;","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"            return response;","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"            isError \u003d true;","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"            return (e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"    public boolean isError() {","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        return isError;","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":59}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":" * Duke specific exception that allows for custom error messages to be thrown.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    private String message;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor method for DukeException.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"     * @param errorMessage Custom message to be thrown.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        message \u003d errorMessage;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     * Returns the error message from the specific DukeException thrown.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * @return Returns the error message specified.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        return message;","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"punnyhuimin":28}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"punnyhuimin":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    private static final String STAGE_NAME \u003d \"Ducky\";","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"            stage.setTitle(STAGE_NAME);","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"            stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"punnyhuimin":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    private DialogBox dukeWindow;","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    private DialogBox userWindow;","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gude.png\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duckling.png\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    private Image sadDukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/SadDuck.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    private String welcome \u003d \"Hello! I\u0027m Ducky! :)\\n\" + \"I am a task manager.\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"                + \"Type \u0027help\u0027 for more information on the commands you can give me.\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"                + \"What can I do for you today?\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"                + \"‚úßÔΩ•Ôæü: *‚úßÔΩ•Ôæü:* |\\\\__( o)\u003e *:ÔΩ•Ôæü‚úß*:ÔΩ•Ôæü‚úß\";","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        // @@LapisRaider punnyhuimin-reused","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"        // Reused from https://github.com/LapisRaider/ip/blob/master/src/main/java/duke/ui/MainWindow.java","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        // Tried to set up the scroll pane to be transparent in the fxml but could not do so. Noticed that","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        // this user managed to do so and the code snippet that could achieve that was the following.","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        scrollPane.setStyle(\"-fx-background: transparent; -fx-background-color: transparent;\");","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"        //@@LapisRaider","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"                DialogBox.getDukeDialog(welcome, dukeImage)","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        );","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"    private void handleExit() {","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"        userInput.setDisable(true);","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"        delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"        delay.play();","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"        String input \u003d userInput.getText().toLowerCase(java.util.Locale.ROOT);","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"        userWindow \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"        if (duke.isError()) {","lastModifiedDate":"2022-02-16"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"            dukeWindow \u003d DialogBox.getWarningDukeDialog(response, sadDukeImage);","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"            dukeWindow \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2022-02-16"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"            handleExit();","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"                userWindow,","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"                dukeWindow","lastModifiedDate":"2022-02-16"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"punnyhuimin":85}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.ListTaskCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":" * Parses the user input and triggers commands to run the input information.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"public class Parser {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    private String userInput;","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    private String[] textEntered;","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    private String command;","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    private Checker checker;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    private Command parsedCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    private static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    private static final int DETAILS_INDEX \u003d 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    private static final int DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    private static final int TIME_INDEX \u003d 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    private static String DESC_RESPONSE \u003d \"Oops! \\\\(@.@)/ You have not keyed in a description for the \"","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"            + \"task!\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"            + \"Let\u0027s try again ~(^.^)~\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            + \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    private static String MISSING_ID_RESPONSE \u003d \"Oops! \\\\(@.@)/ You have not keyed in an ID!\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"            + \"Let\u0027s try again ~(^.^)~\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"            + \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"    private static String MISSING_DATE_RESPONSE \u003d \"Oops, please specify a date!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    private static final String INVALID_RESPONSE \u003d \"Sorry, I did not catch that! \\\\(T.T)/\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"            + \"type \u0027help\u0027 to see all commands I can help with.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor method for Parser.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"     * @param input User\u0027s input into CLI (e.g. event jumping /at 6 January 2023).","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    public Parser(String input) {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        userInput \u003d input;","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"     * Parses the user input to determine the commands to be used.","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"     * @return Command that is to be called based on the user\u0027s input.","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException Throws a DukeException if there is missing or incorrect information from the user input.","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"        textEntered \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"        command \u003d textEntered[COMMAND_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"        checker \u003d new Checker(command);","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"        switch (checker.getStatus()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"        case BYE:","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"            parsedCommand \u003d new ExitCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"        case HELP:","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"            parsedCommand \u003d new HelpCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"        case LIST:","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"            parsedCommand \u003d new ListTaskCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"        case DELETE:","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"                String deleteId \u003d textEntered[DETAILS_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"                parsedCommand \u003d new DeleteCommand(deleteId);","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(MISSING_ID_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"        case TODO:","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"                String description \u003d textEntered[DETAILS_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"                parsedCommand \u003d new AddTodoCommand(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"                String text \u003d textEntered[DETAILS_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"                if (!text.contains(\"/by\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"                    throw new DukeException(\"Please use \\\"/by\\\"\");","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"                String[] textArr \u003d text.split(\"/by\");","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"                String description \u003d textArr[DESCRIPTION_INDEX].trim();","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"                if (textArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"                    throw new DukeException(MISSING_DATE_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"                String time \u003d textArr[1].trim();","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"                parsedCommand \u003d new AddDeadlineCommand(description, time);","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"        case EVENT:","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"                String text \u003d textEntered[DETAILS_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"                if (!text.contains(\"/at\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"                    throw new DukeException(\"Please use \\\"/at\\\"\");","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"                String[] textArr \u003d text.split(\"/at \");","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"                String description \u003d textArr[DESCRIPTION_INDEX].trim();","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"                if (textArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"                    throw new DukeException(MISSING_DATE_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"                String time \u003d textArr[TIME_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"                parsedCommand \u003d new AddEventCommand(description, time);","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"        case UNMARK:","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"punnyhuimin"},"content":"                String unmarkId \u003d textEntered[DETAILS_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"                parsedCommand \u003d new UnmarkCommand(unmarkId);","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(MISSING_ID_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"        case MARK:","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"                String markId \u003d textEntered[DETAILS_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"                parsedCommand \u003d new MarkCommand(markId);","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(MISSING_ID_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":140,"author":{"gitId":"punnyhuimin"},"content":"        case FIND:","lastModifiedDate":"2022-01-29"},{"lineNumber":141,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"punnyhuimin"},"content":"                String findString \u003d textEntered[DETAILS_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":143,"author":{"gitId":"punnyhuimin"},"content":"                parsedCommand \u003d new FindCommand(findString);","lastModifiedDate":"2022-01-29"},{"lineNumber":144,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(MISSING_ID_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":146,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-02-04"},{"lineNumber":148,"author":{"gitId":"punnyhuimin"},"content":"        default:","lastModifiedDate":"2022-02-04"},{"lineNumber":149,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(INVALID_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":150,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"punnyhuimin"},"content":"        return parsedCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":153}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import java.io.File;  // Import the File class","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"import java.io.FileNotFoundException;  // Import this class to handle errors","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import java.io.FileWriter; // Import the File class","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import java.io.IOException;  // Import the IOException class to handle errors","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Scanner; // Import the Scanner class to read text files","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":" * Storage class is meant to read and write to the text file based on the tasks the the user creates.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    private String fileName;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    private static final int STATE_INDEX \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    private static final int TYPE_INDEX \u003d 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    private static final int DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    private static final int TIME_INDEX \u003d 3;","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor of the Storage class.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * @param path file name of the text file.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        fileName \u003d path;","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the name of the file where the user stored their previous list of tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"     * @return returns the file name.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    public String getFileName() {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        return fileName;","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"     * Saves the existing tasks into the text file.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"     * @param args Formatted tasks that are in the form \u003cMarked Status\u003e | \u003cTask Type\u003e | \u003cTask Details\u003e.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"    public void saveFile(String args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"            FileWriter myWriter \u003d new FileWriter(fileName, false);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"            myWriter.write(args);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"     * Reads the txt file and generates the TaskList based on historical tasks that the user has inputted into Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"     * @param filepath path in which the text file exists.","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"     * @return TaskList                                                       holds the historical tasks that the user","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"     * inputted into Ducky previously.","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException Exception is thrown when there is an issue with the inputs in the text file.","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"    public TaskList readFile(String filepath) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"            File myObj \u003d new File(System.getProperty(\"user.dir\") + \"/\" + filepath);","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"                // Process the data such that it can see if this is event or deadline or todo,","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"                // then create accordingly","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"                processString(data);","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"            myReader.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"            return tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"            return tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"     * Processes the strings that are in the text file.","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"     * @param line A string that is in the text file. Should be in the form \u003cMark State\u003e | \u003cTask Type\u003e | \u003cTask Details\u003e.","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException thrown when there is an issue with the inputs in the text file.","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"    private void processString(String line) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"        String state \u003d parts[STATE_INDEX].trim();","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"        String type \u003d parts[TYPE_INDEX].trim();","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"        String description \u003d parts[DESCRIPTION_INDEX].trim();","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"        // 1. Check Task type","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"        if (type.equals(\"D\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"            String time \u003d parts[TIME_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"            DateHelper datetime \u003d new DateHelper(time);","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"            Deadline out \u003d new Deadline(description, datetime);","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTask(out);","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"            String time \u003d parts[TIME_INDEX];","lastModifiedDate":"2022-02-10"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"            DateHelper datetime \u003d new DateHelper(time);","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"            Event out \u003d new Event(description, datetime);","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTask(out);","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"        } else if (type.equals(\"T\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"            Todo out \u003d new Todo(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTask(out);","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"        // 2. Check if marked","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"        if (state.equals(\"1\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"            tasks.getTask(tasks.getSize() - 1).setDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"punnyhuimin":117}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":" * Handles text to be returned to the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"public class Ui {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"     * Welcome text that is to be printed when the user first starts Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    @SuppressWarnings(\"checkstyle:OperatorWrap\")","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    public String welcome() {","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"        String logo \u003d \" ____              _\"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n|  _ \\\\ _   _ _____| | ____ __\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"                + \"| | | | | | |  ___| |/ /\\\\ v /\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"                + \"| |_| | |_| | |___|   \u003c  | |\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"                + \"|____/ \\\\___/\\\\_____|_|\\\\_\\\\ |_|\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"        return (logo + \"Hello! I\u0027m Ducky! :)\\n\" + \"I am a task manager.\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"                + \"Type \u0027help\u0027 for more information on the commands you can give me.\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"                + \"What can I do for you today?\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"                + \"‚úßÔΩ•Ôæü: *‚úßÔΩ•Ôæü:* |\\\\__( o)\u003e *:ÔΩ•Ôæü‚úß*:ÔΩ•Ôæü‚úß\");","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     * New command input should end with this and output should end with this as well.","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    public void showLine() {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"        System.out.println(\"‚úßÔΩ•Ôæü: *‚úßÔΩ•Ôæü:* |\\\\__( o)\u003e *:ÔΩ•Ôæü‚úß*:ÔΩ•Ôæü‚úß\");","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"     * Shows the error message that was caught.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"     * @param errorMessage error message that is thrown in exceptions.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"     * Prints the \u0027help\u0027 response by Ducky. Usually called when the user says \"help\".","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"    public String printHelp() {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        String helpResponse \u003d \"\u003e Type \u0027list\u0027 to see what you have in your task list\"","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027todo \u003cmessage\u003e\u0027 to put a todo in your list\"","lastModifiedDate":"2022-02-16"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027deadline \u003cmessage\u003e /by \u003cdeadline\u003e\u0027 to put a deadline in your list.\"","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\\t - Deadline must be in \u0027DD MMMM YYYY\u0027 format or given in days.\"","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\\t - e.g. mon or monday\"","lastModifiedDate":"2022-02-16"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027event \u003cmessage\u003e /at \u003cdate\u003e\u0027 to put an event in your list\"","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\\t - Date must be in \u0027DD MMMM YYYY\u0027 format or given in days.\"","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\\t - e.g. mon or monday\"","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027mark \u003cx\u003e\u0027 to mark a task in your list\"","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027unmark \u003cx\u003e\u0027 to unmark a task in your list\"","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027find \u003cx\u003e\u0027 to find a task in your list\"","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\\t - x is the word in task description to be found\";","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"        ;","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        return (helpResponse);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":62}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DateHelper;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" * Adds a deadline task into the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private String description;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    private DateHelper datetime;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    private static final String DESC_RESPONSE \u003d \"Oops! \\\\(@.@)/ You have not keyed in a description for the task!\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"            + \"Let\u0027s try again ~(^.^)~\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"            + \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor for the addition of deadlines.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     * @param input Description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     * @param time  Due date of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException Exception is thrown when there is no time provided","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    public AddDeadlineCommand(String input, String time) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"        assert input !\u003d null : \"No description was provided to the task\";","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        description \u003d input;","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        if (time.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(\"Oops! You have not keyed in a due date for the task! ‚îó(ÔΩÄ–îÔæü‚îó(ÔΩÄÔæü–îÔæü¬¥)‚îõÔæü–î¬¥)‚îõ\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"                    + \"Let\u0027s try again  (‚òÜÔΩÄ‚Ä¢ œâ ‚Ä¢¬¥)ÔΩÇ\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"                    + \"Type \u0027help\u0027 if you need to know how to use this command\");","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"            datetime \u003d new DateHelper(time);","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"     * Executes the addition of deadline task into the tasklist.","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks   TaskList that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui      Ui that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException thrown when there is no description written.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        boolean isEmptyDescription \u003d description.length() \u003d\u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"        if (isEmptyDescription) {","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"            Deadline entry \u003d new Deadline(description, datetime);","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTask(entry);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d entry.getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"            return (\"I have added the following deadline:\\n\" + message","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"                    + \"\\nYou now have \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":61}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DateHelper;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" * Adds an event to the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private String description;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    private DateHelper datetime;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    private static final String DESC_RESPONSE \u003d \"Oops! \\\\(@.@)/ You have not keyed in a description for the task!\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"            + \"Let\u0027s try again ~(^.^)~\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"            + \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    private static final String NO_DATE_RESPONSE \u003d \"Oops! You have not keyed in a due date for the task! ‚îó(ÔΩÄ–îÔæü‚îó(ÔΩÄÔæü–îÔæü¬¥)‚îõÔæü–î¬¥)‚îõ\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"            + \"Let\u0027s try again  (‚òÜÔΩÄ‚Ä¢ œâ ‚Ä¢¬¥)ÔΩÇ\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"            + \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor for AddEventCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     * @param input Description that the user provided for the event.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * @param time  Date time that the user provided for the event.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException thrown when there is no due date for the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    public AddEventCommand(String input, String time) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"        assert input !\u003d null : \"Missing description input for the event\";","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        description \u003d input;","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        boolean isEmptyTime \u003d time.length() \u003d\u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        if (isEmptyTime) {","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(NO_DATE_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            datetime \u003d new DateHelper(time);","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"     * Executes addition of the task into the Task List.","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks   Tasklist that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui      Ui that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException When there is no description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"            Event entry \u003d new Event(description, datetime);","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTask(entry);","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d entry.getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"            return (\"I have added the following event:\\n\" + message","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"                    + \"\\nYou now have \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":63}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" * Adds a Todo to the Task List.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    private String description;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private static final String DESC_RESPONSE \u003d \"Oops! \\\\(@.@)/ You have not keyed in a description for the task!\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"            + \"Let\u0027s try again ~(^.^)~\\n\"","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"            + \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor method for adding todos.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     * @param input Description of the todo task.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    public AddTodoCommand(String input) {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        assert input !\u003d null : \"No description was provided to the task\";","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"        description \u003d input;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * Executes the addition of todos into the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks   TaskList that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui      Ui that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException Thrown when there is no description provided to the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        boolean isEmptyDescription \u003d description.length() \u003d\u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"        if (isEmptyDescription) {","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"            Todo entry \u003d new Todo(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTask(entry);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d entry.getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"            return (\"I have added the following todo:\\n\" + message","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"                    + \"\\nYou now have \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":" * Abstract class that stores information about whether the command bye has been inputted, and executes chunks of code","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" * on the users\u0027 input.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private boolean isBye;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor method for the Command class.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    public Command() {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"        isBye \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     * Abstract method which is meant to execute a chunk of code based on the users\u0027 input.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks TaskList that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui Ui that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException When the Index of the task is non-existent or there is no description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        return isBye;","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"    public void setExit() {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        isBye \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":41}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" * Used to delete tasks from the task list when user inputs \"delete\".","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    private String deleteId;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private static final String OOB_RESPONSE \u003d \"Sorry, I could not find the item \\\\(T.T)/\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"            + \"Please type \u0027list\u0027 to view your current entries.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor for the DeleteCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     * @param id Index of the task that the user would like to delete.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    public DeleteCommand(String id) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        assert id !\u003d null : \"No task ID was provided to be deleted\";","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        deleteId \u003d id;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     * Executes the deletion of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks   Tasklist that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui      Ui that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException When the Index of the task is non-existent.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        int deleteTaskId \u003d Integer.parseInt(deleteId) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            Task currTask \u003d tasks.removeTask(deleteTaskId);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"            return (\"I have removed this from your tasks:\\n\" + currTask.getTask()","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"                    + \"\\nYou now have \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(OOB_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":46}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":" * Used to exit the Ducky chatbot when user calls \"bye\".","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    static final String BYE_RESPONSE \u003d \"This window will close in 3 seconds\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"            + \"Bye~ Hope to see you again soon! *‚úßÔΩ•Ôæü:*\"","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"            + \"(*‚ù¶œâ‚ù¶)*:ÔΩ•Ôæü‚úß*\";","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor method for the ExitCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks   TaskList that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui      Ui that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"            Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d currentTask.getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"            output \u003d output + (i + 1 + \". \" + message) + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        setExit();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        return (\"Your tasks have been saved in \" + storage.getFileName() + \"\\n\" + BYE_RESPONSE);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    private String findDetail;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    private static final String MISSING_ID_RESPONSE \u003d \"Oops! („Éª„Å∏„Éª) You have not keyed in a task ID to be found!\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"            + \"Let\u0027s try again (‡πë‚Ä¢ÃÄ„ÖÅ‚Ä¢ÃÅ‡πë)‚úß\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"            + \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor of the FindCommand class.","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     * @param findString string provided by the user that is to be found.","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    public FindCommand(String findString) {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        assert findString !\u003d null : \"No string was provided to be found\";","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        findDetail \u003d findString;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"        boolean isEmptyId \u003d findDetail.length() \u003d\u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"        if (isEmptyId) {","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(MISSING_ID_RESPONSE);","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"            String foundTasks \u003d tasks.findTasks(findDetail);","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"            if (foundTasks \u003d\u003d \"\") {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"                return (\"Oops! („Éª„Å∏„Éª) I could not find anything that matches \" + \"\u0027\" + findDetail + \"\u0027\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"                        + \"Please try to search for another word ‚àë(Ôæü‚àáÔæü|||)\");","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"                return (\"Here are the tasks that contains \" + \"\\\"\" + findDetail + \"\\\":\\n\" + foundTasks);","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":40}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":" * Prints the help message.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"     * Prints the help message for the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks TaskList that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui Ui that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        return ui.printHelp();","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":23}},{"path":"src/main/java/duke/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" * Used to show tasks from the task list when user inputs \"list\".","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private static String LIST_TASK_HEADER \u003d \"Here are your tasks:\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    private static String ADD_TASK_PROMPT \u003d \"Please add some tasks first *(^.^)*\";","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"     * Executes the listing of tasks within the Task List.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks Tasklist that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui Ui that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that was declared in the Duke class.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException When there is no task in the list.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        boolean isTaskListEmpty \u003d tasks.getSize() \u003d\u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"        if (isTaskListEmpty) {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(ADD_TASK_PROMPT);","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"            String output \u003d \"\";","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"                Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"                String message \u003d currentTask.getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"                output \u003d output + (\"\\n\" + (i + 1) + \". \" + message);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"            return LIST_TASK_HEADER + output;","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":39}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" * Marks the specified task in the Task List.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    private String markId;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private static final String OOB_RESPONSE \u003d \"Sorry, I could not find the item \\\\(T.T)/\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"            + \"Please type \u0027list\u0027 to view your current entries.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor for the MarkCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     * @param id Index of the task that is to be marked in the TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    public MarkCommand(String id) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        assert id !\u003d null : \"No task ID was provided to be marked\";","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        markId \u003d id;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     * Executes the marking of the task in the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks   TaskList that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui      Ui that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException thrown when the task cannot be found in the list.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        int markTaskId \u003d Integer.parseInt(markId) - 1;","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            Task currentTask \u003d tasks.getTask(markTaskId);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"            currentTask.setDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d currentTask.getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"            return (\"Ok, I have marked the following task:\\n\" + message);","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(OOB_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":47}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.command;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":" * Unmarks the specified task in the Task List.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    private String unmarkId;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    static final String OOB_RESPONSE \u003d \"Sorry, I could not find the item \\\\(T.T)/\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"                                        + \"Please type \u0027list\u0027 to view your current entries.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor for the UnmrkCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     * @param id Index of the task that is to be unmarked in the TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    public UnmarkCommand(String id) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        assert id !\u003d null : \"No task ID was provided to be marked\";","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        unmarkId \u003d id;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     * Executes the unmarking of the task in the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     * @param tasks   TaskList that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"     * @param ui      Ui that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"     * @param storage Storage that is maintained in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException thrown when the task cannot be found in the list.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"            Task currentTask \u003d tasks.getTask(Integer.parseInt(unmarkId) - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            currentTask.setNotDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d currentTask.getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"            return (\"Sure, I have unmarked the following task:\\n\" + message);","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(OOB_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":46}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DateHelper;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":" * This is a Task, specifically a Deadline task.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":" * It only accepts the details and time of the deadline.","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    protected DateHelper by;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    private String type;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor of the Deadline task.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"     * Creates a Deadline task when a deadline command is passed by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     * @param date Formatted date that the user inputted to be the due date of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    public Deadline(String description, DateHelper date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        super(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        by \u003d date;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        type \u003d \"D\";","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     * Formats the deadline details that is printed out in the CLI","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * @return Formatted deadline details [type][marked state] \u003cdescription\u003e (by: \u003cdd/MMM/yyyy\u003e)","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"        return \"[\" + type + \"]\" + super.getTask() + \" (by: \" + by.getDatetime() + \")\";","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"     * Formats parts of the deadline details that is saved to the text file","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"     * @return \u003ctype\u003e | \u003cdescription\u003e | \u003cdue date\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        return type + \" | \" + description + \" | \" + by.getDatetime();","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import duke.DateHelper;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":" * This is a Task, specifically an Event task.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":" * It only accepts the details and time of the event.","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    protected DateHelper at;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    private String type;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor of the Event task.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"     * Creates an Event task when an event command is passed by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     * @param date Formatted date that the user inputted to be the time of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    public Event(String description, DateHelper date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        super(description);","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        at \u003d date;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        type \u003d \"E\";","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     * Formats the deadline details that is printed out in the CLI","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * @return Formatted deadline details [type][marked state] \u003cdescription\u003e (at: \u003cdd/MMM/yyyy\u003e)","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"        return \"[\" + type + \"]\" + super.getTask() + \" (at: \" + at.getDatetime() + \")\";","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"     * Formats parts of the event details that is saved to the text file","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"     * @return \u003ctype\u003e | \u003cdescription\u003e | \u003cevent date\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        return type + \" | \" + description + \" | \" + at.getDatetime();","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":" * Parent class for all tasks. Stores information regarding the task description and whether it has been completed.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"public class Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    protected String description;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    public Task(String info) {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        description \u003d info;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the task description and status. Returns the formatted status and description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"     * @return specified Task description","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        String icon \u003d getStatusIcon();","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        String output \u003d \"[\" + icon + \"] \" + description;","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        return output;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the task description.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * @return specified Task description","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        return description;","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the task status. Returns the formatted task status icon.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"     * @return specified Task status icon i.e. [X] or  [ ]","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"     * Sets the task status. Changes task status to true.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"    public void setDone(){","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"     * Sets the task status. Changes task status to false.","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"    public void setNotDone(){","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":58}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":" * List that stores the tasks that the user has created through Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"public class TaskList {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"     * Constructor that creates an empty TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     * @param item Task that the user would like to add (e.g. Event, Deadline, Todo).","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    public void addTask(Task item) {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        assert item !\u003d null : \"Task provided is null. Please check the Command class for debugging\";","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"        tasks.add(item);","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"     * @param id Index of the task within the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"     * @return returns the Task that was removed.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"    public Task removeTask(int id) {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        return tasks.remove(id);","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the task from the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"     * @param id Index of the the task within the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"     * @return Returns the task that matches the index within the task list.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    public Task getTask(int id) {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"        return tasks.get(id);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"     * Finds the task that matches with the detail provided by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"     * @param detail Detail to be found within each task\u0027s description.","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"     * @return Returns a formatted output string of tasks that have their descriptions match with the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"    public String findTasks(String detail) {","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"            String description \u003d tasks.get(i).getDescription();","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d tasks.get(i).getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"            if (i \u003d\u003d tasks.size() - 1 \u0026\u0026 description.contains(detail)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"                count++;","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"                output +\u003d count + \". \" + message;","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"            } else if (description.contains(detail)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"                count++;","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"                output +\u003d \"\\n\" + count + \". \" + message;","lastModifiedDate":"2022-02-16"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"        return output;","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"     * Formats the tasks within the Task List. Formatted string is used as what is to be saved in the text file.","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"     * @return Formatted string consisting of the various tasks that the user has saved in Ducky.","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"    public String formatTasks() {","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d tasks.get(i).getDescription();","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"            String preStatus \u003d tasks.get(i).getStatusIcon();","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"            String status \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"            if (preStatus.equals(\"X\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"                status \u003d status + \"1\";","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"                status \u003d status + \"0\";","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"            if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"                output \u003d output + status + \" | \" + message;","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"                output \u003d output + status + \" | \" + message + \"\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"        return output;","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the number of tasks within the Task List.","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"     * @return Number of tasks in the Task List.","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"    public Integer getSize() {","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"punnyhuimin":105}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"package duke.task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":" * This is a Task, specifically a Todo task.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":" * It only accepts the details of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    private String type;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"     * Creates a Todo task that has a description.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"     * @param description Description of the task inputted by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"        type \u003d \"T\";","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"     * Constructs a string that is formatted for the user to view their","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * task description, task type, and task status.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     * @return returns a formatted string that should be used when printing out the created Todo task.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"        return \"[\" + type +\"]\" + super.getTask();","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"     * Constructs a string that is formatted to be printed into the txt file.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"     * Consists of the task description and task type.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"     * @return returns a partially formatted string that should be used when saving a todo task to the text file","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"     * \u003ctype\u003e | \u003cdescription\u003e","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        return type + \" | \" + description;","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"punnyhuimin":42}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"         minHeight\u003d\"-Infinity\" minWidth\u003d\"28\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" alignment\u003d\"CENTER\"","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"               styleClass\u003d\"ducky-bubble\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"            \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"65.0\" fitWidth\u003d\"61.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"            \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"punnyhuimin":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"480.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"        \u003cImageView fitHeight\u003d\"600.0\" fitWidth\u003d\"480.0\" pickOnBounds\u003d\"true\" \u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"                \u003cImage url\u003d\"@../images/background.jpg\"/\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"480.0\"","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"470.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"      \u003cHBox layoutY\u003d\"557.0\" prefHeight\u003d\"43.0\" prefWidth\u003d\"480.0\"\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"              \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"410.0\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"              \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\"","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"                      prefWidth\u003d\"72.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"punnyhuimin":33}},{"path":"src/test/java/CheckerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"import duke.Checker;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"public class CheckerTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    public void checkerTest() throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"            Checker checker \u003d new Checker(\"delete\");","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"            assertEquals(Checker.Status.DELETE, checker.getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"            Checker checker \u003d new Checker(\"event\");","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"            assertEquals(Checker.Status.EVENT, checker.getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"            Checker checker \u003d new Checker(\"bye\");","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"            assertEquals(Checker.Status.BYE, checker.getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"            Checker checker \u003d new Checker(\"help\");","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            assertEquals(Checker.Status.HELP, checker.getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            Checker checker \u003d new Checker(\"deadline\");","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"            assertEquals(Checker.Status.DEADLINE, checker.getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"            Checker checker \u003d new Checker(\"list\");","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"            assertEquals(Checker.Status.LIST, checker.getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"            Checker checker \u003d new Checker(\"unmark\");","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"            assertEquals(Checker.Status.UNMARK, checker.getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"            Checker checker \u003d new Checker(\"mark\");","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"            assertEquals(Checker.Status.MARK, checker.getStatus());","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":65}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"import org.junit.jupiter.api.TestTemplate;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"public class UiTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    private final PrintStream STANDARD_OUT \u003d System.out;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    private final ByteArrayOutputStream OUTPUT_STREAM_CAPTOR \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    public void setUp() {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        System.setOut(new PrintStream(OUTPUT_STREAM_CAPTOR));","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    @AfterEach","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    public void tearDown() {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"        System.setOut(STANDARD_OUT);","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    public void welcomeTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        String logo \u003d \" ____              _\"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n|  _ \\\\ _   _ _____| | ____ __\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"                + \"| | | | | | |  ___| |/ /\\\\ v /\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"                + \"| |_| | |_| | |___|   \u003c  | |\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"                + \"|____/ \\\\___/\\\\_____|_|\\\\_\\\\ |_|\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        String ans \u003d logo + \"Hello! I\u0027m Ducky! :)\\n\" + \"I am a task manager.\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"                + \"Type \u0027help\u0027 for more information on the commands you can give me.\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"                + \"What can I do for you today?\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"                + \"‚úßÔΩ•Ôæü: *‚úßÔΩ•Ôæü:* |\\\\__( o)\u003e *:ÔΩ•Ôæü‚úß*:ÔΩ•Ôæü‚úß\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        testUi.welcome();","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(ans, OUTPUT_STREAM_CAPTOR.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"    public void showLineTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"        testUi.showLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(\"‚úßÔΩ•Ôæü: *‚úßÔΩ•Ôæü:* |\\\\__( o)\u003e *:ÔΩ•Ôæü‚úß*:ÔΩ•Ôæü‚úß\\n\", OUTPUT_STREAM_CAPTOR.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"    public void showErrorTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"        String DESC_RESPONSE \u003d \"Oops! \\\\(@.@)/ You have not keyed in a description for the task!\\n\" +","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"                \"Let\u0027s try again ~(^.^)~\\n\" +","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"                \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"        testUi.showError(DESC_RESPONSE);","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(DESC_RESPONSE + \"\\n\", OUTPUT_STREAM_CAPTOR.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"    public void printHelpTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"        testUi.printHelp();","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"        String helpResponse \u003d \"\u003e Type \u0027list\u0027 to see what you have in your task list\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"                + \"\u003e Type \u0027todo \u003cmessage\u003e\u0027 to put a todo in your list\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"                + \"\u003e Type \u0027deadline \u003cmessage\u003e /by \u003cdeadline\u003e\u0027 to put a deadline in your list.\"","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\\t - Deadline must be in \u0027DD MMMM YYYY\u0027 format\"","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027event \u003cmessage\u003e /at \u003cdate\u003e\u0027 to put an event in your list\"","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\\t - Date must be in \u0027DD MMMM YYYY\u0027 format\"","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027mark \u003cx\u003e\u0027 to mark a task in your list\"","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n\u003e Type \u0027unmark \u003cx\u003e\u0027 to unmark a task in your list\\n\";","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"        ;","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"        ","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"        assertEquals(helpResponse, OUTPUT_STREAM_CAPTOR.toString());","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"punnyhuimin":78}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"help","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"todo Java week 2","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"delete 1","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"event Ball /at 26th January 2021","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"deadline quiz 2 /by 19th January 2021","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"deadline /by 615","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"deadline /by 01/07/2022","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"deadline drawing /by 01/07/2022","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"event ball /at 10/02/2022","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"delete 100","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"mark 100","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"unmark 20","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"deadline drawing 01/07/2022","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"event ball 10/02/2022","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"event soccer /at 50/02/2022","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"event soccer /at 20/02/2022 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"punnyhuimin":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"punnyhuimin":1}}]
