[{"path":"src/main/java/DateHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Calendar;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"public class DateHelper {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    Date formattedDatetime;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    static final String INVALID_DATE \u003d \"Oops, please put a valid time format!\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"            \"Let\u0027s try again ~(^.^)~\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"            \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    public DateHelper(String time) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"            String pattern \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"            DateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"            simpleDateFormat.setLenient(false);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"            Date date \u003d simpleDateFormat.parse(time);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"            this.formattedDatetime \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"           try {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"                String pattern \u003d \"dd MMMM yyyy\";","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"                DateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"                simpleDateFormat.setLenient(false);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"                Date date \u003d simpleDateFormat.parse(time);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"                this.formattedDatetime \u003d date;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ParseException err) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"               throw new DukeException(INVALID_DATE);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"           }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"    public String getDatetime() {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMMM yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        String strDate \u003d dateFormat.format(this.formattedDatetime);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        return strDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"punnyhuimin":39}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"    protected DateHelper by;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"    private String type;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"    public Deadline(String description, DateHelper by) {","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"        return \"[\" + this.type +\"]\" + super.getTask() + \"(by: \" + by.getDatetime() + \")\";","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"        return this.type + \" | \" + this.description + \" | \" + by.getDatetime();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"punnyhuimin":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":" * @author Pun Hui Min","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    //    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    protected Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    private String filename;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    static final String NO_DESC \u003d \"Oops! \\\\(@.@)/ You have not keyed in a description for the task!\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"            \"Let\u0027s try again ~(^.^)~\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"            \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    static final String BYE_RESPONSE \u003d \"Bye~ Hope to see you again soon!\\n៚ ⋯⋯⋯ |\\\\__( o)\u003e ⋯⋯⋯⋯ ༄\";","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    static final String INVALID_DATE \u003d \"Oops, please put a valid time format!\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"            \"Let\u0027s try again ~(^.^)~\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"            \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    public void welcome() {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        String logo \u003d \" ____              _\"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"                + \"\\n|  _ \\\\ _   _ _____| | ____ __\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"                + \"| | | | | | |  ___| |/ /\\\\ v /\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"                + \"| |_| | |_| | |___|   \u003c  | |\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"                + \"|____/ \\\\___/\\\\_____|_|\\\\_\\\\ |_|\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        System.out.println(logo + \"Hello! I\u0027m Ducky! :)\\n\" + \"I am a task manager.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"                \"Type \u0027help\u0027 for more information on the commands you can give me.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"                \"What can I do for you today?\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"                \"✧･ﾟ: *✧･ﾟ:* |\\\\__( o)\u003e *:･ﾟ✧*:･ﾟ✧\");","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"     * Processes the string inputted by the user. Filters the command and calls on other functions to print a string.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException when the specified ID number is not in the list, if the time is not provided accurately,","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"     *                       or if there was no description or command provided.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    public void run(Scanner myObj) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"        String response \u003d myObj.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"        String[] textEntered \u003d response.split(\" \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"        String command \u003d textEntered[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        Parser state \u003d new Parser(command);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        switch (state.getStatus()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"        case BYE:","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"Your tasks have been saved in \" + this.filename +","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"                    \"✧･ﾟ: *✧･ﾟ:* |\\\\__( o)\u003e *:･ﾟ✧*:･ﾟ✧\");","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"            this.ui.printBye(this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"            System.exit(1);","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        case HELP:","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"            this.ui.help();","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"        case LIST:","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"            this.ui.printTasks(this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"        case DELETE:","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"                String id \u003d textEntered[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"                this.ui.deleteTask(id, this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"                System.out.println(\"Oops! \\\\(@.@)/ You have not keyed in an ID!\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"                        \"Let\u0027s try again ~(^.^)~\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"                        \"Type \u0027help\u0027 if you need to know how to use this command\");","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"        case TODO:","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"                String description \u003d textEntered[1].trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"                this.tasks \u003d this.ui.addTodo(description, this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(NO_DESC);","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"                String text \u003d textEntered[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"                if (!text.contains(\"/by\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"                    throw new DukeException(\"Please use \\\"/by\\\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"                String[] textArr \u003d text.split(\"/by \");","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"                String description \u003d textArr[0].trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"                if (textArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"                    throw new DukeException(\"Oops, please specify a date!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"                String time \u003d textArr[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"                this.ui.addDeadline(description, time, this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"                throw new DukeException(NO_DESC);","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"        case EVENT:","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"                String text \u003d textEntered[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"                if (!text.contains(\"/at\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"                    throw new DukeException(\"Please use \\\"/at\\\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"                String[] textArr \u003d text.split(\"/at \");","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"                String description \u003d textArr[0].trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"                if (textArr.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"                    throw new DukeException(\"Oops, please specify a date!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"                String time \u003d textArr[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"                this.tasks \u003d this.ui.addEvent(description, time, this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"                System.out.println(NO_DESC);","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"        case UNMARK:","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"            String strID \u003d textEntered[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"            this.ui.unmarkItem(strID, this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"        case MARK:","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"            String id \u003d textEntered[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"            this.ui.markItem(id, this.tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"        // call system to save the list to text file","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"        this.storage.saveFile(this.tasks.formatTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"punnyhuimin"},"content":"        System.out.println(\"✧･ﾟ: *✧･ﾟ:* |\\\\__( o)\u003e *:･ﾟ✧*:･ﾟ✧\");","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"punnyhuimin"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"        this.filename \u003d filepath;","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"     * Takes in the user input and creates a scanner.","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"punnyhuimin"},"content":"     * @param args Takes in the user input from the CLI","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"punnyhuimin"},"content":"        Duke ducky \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"punnyhuimin"},"content":"        ducky.welcome();","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"punnyhuimin"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"punnyhuimin"},"content":"            ducky.tasks \u003d ducky.storage.readFile(ducky.filename);","lastModifiedDate":"2022-01-28"},{"lineNumber":147,"author":{"gitId":"punnyhuimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":148,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(e.toString() + \"\\n✧･ﾟ: *✧･ﾟ:* |\\\\__( o)\u003e *:･ﾟ✧*:･ﾟ✧\");","lastModifiedDate":"2022-01-28"},{"lineNumber":149,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":150,"author":{"gitId":"punnyhuimin"},"content":"        while (true) {","lastModifiedDate":"2022-01-20"},{"lineNumber":151,"author":{"gitId":"punnyhuimin"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":152,"author":{"gitId":"punnyhuimin"},"content":"                ducky.run(myObj);","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"punnyhuimin"},"content":"                System.out.println(e.toString() + \"\\n✧･ﾟ: *✧･ﾟ:* |\\\\__( o)\u003e *:･ﾟ✧*:･ﾟ✧\");","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-19"},{"lineNumber":159,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"-":4,"punnyhuimin":155}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"    String message;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"        this.message \u003d errorMessage;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    public String toString(){","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        return this.message;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"punnyhuimin":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"    protected DateHelper at;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"    private String type;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    public Event(String description, DateHelper at) {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        return \"[\" + this.type + \"]\" + super.getTask() + \"(at: \" + at.getDatetime() + \")\";","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        return this.type + \" | \" + this.description + \" | \" + at.getDatetime();","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"punnyhuimin":23}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"    private String command;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"    private Status state;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    enum Status {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"        BYE,","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"        HELP,","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"        LIST,","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        EVENT,","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"        DEADLINE,","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"        TODO,","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"        DELETE,","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        MARK,","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        UNMARK","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    };","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    public Parser(String input) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"        this.command \u003d input;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        if (this.command.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.BYE;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"help\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.HELP;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.LIST;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.DELETE;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.TODO;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.DEADLINE;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.EVENT;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.UNMARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        } else if (this.command.equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            this.state \u003d Status.MARK;","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(\"Sorry, I did not catch that! \\\\(T.T)/\\n\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"                    \"Please type \u0027help\u0027 to see all commands I can help with.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"    public Status getStatus(){","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"        return this.state;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"punnyhuimin":49}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"import java.io.FileWriter; // Import the File class","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"import java.io.IOException;  // Import the IOException class to handle errors","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"import java.io.File;  // Import the File class","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"import java.io.FileNotFoundException;  // Import this class to handle errors","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"import java.util.Scanner; // Import the Scanner class to read text files","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    //    String contents;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    String filename;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"    TaskList tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"    public Storage(String filename) {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    public void saveFile(String args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"            FileWriter myWriter \u003d new FileWriter(this.filename, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"            myWriter.write(args);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"            myWriter.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"    public TaskList readFile(String filepath) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"            File myObj \u003d new File(System.getProperty(\"user.dir\")+ \"/\" + filepath);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"                // Process the data such that it can see if this is event or deadline or todo,","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"                // then create accordingly","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"                processString(data);","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"            myReader.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"            return this.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"            return this.tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"    private void processString(String line) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"        String state \u003d parts[0].trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"        String type \u003d parts[1].trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"        // 1. Check Task type","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"        if (type.equals(\"D\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"            String time \u003d parts[3];","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"            DateHelper datetime \u003d new DateHelper(time);","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"            Deadline out \u003d new Deadline(description + \" \", datetime);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"            this.tasks.addTasks(out);","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"            String time \u003d parts[3];","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"            DateHelper datetime \u003d new DateHelper(time);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"            Event out \u003d new Event(description + \" \", datetime);","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"            this.tasks.addTasks(out);","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"        } else if (type.equals(\"T\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"            Todo out \u003d new Todo(description + \" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"            this.tasks.addTasks(out);","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"        // 2. Check if marked","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"        if (state.equals(\"1\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"            this.tasks.getTask(this.tasks.getSize()-1).setDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"punnyhuimin":71}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"    protected String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the task description and status. Returns the formatted status and description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"     * @return specified Task description","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        String icon \u003d this.getStatusIcon();","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"        String output \u003d \"[\" + icon + \"] \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"        return output;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the task description.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"     * @return specified Task description","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"        return this.description;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"     * Gets the task status. Returns the formatted task status icon.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"     * @return specified Task status icon i.e. [X] or  [ ]","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"     * Sets the task status. Changes task status to true.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"    public void setDone(){","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"     * Sets the task status. Changes task status to false.","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"    public void setNotDone(){","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"punnyhuimin":53}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"public class TaskList {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    public void addTasks(Task item){","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        this.tasks.add(item);","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    public Task removeTask(int j) {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"        return this.tasks.remove(j);","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"    public Task getTask(int i){","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"    public String formatTasks() {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"//            Task currentTask \u003d this.tasks.get(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d this.tasks.get(i).getDescription();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"            String preStatus \u003d this.tasks.get(i).getStatusIcon();","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"            String status \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"            if (preStatus.equals(\"X\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"                status \u003d status + \"1\";","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"                status \u003d status + \"0\";","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"            if (i \u003d\u003d this.tasks.size()-1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"                output \u003d output + status + \" | \" + message;","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"                output \u003d output + status + \" | \" + message + \"\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"        return output;","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"    public Integer getSize(){","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"punnyhuimin":46}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"    private String type;","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"        return \"[\" + this.type +\"]\" + super.getTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        return this.type + \" | \" + this.description;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"punnyhuimin":18}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"public class Ui {","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"    static final String DESC_RESPONSE \u003d \"Oops! \\\\(@.@)/ You have not keyed in a description for the task!\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"            \"Let\u0027s try again ~(^.^)~\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"            \"Type \u0027help\u0027 if you need to know how to use this command\";","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"    static final String BYE_RESPONSE \u003d \"Bye~ Hope to see you again soon!\\n✧･ﾟ: *✧･ﾟ:*(*❦ω❦)*:･ﾟ✧*:･ﾟ✧\";","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"    static final String OOB_RESPONSE \u003d \"Sorry, I could not find the item \\\\(T.T)/\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"            \"Please type \u0027list\u0027 to view your current entries.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"    public Ui() {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"     * Prints the \u0027bye\u0027 response by Ducky. Usually called when the user says \"bye\"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"    public void printBye(TaskList tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"            Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d currentTask.getTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"            output \u003d output + (i + 1 + \". \" + message) + \"\\n\" ;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"        System.out.println(BYE_RESPONSE);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"punnyhuimin"},"content":"     * Prints the \u0027help\u0027 response by Ducky. Usually called when the user says \"help\"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"punnyhuimin"},"content":"    public void help() {","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"punnyhuimin"},"content":"        String helpResponse \u003d \"\u003e Type \u0027list\u0027 to see what you have in your task list\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"punnyhuimin"},"content":"                \"\u003e Type \u0027todo \u003cmessage\u003e\u0027 to put a todo in your list\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"punnyhuimin"},"content":"                \"\u003e Type \u0027deadline \u003cmessage\u003e /by \u003cdeadline\u003e\u0027 to put a deadline in your list.\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"punnyhuimin"},"content":"                \"\\n\\t - Deadline must be in \u0027DD/MM/YYYY\u0027 format\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"punnyhuimin"},"content":"                \"\\n\u003e Type \u0027event \u003cmessage\u003e /at \u003cdate\u003e\u0027 to put an event in your list\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"punnyhuimin"},"content":"                \"\\n\\t - Date must be in \u0027DD/MM/YYYY\u0027 format\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"punnyhuimin"},"content":"                \"\\n\u003e Type \u0027mark \u003cx\u003e\u0027 to mark a task in your list\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"punnyhuimin"},"content":"                \"\\n\u003e Type \u0027unmark \u003cx\u003e\u0027 to unmark a task in your list\";","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"punnyhuimin"},"content":"        ;","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"punnyhuimin"},"content":"        System.out.println(helpResponse);","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"punnyhuimin"},"content":"    public void printTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"punnyhuimin"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(\"Please add some tasks first *(^.^)*\");","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"punnyhuimin"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"punnyhuimin"},"content":"                Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"punnyhuimin"},"content":"                String message \u003d currentTask.getTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"punnyhuimin"},"content":"                System.out.println(i + 1 + \". \" + message);","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"punnyhuimin"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"punnyhuimin"},"content":"     * Deletes the task specified by the user","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"punnyhuimin"},"content":"     * @param i ID of the task the user would like to delete.","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException if there is an IndexOutOfBoundsException.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"punnyhuimin"},"content":"    public void deleteTask(String i, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"punnyhuimin"},"content":"//            Task currTask \u003d tasks.getTask(Integer.parseInt(i) - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"punnyhuimin"},"content":"            Task currTask \u003d tasks.removeTask(Integer.parseInt(i) - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"I have removed this from your tasks:\\n\" + currTask.getTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"You now have \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(OOB_RESPONSE);","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"punnyhuimin"},"content":"     * Adds a Todo object to the list when specified by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"punnyhuimin"},"content":"     * @param description which is the task description from user.","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException when there is no description provided by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"punnyhuimin"},"content":"    public TaskList addTodo(String description, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"punnyhuimin"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"punnyhuimin"},"content":"            Todo entry \u003d new Todo(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTasks(entry);","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d entry.getTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"I have added the following todo:\\n\" + message);","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"You now have \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"punnyhuimin"},"content":"        return tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"punnyhuimin"},"content":"     * Adds a Deadline object to the list when specified by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"punnyhuimin"},"content":"     * @param description which is the task description from user.","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"punnyhuimin"},"content":"     * @param time        which is the deadline provided by user.","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException when there is no description provided or when there is no time specified by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"punnyhuimin"},"content":"    public void addDeadline(String description, String time, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"punnyhuimin"},"content":"        DateHelper datetime \u003d new DateHelper(time);","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"punnyhuimin"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"punnyhuimin"},"content":"        if (time.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(\"Oops! You have not keyed in a due date for the task! ┗(｀Дﾟ┗(｀ﾟДﾟ´)┛ﾟД´)┛\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"punnyhuimin"},"content":"                    \"Let\u0027s try again  (☆｀• ω •´)ｂ\\n\" +","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"punnyhuimin"},"content":"                    \"Type \u0027help\u0027 if you need to know how to use this command\");","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"punnyhuimin"},"content":"            Deadline entry \u003d new Deadline(description, datetime);","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTasks(entry);","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d entry.getTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"I have added the following deadline:\\n\" + message);","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"You now have \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"punnyhuimin"},"content":"//        return tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"punnyhuimin"},"content":"     * Adds an Event object to the list when specified by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"punnyhuimin"},"content":"     * @param description which is the task description from user.","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"punnyhuimin"},"content":"     * @param time        which is the event time provided by user.","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException when there is no description provided or when there is no time specified by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"punnyhuimin"},"content":"    public TaskList addEvent(String description, String time, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"punnyhuimin"},"content":"        DateHelper datetime \u003d new DateHelper(time);","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"punnyhuimin"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(DESC_RESPONSE);","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"punnyhuimin"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"punnyhuimin"},"content":"            Event entry \u003d new Event(description, datetime);","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"punnyhuimin"},"content":"            tasks.addTasks(entry);","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d entry.getTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"I have added the following event:\\n\" + message);","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"You now have \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"punnyhuimin"},"content":"        return tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":136,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"punnyhuimin"},"content":"     * Unmarks the item specified by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"punnyhuimin"},"content":"     * @param strID which is the ID number of the task in the list","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException when the specified ID number is not in the list","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"punnyhuimin"},"content":"    public void unmarkItem(String strID, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":145,"author":{"gitId":"punnyhuimin"},"content":"            Task currentTask \u003d tasks.getTask(Integer.parseInt(strID) - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"punnyhuimin"},"content":"            currentTask.setNotDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":147,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d currentTask.getTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":148,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"Sure, I have unmarked the following task:\\n\" + message);","lastModifiedDate":"2022-01-28"},{"lineNumber":149,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":150,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(OOB_RESPONSE);","lastModifiedDate":"2022-01-28"},{"lineNumber":151,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":152,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":154,"author":{"gitId":"punnyhuimin"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"punnyhuimin"},"content":"     * Marks the item specified by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"punnyhuimin"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":157,"author":{"gitId":"punnyhuimin"},"content":"     * @param strID which is the ID number of the task in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":158,"author":{"gitId":"punnyhuimin"},"content":"     * @throws DukeException when the specified ID number is not in the list.","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"punnyhuimin"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":160,"author":{"gitId":"punnyhuimin"},"content":"    public void markItem(String strID, TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":161,"author":{"gitId":"punnyhuimin"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":162,"author":{"gitId":"punnyhuimin"},"content":"            Task currentTask \u003d tasks.getTask(Integer.parseInt(strID) - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":163,"author":{"gitId":"punnyhuimin"},"content":"            currentTask.setDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":164,"author":{"gitId":"punnyhuimin"},"content":"            String message \u003d currentTask.getTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":165,"author":{"gitId":"punnyhuimin"},"content":"            System.out.println(\"Ok, I have marked the following task:\\n\" + message);","lastModifiedDate":"2022-01-28"},{"lineNumber":166,"author":{"gitId":"punnyhuimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":167,"author":{"gitId":"punnyhuimin"},"content":"            throw new DukeException(OOB_RESPONSE);","lastModifiedDate":"2022-01-28"},{"lineNumber":168,"author":{"gitId":"punnyhuimin"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":169,"author":{"gitId":"punnyhuimin"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":170,"author":{"gitId":"punnyhuimin"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":171,"author":{"gitId":"punnyhuimin"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"punnyhuimin":171}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"punnyhuimin"},"content":"help","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"punnyhuimin"},"content":"todo Java week 2","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"punnyhuimin"},"content":"delete 1","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"punnyhuimin"},"content":"event Ball /at 26th January 2021","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"punnyhuimin"},"content":"deadline quiz 2 /by 19th January 2021","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"punnyhuimin"},"content":"deadline /by 615","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"punnyhuimin"},"content":"deadline /by 01/07/2022","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"punnyhuimin"},"content":"deadline drawing /by 01/07/2022","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"punnyhuimin"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"punnyhuimin"},"content":"event ball /at 10/02/2022","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"punnyhuimin"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"punnyhuimin"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"punnyhuimin"},"content":"delete 100","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"punnyhuimin"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"punnyhuimin"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"punnyhuimin"},"content":"mark 100","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"punnyhuimin"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"punnyhuimin"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"punnyhuimin"},"content":"unmark 20","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"punnyhuimin"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"punnyhuimin"},"content":"deadline drawing 01/07/2022","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"punnyhuimin"},"content":"event ball 10/02/2022","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"punnyhuimin"},"content":"event soccer /at 50/02/2022","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"punnyhuimin"},"content":"event soccer /at 20/02/2022 1800","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"punnyhuimin"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"punnyhuimin":25}}]
