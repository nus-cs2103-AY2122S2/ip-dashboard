[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"instructions on how to use it.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"   first)","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"   like the below as the output:","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"takufunkai":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"takufunkai":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"### Duke Chat-Bot (Task tracker)","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"The Duke Chat-Bot is an interactive task tracker. It supports","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"create, read, update and delete functionalities. Your tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"are automatically saved by Duke and loaded up in future uses","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"of the Chat-Bot.","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"The tasks you are able to add can be basic with just a task","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"name, or tagged with some deadline or occurrence date.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"Tasks are also mark-able to indicate if they have been completed","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"or not.","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"You can list all your tasks, as well as filter them based on ","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"their names or tagged date.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"### Duke Clients (Client Management System)","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"The Duke Clients handler is a fully-GUI component. In this GUI,","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"we can add new clients and view them in a simple list. This has","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"only the basic feature of creating and listing all clients.","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"## Usage: Duke Chat-Bot","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"### `todo` - Add ToDo Task","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":" ","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"Adds a ToDo task item to the task list. A ToDo task item is","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"the most basic task type, containing only a task name, and","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"its completed status.","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"Format: `todo TASKNAME`","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"- `todo buy vegetables`","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"- `todo jog`","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"- `todo feed the pets in my room`","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"  If successful, the to do item itself will be sent by Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"  Otherwise, the error will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"#1: [T][ ] jog","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"### `event` - Add Event Task","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"Adds an Event task item to the task list. An Event task item","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"is the same as a ToDo task item, but has some date associated","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"with it. The date indicates the occurrence of the Event item.","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"Format: `event TASKNAME /at DD-MM-YYYY (hh:mm)`","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"\u003e 💡 **Tip**: The timestamp is will be set to `00:00`  by ","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"\u003e default if no timestamp was supplied.","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"- `event powerlifting meet /at 22-02-2022 14:00`","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"If successful, the event item itself will be sent by Duke. ","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"Otherwise, the error will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"#1: [E][ ] powerlifting meet (at: Feb 22 2022, 02:00 PM)","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"### `deadline` - Add Deadline Task","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"Adds a Deadline task item to the task list. A deadline task item","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"is the same as a ToDo task item, but has some date associated","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"with it. The date indicates the deadline for the Deadline item.","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"Format: `deadline TASKNAME /by DD-MM-YYYY (hh:mm)`","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"takufunkai"},"content":"\u003e 💡 **Tip**: The timestamp is will be set to `00:00`  by","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"takufunkai"},"content":"\u003e default if no timestamp was supplied.","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"takufunkai"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"takufunkai"},"content":"- `deadline complete individual project /by 18-02-2022 23:59`","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"takufunkai"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"takufunkai"},"content":"If successful, the deadline item itself will be sent by Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"takufunkai"},"content":"Otherwise, the error will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"takufunkai"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"takufunkai"},"content":"#1: [D][ ] complete individual project (by: Feb 18 2022, 11:59 PM)","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"takufunkai"},"content":"### `list` - Show all Tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"takufunkai"},"content":"Lists out all the tasks the user has added in a simple, readable and ","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"takufunkai"},"content":"user-friendly format. If you include the optional date, only tasks with","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"takufunkai"},"content":"a date, and whose date matches the supplied input will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"takufunkai"},"content":"Format: `list (date DD-MM-YYYY)`","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"takufunkai"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"takufunkai"},"content":"- `list`","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"takufunkai"},"content":"- `list date 18-02-2022`","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"takufunkai"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"takufunkai"},"content":"If successful, the all items will be formatted and sent by Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"takufunkai"},"content":"Otherwise, the error will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"takufunkai"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"takufunkai"},"content":"\u003e list","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"takufunkai"},"content":"#1: [D][ ] complete individual project (by: Feb 18 2022, 11:59 PM)","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"takufunkai"},"content":"#2: [E][ ] powerlifting meet (at: Feb 22 2022, 02:00 PM)","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"takufunkai"},"content":"\u003e list date 18-02-2022","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"takufunkai"},"content":"#1: [D][ ] complete individual project (by: Feb 18 2022, 11:59 PM)","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"takufunkai"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"takufunkai"},"content":"### `find` - Show Tasks filtered by search query","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"takufunkai"},"content":"Filters all the tasks the user has created by their task name against","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"takufunkai"},"content":"the given search query by the user, then lists them in a similar format","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"takufunkai"},"content":"to the `list` command. Partial matches will be shown as well.","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"takufunkai"},"content":"Format: `find TASKNAME`","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"takufunkai"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"takufunkai"},"content":"- `find buy`","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"takufunkai"},"content":"If successful, the all items will be formatted and sent by Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"takufunkai"},"content":"Otherwise, the error will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"takufunkai"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"takufunkai"},"content":"#1: [T][ ] buy groceries","lastModifiedDate":"2022-02-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"takufunkai"},"content":"### `mark` - Consider task done","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"takufunkai"},"content":"Allows the user to set a task as done, for their own reference.","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"takufunkai"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"takufunkai"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"takufunkai"},"content":"- `mark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"takufunkai"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"takufunkai"},"content":"If successful, the marked item will be formatted and sent by Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"takufunkai"},"content":"Otherwise, the error will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":155,"author":{"gitId":"takufunkai"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":156,"author":{"gitId":"takufunkai"},"content":"\u003e list","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"takufunkai"},"content":"#1: [T][ ] buy groceries","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"takufunkai"},"content":"#2: [T][ ] water plants","lastModifiedDate":"2022-02-18"},{"lineNumber":159,"author":{"gitId":"takufunkai"},"content":"\u003e mark 1","lastModifiedDate":"2022-02-18"},{"lineNumber":160,"author":{"gitId":"takufunkai"},"content":"#1: [T][X] buy groceries","lastModifiedDate":"2022-02-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":162,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":163,"author":{"gitId":"takufunkai"},"content":"### `unmark` - Consider task undone","lastModifiedDate":"2022-02-18"},{"lineNumber":164,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":165,"author":{"gitId":"takufunkai"},"content":"Allows the user to set a task as undone, for their own reference.","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":167,"author":{"gitId":"takufunkai"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-02-18"},{"lineNumber":168,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":169,"author":{"gitId":"takufunkai"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":170,"author":{"gitId":"takufunkai"},"content":"- `unmark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":171,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":172,"author":{"gitId":"takufunkai"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":173,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":174,"author":{"gitId":"takufunkai"},"content":"If successful, the unmarked item will be formatted and sent by Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":175,"author":{"gitId":"takufunkai"},"content":"Otherwise, the error will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":176,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":177,"author":{"gitId":"takufunkai"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":178,"author":{"gitId":"takufunkai"},"content":"\u003e list","lastModifiedDate":"2022-02-18"},{"lineNumber":179,"author":{"gitId":"takufunkai"},"content":"#1: [T][X] buy groceries","lastModifiedDate":"2022-02-18"},{"lineNumber":180,"author":{"gitId":"takufunkai"},"content":"#2: [T][ ] water plants","lastModifiedDate":"2022-02-18"},{"lineNumber":181,"author":{"gitId":"takufunkai"},"content":"\u003e unmark 1","lastModifiedDate":"2022-02-18"},{"lineNumber":182,"author":{"gitId":"takufunkai"},"content":"#1: [T][ ] buy groceries","lastModifiedDate":"2022-02-18"},{"lineNumber":183,"author":{"gitId":"takufunkai"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":184,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":185,"author":{"gitId":"takufunkai"},"content":"### `delete` - Delete the Task.","lastModifiedDate":"2022-02-18"},{"lineNumber":186,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":187,"author":{"gitId":"takufunkai"},"content":"Removes the task from the user\u0027s list of tasks completely.","lastModifiedDate":"2022-02-18"},{"lineNumber":188,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":189,"author":{"gitId":"takufunkai"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-02-18"},{"lineNumber":190,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":191,"author":{"gitId":"takufunkai"},"content":"Examples:","lastModifiedDate":"2022-02-18"},{"lineNumber":192,"author":{"gitId":"takufunkai"},"content":"- `delete 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":193,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":194,"author":{"gitId":"takufunkai"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":195,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":196,"author":{"gitId":"takufunkai"},"content":"If successful, the unmarked item will be formatted and sent by Duke.","lastModifiedDate":"2022-02-18"},{"lineNumber":197,"author":{"gitId":"takufunkai"},"content":"Otherwise, the error will be shown.","lastModifiedDate":"2022-02-18"},{"lineNumber":198,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":199,"author":{"gitId":"takufunkai"},"content":"```aidl","lastModifiedDate":"2022-02-18"},{"lineNumber":200,"author":{"gitId":"takufunkai"},"content":"\u003e list","lastModifiedDate":"2022-02-18"},{"lineNumber":201,"author":{"gitId":"takufunkai"},"content":"#1: [T][X] buy groceries","lastModifiedDate":"2022-02-18"},{"lineNumber":202,"author":{"gitId":"takufunkai"},"content":"#2: [T][ ] water plants","lastModifiedDate":"2022-02-18"},{"lineNumber":203,"author":{"gitId":"takufunkai"},"content":"\u003e delete 1","lastModifiedDate":"2022-02-18"},{"lineNumber":204,"author":{"gitId":"takufunkai"},"content":"Task has been deleted: [T][X] buy groceries","lastModifiedDate":"2022-02-18"},{"lineNumber":205,"author":{"gitId":"takufunkai"},"content":"\u003e list","lastModifiedDate":"2022-02-18"},{"lineNumber":206,"author":{"gitId":"takufunkai"},"content":"#1: [T][ ] water plants","lastModifiedDate":"2022-02-18"},{"lineNumber":207,"author":{"gitId":"takufunkai"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":208,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":209,"author":{"gitId":"takufunkai"},"content":"## Usage: Duke Clients","lastModifiedDate":"2022-02-18"},{"lineNumber":210,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":211,"author":{"gitId":"takufunkai"},"content":"### `Add` - Add a new client","lastModifiedDate":"2022-02-18"},{"lineNumber":212,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":213,"author":{"gitId":"takufunkai"},"content":"Clicking on the `Add` button will cause a pop-up to appear. This pop-up will","lastModifiedDate":"2022-02-18"},{"lineNumber":214,"author":{"gitId":"takufunkai"},"content":"allow users to add a first name, last name, contact and gender of the client.","lastModifiedDate":"2022-02-18"},{"lineNumber":215,"author":{"gitId":"takufunkai"},"content":"However, only the first name is a mandatory field. ","lastModifiedDate":"2022-02-18"},{"lineNumber":216,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":217,"author":{"gitId":"takufunkai"},"content":"Once the user has added the client successfully, they will be shown in a simple","lastModifiedDate":"2022-02-18"},{"lineNumber":218,"author":{"gitId":"takufunkai"},"content":"list of client values in the middle of the page.","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"takufunkai":194,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import duke.client.Client;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.client.ClientList;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.client.Gender;","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import duke.storage.TasksStorage;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":" * Duke is a chat-bot program that is capable of logging tasks which are (optionally)","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":" * tagged with a deadline/occurrence date.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":" * Duke automatically saves the tasks of each session upon successful termination","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":" * of the session, and restores these tasks on the next launch.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"public class Duke {","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    private final ClientList clients;","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    private TasksStorage tasksStorage \u003d null;","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"     * Creates a new Duke chat-bot instance.","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    public Duke() {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"            this.tasksStorage \u003d new TasksStorage();","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"        this.tasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        this.clients \u003d new ClientList();","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"            this.tasksStorage.restore(tasks);","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Failed to restore saved tasks: \" + e.getMessage());","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"    public String getGreeting() {","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        return \"Hello, I am Red from Among Us.\\n\\nWe are currently facing a crisis onboard -- there seems to be an \"","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"                + \"imposter among us...\\n\\nMy job is to handle chat requests, so although I might get murdered any \"","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"                + \"moment now...\\n\\n... How can I help you?\";","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"     * Returns a response based on the given user input.","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"     * @param input The input supplied by the user.","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"     * @return An appropriate DukeResponse for the given input.","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException If the given input is invalid.","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse getResponse(String input) throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"        Command cmd \u003d Command.parse(input, tasks, clients, tasksStorage);","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"        return cmd.execute();","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"     * Adds a client to its list of clients.","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"     * @param clientData A map of the client\u0027s key-value data pairs.","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"     * @return The created Client object.","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"    public Client addClient(Map\u003cString, String\u003e clientData) {","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"        Client client \u003d new Client(clientData.get(\"firstName\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"        client.setLastName(clientData.get(\"lastName\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"        client.setPhoneNumber(clientData.get(\"phoneNumber\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"        client.setGender(Gender.valueOf(clientData.get(\"gender\")));","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"        this.clients.add(client);","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"        return client;","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":78}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":" * DukeException encapsulates the checked exceptions that the chat-bot might face in its execution.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"     * Constructs a DukeException with the respective error message.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"     * @param errorMessage The message error that was encountered.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"takufunkai":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.gui.Main;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"public class Launcher {","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"takufunkai":10}},{"path":"src/main/java/duke/client/Client.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.client;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.util.UUID;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":" * The Client class encapsulates the information associated with a user\u0027s Client, such as their personal details and","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":" * their UUID.","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"public class Client {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"    private final String id;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    private String firstName;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    private String lastName;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    private Gender gender;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    private String phoneNumber; // TODO: to new class","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"     * Creates a new Client object. Only a Client\u0027s firstName is required, so it is the only field required in the","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"     * constructor.","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"     * @param firstName The first name of the client.","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    public Client(String firstName) {","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"        assert !firstName.isBlank() : \"A client\u0027s first name should not be blank.\";","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"        this.id \u003d UUID.randomUUID().toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"        this.firstName \u003d firstName;","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    public void setLastName(String lastName) {","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"        this.lastName \u003d lastName;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"    public void setPhoneNumber(String phoneNumber) {","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    public void setGender(Gender gender) {","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"        return String.format(\"Name: %s %s, Gender: %s, Phone Number: %s\",","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"                this.lastName, this.firstName, this.gender, this.phoneNumber);","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"takufunkai":46}},{"path":"src/main/java/duke/client/ClientList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.client;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.List;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"public class ClientList {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"    private final List\u003cClient\u003e clientList;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"    public ClientList() {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"        this.clientList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    public void add(Client client) {","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"        this.clientList.add(client);","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"        for (Client client : clientList) {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"            sb.append(client).append(\"\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"takufunkai":25}},{"path":"src/main/java/duke/client/Gender.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.client;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"public enum Gender {","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"    MALE, FEMALE, UNKNOWN","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"takufunkai":5}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.util.EnumSet;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.client.ClientList;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.command.system.ByeCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.command.system.SystemCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import duke.command.usertask.UserTaskCommand;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import duke.storage.TasksStorage;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e is the abstract base class for all possible commands that \u003ccode\u003eDuke\u003c/code\u003e recognizes.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e handles the parsing of user input by determining the command type given","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":" * and then validating the supplied arguments, if any.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e will then return one of the executable subclass objects based on the","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":" * input given by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":" * All concrete implementations of Command should be able to \u003ccode\u003eexecute\u003c/code\u003e based on the","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":" * arguments supplied during the instantiation of the subclass object in \u003ccode\u003eCommand::parse\u003c/code\u003e.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":" * They should be responsible for their entire expected behaviour within the \u003ccode\u003eexecute\u003c/code\u003e method.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     * Enums for all possible valid commands that are allowed to be supplied by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    public enum CommandNames {","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"        FIND, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BYE,","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"    private static final EnumSet\u003cCommandNames\u003e userTaskCommand \u003d EnumSet.of(","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"            CommandNames.FIND, CommandNames.LIST, CommandNames.DEADLINE, CommandNames.EVENT, CommandNames.DELETE,","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"            CommandNames.MARK, CommandNames.UNMARK, CommandNames.TODO","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"    );","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"    private static final EnumSet\u003cCommandNames\u003e systemCommand \u003d EnumSet.of(CommandNames.BYE);","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"     * Executes the expected behaviour of the class.","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"     * @return The response string of the execution.","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException If some argument supplied to the command is invalid.","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"    public abstract DukeResponse execute() throws DukeException;","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"     * Static method that parses the input given by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"     * It checks if the supplied input is valid or not, before determining which \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"     * subclass object should be instantiated and returned. It also determines and validates","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"     * the arguments supplied to the specific \u003ccode\u003eCommand\u003c/code\u003e by the user. If any of the arguments","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"     * are invalid, or required but not supplied, the object is not created and instead a DukeException will be thrown.","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"     * @param input The entire string that was supplied by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if arguments supplied are invalid.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"    public static Command parse(","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"            String input, TaskList tasks, ClientList clients, TasksStorage tasksStorage) throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"        assert !input.isBlank() : \"Input given should not be blank\";","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"        String[] inputStrings \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-02-08"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"        String specifiedCommand \u003d inputStrings[0];","lastModifiedDate":"2022-02-08"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"        CommandNames command;","lastModifiedDate":"2022-02-08"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"            command \u003d CommandNames.valueOf(specifiedCommand.toUpperCase(Locale.ROOT));","lastModifiedDate":"2022-02-08"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"            throw new DukeException(\"I don\u0027t know what \" + specifiedCommand + \" means.\");","lastModifiedDate":"2022-02-08"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"        String arguments \u003d inputStrings.length \u003d\u003d 1 ? null : inputStrings[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"        if (userTaskCommand.contains(command)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"            return UserTaskCommand","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"                    .parse(command, arguments)","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"takufunkai"},"content":"                    .supply(tasksStorage, tasks);","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"takufunkai"},"content":"        } else if (systemCommand.contains(command)) {","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"takufunkai"},"content":"            return SystemCommand.parse(command);","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"takufunkai"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"takufunkai"},"content":"            return new ByeCommand(); // TODO: Handle edge case where command is valid but doesn\u0027t belong anywhere.","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":87}},{"path":"src/main/java/duke/command/system/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.system;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":" * ByeCommand handles the user command \"bye\". The object should alert \u003ccode\u003eDuke\u003c/code\u003e that","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * the program is being terminated by the user.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"public class ByeCommand extends SystemCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"        return new DukeResponse(DukeResponse.ResponseStatus.EXIT);","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"     * Checks if the other object is a ByeCommand.","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     * @param other The other object to be checked against.","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"     * @return True if the other object is a ByeCommand.","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"        return other instanceof ByeCommand;","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":26}},{"path":"src/main/java/duke/command/system/SystemCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.system;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":" * SystemCommand class handles the commands which relate to the Duke chat-bot system, instead of the logical","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":" * program execution. SystemCommands are commands such as \u0027Bye\u0027.","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"public abstract class SystemCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"     * Returns the SystemCommand executable.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"     * @param command The command enum supplied by the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"     * @return The SystemCommand executable object.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    public static SystemCommand parse(CommandNames command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"        return new ByeCommand();","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"takufunkai":19}},{"path":"src/main/java/duke/command/usertask/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.Deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTaskException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" * DeadlineCommand handles the necessary arguments for the successful creation of a \u003ccode\u003eDeadline\u003c/code\u003e task object","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" * and appends it to the existing task list. It receives 2 mandatory arguments, \u003ccode\u003edescription\u003c/code\u003e and","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":" * \u003ccode\u003edeadlineDateTime\u003c/code\u003e, which are required in the creation of a Deadline task object.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"public class DeadlineCommand extends UserTaskCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    private final String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    private final String deadlineDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     * Creates a new DeadlineCommand with the necessary, validated arguments.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"     * @param description      The description of the Deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"     * @param deadlineDateTime The due-date for the Deadline task.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    public DeadlineCommand(String description, String deadlineDateTime) {","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     * Creates a new Deadline task object, and adds it to the current task list being maintained by \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"     * Adds the task to the TasksStorage.","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if Deadline object was unsuccessfully created.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"     * @return The response of the result of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"            UserTask task \u003d new Deadline(description, deadlineDateTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"            super.tasks.addTask(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"            tasksStorage.save(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"            String responseMessage \u003d \"Added task #\" + (super.tasks.getTasksCount()) + \": \" + task + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"            return new DukeResponse(DukeResponse.ResponseStatus.SUCCESS, responseMessage);","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        } catch (UserTaskException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"            throw new DukeException(\"Failed to create new deadline item: \" + e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":49}},{"path":"src/main/java/duke/command/usertask/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * DeleteCommand handles the deletion of the given task at the specified index. It contains the argument","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" * \u003ccode\u003eindex\u003c/code\u003e, which is the index of the task that the user wants to delete.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" * DeleteCommand will check if the target index exists before attempting to delete.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"public class DeleteCommand extends UserTaskCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    private final int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"     * Stores the necessary argument for the delete operation.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"     * @param index The index of the item that the user wants to delete.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    protected DeleteCommand(int index) {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"     * Deletes the task from the list of tasks given by \u003ccode\u003eDuke\u003c/code\u003e. If the index does not yet exist,","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"     * \u003ccode\u003eexecute\u003c/code\u003e will return an error, stating that the index does not exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     * Removes the item from the list of saved items.","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if the index does not exist, i.e. it exceeds the current size of the TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"     * @return The response of the result of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"        if (index \u003e super.tasks.getTasksCount()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"            throw new DukeException(\"The task you are attempting to delete does not exist\");","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        UserTask delTask \u003d super.tasks.deleteTask(index);","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"        tasksStorage.remove(delTask);","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        String responseMessage \u003d \"Alright! Getting rid of the following task: \\n\" + delTask + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"        return new DukeResponse(DukeResponse.ResponseStatus.SUCCESS, responseMessage);","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":43}},{"path":"src/main/java/duke/command/usertask/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.Event;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTaskException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" * EventCommand handles the necessary arguments for the successful creation of an \u003ccode\u003eEvent\u003c/code\u003e task object","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" * and appends it to the existing task list. It receives 2 mandatory arguments, \u003ccode\u003edescription\u003c/code\u003e and","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":" * \u003ccode\u003eeventDateTime\u003c/code\u003e, which are required in the creation of an Event task object.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"public class EventCommand extends UserTaskCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    private final String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    private final String eventDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     * Creates a new EventCommand with the necessary, validated arguments.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"     * @param description   The description of the Event.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"     * @param eventDateTime The occurrence-date for the Event.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    public EventCommand(String description, String eventDateTime) {","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"        this.eventDateTime \u003d eventDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     * Creates a new Event task object, and adds it to the current task list being maintained by \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"     * Adds the task to the tasksStorage.","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if Event object was unsuccessfully created.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"     * @return The response of the result of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"            UserTask task \u003d new Event(description, eventDateTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"            super.tasks.addTask(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"            tasksStorage.save(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"            String responseMessage \u003d \"Added task #\" + (super.tasks.getTasksCount()) + \": \" + task + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"            return new DukeResponse(DukeResponse.ResponseStatus.SUCCESS, responseMessage);","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        } catch (UserTaskException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"            throw new DukeException(\"Failed to create new event item: \" + e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":48}},{"path":"src/main/java/duke/command/usertask/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * FindCommand handles the necessary arguments for a filter operation on the TaskList, specifically a filter on the","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" * names of the TaskList items. It receives 2 mandatory arguments, \u003ccode\u003edescription\u003c/code\u003e and","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" * \u003ccode\u003eeventDateTime\u003c/code\u003e, which are required in the creation of an Event task object.","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"public class FindCommand extends UserTaskCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    private final String search;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"     * Stores the necessary argument for the search operation.","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     * @param search The search query that is to be matched against.","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    protected FindCommand(String search) {","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"        this.search \u003d search;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"     * Searches for and returns items which name matches the {@code search} parameter supplied by the user.","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if the filter did not succeed.","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     * @return The response of the result of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"        TaskList filteredTaskList \u003d this.tasks.filterByName(this.search);","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        ListCommand lc \u003d new ListCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"        lc.supply(tasksStorage, filteredTaskList);","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"        lc.changeListMessage(\"Alright, here are your matching tasks: \");","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        return lc.execute();","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"takufunkai":39}},{"path":"src/main/java/duke/command/usertask/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":" * ListCommand handles outputting the entire list of tasks that a user has at the current point in time.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":" * It has an optional argument field \u003ccode\u003edateFilter\u003c/code\u003e, which will filter the list of tasks to output","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":" * based on whether they 1. have a \u003ccode\u003edateTime\u003c/code\u003e field, and 2. the date of the field is equal to the specified","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":" * dateFilter supplied by the user. \u003cb\u003eNote:\u003c/b\u003e time is irrelevant here, and filter works solely based on date.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"public class ListCommand extends UserTaskCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    private LocalDateTime dateFilter \u003d null;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"    private String listMessage \u003d \"Alright, here are your tasks.\";","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"     * Creates a ListCommand object that has no specified dateFilter.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    public ListCommand() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     * Creates a ListCommand object that has some specified dateFilter.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     * @param date The date that tasks should be filtered based on.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    protected ListCommand(LocalDateTime date) {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"        this.dateFilter \u003d date;","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        this.listMessage \u003d listMessage + \"for the date: \" + date.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    protected void changeListMessage(String message) {","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        this.listMessage \u003d message;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"     * Prints out all the tasks that the user has logged so far in a neat table format. Metadata (the total tasks)","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"     * are printed out at the top of the table. If this object has some \u003ccode\u003edateFilter\u003c/code\u003e, the tasks outputted","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"     * will be filtered based on the dateFilter supplied.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if the filter did not succeed.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"     * @return The response of the result of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"        List\u003cString\u003e listItems;","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"        if (this.dateFilter \u003d\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"            listItems \u003d Arrays.asList(this.tasks.toString().split(\"\\n\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"            TaskList filteredTaskList \u003d this.tasks.filterByDate(dateFilter);","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"            listItems \u003d Arrays.asList(filteredTaskList.toString().split(\"\\n\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"        sb.append(this.listMessage)","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"                .append(\"\\n----------\\nTOTAL: \")","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"                .append(this.tasks.getTasksCount() \u003d\u003d 0 ? \"0\" : listItems.size())","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"                .append(\" tasks\\n----------\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"        listItems.forEach((item) -\u003e sb.append(item).append(\"\\n\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"        return new DukeResponse(DukeResponse.ResponseStatus.SUCCESS, sb.toString());","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":66}},{"path":"src/main/java/duke/command/usertask/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * MarkCommand handles the marking of some task as done. It receives a required argument, index, which is the","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" * index of the task that the user wishes to mark as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"public class MarkCommand extends UserTaskCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    private final int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"     * Creates a MarkCommand object with the specified index argument.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"     * @param index The index of the task that the user wishes to mark as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"    protected MarkCommand(int index) {","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"     * Marks the task from the list of tasks given by \u003ccode\u003eDuke\u003c/code\u003e as done. If the index does not yet exist,","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"     * \u003ccode\u003eexecute\u003c/code\u003e will return an error, stating that the index does not exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if the index does not exist, i.e. it exceeds the current size of the TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     * @return The response of the result of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"        if (index \u003e this.tasks.getTasksCount()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"            throw new DukeException(\"The task you are attempting to mark does not exist\");","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"        UserTask task \u003d this.tasks.markTask(index);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"        tasksStorage.update(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        String responseMessage \u003d \"Good job! Let\u0027s keep it going, this spaceship needs you!\\n\" + task + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        return new DukeResponse(DukeResponse.ResponseStatus.SUCCESS, responseMessage);","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":40}},{"path":"src/main/java/duke/command/usertask/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * ToDoCommand handles the necessary arguments for the successful creation of a \u003ccode\u003eToDo\u003c/code\u003e task object","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" * and appends it to the existing task list. It receives 1 mandatory argument, \u003ccode\u003edescription\u003c/code\u003e,","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" * which is required in the creation of a ToDo task object.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"public class ToDoCommand extends UserTaskCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    private final String description;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"     * Creates a new ToDoCommand with the necessary, validated argument.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"     * Creates a new ToDo task object, and adds it to the current task list being maintained by \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"     * Adds the item to the tasksStorage.","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"     * @return The response of the result of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() {","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"        UserTask task \u003d new ToDo(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"        this.tasks.addTask(task);","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"        tasksStorage.save(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        String responseMessage \u003d \"Added task #\" + (this.tasks.getTasksCount()) + \": \" + task + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"        return new DukeResponse(DukeResponse.ResponseStatus.SUCCESS, responseMessage);","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"takufunkai":37}},{"path":"src/main/java/duke/command/usertask/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTask;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * UnmarkCommand handles the marking of some task as not done. It receives a required argument, index, which is the","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" * index of the task that the user wishes to mark as undone.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"public class UnmarkCommand extends UserTaskCommand {","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    private final int index;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"     * Creates an UnmarkCommand object with the specified index argument.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"     * @param index The index of the task that the user wishes to mark as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"    protected UnmarkCommand(int index) {","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"     * Marks the task from the list of tasks given by \u003ccode\u003eDuke\u003c/code\u003e as undone. If the index does not yet exist,","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"     * \u003ccode\u003eexecute\u003c/code\u003e will return an error, stating that the index does not exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if the index does not exist, i.e. it exceeds the current size of the TaskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     * @return The response of the result of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse execute() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"        if (index \u003e this.tasks.getTasksCount()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"            throw new DukeException(\"The task you are attempting to unmark does not exist\");","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"        UserTask task \u003d this.tasks.unmarkTask(index);","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"        tasksStorage.update(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        String responseMessage \u003d \"I thought you were done with it?\\n\" + task + \"\\n\";","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        return new DukeResponse(DukeResponse.ResponseStatus.SUCCESS, responseMessage);","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":40}},{"path":"src/main/java/duke/command/usertask/UserTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static duke.utils.Utils.DATE_FORMAT;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import static duke.utils.Utils.TIME_FORMAT;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"import duke.utils.Utils;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":" * UserTaskCommand encapsulates the information required for commands that relate to UserTasks, for example the","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":" * TaskList that Duke maintains, and the TasksStorage. It also handles the parsing of a given command to return a proper","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":" * executable command.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"public abstract class UserTaskCommand extends Command {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    protected Storage tasksStorage;","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    protected UserTaskCommand() {","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     * Supplies to the UserTaskCommand the necessary fields for proper execution. This is necessary, since we want","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     * the Command class to handle the dissemination of necessary data to the correct Command subtype, i.e. this is","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     * to prevent Duke from having to handle the type of command it receives, and then to pass it the correct data","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"     * structure.","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"     * @param tasksStorage The TasksStorage that Duke uses.","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"     * @param tasks The tasks that Duke is maintaining.","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"     * @return This UserTaskCommand object.","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    public UserTaskCommand supply(Storage tasksStorage, TaskList tasks) {","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        this.tasksStorage \u003d tasksStorage;","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        return this;","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"     * Reads a given user command, creates the command object and supplies the arguments to the command object,","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"     * then returns it.","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"     * @param command The user given command enum.","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"     * @param arguments The arguments that were supplied by the user.","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"     * @return The correct executable command object.","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException If the argument supplied is invalid.","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"    public static UserTaskCommand parse(","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"            CommandNames command, String arguments) throws DukeException {","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"        boolean noArgumentsSupplied \u003d arguments \u003d\u003d null || arguments.isBlank();","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"        switch (command) {","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"        case LIST:","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"            if (noArgumentsSupplied) {","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"                return new ListCommand();","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"            String[] listCommandArguments \u003d arguments.split(\" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"            if (listCommandArguments.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Insufficient parameters supplied!\");","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"            String delimiter \u003d listCommandArguments[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"            if (!delimiter.equalsIgnoreCase(\"/date\")) {","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Unknown parameter supplied to list command.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"                LocalDateTime filterDate \u003d Utils.parseToLocalDateTime(listCommandArguments[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"                return new ListCommand(filterDate);","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(String.format(\"Failed to parse date %s. \"","lastModifiedDate":"2022-02-09"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"                        + \"Please ensure it is of the following format: \"","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"                        + DATE_FORMAT + \" \" + TIME_FORMAT, listCommandArguments[1]));","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"takufunkai"},"content":"        case FIND:","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"takufunkai"},"content":"            if (noArgumentsSupplied) {","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Please indicate a valid word to match the task names.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"takufunkai"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"takufunkai"},"content":"        case MARK:","lastModifiedDate":"2022-02-09"},{"lineNumber":87,"author":{"gitId":"takufunkai"},"content":"            if (noArgumentsSupplied) {","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Please indicate a task item number to mark\");","lastModifiedDate":"2022-02-09"},{"lineNumber":89,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":90,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":91,"author":{"gitId":"takufunkai"},"content":"            int taskNumber;","lastModifiedDate":"2022-02-09"},{"lineNumber":92,"author":{"gitId":"takufunkai"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"takufunkai"},"content":"                taskNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"takufunkai"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":95,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Your tasks are identified by numbers! \"","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"takufunkai"},"content":"                        + \"Please input a valid number.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":98,"author":{"gitId":"takufunkai"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Are you trying to be funny?\");","lastModifiedDate":"2022-02-09"},{"lineNumber":100,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":102,"author":{"gitId":"takufunkai"},"content":"            return new MarkCommand(taskNumber);","lastModifiedDate":"2022-02-09"},{"lineNumber":103,"author":{"gitId":"takufunkai"},"content":"        case UNMARK:","lastModifiedDate":"2022-02-09"},{"lineNumber":104,"author":{"gitId":"takufunkai"},"content":"            if (noArgumentsSupplied) {","lastModifiedDate":"2022-02-09"},{"lineNumber":105,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Please indicate a task item number to unmark\");","lastModifiedDate":"2022-02-09"},{"lineNumber":106,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":107,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":108,"author":{"gitId":"takufunkai"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":109,"author":{"gitId":"takufunkai"},"content":"                taskNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-02-09"},{"lineNumber":110,"author":{"gitId":"takufunkai"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":111,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Your tasks are identified by numbers! \"","lastModifiedDate":"2022-02-09"},{"lineNumber":112,"author":{"gitId":"takufunkai"},"content":"                        + \"Please input a valid number.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":113,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":114,"author":{"gitId":"takufunkai"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":115,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Are you trying to be funny?\");","lastModifiedDate":"2022-02-09"},{"lineNumber":116,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":117,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":118,"author":{"gitId":"takufunkai"},"content":"            return new UnmarkCommand(taskNumber);","lastModifiedDate":"2022-02-09"},{"lineNumber":119,"author":{"gitId":"takufunkai"},"content":"        case DELETE:","lastModifiedDate":"2022-02-09"},{"lineNumber":120,"author":{"gitId":"takufunkai"},"content":"            if (noArgumentsSupplied) {","lastModifiedDate":"2022-02-09"},{"lineNumber":121,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Please indicate a task item number to delete\");","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":123,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"takufunkai"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":125,"author":{"gitId":"takufunkai"},"content":"                taskNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-02-09"},{"lineNumber":126,"author":{"gitId":"takufunkai"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":127,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Your tasks are identified by numbers! \"","lastModifiedDate":"2022-02-09"},{"lineNumber":128,"author":{"gitId":"takufunkai"},"content":"                        + \"Please input a valid number.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":129,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":130,"author":{"gitId":"takufunkai"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":131,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Are you trying to be funny?\");","lastModifiedDate":"2022-02-09"},{"lineNumber":132,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":133,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":134,"author":{"gitId":"takufunkai"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2022-02-09"},{"lineNumber":135,"author":{"gitId":"takufunkai"},"content":"        case TODO:","lastModifiedDate":"2022-02-09"},{"lineNumber":136,"author":{"gitId":"takufunkai"},"content":"            if (noArgumentsSupplied) {","lastModifiedDate":"2022-02-09"},{"lineNumber":137,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"ToDo items must have a description.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":138,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":139,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":140,"author":{"gitId":"takufunkai"},"content":"            return new ToDoCommand(arguments);","lastModifiedDate":"2022-02-09"},{"lineNumber":141,"author":{"gitId":"takufunkai"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-09"},{"lineNumber":142,"author":{"gitId":"takufunkai"},"content":"            if (noArgumentsSupplied) {","lastModifiedDate":"2022-02-09"},{"lineNumber":143,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Deadline items must have a description and due date.\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":144,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":145,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":146,"author":{"gitId":"takufunkai"},"content":"            String[] delimitedDeadlineArguments \u003d arguments.split(\" /by \");","lastModifiedDate":"2022-02-09"},{"lineNumber":147,"author":{"gitId":"takufunkai"},"content":"            if (delimitedDeadlineArguments.length !\u003d 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":148,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Deadline items must have a description and due date.\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":149,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":150,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"takufunkai"},"content":"            String deadlineTaskName \u003d delimitedDeadlineArguments[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":152,"author":{"gitId":"takufunkai"},"content":"            String deadlineDate \u003d delimitedDeadlineArguments[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":153,"author":{"gitId":"takufunkai"},"content":"            return new DeadlineCommand(deadlineTaskName, deadlineDate);","lastModifiedDate":"2022-02-09"},{"lineNumber":154,"author":{"gitId":"takufunkai"},"content":"        case EVENT:","lastModifiedDate":"2022-02-09"},{"lineNumber":155,"author":{"gitId":"takufunkai"},"content":"            if (noArgumentsSupplied) {","lastModifiedDate":"2022-02-09"},{"lineNumber":156,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Event items must have a description and date.\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":157,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":158,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":159,"author":{"gitId":"takufunkai"},"content":"            String[] delimitedEventArguments \u003d arguments.split(\" /at \");","lastModifiedDate":"2022-02-09"},{"lineNumber":160,"author":{"gitId":"takufunkai"},"content":"            if (delimitedEventArguments.length !\u003d 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":161,"author":{"gitId":"takufunkai"},"content":"                throw new DukeException(\"Event items must have a description and date.\\n\");","lastModifiedDate":"2022-02-09"},{"lineNumber":162,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":163,"author":{"gitId":"takufunkai"},"content":"            String eventTaskName \u003d delimitedEventArguments[0];","lastModifiedDate":"2022-02-09"},{"lineNumber":164,"author":{"gitId":"takufunkai"},"content":"            String eventDate \u003d delimitedEventArguments[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":165,"author":{"gitId":"takufunkai"},"content":"            return new EventCommand(eventTaskName, eventDate);","lastModifiedDate":"2022-02-09"},{"lineNumber":166,"author":{"gitId":"takufunkai"},"content":"        default:","lastModifiedDate":"2022-02-09"},{"lineNumber":167,"author":{"gitId":"takufunkai"},"content":"            throw new DukeException(\"Unknown command.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":168,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":169,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":170,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"takufunkai":170}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.gui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"        double imgCenter \u003d displayPicture.getFitHeight() / 2;","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        displayPicture.setClip(new Circle(imgCenter, imgCenter, imgCenter));","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"    private void flip() {","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"        dialog.setAlignment(Pos.BASELINE_LEFT);","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"        db.flip();","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"        String styles \u003d db.dialog.getStyle();","lastModifiedDate":"2022-02-17"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"        String stylesWithRedBackgroundColor \u003d DialogBox.modifyStyleValue(","lastModifiedDate":"2022-02-17"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"                styles, \"-fx-background-color\", \"#fecccc\"","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"        );","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"        db.dialog.setStyle(stylesWithRedBackgroundColor);","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"        return db;","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"    private static String modifyStyleValue(String styles, String key, String value) {","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"        Map\u003cString, String\u003e stylesMap \u003d Arrays.stream(styles.split(\";\"))","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"                .map(string -\u003e string.trim().split(\": \"))","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"                .collect(Collectors.toMap(s -\u003e s[0], s -\u003e s[1]));","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"        stylesMap.put(key, value);","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"        return stylesMap.keySet().stream()","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"                .map(k -\u003e String.format(\"%s: %s;\", k, stylesMap.get(k)))","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"takufunkai"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2022-02-17"},{"lineNumber":81,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"takufunkai":82}},{"path":"src/main/java/duke/gui/DukeWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.gui;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"public class DukeWindow extends AnchorPane {","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/red_default.png\"))","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"    );","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    private final Image dukeImageError \u003d new Image(","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/red_shocked.png\"))","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"    );","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/user.png\"))","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    );","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"    private final Image exitImage \u003d new Image(","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/exit_image.jpg\"))","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"    );","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"    * MainWindow is the window in which all Duke related GUI will exist and operate.","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"    */","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"    public DukeWindow() {","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(duke.gui.MainWindow.class.getResource(\"/view/DukeWindow.fxml\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"        sendOutput(d.getGreeting());","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"    private void sendOutput(String out) {","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(out, dukeImage));","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"    * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"    * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"    */","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"takufunkai"},"content":"            return;","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"takufunkai"},"content":"            DukeResponse response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"takufunkai"},"content":"            if (response.getStatus() \u003d\u003d DukeResponse.ResponseStatus.EXIT) {","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"takufunkai"},"content":"                handleExit();","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"takufunkai"},"content":"                userInput.clear();","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"takufunkai"},"content":"                return;","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"takufunkai"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"takufunkai"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"takufunkai"},"content":"                    DialogBox.getDukeDialog(response.getMessage(), dukeImage)","lastModifiedDate":"2022-02-14"},{"lineNumber":94,"author":{"gitId":"takufunkai"},"content":"            );","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"takufunkai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"takufunkai"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"takufunkai"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"takufunkai"},"content":"                    DialogBox.getDukeDialog(\"Oops: \" + e.getMessage(), dukeImageError)","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"takufunkai"},"content":"            );","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"takufunkai"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"takufunkai"},"content":"    private void handleExit() {","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"takufunkai"},"content":"        ImageView iv \u003d new ImageView(exitImage);","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"takufunkai"},"content":"        iv.setFitHeight(200);","lastModifiedDate":"2022-02-12"},{"lineNumber":107,"author":{"gitId":"takufunkai"},"content":"        iv.setFitWidth(200);","lastModifiedDate":"2022-02-12"},{"lineNumber":108,"author":{"gitId":"takufunkai"},"content":"        dialogContainer.getChildren().add(iv);","lastModifiedDate":"2022-02-12"},{"lineNumber":109,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":110,"author":{"gitId":"takufunkai"},"content":"        userInput.setDisable(true);","lastModifiedDate":"2022-02-12"},{"lineNumber":111,"author":{"gitId":"takufunkai"},"content":"        sendButton.setText(\"Exit\");","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"takufunkai"},"content":"        sendButton.setOnAction(event -\u003e System.exit(0));","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"takufunkai":114}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.gui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/red_default.png\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        MainWindow mw \u003d new MainWindow();","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"        Scene scene \u003d new Scene(mw);","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"        scene.getStylesheets().add(getClass().getResource(\"/view/DukeWindow.css\").toExternalForm());","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"        mw.setDuke(duke);","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"        stage.show();","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"        stage.getIcons().add(dukeImage);","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"takufunkai":29}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.gui;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import duke.gui.clients.ClientsWindow;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.Menu;","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.MenuBar;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":" * Class MainWindow is the controller for the MainWindow fxml component. It is responsible for handling the menu bar","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":" * and is the highest in the hierarchy of nodes.","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    private MenuBar menuBar;","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    private Menu menu;","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    private MenuItem dukeMenuItem;","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    private MenuItem clientsMenuItem;","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    private final DukeWindow dukeWindow;","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    private final ClientsWindow clientsWindow;","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"     * Returns an instance of the MainWindow controller.","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"    public MainWindow() {","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"        dukeMenuItem.setOnAction(e -\u003e openDukeWindow());","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        clientsMenuItem.setOnAction(e -\u003e openClientsWindow());","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"        this.dukeWindow \u003d new DukeWindow();","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"        this.clientsWindow \u003d new ClientsWindow();","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"        this.clientsWindow.setVisible(false);","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"        this.getChildren().addAll(this.clientsWindow, this.dukeWindow);","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"        setBottomAnchor(this.dukeWindow, 1.0);","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"        setBottomAnchor(this.clientsWindow, 1.0);","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"        this.duke \u003d d;","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"        this.dukeWindow.setDuke(d);","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"        this.clientsWindow.setDuke(d);","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"     * Changes the existing window to the clientsWindow view.","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"    public void openClientsWindow() {","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"        this.clientsWindow.setVisible(true);","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"        this.dukeWindow.setVisible(false);","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"     * Changes the existing window to the clientsWindow view.","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"    public void openDukeWindow() {","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"        this.dukeWindow.setVisible(true);","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"        this.clientsWindow.setVisible(false);","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"takufunkai":79}},{"path":"src/main/java/duke/gui/clients/AddClientFormBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.gui.clients;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.client.Gender;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.ComboBox;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":" * Controller for the AddClientFormBox fxml component. It handles all the fields, buttons and labels associated with","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":" * the form box. The form box is not meant to be used as a stand-alone page, but as a component that can be reused","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":" * wherever necessary.","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"public class AddClientFormBox extends HBox {","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    private TextField firstNameField;","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    private TextField lastNameField;","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    private TextField phoneNumberField;","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    private ComboBox\u003cGender\u003e genderSelectField;","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"    private Button submitButton;","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"    private Label additionalInformation;","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    private Function\u003cMap\u003cString, String\u003e, Void\u003e addClientFunction;","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"     * Creates a new instance of the AddClientFormBox controller.","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"     * @param func A function that accepts a Mapping between the data field names and the value of the associated data,","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"     *             then creates a client using the given mapping.","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"    public AddClientFormBox(Function\u003cMap\u003cString, String\u003e, Void\u003e func) {","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/AddClientFormBox.fxml\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"        genderSelectField.getItems().addAll(Gender.UNKNOWN, Gender.MALE, Gender.FEMALE);","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"        this.addClientFunction \u003d func;","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"    private void initialize() {","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"        additionalInformation.managedProperty().bind(additionalInformation.visibleProperty());","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"        boolean inputIsValid \u003d validateInput();","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"        if (!inputIsValid) {","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"            return;","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"        Map\u003cString, String\u003e clientData \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"        clientData.put(\"firstName\", firstNameField.getText());","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"        clientData.put(\"lastName\", lastNameField.getText());","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"        clientData.put(\"phoneNumber\", phoneNumberField.getText());","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"        clientData.put(","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"                \"gender\",","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"                genderSelectField.getValue() \u003d\u003d null ? Gender.UNKNOWN.name() : genderSelectField.getValue().name()","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"        );","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"takufunkai"},"content":"        addClientFunction.apply(clientData);","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"takufunkai"},"content":"        firstNameField.clear();","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"takufunkai"},"content":"        lastNameField.clear();","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"takufunkai"},"content":"        phoneNumberField.clear();","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"takufunkai"},"content":"        genderSelectField.setValue(Gender.UNKNOWN);","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"takufunkai"},"content":"    private boolean validateInput() {","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"takufunkai"},"content":"        if (firstNameField.getText().isBlank()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"takufunkai"},"content":"            showAdditionalInformation(\"First name is required.\");","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"takufunkai"},"content":"            return false;","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"takufunkai"},"content":"        return true;","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"takufunkai"},"content":"    private void showAdditionalInformation(String text) {","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"takufunkai"},"content":"        additionalInformation.setText(text);","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"takufunkai"},"content":"        additionalInformation.visibleProperty().set(true);","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"takufunkai"},"content":"    private void hideAdditionalInformation() {","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"takufunkai"},"content":"        additionalInformation.setText(\"\");","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"takufunkai"},"content":"        additionalInformation.visibleProperty().set(false);","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"takufunkai":106}},{"path":"src/main/java/duke/gui/clients/ClientsWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.gui.clients;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.Map;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.client.Client;","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":" * The ClientsWindow class is the Controller for the ClientsWindow in the Duke app. It handles the button to open the","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":" * add client form, as well as the form itself. It also handles the list of clients that the Duke bot has and displays","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":" * it.","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"public class ClientsWindow extends AnchorPane {","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    private AddClientFormBox clientForm;","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    private ObservableList\u003cClient\u003e clients;","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     * Creates an instance of the controller. Apart from setting up the stylistic logic of the window, this","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"     * constructor also sets up the data structure containing the list of clients and attaches a listener between it","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"     * and the ListView object.","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    public ClientsWindow() {","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ClientsWindow.fxml\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"        this.clientForm \u003d new AddClientFormBox(this::addClientToList);","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        this.getChildren().add(this.clientForm);","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"        this.clientForm.setLayoutY(50);","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        this.clientForm.setVisible(false);","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"        clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"        clientListView.setItems(clients);","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"        clientListView.getSelectionModel().selectedItemProperty().addListener((obs, oldValue, newValue) -\u003e {","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"New client: \" + newValue);","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"        });","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"    @FXML","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"    private void toggleShowClientForm() {","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"        this.clientForm.setVisible(!this.clientForm.visibleProperty().getValue());","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"        this.duke \u003d d;","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"    private Void addClientToList(Map\u003cString, String\u003e clientData) {","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"        Client client \u003d this.duke.addClient(clientData);","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"        clients.add(client);","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"        return null;","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"takufunkai":71}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.storage;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.DukeSavable;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"public interface Storage {","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"    void save(DukeSavable...tasks);","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"    void saveAndOverwrite(TaskList tasks);","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"    void remove(DukeSavable task);","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    void update(DukeSavable updatedSave);","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    void restore(TaskList emptyTasks) throws DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"takufunkai":13}},{"path":"src/main/java/duke/storage/TasksStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import java.util.List;","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.Deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.DukeSavable;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.Event;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.ToDo;","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTask;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTaskException;","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":" * TasksStorage is the class that handles all storage-related information and methods of the Duke chat-bot.","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":" * A TasksStorage object encapsulates the necessary information for storing and restoring of the user\u0027s saved tasks.","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":" * This includes the directory which is being used as the storage, and some Enums being used to parse","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":" * the saved strings.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"public class TasksStorage implements Storage {","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    private static final String DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    private static final String DATA_FILEPATH \u003d DATA_DIRECTORY + \"/duke.txt\";","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"    enum TaskCode {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        T, D, E","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"     * Creates a new TasksStorage object which is able to save and restore tasks to a pre-defined location.","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"     * TasksStorage attempts to create the necessary directories and files without explicitly checking if they","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"     * already exist. Since creating existing directories and files only fails silently, there is no explicit checks","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"     * done.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"     * @throws IOException Thrown if the creation/opening of the files and directories failed.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"    public TasksStorage() throws IOException {","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        File dir \u003d new File(DATA_DIRECTORY);","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"        if (dir.mkdirs()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Creating a file directory for save file now: \" + DATA_DIRECTORY);","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"        } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Save file directory already exists: \" + DATA_DIRECTORY);","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"        File f \u003d new File(DATA_FILEPATH);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"        if (f.createNewFile()) {","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Creating a save file now: \" + DATA_FILEPATH);","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"        } else {","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Save file already exists: \" + DATA_FILEPATH);","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"        assert f.exists() : \"Data save file does not exist.\";","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"     * Saves the list of tasks specified to the storage. The existing storage data is overwritten.","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"     * @param tasks List of tasks to save.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"    public void saveAndOverwrite(TaskList tasks) {","lastModifiedDate":"2022-02-08"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"            FileWriter fw \u003d new FileWriter(DATA_FILEPATH);","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"            fw.write(tasks.toDukeSaveFormat());","lastModifiedDate":"2022-02-08"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"            fw.close();","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Failed to save data: \" + e.getMessage());","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"     * Saves the list of tasks specified to the storage. The existing storage data is overwritten.","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"takufunkai"},"content":"     * @param tasks List of tasks to save.","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"takufunkai"},"content":"    public void save(DukeSavable ...tasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"takufunkai"},"content":"            for (DukeSavable t : tasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"takufunkai"},"content":"                String saveValue \u003d t.toDukeSaveFormat() + \"\\n\";","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"takufunkai"},"content":"                Files.write(","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"takufunkai"},"content":"                        Path.of(DATA_FILEPATH), saveValue.getBytes(StandardCharsets.UTF_8), StandardOpenOption.APPEND","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"takufunkai"},"content":"                );","lastModifiedDate":"2022-02-14"},{"lineNumber":91,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Failed to save data: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":98,"author":{"gitId":"takufunkai"},"content":"     * Removes the item with saveId from the list of saved items in the data file.","lastModifiedDate":"2022-02-08"},{"lineNumber":99,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":100,"author":{"gitId":"takufunkai"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2022-02-08"},{"lineNumber":101,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":102,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"takufunkai"},"content":"    public void remove(DukeSavable task) {","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"takufunkai"},"content":"        String taskSaveFormat \u003d task.toDukeSaveFormat();","lastModifiedDate":"2022-02-08"},{"lineNumber":105,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":106,"author":{"gitId":"takufunkai"},"content":"            List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-02-08"},{"lineNumber":107,"author":{"gitId":"takufunkai"},"content":"                    Files.readAllLines(Path.of(DATA_FILEPATH), StandardCharsets.UTF_8)","lastModifiedDate":"2022-02-08"},{"lineNumber":108,"author":{"gitId":"takufunkai"},"content":"            );","lastModifiedDate":"2022-02-08"},{"lineNumber":109,"author":{"gitId":"takufunkai"},"content":"            for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":110,"author":{"gitId":"takufunkai"},"content":"                if (fileContent.get(i).equals(taskSaveFormat)) {","lastModifiedDate":"2022-02-08"},{"lineNumber":111,"author":{"gitId":"takufunkai"},"content":"                    fileContent.remove(i);","lastModifiedDate":"2022-02-08"},{"lineNumber":112,"author":{"gitId":"takufunkai"},"content":"                    break;","lastModifiedDate":"2022-02-08"},{"lineNumber":113,"author":{"gitId":"takufunkai"},"content":"                }","lastModifiedDate":"2022-02-08"},{"lineNumber":114,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":115,"author":{"gitId":"takufunkai"},"content":"            Files.write(Path.of(DATA_FILEPATH), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2022-02-08"},{"lineNumber":116,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":117,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Unable to remove task: \" + e.getMessage());","lastModifiedDate":"2022-02-08"},{"lineNumber":118,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":119,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":120,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":121,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":122,"author":{"gitId":"takufunkai"},"content":"     * Updates the item in the list of saved items in the data file.","lastModifiedDate":"2022-02-08"},{"lineNumber":123,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-08"},{"lineNumber":124,"author":{"gitId":"takufunkai"},"content":"     * @param updatedSave The task after it was updated.","lastModifiedDate":"2022-02-08"},{"lineNumber":125,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":126,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"takufunkai"},"content":"    public void update(DukeSavable updatedSave) {","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"takufunkai"},"content":"        int saveId \u003d Integer.parseInt(updatedSave.toDukeSaveFormat().split(\"\\\\|\")[0]);","lastModifiedDate":"2022-02-08"},{"lineNumber":129,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":130,"author":{"gitId":"takufunkai"},"content":"            List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-02-08"},{"lineNumber":131,"author":{"gitId":"takufunkai"},"content":"                    Files.readAllLines(Path.of(DATA_FILEPATH), StandardCharsets.UTF_8)","lastModifiedDate":"2022-02-08"},{"lineNumber":132,"author":{"gitId":"takufunkai"},"content":"            );","lastModifiedDate":"2022-02-08"},{"lineNumber":133,"author":{"gitId":"takufunkai"},"content":"            for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2022-02-08"},{"lineNumber":134,"author":{"gitId":"takufunkai"},"content":"                try {","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"takufunkai"},"content":"                    int currSaveId \u003d Integer.parseInt(fileContent.get(i).split(\"\\\\|\")[0]);","lastModifiedDate":"2022-02-08"},{"lineNumber":136,"author":{"gitId":"takufunkai"},"content":"                    if (currSaveId \u003d\u003d saveId) {","lastModifiedDate":"2022-02-08"},{"lineNumber":137,"author":{"gitId":"takufunkai"},"content":"                        fileContent.set(i, updatedSave.toDukeSaveFormat());","lastModifiedDate":"2022-02-08"},{"lineNumber":138,"author":{"gitId":"takufunkai"},"content":"                        break;","lastModifiedDate":"2022-02-08"},{"lineNumber":139,"author":{"gitId":"takufunkai"},"content":"                    }","lastModifiedDate":"2022-02-08"},{"lineNumber":140,"author":{"gitId":"takufunkai"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"takufunkai"},"content":"                    System.out.println(\"Failed to parse: \" + fileContent.get(i).split(\"\\\\|\")[0]);","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"takufunkai"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"takufunkai"},"content":"                }","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-02-08"},{"lineNumber":145,"author":{"gitId":"takufunkai"},"content":"            Files.write(Path.of(DATA_FILEPATH), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2022-02-08"},{"lineNumber":146,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":147,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Unable to update task: \" + e.getMessage());","lastModifiedDate":"2022-02-08"},{"lineNumber":148,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":149,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":150,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":151,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":152,"author":{"gitId":"takufunkai"},"content":"     * Restores the list of tasks saved on a previous execution of the Duke chat-bot into a \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"takufunkai"},"content":"     * object.","lastModifiedDate":"2022-01-28"},{"lineNumber":154,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":155,"author":{"gitId":"takufunkai"},"content":"     * @param emptyTasks The \u003ccode\u003eTaskList\u003c/code\u003e object being maintained by Duke.","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"takufunkai"},"content":"     * @throws DukeException Thrown if the restoration failed.","lastModifiedDate":"2022-01-28"},{"lineNumber":157,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":158,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":159,"author":{"gitId":"takufunkai"},"content":"    public void restore(TaskList emptyTasks) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"takufunkai"},"content":"        assert emptyTasks.getTasksCount() \u003d\u003d 0 : \"TaskList given to restore should be empty\";","lastModifiedDate":"2022-02-08"},{"lineNumber":161,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":162,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"takufunkai"},"content":"            File saveFile \u003d new File(DATA_FILEPATH);","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"takufunkai"},"content":"            Scanner sc \u003d new Scanner(saveFile);","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"takufunkai"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"takufunkai"},"content":"                String savedTask \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"takufunkai"},"content":"                String[] savedTaskData \u003d savedTask.split(\"\\\\|\");","lastModifiedDate":"2022-02-08"},{"lineNumber":168,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":169,"author":{"gitId":"takufunkai"},"content":"                if (savedTaskData.length \u003c 4) {","lastModifiedDate":"2022-02-08"},{"lineNumber":170,"author":{"gitId":"takufunkai"},"content":"                    throw new DukeException(\"Saved item has incorrect format\");","lastModifiedDate":"2022-01-26"},{"lineNumber":171,"author":{"gitId":"takufunkai"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":173,"author":{"gitId":"takufunkai"},"content":"                TaskCode code \u003d TaskCode.valueOf(savedTaskData[1]);","lastModifiedDate":"2022-02-08"},{"lineNumber":174,"author":{"gitId":"takufunkai"},"content":"                boolean isDone \u003d savedTaskData[2].equals(\"1\");","lastModifiedDate":"2022-02-08"},{"lineNumber":175,"author":{"gitId":"takufunkai"},"content":"                String taskName \u003d savedTaskData[3];","lastModifiedDate":"2022-02-08"},{"lineNumber":176,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":177,"author":{"gitId":"takufunkai"},"content":"                UserTask newTask;","lastModifiedDate":"2022-01-31"},{"lineNumber":178,"author":{"gitId":"takufunkai"},"content":"                try {","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"takufunkai"},"content":"                    switch (code) {","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"takufunkai"},"content":"                    case T:","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"takufunkai"},"content":"                        newTask \u003d new ToDo(taskName);","lastModifiedDate":"2022-01-31"},{"lineNumber":182,"author":{"gitId":"takufunkai"},"content":"                        break;","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"takufunkai"},"content":"                    case D:","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"takufunkai"},"content":"                        String date \u003d savedTaskData[4];","lastModifiedDate":"2022-02-08"},{"lineNumber":185,"author":{"gitId":"takufunkai"},"content":"                        newTask \u003d new Deadline(taskName, date);","lastModifiedDate":"2022-02-08"},{"lineNumber":186,"author":{"gitId":"takufunkai"},"content":"                        break;","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"takufunkai"},"content":"                    case E:","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"takufunkai"},"content":"                        date \u003d savedTaskData[4];","lastModifiedDate":"2022-02-08"},{"lineNumber":189,"author":{"gitId":"takufunkai"},"content":"                        newTask \u003d new Event(taskName, date);","lastModifiedDate":"2022-02-08"},{"lineNumber":190,"author":{"gitId":"takufunkai"},"content":"                        break;","lastModifiedDate":"2022-01-26"},{"lineNumber":191,"author":{"gitId":"takufunkai"},"content":"                    default:","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"takufunkai"},"content":"                        throw new DukeException(\"Unknown task type for saved item.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"takufunkai"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":194,"author":{"gitId":"takufunkai"},"content":"                } catch (UserTaskException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"takufunkai"},"content":"                    throw new DukeException(\"Failed to restore save file: \" + e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":196,"author":{"gitId":"takufunkai"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":198,"author":{"gitId":"takufunkai"},"content":"                if (isDone) {","lastModifiedDate":"2022-01-31"},{"lineNumber":199,"author":{"gitId":"takufunkai"},"content":"                    newTask.setDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":200,"author":{"gitId":"takufunkai"},"content":"                }","lastModifiedDate":"2022-01-31"},{"lineNumber":201,"author":{"gitId":"takufunkai"},"content":"                emptyTasks.addTask(newTask);","lastModifiedDate":"2022-01-31"},{"lineNumber":202,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":203,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":204,"author":{"gitId":"takufunkai"},"content":"            // Clear the existing data file and update it with updated saveId-tasks.","lastModifiedDate":"2022-02-08"},{"lineNumber":205,"author":{"gitId":"takufunkai"},"content":"            saveAndOverwrite(emptyTasks);","lastModifiedDate":"2022-02-08"},{"lineNumber":206,"author":{"gitId":"takufunkai"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":207,"author":{"gitId":"takufunkai"},"content":"            System.out.println(\"Failed to load save-file: \" + e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"takufunkai":210}},{"path":"src/main/java/duke/usertask/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":" * The Deadline class encapsulates a task that has a deadline.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"public class Deadline extends UserTaskWithTime {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"     * Constructs a new Deadline object.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"     * @param name The name of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"     * @param dateTime The deadline of the task in the proper dateTime format.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"     * @throws UserTaskException If the specified dateTime is not in the correct format that the chat-bot understands.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    public Deadline(String name, String dateTime) throws UserTaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        super(name, dateTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"     * Supplies \"D\" to the parent string\u0027s unformatted string, to complete the DukeSaveFormat string.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    public String toDukeSaveFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"        return String.format(super.toDukeSaveFormat(), \"D\");","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     * Supplies the correct Deadline-specific information to the display string.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"        return String.format(super.toString(), \"[D]\", \"by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"takufunkai":35}},{"path":"src/main/java/duke/usertask/DukeSavable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"public interface DukeSavable {","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"    String toDukeSaveFormat();","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"takufunkai":5}},{"path":"src/main/java/duke/usertask/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":" * The Deadline class encapsulates a task that has a deadline.","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"public class Event extends UserTaskWithTime {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"     * Constructs a new Event object.","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"     * @param name The name of the Event task.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"     * @param dateTime The dateTime of the occurrence of the Event in string format.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"     * @throws UserTaskException If the specified dateTime is not in the correct format that the chat-bot understands.","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    public Event(String name, String dateTime) throws UserTaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        super(name, dateTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"     * Supplies \"E\" to the parent string\u0027s unformatted string, to complete the DukeSaveFormat string.","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    public String toDukeSaveFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"        return String.format(super.toDukeSaveFormat(), \"E\");","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     * Supplies the correct Event-specific information to the display string.","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"        return String.format(super.toString(), \"[E]\", \"at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"takufunkai":35}},{"path":"src/main/java/duke/usertask/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import java.util.List;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" * The TaskList class encapsulates the list of tasks that the chat-bot has to maintain, and which are saved from","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":" * the user. It includes the necessary information, which is a \u003ccode\u003eList\u003c/code\u003e of \u003ccode\u003eUserTask\u003c/code\u003es, and also","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":" * the methods that are required to perform CRUD actions on the tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":" * UserTasks stored in the List object are 1-indexed -- index 0 of \u003ccode\u003etasks\u003c/code\u003e is null.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"public class TaskList implements DukeSavable {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    private final List\u003cUserTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"     * Constructs the TaskList object, and initializes a List containing UserTasks of size","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"     * \u003ccode\u003einitialCapacity\u003c/code\u003e.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"     * @param initialCapacity The initial capacity of the list of UserTasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    public TaskList(int initialCapacity) {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(initialCapacity + 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"        this.tasks.add(null); // Index 0 is empty","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"     *  Removes task from the List, which index is equal to the specified number.","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"     * @param number The index of the task to be removed.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"     * @return The deleted UserTask.","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    public UserTask deleteTask(int number) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"        return this.tasks.remove(number);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"     * Returns the total number of UserTasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"     * @return The total number of UserTasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"    public int getTasksCount() {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"        return tasks.size() - 1; // Account for empty index 0","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"     * @param number The index of the task to be marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"     * @return The UserTask that has been marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"    public UserTask markTask(int number) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"        UserTask targetTask \u003d this.tasks.get(number);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"        targetTask.setDone();","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"        return targetTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"     * Un-marks the task at the specified index as done.","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"     * @param number The index of the task to be un-marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"     * @return The UserTask that has been un-marked.","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"takufunkai"},"content":"    public UserTask unmarkTask(int number) {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"takufunkai"},"content":"        UserTask targetTask \u003d this.tasks.get(number);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"takufunkai"},"content":"        targetTask.setUndone();","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"takufunkai"},"content":"        return targetTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"takufunkai"},"content":"     * Adds the UserTask to the list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"takufunkai"},"content":"     * @param task The UserTask to be added to the list of tasks.","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":79,"author":{"gitId":"takufunkai"},"content":"    public void addTask(UserTask task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"takufunkai"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"takufunkai"},"content":"     * Returns the TaskList with tasks whose name matches the given task-name search query.","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"takufunkai"},"content":"     * @param taskName The specified search query that will be matched against the Task\u0027s name.","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"takufunkai"},"content":"     * @return The filtered TaskList.","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"takufunkai"},"content":"    public TaskList filterByName(String taskName) {","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"takufunkai"},"content":"        TaskList filteredTaskList \u003d new TaskList(100);","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"takufunkai"},"content":"        filteredTaskList.tasks.addAll(","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"takufunkai"},"content":"                this.tasks.subList(1, tasks.size())","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"takufunkai"},"content":"                        .stream()","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"takufunkai"},"content":"                        .filter((task) -\u003e task.nameContains(taskName))","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"takufunkai"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"takufunkai"},"content":"        return filteredTaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":100,"author":{"gitId":"takufunkai"},"content":"     * Returns the TaskList with tasks whose name matches the given task-date search query. Tasks with no","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"takufunkai"},"content":"     * time associated with it (i.e. does not inherit from class UserTaskWithTime) will not be included.","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":103,"author":{"gitId":"takufunkai"},"content":"     * @param date The specified search query that will be matched against the Task\u0027s date (if any).","lastModifiedDate":"2022-01-31"},{"lineNumber":104,"author":{"gitId":"takufunkai"},"content":"     * @return The filtered TaskList.","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":106,"author":{"gitId":"takufunkai"},"content":"    public TaskList filterByDate(LocalDateTime date) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"takufunkai"},"content":"        TaskList filteredTaskList \u003d new TaskList(100);","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"takufunkai"},"content":"            for (UserTask currTask : tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"takufunkai"},"content":"                if (currTask instanceof UserTaskWithTime","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"takufunkai"},"content":"                        \u0026\u0026 ((UserTaskWithTime) currTask).isDated(date)) {","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"takufunkai"},"content":"                    filteredTaskList.addTask(currTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"takufunkai"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"takufunkai"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"takufunkai"},"content":"        } catch (UserTaskException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"takufunkai"},"content":"            throw new DukeException(\"Failed to get filtered tasks: \" + e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"takufunkai"},"content":"        return filteredTaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"takufunkai"},"content":"     * Returns each of the tasks in the TaskList in DukeSave format.","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"takufunkai"},"content":"     * @return A string of all the tasks in the TaskList in DukeSave format.","lastModifiedDate":"2022-01-31"},{"lineNumber":125,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":126,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"takufunkai"},"content":"    public String toDukeSaveFormat() {","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"takufunkai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"takufunkai"},"content":"        for (int i \u003d 1; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"takufunkai"},"content":"            sb.append(tasks.get(i).toDukeSaveFormat()).append(\"\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":131,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"takufunkai"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"takufunkai"},"content":"     * Returns a user-friendly indexed list of the tasks that are being stored in the TaskList.","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"takufunkai"},"content":"     * @return An indexed list of the stored tasks, and their information and states.","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":140,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"takufunkai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"takufunkai"},"content":"        for (int i \u003d 1; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"takufunkai"},"content":"            sb.append(i).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"takufunkai"},"content":"        return sb.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"takufunkai":148}},{"path":"src/main/java/duke/usertask/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"public class ToDo extends UserTask {","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"     * Constructs a ToDo object.","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"     * Supplies \"T\" to the parent string\u0027s unformatted string, to complete the DukeSaveFormat string.","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    public String toDukeSaveFormat() {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        return String.format(super.toDukeSaveFormat(), \"T\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"     * Supplies the correct ToDo-specific information to the display string.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"takufunkai":30}},{"path":"src/main/java/duke/usertask/UserTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":" * The UserTask abstract class encapsulates the tasks that a user submits to the chat-bot. It maintains information","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":" * such as the name and isDone status of the task. It provides several methods to update the state of the task.","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"public abstract class UserTask implements DukeSavable {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"    private static int saveIdSerial \u003d 0;","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    private final String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    private final int saveId;","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    UserTask(String name) {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        this.saveId \u003d saveIdSerial;","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"        saveIdSerial++;","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"     * Sets the task as done.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"     * Sets the task as undone.","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"    public void setUndone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"     * Checks if the task\u0027s name contains the given query.","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"     * @param query The specified query to be matched against.","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"     * @return True if the match is successful.","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"    public boolean nameContains(String query) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        return name.toLowerCase(Locale.ROOT).contains(query.toLowerCase(Locale.ROOT));","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"     * Returns the string representation of the task in DukeSaveFormat.","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"     * @return The string representation of the task in DUkeSaveFormat.","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"    public String toDukeSaveFormat() {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"        return this.saveId + \"|%s|\" + (isDone ? \"1\" : \"0\") + \"|\" + name;","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"     * Returns the user-friendly string representation of this task.","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"     * @return Returns a string that represents this task which is user-friendly.","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"takufunkai":66}},{"path":"src/main/java/duke/usertask/UserTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":" * UserTaskException encapsulate the invalid arguments that is being supplied to UserTasks when instantiating","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":" * objects of that type.","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"public class UserTaskException extends Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"     * Constructs a UserTaskException with the respective error message.","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"     * @param errorMessage The message error that was encountered.","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    public UserTaskException(String errorMessage) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":16}},{"path":"src/main/java/duke/usertask/UserTaskWithTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.utils.Utils;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" * The UserTaskWithTime class encapsulates Tasks that have some dateTime associated with them.","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"public abstract class UserTaskWithTime extends UserTask {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    private static final DateTimeFormatter TO_DISPLAY_DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"    UserTaskWithTime(String name, String dateTime) throws UserTaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        super(name);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        String[] dateTimeSplit \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"            this.dateTime \u003d dateTimeSplit.length \u003e 1","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"                    ? Utils.parseToLocalDateTime(dateTimeSplit[0], dateTimeSplit[1])","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"                    : Utils.parseToLocalDateTime(dateTimeSplit[0]);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"            throw new UserTaskException(\"Unable to parse date-time. \"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"                    + \"Please ensure it is of the following format: \"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"                    + Utils.DATE_FORMAT + \" \" + Utils.TIME_FORMAT);","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"     * Checks if the UserTaskWithTime\u0027s associated dateTime is equal to the given date. Equality is determined by","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"     * whether they fall on the same calendar date, regardless of time.","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"     * @param date The date to match this object against.","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"     * @return True if the date of this object is the same as the specified date, false if otherwise.","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"     * @throws UserTaskException If the specified date is of the wrong format.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    public boolean isDated(LocalDateTime date) throws UserTaskException {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"            return this.dateTime.toLocalDate().isEqual(date.toLocalDate());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"            throw new UserTaskException(\"Unable to parse date. \"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"                    + \"Please ensure it is of the following format: \"","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"                    + Utils.DATE_FORMAT);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"     * Adds its dateTime in string Duke savable format to the DukeSaveFormat string.","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"    public String toDukeSaveFormat() {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"        return super.toDukeSaveFormat() + \"|\" + Utils.formatLocalDateTime(this.dateTime);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"     * Add its current dateTime to the display string.","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"        return \"%s\" + super.toString()","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"                + \" (%s: \" + Utils.formatLocalDateTime(this.dateTime, TO_DISPLAY_DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":67}},{"path":"src/main/java/duke/utils/DukeResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.utils;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":" * The DukeResponse class encapsulates the data that might be returned by an execution of the Duke bot.","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"public class DukeResponse {","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"     * The possible response statuses of a DukeResponse that is received from executing some command in Duke.","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"    public enum ResponseStatus { SUCCESS, FAIL, EXIT }","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    private final ResponseStatus status;","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    private final String message;","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"     * Creates an instance of the DukeResponse object.","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"     * @param status The status of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"     * @param message The message associated with the execution and its status.","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse(ResponseStatus status, String message) {","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"     * Creates an instance of the DukeResponse object which has no message.","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"     * @param status The status of the execution.","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    public DukeResponse(ResponseStatus status) {","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"        this.message \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"    public ResponseStatus getStatus() {","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        return this.status;","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"    public String getMessage() {","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"        return this.message;","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"            return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"        if (!(other instanceof DukeResponse)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"        DukeResponse otherResponse \u003d (DukeResponse) other;","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"        boolean isSameStatus \u003d this.status.equals(otherResponse.status);","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"        boolean isSameMessage \u003d this.message.equals(otherResponse.message);","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"        return isSameStatus \u0026\u0026 isSameMessage;","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"    public String toString() {","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"        return String.format(\"Status: %s, Message: %s\", this.status, this.message);","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"takufunkai":63}},{"path":"src/main/java/duke/utils/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.utils;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"public final class Utils {","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"     * The date string format of date-time objects that is understandable and savable by the chat-bot.","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    public static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"     * The time string format of date-time objects that is understandable and savable by the chat-bot.","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    public static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    private static final DateTimeFormatter COMMAND_DATE_FORMATTER \u003d","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"            DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    private static final DateTimeFormatter COMMAND_DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"            DateTimeFormatter.ofPattern(DATE_FORMAT + \" \" + TIME_FORMAT);","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"     * Returns the string representation of the specified LocalDateTime, formatted by the specified formatter.","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"     * @param ldt The LocalDateTime object to format to string.","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"     * @param formatter The formatter to apply onto ldt.","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"     * @return The string representation of the LocalDateTime that is formatted by the given formatter.","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    public static String formatLocalDateTime(LocalDateTime ldt, DateTimeFormatter formatter) {","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"        return ldt.format(formatter);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"     * Returns the string representation of the specified LocalDateTime, formatted by the default formatter that","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"     * the chat-bot understands and is able to save.","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"     * @param ldt The LocalDateTime object to format to string.","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"     * @return The string representation of the LocalDateTime that is formatted by the given formatter.","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"    public static String formatLocalDateTime(LocalDateTime ldt) {","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        return ldt.format(COMMAND_DATE_TIME_FORMATTER);","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"     * Parses the given date and time in string format into LocalDateTime. The specified date and time \u003cb\u003emust\u003c/b\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"     * be the correct format that the chat-bot understands.","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"     * @param date The date to be parsed.","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"     * @param time The time to be parsed.","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"     * @return The LocalDateTime that is parsed through the specified strings.","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"    public static LocalDateTime parseToLocalDateTime(String date, String time) {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"        return LocalDateTime.parse(date + \" \" + time, COMMAND_DATE_TIME_FORMATTER);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"takufunkai"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"takufunkai"},"content":"     * Parses the given date in string format into LocalDateTime. The specified date\u003cb\u003emust\u003c/b\u003e","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"takufunkai"},"content":"     * be the correct format that the chat-bot understands. The LocalDateTime returned is automatically set at","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"takufunkai"},"content":"     * time \u003d 00:00.","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"takufunkai"},"content":"     *","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"takufunkai"},"content":"     * @param date The date to be parsed.","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"takufunkai"},"content":"     * @return The LocalDateTime that is parsed through the specified strings.","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"takufunkai"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"takufunkai"},"content":"    public static LocalDateTime parseToLocalDateTime(String date) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"takufunkai"},"content":"        return LocalDate.parse(date, COMMAND_DATE_FORMATTER).atStartOfDay();","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"takufunkai":66}},{"path":"src/main/resources/view/AddClientFormBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.ComboBox?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"\u003cfx:root alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" scaleShape\u003d\"false\" style\u003d\"-fx-padding: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"        \u003cVBox spacing\u003d\"5\" style\u003d\"-fx-background-color: #e0e0e0; -fx-background-radius: 10; -fx-effect: dropshadow(three-pass-box, black, 7, 0, 0, 0); -fx-padding: 5;\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"         \u003cHBox prefWidth\u003d\"400.0\" spacing\u003d\"20.0\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"                  \u003cTextField fx:id\u003d\"firstNameField\" onAction\u003d\"#handleUserInput\" onKeyTyped\u003d\"#hideAdditionalInformation\" prefHeight\u003d\"41.0\" prefWidth\u003d\"200.0\" promptText\u003d\"First Name*\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"                  \u003cTextField fx:id\u003d\"lastNameField\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"200.0\" promptText\u003d\"Last Name\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"         \u003cHBox prefWidth\u003d\"200.0\" spacing\u003d\"20.0\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"                  \u003cTextField fx:id\u003d\"phoneNumberField\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"200.0\" promptText\u003d\"Phone Number\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"                  \u003cComboBox fx:id\u003d\"genderSelectField\" prefHeight\u003d\"41.0\" prefWidth\u003d\"200.0\" promptText\u003d\"Gender\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"                  \u003cButton fx:id\u003d\"submitButton\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"200.0\" text\u003d\"Add client\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"            \u003cLabel fx:id\u003d\"additionalInformation\" style\u003d\"-fx-text-fill: #FF0000\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"   \u003ccursor\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"      \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"   \u003c/cursor\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"takufunkai":33}},{"path":"src/main/resources/view/ClientsWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"573.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"      \u003cButton layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#toggleShowClientForm\" prefHeight\u003d\"39.0\" prefWidth\u003d\"67.0\" text\u003d\"Add\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"      \u003cListView fx:id\u003d\"clientListView\" layoutX\u003d\"10.0\" layoutY\u003d\"56.0\" prefHeight\u003d\"508.0\" prefWidth\u003d\"379.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"takufunkai":13}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" scaleShape\u003d\"false\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" contentDisplay\u003d\"TOP\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"100.0\" style\u003d\"-fx-label-padding: 5 20; -fx-background-color: #e0e0e0; -fx-background-insets: 5; -fx-background-radius: 20; -fx-border-width: 1; -fx-border-color: #aaa; -fx-border-radius: 20; -fx-border-insets: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"            \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"            \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"   \u003ccursor\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"      \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"   \u003c/cursor\u003e","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"takufunkai":27}},{"path":"src/main/resources/view/DukeWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"573.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" stylesheets\u003d\"@DukeWindow.css\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" styleClass\u003d\"scroll-pane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-1.0\" prefHeight\u003d\"536.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"518.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-padding: 10;\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"takufunkai":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"      \u003cMenuBar fx:id\u003d\"menuBar\" prefHeight\u003d\"25.0\" prefWidth\u003d\"400.0\" AnchorPane.topAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"        \u003cmenus\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"          \u003cMenu fx:id\u003d\"menu\" mnemonicParsing\u003d\"false\" text\u003d\"Menu\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"            \u003citems\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"                \u003cMenuItem fx:id\u003d\"dukeMenuItem\" mnemonicParsing\u003d\"false\" text\u003d\"Duke\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"                \u003cMenuItem fx:id\u003d\"clientsMenuItem\" mnemonicParsing\u003d\"false\" text\u003d\"Clients\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"            \u003c/items\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        \u003c/menus\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"      \u003c/MenuBar\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"takufunkai":21}},{"path":"src/test/java/duke/command/system/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.system;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" * Tests the ByeCommand.","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"public class ByeCommandTest {","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    void execute() throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        DukeResponse expected \u003d new DukeResponse(DukeResponse.ResponseStatus.EXIT);","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"        DukeResponse actual \u003d new ByeCommand().execute();","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"takufunkai":21}},{"path":"src/test/java/duke/command/system/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.system;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.command.usertask.DeadlineCommand;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    void execute_dateTimeInput() throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        TasksStorageStub storageStub \u003d TasksStorageStub.getStub();","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        TaskList tasks \u003d new TaskList(1);","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        String description \u003d \"Test 1\";","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        String inputDate \u003d \"27-09-1999 02:00\";","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"        String taskString \u003d String.format(\"[D][ ] %s (by: Sep 27 1999 02:00 AM)\", description);","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"        DukeResponse expected \u003d new DukeResponse(","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"                DukeResponse.ResponseStatus.SUCCESS,","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"                \"Added task #1: \" + taskString + \"\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"        );","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"        DukeResponse actual \u003d new DeadlineCommand(description, inputDate)","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"                .supply(storageStub, tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"                .execute();","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"    void execute_onlyDateInput() throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"        TasksStorageStub storageStub \u003d TasksStorageStub.getStub();","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        TaskList tasks \u003d new TaskList(1);","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"        String description \u003d \"Test 1\";","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        String inputDate \u003d \"27-09-1999\";","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"        String taskString \u003d String.format(\"[D][ ] %s (by: Sep 27 1999 12:00 AM)\", description);","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        DukeResponse expected \u003d new DukeResponse(","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"                DukeResponse.ResponseStatus.SUCCESS,","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"                \"Added task #1: \" + taskString + \"\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"        );","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"        DukeResponse actual \u003d new DeadlineCommand(description, inputDate)","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"                .supply(storageStub, tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"                .execute();","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"takufunkai":54}},{"path":"src/test/java/duke/command/system/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.system;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.command.usertask.EventCommand;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"public class EventCommandTest {","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    void execute_dateTimeInput() throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        TasksStorageStub storageStub \u003d TasksStorageStub.getStub();","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        TaskList tasks \u003d new TaskList(1);","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        String description \u003d \"Test 1\";","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        String inputDate \u003d \"27-09-1999 02:00\";","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"        String taskString \u003d String.format(\"[E][ ] %s (at: Sep 27 1999 02:00 AM)\", description);","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"        DukeResponse expected \u003d new DukeResponse(","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"                DukeResponse.ResponseStatus.SUCCESS,","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"                \"Added task #1: \" + taskString + \"\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"        );","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"        DukeResponse actual \u003d new EventCommand(description, inputDate)","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"                .supply(storageStub, tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"                .execute();","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"    void execute_onlyDateInput() throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"        TasksStorageStub storageStub \u003d TasksStorageStub.getStub();","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        TaskList tasks \u003d new TaskList(1);","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"        String description \u003d \"Test 1\";","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        String inputDate \u003d \"27-09-1999\";","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"        String taskString \u003d String.format(\"[E][ ] %s (at: Sep 27 1999 12:00 AM)\", description);","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        DukeResponse expected \u003d new DukeResponse(","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"                DukeResponse.ResponseStatus.SUCCESS,","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"                \"Added task #1: \" + taskString + \"\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"        );","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"        DukeResponse actual \u003d new EventCommand(description, inputDate)","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"                .supply(storageStub, tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"                .execute();","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"takufunkai"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"takufunkai":54}},{"path":"src/test/java/duke/command/system/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.system;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.command.usertask.ListCommand;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.Deadline;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.Event;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.ToDo;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.UserTaskException;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    void execute() throws UserTaskException, DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        TasksStorageStub storageStub \u003d TasksStorageStub.getStub();","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"        TaskList tasks \u003d new TaskList(5);","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"        tasks.addTask(new ToDo(\"Test 1\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"        String inputDate \u003d \"27-09-1999\";","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"        String inputDateTime \u003d \"27-09-1999 14:00\";","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"        tasks.addTask(new Event(\"Test 2\", inputDate));","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"        tasks.addTask(new Event(\"Test 3\", inputDateTime));","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"        tasks.addTask(new Deadline(\"Test 4\", inputDate));","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"        tasks.addTask(new Deadline(\"Test 5\", inputDateTime));","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"        String[] expectedTaskOutput \u003d {","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"            \"[T][ ] Test 1\",","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"            \"[E][ ] Test 2 (at: Sep 27 1999 12:00 AM)\",","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"takufunkai"},"content":"            \"[E][ ] Test 3 (at: Sep 27 1999 02:00 PM)\",","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"takufunkai"},"content":"            \"[D][ ] Test 4 (by: Sep 27 1999 12:00 AM)\",","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"takufunkai"},"content":"            \"[D][ ] Test 5 (by: Sep 27 1999 02:00 PM)\"","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"takufunkai"},"content":"        };","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"takufunkai"},"content":"        StringBuilder expectedSb \u003d new StringBuilder();","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"takufunkai"},"content":"        expectedSb.append(\"Alright, here are your tasks.\")","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"takufunkai"},"content":"                .append(\"\\n----------\\nTOTAL: 5 tasks\\n----------\\n\");","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"takufunkai"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"takufunkai"},"content":"            expectedSb.append(i + 1).append(\". \").append(expectedTaskOutput[i]).append(\"\\n\");","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"takufunkai"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"takufunkai"},"content":"        DukeResponse expected \u003d new DukeResponse(DukeResponse.ResponseStatus.SUCCESS, expectedSb.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"takufunkai"},"content":"        DukeResponse actual \u003d new ListCommand().supply(storageStub, tasks).execute();","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"takufunkai"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"takufunkai":51}},{"path":"src/test/java/duke/command/system/TasksStorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.system;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.DukeSavable;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"public class TasksStorageStub implements Storage {","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"    private static final TasksStorageStub STORAGE_STUB \u003d new TasksStorageStub();","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    private TasksStorageStub() {","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    public static TasksStorageStub getStub() {","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        return TasksStorageStub.STORAGE_STUB;","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"    public void save(DukeSavable... tasks) {","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"    public void saveAndOverwrite(TaskList tasks) {","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"    public void remove(DukeSavable task) {","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    public void update(DukeSavable updatedSave) {","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"takufunkai"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"takufunkai"},"content":"    public void restore(TaskList emptyTasks) throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"takufunkai":33}},{"path":"src/test/java/duke/command/system/ToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.command.system;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":"import duke.command.usertask.ToDoCommand;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":"import duke.usertask.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"import duke.utils.DukeResponse;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"    void execute() throws DukeException {","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        TasksStorageStub storageStub \u003d TasksStorageStub.getStub();","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        TaskList tasks \u003d new TaskList(1);","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        String description \u003d \"Test 1\";","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        String taskString \u003d \"[T][ ] \" + description;","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"        DukeResponse expected \u003d new DukeResponse(","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"                DukeResponse.ResponseStatus.SUCCESS, \"Added task #1: \" + taskString + \"\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"        );","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"        DukeResponse actual \u003d new ToDoCommand(description)","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"                .supply(storageStub, tasks)","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"takufunkai"},"content":"                .execute();","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"takufunkai"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"takufunkai":29}},{"path":"src/test/java/duke/usertask/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * DeadlineTest tests Deadline objects.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    void toDukeSaveFormat() throws UserTaskException {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"        SaveFormatParser parser \u003d new SaveFormatParser();","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        Deadline d1 \u003d new Deadline(\"Wash dishes\", \"27-09-1999\");","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        assertEquals(\"D|0|Wash dishes|27-09-1999 00:00\", parser.getSaveValue(d1));","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        d1.setDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        assertEquals(\"D|1|Wash dishes|27-09-1999 00:00\", parser.getSaveValue(d1));","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"        Deadline d2 \u003d new Deadline(\"Water plants\", \"31-01-2011 15:30\");","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"        assertEquals(\"D|0|Water plants|31-01-2011 15:30\", parser.getSaveValue(d2));","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"takufunkai":24}},{"path":"src/test/java/duke/usertask/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * EventTest tests Event objects.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"public class EventTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    void toDukeSaveFormat() throws UserTaskException {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"        SaveFormatParser parser \u003d new SaveFormatParser();","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        Event e1 \u003d new Event(\"Conference talk\", \"19-09-2030\");","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        assertEquals(\"E|0|Conference talk|19-09-2030 00:00\", parser.getSaveValue(e1));","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        e1.setDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        assertEquals(\"E|1|Conference talk|19-09-2030 00:00\", parser.getSaveValue(e1));","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"        Event e2 \u003d new Event(\"Presentation day (testing)\", \"31-01-2011 15:30\");","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"takufunkai"},"content":"        assertEquals(\"E|0|Presentation day (testing)|31-01-2011 15:30\", parser.getSaveValue(e2));","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"takufunkai":24}},{"path":"src/test/java/duke/usertask/SaveFormatParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":" * The SaveFormatParser class is meant to extract the important client-facing information from the Duke toSaveFormat","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":" * method return String. Specifically, it removes the saveId value from the String. This is important as:","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":" * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":" * 1. A task\u0027s saveId is only important for identification during save-file updates that occur during the program","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * execution.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" * 2. Ensuring that IDs are created in a consistent manner is unimportant.","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":" * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":" * This is to ensure that we can test the important aspects of the save-string without affecting the test quality.","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":" * Also, the id field itself is important, and is implicitly tested through the parsing.","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"public class SaveFormatParser {","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"    String getSaveValue(UserTask saveTask) {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        return saveTask.toDukeSaveFormat().split(\"\\\\|\", 2)[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"takufunkai":18}},{"path":"src/test/java/duke/usertask/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"takufunkai"},"content":"package duke.usertask;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"takufunkai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"takufunkai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"takufunkai"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"takufunkai"},"content":" * ToDoTest tests ToDo objects.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"takufunkai"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"takufunkai"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"takufunkai"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"takufunkai"},"content":"    void toDukeSaveFormat() {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"takufunkai"},"content":"        SaveFormatParser parser \u003d new SaveFormatParser();","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"takufunkai"},"content":"        ToDo t1 \u003d new ToDo(\"Wash dishes\");","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"takufunkai"},"content":"        assertEquals(\"T|0|Wash dishes\", parser.getSaveValue(t1));","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"takufunkai"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"takufunkai"},"content":"        t1.setDone();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"takufunkai"},"content":"        assertEquals(\"T|1|Wash dishes\", parser.getSaveValue(t1));","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"takufunkai"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"takufunkai"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"takufunkai":21}}]
