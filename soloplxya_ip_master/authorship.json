[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"# duke.Duke project template","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"soloplxya":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"checkstyle {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"soloplxya":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Represents a Duke chat bot","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    private final TextUi ui;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a duke.Duke object with a directoryPath and filePath of the storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     * @param directoryPath directoryPath to storage file","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * @param filePath filePath to storage file","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    public Duke(String directoryPath, String filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        TaskList tasks1;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        this.ui \u003d new TextUi();","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        this.storage \u003d new Storage(directoryPath, filePath);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"            tasks1 \u003d new TaskList(storage.readFromDukeFile());","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"            tasks1 \u003d new TaskList();","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-13"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        this.tasks \u003d tasks1;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the response from running the Duke Program","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"            Command c \u003d parser.parseInput(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"soloplxya":39,"-":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.commands.AddDeadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.commands.AddEvent;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.commands.AddToDo;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import duke.commands.Bye;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import duke.commands.Delete;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import duke.commands.Find;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import duke.commands.List;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import duke.commands.Mark;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import duke.commands.Unmark;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.TaskException;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":" * Represents a parser object that parses commands that the user types into the GUI","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    enum CommandType {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND, LIST, BYE;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        static CommandType getCommandType(String input) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"            for (CommandType type : CommandType.values()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"                if (input.equalsIgnoreCase(type.toString())) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"                    return type;","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"     * Method that takes in a command Type and index and performs the appropriate task action","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     * @param commandType type of command user has inputted (i.e. bye, list...)","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"     * @param index taskId","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if task cannot be found within the tasklist","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"     * @throws NumberFormatException if taskId is not a number.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    public Command taskAction(CommandType commandType, String... index) throws DukeException, NumberFormatException {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        String taskIdParameter \u003d index[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"            int taskId \u003d Integer.parseInt(taskIdParameter);","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"            boolean withinBoundary \u003d taskId \u003e 0 \u0026\u0026 taskId \u003c (TaskList.getTaskSize() + 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"            if (!(withinBoundary)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"                throw new TaskException(\"UNFOUND_TASK\");","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"            switch (commandType) {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"            case DELETE:","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"                return new Delete(taskId);","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"                return new Unmark(taskId);","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"            case MARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"                return new Mark(taskId);","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"                assert false : commandType;","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"            throw new TaskException(\"INVALID_TASKID\");","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"     * Method that parses the string input and performs the correct action","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"     * @param input user input into the command lines","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"     * @return a Command that can be executed to perform an action","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"    public Command parseInput(String input) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"        CommandType commandType \u003d CommandType.getCommandType(inputArray[0]);","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"            return parseSingleCommand(commandType);","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"        if (inputArray.length \u003e 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"            StringBuilder taskDetailsBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"            for (int i \u003d 1; i \u003c inputArray.length; i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"                if (i !\u003d inputArray.length - 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"                    taskDetailsBuilder.append(inputArray[i]).append(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"                } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"                    taskDetailsBuilder.append(inputArray[i]);","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"            String taskDetails \u003d taskDetailsBuilder.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"            return parseMultiCommand(commandType, inputArray[1], taskDetails);","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"        assert false;","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"     * Method that helps to parse multi-commands (for eg. todo 1, event eat /at 12-12-2021)","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"     * @param commandType CommandType that user has keyed in","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"     * @param taskId index of task (used for mark, find, delete)","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"     * @param taskDetails details of task (used for todo, event, deadline)","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"     * @return a Command that can be executed to perform the multi command action","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException when the command is invalid","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"    public Command parseMultiCommand(CommandType commandType, String taskId, String taskDetails) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"        String date \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"        String dateTime \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"        // Process Event \u0026 Deadline commands","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"        if (taskDetails.contains(\"/by\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"            try {","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"                description \u003d taskDetails.split(\"/by\", 2)[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"                date \u003d taskDetails.split(\"/by\", 2)[1].substring(1);","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"                throw new DukeException(\"Missing deadline date or description!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"        } else if (taskDetails.contains(\"/at\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"            try {","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"                description \u003d taskDetails.split(\"/at\", 2)[0];","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"                dateTime \u003d taskDetails.split(\"/at\", 2)[1].substring(1);","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"                throw new DukeException(\"Missing event date or description!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"        switch (commandType) {","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"        case FIND:","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"            return new Find(taskId);","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"        case DELETE:","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"            return taskAction(CommandType.DELETE, taskId);","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"        case UNMARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"            return taskAction(CommandType.UNMARK, taskId);","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"        case MARK:","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"            return taskAction(CommandType.MARK, taskId);","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"soloplxya"},"content":"        case TODO:","lastModifiedDate":"2022-01-23"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"            return new AddToDo(taskDetails);","lastModifiedDate":"2022-02-05"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-23"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"            return new AddDeadline(description, date);","lastModifiedDate":"2022-02-05"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"        case EVENT:","lastModifiedDate":"2022-01-23"},{"lineNumber":146,"author":{"gitId":"soloplxya"},"content":"            return new AddEvent(description, dateTime);","lastModifiedDate":"2022-02-05"},{"lineNumber":147,"author":{"gitId":"soloplxya"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":148,"author":{"gitId":"soloplxya"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":151,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"soloplxya"},"content":"     * Method that helps to parse single-commands (for eg. list, bye)","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"soloplxya"},"content":"     * @param commandType Command that the user has keyed in","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"     * @return a Command that can be executed to perform the multi command action","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException when the command is invalid","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"soloplxya"},"content":"    public Command parseSingleCommand(CommandType commandType) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"soloplxya"},"content":"        switch (commandType) {","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"soloplxya"},"content":"        case BYE:","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"soloplxya"},"content":"            return new Bye();","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"        case LIST:","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"soloplxya"},"content":"            return new List();","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"soloplxya"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"soloplxya"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"soloplxya":171}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import tasks.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import tasks.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import tasks.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import tasks.Todo;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":" * Represents a Storage object that tracks and stores tasks that the user has keyed in","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":" * previously","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"public class Storage {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    protected String directoryPath;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    protected String filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a storage object given a directory path and a file path","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"     * @param directoryPath directoryPath to storage file","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"     * @param filePath filePath to stroage file","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    public Storage(String directoryPath, String filePath) {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"     * Instantiates an empty storage object","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    public Storage() {}","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"     * Method that takes in a list of tasks and writes it into the storage file","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if the file cannot be found in the directory","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    public static void writeToDukeFile() throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"                fw.write(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"            fw.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"            throw new DukeException(\"duke.Duke file cannot be found!! Make sure it exists in the data folder.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"     * Method that reads from the file and outputs a list of tasks that have been read from the list","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"     * @return a list of tasks in the storage file object","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if unable to read content from duke file/file does not exist","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    public ArrayList\u003cTask\u003e readFromDukeFile() throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        createDirectory();","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"            Scanner readFile \u003d new Scanner(new File(this.filePath));","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"            while (readFile.hasNextLine()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"                Task taskToAdd;","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"                String taskData \u003d readFile.nextLine();","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"                String[] taskArray \u003d taskData.split(\",\");","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"                String taskInput \u003d taskArray[0].toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"                switch (taskInput) {","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"                case \"E\":","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"                    if (taskArray.length \u003d\u003d 4) {","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"                        taskToAdd \u003d new Event(taskArray[2], taskArray[3]);","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"                        if (taskArray[1].equals(\"1\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"                            taskToAdd.markIsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"                        }","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"                        tasks.add(taskToAdd);","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"                    } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"                        throw new DukeException(\"Unable to read file format!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"                case \"T\":","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"                    if (taskArray.length \u003d\u003d 3) {","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"                        taskToAdd \u003d new Todo(taskArray[2]);","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"                        if (taskArray[1].equals(\"1\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"                            taskToAdd.markIsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"                        }","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"                        tasks.add(taskToAdd);","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"                    } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"                        throw new DukeException(\"Unable to read file format!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"                case \"D\":","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"                    if (taskArray.length \u003d\u003d 4) {","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"                        taskToAdd \u003d new Deadline(taskArray[2], taskArray[3]);","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"                        if (taskArray[1].equals(\"1\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"                            taskToAdd.markIsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"                        }","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"                        tasks.add(taskToAdd);","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"                    } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"                        throw new DukeException(\"Unable to read file format!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"                    break;","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"                default:","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"                    assert false : taskInput;","lastModifiedDate":"2022-02-05"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"                    throw new DukeException(\"No valid tasks found in file!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"            throw new DukeException(\"File cannot be found!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"        return tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"     * Method that creates a directory for the storage file if it does not exist","lastModifiedDate":"2022-02-05"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException Error with creating Directory/File","lastModifiedDate":"2022-02-05"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"    public void createDirectory() throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"        boolean isDirectoryExists \u003d new File(this.directoryPath).exists();","lastModifiedDate":"2022-02-05"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"        boolean isFileExists \u003d new File(this.filePath).exists();","lastModifiedDate":"2022-02-05"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"            if (!isDirectoryExists) {","lastModifiedDate":"2022-02-05"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"                Files.createDirectories(Path.of(this.directoryPath));","lastModifiedDate":"2022-02-05"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"                File dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2022-02-05"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"                if (!dukeFile.createNewFile()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"                    throw new IOException(\"Unable to create file at specified path. It already exists\");","lastModifiedDate":"2022-02-05"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"                }","lastModifiedDate":"2022-02-05"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"            } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"                if (!isFileExists) {","lastModifiedDate":"2022-02-05"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"                    File dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2022-02-05"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"                    if (!dukeFile.createNewFile()) {","lastModifiedDate":"2022-02-05"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"                        throw new IOException(\"Unable to create file at specified path. It already exists\");","lastModifiedDate":"2022-02-05"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"                    }","lastModifiedDate":"2022-02-05"},{"lineNumber":141,"author":{"gitId":"soloplxya"},"content":"                }","lastModifiedDate":"2022-02-05"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"            throw new DukeException(\"Error with file/directory initialization!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":146,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":147,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":148,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":149,"author":{"gitId":"soloplxya"},"content":"    public String getStorageTasks() {","lastModifiedDate":"2022-02-01"},{"lineNumber":150,"author":{"gitId":"soloplxya"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":151,"author":{"gitId":"soloplxya"},"content":"            return \"No tasks in file!\";","lastModifiedDate":"2022-02-01"},{"lineNumber":152,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":153,"author":{"gitId":"soloplxya"},"content":"            return \"Here is the list of tasks we have saved! \\n\" + TaskList.listTasks(tasks);","lastModifiedDate":"2022-02-05"},{"lineNumber":154,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":156,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"soloplxya":157}},{"path":"src/main/java/duke/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"/** Represents a TextUI Object that contains methods","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":" * that alters the text display of the GUI","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"public class TextUi {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    private static final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a ui object","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    public TextUi() {}","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     * Method that greets the user when the file first runs","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    public String greeting() {","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        return \"Konnichiwassup from\\n\" + LOGO + showDivider() + \"\\nWhat do you need help with?\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"     * Method that shows a divider to the user","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    public String showDivider() {","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        return DIVIDER;","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"     * Method that says bye to the user","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    public String sayBye() {","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        return \"Sayonara! Hope to see you again soon!\";","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"     * Method that tells the user a task has been deleted from the task list","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"     * @param preview task that has been deleted from the task list","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"     * @return delete task message","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    public String showDeleteMsg(Task preview) {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"        return \"Otsukaresamadeshita! You have finally completed one task.\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"                + preview;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"     * Method that tells the user a task has been added to the task list","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"     * @param taskListSize updated number of tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"     * @return add task message","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"    public String showAddMsg(Integer taskListSize) {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"        return \"You now have a total of \"","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"                + taskListSize + \" tasks in your list! Subarashii!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"     * Method that tells the user that Duke has marked a task as done","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"     * @param preview task that has been marked","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"     * @return mark task message","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"    public String showMarkDoneMsg(Task preview) {","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"        return \"Sugoi! I have marked this task as done!\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"                + preview;","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"     * Method that tells the user that Duke has unmarked a task as undone","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"     * @param preview task that has been unmarked","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"     * @return unmark task message","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"    public String showMarkUndoneMsg(Task preview) {","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"        return \"Daijoubu! I have unmarked this task for you!\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"                + preview;","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"     * Method that tells the user that they have found tasks in the task list","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"     * @param tasks List of tasks found","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"     * @return Found task string","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"    public String showFindTaskMsg(String tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"        return \"This is what we found! \\n\" + tasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"     * Method that tells the user that their task list is empty","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"     * @return Empty Tasklist String","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"    public String showEmptyMsg() {","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"        return \"Empty Much!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"soloplxya":99}},{"path":"src/main/java/duke/commands/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import tasks.Deadline;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows user to add a deadline task","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":" * to the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"public class AddDeadline extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    private final String description;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    private final String date;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     * Initialize the AddDeadline Command","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     * @param date Duedate of the deadline task","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public AddDeadline(String description, String date) {","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"     * Method that executes a command to add a deadline to the task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"     * @return message after a deadline has successfully been added to the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"            if (description.equals(\"\") || date.equals(\"\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"                throw new DukeException(\"Deadline command is invalid!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"            Task deadline \u003d new Deadline(description, date);","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"            return TaskList.addTask(deadline);","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":47}},{"path":"src/main/java/duke/commands/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import tasks.Event;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows user to add an event task","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":" * to the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"public class AddEvent extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    private final String description;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    private final String dateTime;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     * Initialize the AddEvent Command","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * @param description Description of the event task","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     * @param dateTime Duedate of the event task","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public AddEvent(String description, String dateTime) {","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"     * Method that executes a command to add an event to the task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"     * @return message after an event has successfully been added to the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"            if (description.equals(\"\") || dateTime.equals(\"\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"                throw new DukeException(\"Event command is invalid!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"            Task event \u003d new Event(description, dateTime);","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"            return TaskList.addTask(event);","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":47}},{"path":"src/main/java/duke/commands/AddToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import tasks.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import tasks.Todo;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows user to add a todo task","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":" * to the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"public class AddToDo extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    private final String taskDetails;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"     * Initialize the AddEvent Command","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     * @param taskDetails description of task","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    public AddToDo(String taskDetails) {","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     * Method that executes a command to add a todo to the task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     * @return message after a todo has successfully been added to the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"            if (taskDetails.equals(\"\")) {","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"                throw new DukeException(\"Todo command is invalid!\");","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"            Task todo \u003d new Todo(taskDetails);","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"            return TaskList.addTask(todo);","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":44}},{"path":"src/main/java/duke/commands/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows users to exit the duke chat bot","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class Bye extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"     * Method that executes the return of a \"bye\" string","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     * @return an exit message","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"        return \"bye\";","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":22}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Class that handles the different types of commands from the user","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"     * Method that is called to execute a command","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     * @return an empty string","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        return \"\";","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":21}},{"path":"src/main/java/duke/commands/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows users to delete a task from the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class Delete extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    private final Integer taskId;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * Initialize a Delete Command","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     * @param taskId the index of the task to be deleted","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public Delete(Integer taskId) {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     * Method that executes a command to delete a task from the task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     * @return message after a task has successfully been deleted from the tasklist","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"            return TaskList.deleteTask(taskId);","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":37}},{"path":"src/main/java/duke/commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows users to find tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" * that exist in the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":" * */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class Find extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    private final String query;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * Initialize a Find Command","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     * @param query search query","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public Find(String query) {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        this.query \u003d query;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     * Method that executes a command to find a task from the task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     * @return message after a task has been found from the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        return TaskList.findTask(query);","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":34}},{"path":"src/main/java/duke/commands/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows users to list tasks in the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class List extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"     * Method that executes a command to list tasks from the task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     * @return list of tasks stored in the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"        return TaskList.listTasks();","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":22}},{"path":"src/main/java/duke/commands/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows users to mark tasks in the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class Mark extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    private final Integer taskId;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * Initialize a Mark Command","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     * @param taskId index of the task to be marked","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public Mark(Integer taskId) {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     * Method that executes a command to mark a task in the task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     * @return message after a task has been marked","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"            return TaskList.markTask(taskId, true);","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":37}},{"path":"src/main/java/duke/commands/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" * Represents a command that allows users to unmark tasks in the task list","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class Unmark extends Command {","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    private final Integer taskId;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * Initialize an unmark Command","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     * @param taskId index of the task to be marked","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public Unmark(Integer taskId) {","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     * Method that executes a command to unmark a task in the task list.","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     * @param taskList a taskList containing all existing tasks","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"     * @param ui a ui object","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     * @param storage a storage object that is able to read and write to storage file","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     * @return message after a task has been unmarked","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"            return TaskList.markTask(taskId, false);","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"soloplxya":37}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"/** Represents a duke exception that is thrown","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":" * when duke-related errors occur","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a DukeException object","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"     * @param errorMessage returns an error message","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    public DukeException() {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the string representation of the error","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     * @return A string of the error message","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        return this.getMessage();","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"soloplxya":27}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":" * Represents an exception that will be thrown when the user keys in an invalid command","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":" **/","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"     * Initializes an InvalidCommandException","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"        super(\"Sumimasen! I don\u0027t recognize this command. Please try again!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"soloplxya":13}},{"path":"src/main/java/duke/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.exceptions;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":" * Represents an exception that is thrown when there are errors when processing tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":" * that the users have keyed into Duke","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"public class TaskException extends DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"    private final String errorCode;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"     * Initializes a Task exception","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"     * @param errorCode Takes in an errorCode that will determine the message","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"     *                  that gets printed out.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    public TaskException(String errorCode) {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"        this.errorCode \u003d errorCode;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the error message to show to the user","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     * @return Error Message given a particular error code","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    public String getMessage() {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        String message \u003d \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"        switch (errorCode) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"        case \"INVALID_TASKID\":","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"            message \u003d \"Task ID has to be an integer!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        case \"UNFOUND_TASK\":","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"            message \u003d \"Task cannot be found within the task list! Please fix your machigai!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        case \"UNDONE\":","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"            message \u003d \"This task has yet to be done!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        case \"DONE\":","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"            message \u003d \"This task has already been marked done!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"            assert false : errorCode;","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"        return message;","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"soloplxya":44}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.gui;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"     * Initialize a DialogBox with a text label and a corresponding image","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     * @param text text label","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"     * @param img user icon avatar","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"    private void flip() {","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        tmp.get(1).setStyle(\"-fx-background-color: #FFFFFF; -fx-background-radius: 10px; -fx-padding: 0 0 0 10\");","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the userDialog of the chatbox to the gui","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"     * @param text text label","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"     * @param img user avatar","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"     * @return the user Dialog","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the dukeDialog of the chatbox to the gui","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"     * @param text text label","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"     * @param img duke avatar","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"     * @return the duke Dialog","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"        db.flip();","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        return db;","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"soloplxya":80}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.gui;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"public class Launcher {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"soloplxya":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.gui;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    private Duke duke \u003d new Duke(\"./data\", \"./data/duke.txt\");","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"            stage.show();","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"soloplxya":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke.gui;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    private final TextUi ui \u003d new TextUi();","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"     * Controller for duke.gui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        String previousTasks \u003d storage.getStorageTasks();","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        String welcome \u003d ui.greeting();","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcome, dukeImage),","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"                DialogBox.getDukeDialog(previousTasks, dukeImage));","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"     * Duke\u0027s reply and then appends them to the dialog container.","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        if (response.equals(\"bye\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"            String byeMessage \u003d ui.sayBye();","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"                    DialogBox.getDukeDialog(byeMessage, dukeImage)","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"            );","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(0.5));","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"                Platform.exit();","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"                System.exit(0);","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"            });","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"            pause.play();","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"            );","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"soloplxya":79}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":" * Represents a deadline task","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    private static final DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    private static final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    protected LocalDateTime byTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a new Deadline object","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     * @param description of the deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"     * @param by (duedate of the task)","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if the date parsed is of an incorrect format","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        super(description);","lastModifiedDate":"2022-01-14"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        if (isDateFormat(by)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"            this.by \u003d LocalDate.parse(by, dateFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        } else if (isDateTimeFormat(by)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"            this.byTime \u003d LocalDateTime.parse(by, dateTimeFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"            throw new DukeException(\"The date format parsed is incorrect!\"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"                    + \"It should be dd-MM-yyyy or dd-MM-yyyy HH:mm!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"     * Method that converts a deadline to its storage file format","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"     * @return A string that describes a deadline with its storage file format","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"            return \"D\" + super.toFileFormat() + \",\" + formatDate(by);","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"            return \"D\" + super.toFileFormat() + \",\" + formatDateTime(byTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"     * Method that converts a deadline to its display/string format","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"     * @return A string that describes a deadline with its display format","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"        if (this.by !\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formatDate(by) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formatDateTime(byTime) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"     * A method that takes in a string and checks if its in dateTime format","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"     * @param dateTimeString duedate string","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"     * @return A boolean that indicates if the string is in dateTime format","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"    private boolean isDateTimeFormat(String dateTimeString) {","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"            LocalDateTime.parse(dateTimeString, dateTimeFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"            return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"            System.out.println(\"Checking DateTime Format!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"     * A method that takes in a string and check if its in date format","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"     * @param dateString duedate string","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"     * @return A boolean that indicates if a string is in date format","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"    private boolean isDateFormat(String dateString) {","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"            LocalDate.parse(dateString, dateFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"            return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"            System.out.println(\"Checking Date Format!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"     * Takes in a dateTime object and converts it to the correct string display format","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"     * @param dateTime dateTime object","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"     * @return Formatted string containing details of the dateTime object","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"    public String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"        String day \u003d dateTime.getDayOfMonth() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + dateTime.getDayOfMonth()","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"                : \"\" + dateTime.getDayOfMonth();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"        String month \u003d dateTime.getMonthValue() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + dateTime.getMonthValue()","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"                : \"\" + dateTime.getMonthValue();","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"        Integer year \u003d dateTime.getYear();","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"        String hour \u003d dateTime.getHour() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + dateTime.getHour()","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"                : \"\" + dateTime.getHour();","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"        String minute \u003d dateTime.getMinute() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + dateTime.getMinute()","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"                : \"\" + dateTime.getMinute();","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"        return day + \"-\" + month + \"-\" + year + \" \" + hour + \":\" + minute;","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"     * Takes in a date object and converts it to the correct string display format","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"     * @param date date object","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"     * @return Formatted string containing details of the Date object","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        String day \u003d date.getDayOfMonth() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + date.getDayOfMonth()","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"                : \"\" + date.getDayOfMonth();","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"        String month \u003d date.getMonthValue() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + date.getMonthValue()","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"                : \"\" + date.getMonthValue();","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"        Integer year \u003d date.getYear();","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"        return day + \"-\" + month + \"-\" + year;","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"soloplxya":136}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":" * Represents an event task","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    private static final DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    private static final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    protected LocalDateTime atTime;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a new Event object","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     * @param description of Event","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     * @param at (duedate of event)","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if the date format parsed is incorrect","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"        super(description);","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"        if (isDateFormat(at)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"            this.at \u003d LocalDate.parse(at, dateFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        } else if (isDateTimeFormat(at)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"            this.atTime \u003d LocalDateTime.parse(at, dateTimeFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"            throw new DukeException(\"The date format parsed is incorrect!\" + \"\"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"                    + \"It should be dd-MM-yyyy or dd-MM-yyyy HH:mm!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"     * Method that converts an event to its storage file format","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"     * @return A string that describes an event with its storage file format","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        if (at !\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"            return \"E\" + super.toFileFormat() + \",\" + formatDate(at);","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"            return \"E\" + super.toFileFormat() + \",\" + formatDateTime(atTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"     * Method that converts an event to its display/string format","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"     * @return A string that describes an event with its display format","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"        if (this.at !\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + formatDate(at) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + formatDateTime(atTime) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"     * A method that takes in a string and checks if its in dateTime format","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"     * @param dateTimeString duedate string","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"     * @return A boolean that indicates if the string is in dateTime format","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"    private boolean isDateTimeFormat(String dateTimeString) {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"            LocalDateTime.parse(dateTimeString, dateTimeFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"            return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"            System.out.println(\"Checking DateTime Format!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"     * A method that takes in a string and check if its in date format","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"     * @param dateString duedate string","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"     * @return A boolean that indicates if a string is in date format","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"    private boolean isDateFormat(String dateString) {","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"            LocalDate.parse(dateString, dateFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"            return true;","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"            System.out.println(\"Checking Date Format!\");","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"        return false;","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"     * Takes in a dateTime object and converts it to the correct string display format","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"     * @param dateTime dateTime object","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"     * @return Formatted string containing details of the dateTime object","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"    public String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"        String day \u003d dateTime.getDayOfMonth() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + dateTime.getDayOfMonth()","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"                : \"\" + dateTime.getDayOfMonth();","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"        String month \u003d dateTime.getMonthValue() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + dateTime.getMonthValue()","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"                : \"\" + dateTime.getMonthValue();","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"        Integer year \u003d dateTime.getYear();","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"        String hour \u003d dateTime.getHour() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + dateTime.getHour()","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"                : \"\" + dateTime.getHour();","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"        String minute \u003d dateTime.getMinute() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + dateTime.getMinute()","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"                : \"\" + dateTime.getMinute();","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"        return day + \"-\" + month + \"-\" + year + \" \" + hour + \":\" + minute;","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"     * Takes in a date object and converts it to the correct string display format","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"     * @param date date object","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"     * @return Formatted string containing details of the Date object","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"        String day \u003d date.getDayOfMonth() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + date.getDayOfMonth()","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"                : \"\" + date.getDayOfMonth();","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        String month \u003d date.getMonthValue() \u003c 10","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"                ? \"0\" + date.getMonthValue()","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"                : \"\" + date.getMonthValue();","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"        Integer year \u003d date.getYear();","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"        return day + \"-\" + month + \"-\" + year;","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"soloplxya":132}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":" * Represents a task object","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2022-01-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2022-01-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"     * Initialize a Task object","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"     * @param description description of Task","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the statusIcon of a task","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     * @return A string marked with X if the task has been completed, otherwise \"\"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the statusNumber of a task","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"     * @return A string marked with 1 if the task has been completed, other wise 0","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    public String getStatusNumber() {","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"     * Method that marks a task as done","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void markIsDone() {","lastModifiedDate":"2022-01-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"     * Method that marks a task as undone","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void markUndone() {","lastModifiedDate":"2022-01-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the description of the task with the storage file format","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"     * @return Description of task with the storage file format","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        return \",\" + getStatusNumber() + \",\" + this.description;","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the description of the task with the correct display format","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"     * @return Description of the task with the correct display format","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"     * Getter method to return the description of a task","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"     * @return description of task","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"        return this.description;","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-13"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"soloplxya":56,"-":23}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import duke.TextUi;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.TaskException;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    private static final TextUi ui \u003d new TextUi();","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a taskList with a list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     * @param tasks list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a taskList","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    public TaskList() { }","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"     * Method that takes in a taskId and deletes the task from the tasks arraylist","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"     * @param taskId id of task","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if the task cannot be found in the list","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    public static String deleteTask(int taskId) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        Task preview \u003d tasks.get(taskId - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"        tasks.remove(taskId - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        Storage.writeToDukeFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        return ui.showDeleteMsg(preview);","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"     * Method that takes in a taskId and marks it as done in the tasks arraylist","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"     * @param taskId id of task","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"     * @param mark boolean indicating whether to mark the task as done","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if the task has yet to be done","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    public static String markTask(int taskId, boolean mark) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"        Task toSet \u003d tasks.get(taskId - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        if (mark) {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"            if (!toSet.isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"                toSet.markIsDone();","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"                tasks.set(taskId - 1, toSet);","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"                Storage.writeToDukeFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"                return ui.showMarkDoneMsg(toSet);","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"                throw new TaskException(\"DONE\");","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"            if (toSet.isDone) {","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"                toSet.markUndone();","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"                tasks.set(taskId - 1, toSet);","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"                Storage.writeToDukeFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"                return ui.showMarkUndoneMsg(toSet);","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"                throw new TaskException(\"UNDONE\");","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"     * Method that takes in a task and adds it to tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"     * @param task task object","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"     * @throws DukeException if unable to add task to tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"    public static String addTask(Task task) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"        Storage.writeToDukeFile();","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        return ui.showAddMsg(tasks.size());","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"     * Method that displays the list of tasks to the console","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"    public static String listTasks() {","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"            return ui.showEmptyMsg();","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"            listOfTasks.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"        return listOfTasks.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"     * Method that takes in a list of tasks and displays the list of tasks to the console","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"     * @param tasks list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"    public static String listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"            return ui.showEmptyMsg();","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"            listOfTasks.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"        return listOfTasks.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"     * Method that returns the size/length of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"     * @return Integer that indicates the size/length of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"    public static Integer getTaskSize() {","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"     * Method that takes in a keyword and prints out the list of tasks that contains the keyword","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"     * @param keyWord task keyword","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"    public static String findTask(String keyWord) {","lastModifiedDate":"2022-02-01"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"            String taskDescription \u003d task.getDescription().toLowerCase(Locale.ROOT);","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"            String keyWordDescription \u003d keyWord.toLowerCase(Locale.ROOT);","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"            if (taskDescription.matches(\"\\\\b\" + keyWordDescription + \"\\\\b\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"        return ui.showFindTaskMsg(listTasks(matchingTasks));","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"soloplxya":137}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":" * Represents a todo task","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"     * Instantiates a new To-do by taking in a description","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"     * @param description description of task","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"        super(description);","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     * Method that displays the To-do with the correct display format","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"     * @return A To-do with the correct display format","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     * Method that displays the To-do with the correct storage file display format","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     * @return A To-do with the correct storage file display format","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        return \"T\" + super.toFileFormat();","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"soloplxya":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #00c300; -fx-background-radius: 10px; -fx-padding: 15;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"soloplxya":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"370.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"294.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"294.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"370.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"550.0\" prefWidth\u003d\"350.0\" style\u003d\"-fx-background-color: #87ceeb;\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"soloplxya":19}},{"path":"src/test/java/duke/TextUiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package duke;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"public class TextUiTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    public void testDivider() {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"        TextUi ui \u003d new TextUi();","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"        assertEquals(DIVIDER, ui.showDivider());","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"soloplxya":16}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class EventTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    private Event event;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    public void testCorrectEventString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"        String eventExpected \u003d \"[E][ ] Eat apple (at: 02-05-2021)\";","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"        String eventActual \u003d \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"            event \u003d new Event(\"Eat apple\", \"02-05-2021\");","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"            eventActual \u003d event.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException duke) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"            Assertions.fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        assertEquals(eventActual, eventExpected);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    public void testWrongEventString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        String eventExpected \u003d \"The date format parsed is incorrect!It should be dd-MM-yyyy or dd-MM-yyyy HH:mm!\";","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        String eventActual \u003d \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"            event \u003d new Event(\"Eat apple\", \"02/05/2021\");","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        } catch (DukeException duke) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"            eventActual \u003d duke.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        } finally {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"            assertEquals(eventActual, eventExpected);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"soloplxya":42}},{"path":"src/test/java/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    public void testTodoString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"        String todoExpected \u003d \"[T][ ] test\";","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"        assertEquals(todoExpected, todo.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public void testMarkedTodoString() {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"        String todoExpected \u003d \"[T][X] test\";","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"        todo.markIsDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"        assertEquals(todoExpected, todo.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"soloplxya":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"todo something","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"deadline test test /by Sunday","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"event drink coffee /at Sunday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"todo list","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"mark 3","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"mark 4","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"unmark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"unmark 3","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"unmark 4","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"delete 1","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"delete 1","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"delete 1","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"delete 1","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"list","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"soloplxya":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"soloplxya":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"soloplxya":1}}]
