{"authorDailyContributionsMap":{"soloplxya":[{"date":"2022-01-14","commitResults":[{"hash":"914c6d44f020784bda92bc8acc500b74eb1fd915","messageTitle":"Level 4: Todos, Events and Deadlines (With A-Inheritance)","messageBody":"","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":136,"deletions":41}}}]},{"date":"2022-01-15","commitResults":[{"hash":"0da8fd599c46a4e1fc61c44ac49256a333c2e83c","messageTitle":"A-TextUiTesting: Baseline testcases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"java":{"insertions":2,"deletions":2},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"040593389344e2b091cf9fa78f0187c0d626bb7b","messageTitle":"Level 5: Handle Errors (With A-Exceptions)","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":19}}},{"hash":"9daf9502ce3de2824b9939450232f548ae8d970a","messageTitle":"Level 6: Delete (with A-Collections)","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":31}}},{"hash":"7f60c8cc9499fb4d029bd70e8a02fdda20d5aadd","messageTitle":"Chore: Added more test inputs","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0}}}]},{"date":"2022-01-17","commitResults":[{"hash":"c8295b8ae00c6a306fe712bbf5e668bdba32ff15","messageTitle":"A-Enums: Added Enums for CommandTypes","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":17}}}]},{"date":"2022-01-22","commitResults":[{"hash":"5f78a2f92b3b7e6928ce87aa00ce82dbb303fb76","messageTitle":"Add ability for Duke to save tasks locally (Level 7)","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":7}}}]},{"date":"2022-01-23","commitResults":[{"hash":"a988ea61c6816fc63f2849b106795689ef1c989e","messageTitle":"Convert event and deadline dates to Date/DateTime format (Level 8)","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":127,"deletions":13}}},{"hash":"53b058d97701c090a9b689bcb7eb33c73d8f5152","messageTitle":"Resolve conflicts from merging level 7 and level 8 branches","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":27}}},{"hash":"d025e8a4ac3a683dd913b9b8c87a947774b29c28","messageTitle":"Create TaskList, TextUi, Storage, Parser classes and packaging them into duke/task packages","messageBody":"","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":410,"deletions":277}}}]},{"date":"2022-01-25","commitResults":[{"hash":"303daf5652e1f33d02a83f113e7baeb58a54ef69","messageTitle":"Add JUnit testcases for Ui, Event and Todo classes (A-Junit)","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":0}}}]},{"date":"2022-01-27","commitResults":[{"hash":"d858d940e77574650347a952989c6e0293f83d08","messageTitle":"Add javadocs for all class methods and constructors (A-JavaDoc)","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":217,"deletions":20}}},{"hash":"dede849ba1573cd302f2b987491cc341cca7749e","messageTitle":"Edit code to comply with Code Standard (A-CodingStandard)","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":133,"deletions":112}}},{"hash":"337007352d675507b8ab70f930c1c800a8061a87","messageTitle":"Implement find functionality (Level-9)","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":2}}}]},{"date":"2022-01-30","commitResults":[{"hash":"41d811e19a52c6c421ad459592503de188b7ac14","messageTitle":"Set up Gradle (A-Gradle)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"5ba5c1d0b54ffd9f586aa2994170fd9d90ab8989","messageTitle":"Add CheckStyle configs and update files to fit code style (A-CheckStyle)","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":0},"java":{"insertions":106,"deletions":57}}}]},{"date":"2022-02-01","commitResults":[{"hash":"9ffe7abc3be04fff5bf6147fc8a1ea4eb1a19b65","messageTitle":"Add GUI to Duke using JavaFX (Level-10)","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":268,"deletions":105},"md":{"insertions":2,"deletions":2}}}]},{"date":"2022-02-05","commitResults":[{"hash":"72f422ff10f3925da45722798ce3fbb5acbebe65","messageTitle":"Add Commands package and javadocs","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":438,"deletions":86}}},{"hash":"d3a06dc11eb77ae37acf3508d5cde03a72454d7e","messageTitle":"Add assertions (A-Assertions)","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":2},"java":{"insertions":16,"deletions":4}}}]},{"date":"2022-02-06","commitResults":[{"hash":"40927a46475f1b1d93293199f7c2fd230494efe1","messageTitle":"Refactor code to improve readability (A-CodeQuality)","messageBody":"- Currently, the Parser class has long methods and numerous error messages which makes the code hard to understand. Additionally, the taskList class also has message strings in various return statements which should be handled in the TextUi class. Furthermore, all exceptions are currently classified as DukeExceptions which makes it difficult to tell apart the various exception types that needs to be handled.\n\n- It is necessary to refactor the current code so as to make the code more readable and easier to refactor in the future.\n\n- Long methods in the Parser class have been refactored using SLAP. Additionally, instead of returning the ui messages directly in the TaskList class, these ui messages are now handled by methods in the TextUi class. Lastly, instead of using DukeException to handle all exceptions, the exceptions have been broken down into specific exception classes.\n\n- Inheritance is preferable for the exceptions so as to attain polymorphic behaviour when rendering the error messages. It is also appropriate to use inheritance in this scenario since \"InvalidCommandException\" and \"TaskException\" are DukeExceptions.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"a639757ea4795b93b8d8d94bcec1127b368cdbee","messageTitle":"Commit remaining staged files to branch(A-CodeQuality)","messageBody":"- Currently, the Parser class has long methods and numerous error messages which makes the code hard to understand. Additionally, the taskList class also has message strings in various return statements which should be handled in the TextUi class. Furthermore, all exceptions are currently classified as DukeExceptions which makes it difficult to tell apart the various exception types that needs to be handled.\n\n- It is necessary to refactor the current code so as to make the code more readable and easier to refactor in the future.\n\n- Long methods in the Parser class have been refactored using SLAP. Additionally, instead of returning the ui messages directly in the TaskList class, these ui messages are now handled by methods in the TextUi class. Lastly, instead of using DukeException to handle all exceptions, the exceptions have been broken down into specific exception classes.\n\n- Inheritance is preferable for the exceptions so as to attain polymorphic behaviour when rendering the error messages. It is also appropriate to use inheritance in this scenario since \"InvalidCommandException\" and \"TaskException\" are DukeExceptions.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":230,"deletions":85}}},{"hash":"f2f75b618236f5c5a87968f13e4003b6eeb9e807","messageTitle":"Resolve merge conflicts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":4}}},{"hash":"5339d5b146012c454efac2a33ada836ba2879d72","messageTitle":"Fix checkstyle errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2022-02-08","commitResults":[{"hash":"1ff867910e424c2b89d38d05fef1a3ef3ae5cf64","messageTitle":"Add undo command for Duke","messageBody":"An undo command does not exist in the current duke.\n\nSuch a command is needed as users may want to undo an action that they made by mistake.\n\nAdd an undo command to allow users to undo add, mark, unmark and delete commands.\n\nAs all commands have different ways of undoing, it is better to override an undo method in the Command class and make use of polymorphism to customize each undo function.\n","fileTypesAndContributionMap":{"java":{"insertions":255,"deletions":15}}}]},{"date":"2022-02-14","commitResults":[{"hash":"a0f6917aa099536766b2447c99dca31e7b63e0dc","messageTitle":"Improve Duke\u0027s GUI to suit a Valentine\u0027s Day theme (A-BetterGui)","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"fxml":{"insertions":15,"deletions":8},"java":{"insertions":22,"deletions":2}}},{"hash":"bd970a449e7f04619bc16a9b24a3cf6618914729","messageTitle":"Update README.md","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":165,"deletions":12}}},{"hash":"293ec78d72f795d3060455162cf9c5ee04004d26","messageTitle":"Update typos in README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":11,"deletions":11}}}]},{"date":"2022-02-15","commitResults":[{"hash":"2c05b2962853d74ba7c3c4ede6b9e7fcfa973b47","messageTitle":"Update filename for Ui.png and header comments in TaskList.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":26}}}]}]},"authorFileTypeContributionMap":{"soloplxya":{"java":1953,"md":165,"fxml":42,"sh":1,"bat":1,"gradle":20,"txt":19}},"authorContributionVariance":{"soloplxya":42535.14},"authorDisplayNameMap":{"soloplxya":"CS2103T-T13-1 SHAI.. HUI"}}
