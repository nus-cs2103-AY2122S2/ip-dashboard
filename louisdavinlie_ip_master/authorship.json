[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"louisdavinlie":17}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"ret\u003d0","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"IFS\u003d\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    fi","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"done","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"exit $ret","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"louisdavinlie":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"awk \u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"    BEGIN {","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    {","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"        ret \u003d 1","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"    END {","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"        exit ret","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"\u0027","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"louisdavinlie":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"awk \u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"    BEGIN {","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"        FS \u003d \":\"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"        ret \u003d 0","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"    {","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"            ret \u003d 1","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"    END {","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"        exit ret","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"\u0027","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"louisdavinlie":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"#!/bin/sh","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"        ret\u003d1","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"    fi","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"done","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"exit $ret","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"louisdavinlie":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"### Add tasks (To Do, Deadline, Event)","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"Add any upcoming task that you have. Duke will help you remember it!","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"### Mark your tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"When you have done your tasks, you can mark it as done! The reverse can also be done.","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"### List all (or some) of your tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"You can ask Duke to list all your tasks or find tasks with specific keywords. Of course, they are all numbered for your convenient.","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"### Delete tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"You can delete your tasks if they are done or you have created them by mistake.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"### Save your tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"All your tasks are automatically saved once you add/modify/delete them. Duke can remember your tasks forever! (given that the file exists, of course)","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"### `todo` - Adds a to do task","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"Duke will add a to do task for you. It will be labeled as T when you try to list it.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"`todo [DESCRIPTION]`","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"`[DESCRIPTION]` is a case-sensitive string describing the to do task.","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"`todo Drink water`","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"Adds a to do task with the description \"Drink water\".","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"Added a to do task.","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"  [T][ ] Drink water","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"You have 1 task(s) in the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"### `deadline` - Adds a deadline","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"Duke will add a deadline for you. It will be labeled as D when you try to list it.","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"`deadline [DESCRIPTION] /by [DATE_AND_TIME]`","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"`[DESCRIPTION]` is a case-sensitive string describing the deadline","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"`[DATE_AND_TIME]` is a date and time formatted as YYYY-MM-DDTHH:mm:ss","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"`todo Homework /by 2022-02-18T23:59:59`","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"Adds a deadline with the description \"Homework\" which is due by 18 Feb 2022, 23:59:59.","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"Added a deadline.","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"  [D][ ] Homework (by: Feb 18 2022 23:59:59)","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"You have 2 task(s) in the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"### `event` - Adds an event","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"Duke will add an event for you. It will be labeled as E when you try to list it.","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"`event [DESCRIPTION] /at [DATE_AND_TIME]`","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"louisdavinlie"},"content":"`[DESCRIPTION]` is a case-sensitive string describing the event","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"louisdavinlie"},"content":"`[DATE_AND_TIME]` is a date and time formatted as YYYY-MM-DDTHH:mm:ss","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"`event CS2103T lecture /at 2022-02-18T14:00:00`","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"Adds an event with the description \"CS2103T lecture\" at 18 Feb 2022, 23:59:59.","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"Added an event.","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"  [E][ ] CS2103T lecture (by: Feb 18 2022 14:00:00)","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"You have 3 task(s) in the list.","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"### `list` - Lists you tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"Duke will list all your tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"louisdavinlie"},"content":"`list`","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"louisdavinlie"},"content":"Lists all your tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"louisdavinlie"},"content":"The tasks on your list. Get it done!","lastModifiedDate":"2022-02-18"},{"lineNumber":109,"author":{"gitId":"louisdavinlie"},"content":"  1. [T][ ] Drink water","lastModifiedDate":"2022-02-18"},{"lineNumber":110,"author":{"gitId":"louisdavinlie"},"content":"  2. [D][ ] Homework (by: Feb 18 2022 23:59:59)","lastModifiedDate":"2022-02-18"},{"lineNumber":111,"author":{"gitId":"louisdavinlie"},"content":"  3. [E][ ] CS2103T lecture (by: Feb 18 2022 14:00:00)","lastModifiedDate":"2022-02-18"},{"lineNumber":112,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":113,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":114,"author":{"gitId":"louisdavinlie"},"content":"### `find` - Finds tasks","lastModifiedDate":"2022-02-18"},{"lineNumber":115,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":116,"author":{"gitId":"louisdavinlie"},"content":"Duke will list your tasks with the specified keyword.","lastModifiedDate":"2022-02-18"},{"lineNumber":117,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":118,"author":{"gitId":"louisdavinlie"},"content":"`find [KEYWORD]`","lastModifiedDate":"2022-02-18"},{"lineNumber":119,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"louisdavinlie"},"content":"`[KEYWORD]` is a case-sensitive keyword of the task you want to find","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":123,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":124,"author":{"gitId":"louisdavinlie"},"content":"`find water`","lastModifiedDate":"2022-02-18"},{"lineNumber":125,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":127,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":128,"author":{"gitId":"louisdavinlie"},"content":"Lists your tasks with the specified keyword.","lastModifiedDate":"2022-02-18"},{"lineNumber":129,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":130,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":131,"author":{"gitId":"louisdavinlie"},"content":"Here are the task(s) that contain(s) your keyword.","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"louisdavinlie"},"content":"  1. [T][ ] Drink water","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"louisdavinlie"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"louisdavinlie"},"content":"Duke will delete a task for you.","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":139,"author":{"gitId":"louisdavinlie"},"content":"`delete [INDEX]`","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":141,"author":{"gitId":"louisdavinlie"},"content":"`[INDEX]` is an integer representing the task number when you use the list or find commands","lastModifiedDate":"2022-02-18"},{"lineNumber":142,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":144,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"louisdavinlie"},"content":"`delete 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":146,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":148,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":149,"author":{"gitId":"louisdavinlie"},"content":"Deletes the first task on your list.","lastModifiedDate":"2022-02-18"},{"lineNumber":150,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":151,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":152,"author":{"gitId":"louisdavinlie"},"content":"This task has been removed:","lastModifiedDate":"2022-02-18"},{"lineNumber":153,"author":{"gitId":"louisdavinlie"},"content":"  [T][ ] Drink water","lastModifiedDate":"2022-02-18"},{"lineNumber":154,"author":{"gitId":"louisdavinlie"},"content":"Now you have 2 task(s).","lastModifiedDate":"2022-02-18"},{"lineNumber":155,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":156,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":157,"author":{"gitId":"louisdavinlie"},"content":"### `mark` - Marks a task as done","lastModifiedDate":"2022-02-18"},{"lineNumber":158,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":159,"author":{"gitId":"louisdavinlie"},"content":"Duke will mark a task as done.","lastModifiedDate":"2022-02-18"},{"lineNumber":160,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":161,"author":{"gitId":"louisdavinlie"},"content":"`mark [INDEX]`","lastModifiedDate":"2022-02-18"},{"lineNumber":162,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":163,"author":{"gitId":"louisdavinlie"},"content":"`[INDEX]` is an integer representing the task number when you use the list or find commands","lastModifiedDate":"2022-02-18"},{"lineNumber":164,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":165,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":166,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":167,"author":{"gitId":"louisdavinlie"},"content":"`mark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":168,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":169,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":170,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":171,"author":{"gitId":"louisdavinlie"},"content":"Marks the first task on your list as done.","lastModifiedDate":"2022-02-18"},{"lineNumber":172,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":173,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":174,"author":{"gitId":"louisdavinlie"},"content":"Good job! This task is done:","lastModifiedDate":"2022-02-18"},{"lineNumber":175,"author":{"gitId":"louisdavinlie"},"content":"  1. [D][X] Homework (by: Feb 18 2022 23:59:59)","lastModifiedDate":"2022-02-18"},{"lineNumber":176,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":177,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":178,"author":{"gitId":"louisdavinlie"},"content":"### `unmark` - Marks a task as not done","lastModifiedDate":"2022-02-18"},{"lineNumber":179,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":180,"author":{"gitId":"louisdavinlie"},"content":"Duke will mark a task as not done.","lastModifiedDate":"2022-02-18"},{"lineNumber":181,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":182,"author":{"gitId":"louisdavinlie"},"content":"`unmark [INDEX]`","lastModifiedDate":"2022-02-18"},{"lineNumber":183,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":184,"author":{"gitId":"louisdavinlie"},"content":"`[INDEX]` is an integer representing the task number when you use the list or find commands","lastModifiedDate":"2022-02-18"},{"lineNumber":185,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":186,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":187,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":188,"author":{"gitId":"louisdavinlie"},"content":"`unmark 1`","lastModifiedDate":"2022-02-18"},{"lineNumber":189,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":190,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":191,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":192,"author":{"gitId":"louisdavinlie"},"content":"Marks the first task on your list as not done.","lastModifiedDate":"2022-02-18"},{"lineNumber":193,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":194,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":195,"author":{"gitId":"louisdavinlie"},"content":"Hurry up and get it done!","lastModifiedDate":"2022-02-18"},{"lineNumber":196,"author":{"gitId":"louisdavinlie"},"content":"  1. [D][ ] Homework (by: Feb 18 2022 23:59:59)","lastModifiedDate":"2022-02-18"},{"lineNumber":197,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":198,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":199,"author":{"gitId":"louisdavinlie"},"content":"### `help` - Displays the help page","lastModifiedDate":"2022-02-18"},{"lineNumber":200,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":201,"author":{"gitId":"louisdavinlie"},"content":"Duke will list out all the commands you can do.","lastModifiedDate":"2022-02-18"},{"lineNumber":202,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":203,"author":{"gitId":"louisdavinlie"},"content":"Example of usage: ","lastModifiedDate":"2022-02-18"},{"lineNumber":204,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":205,"author":{"gitId":"louisdavinlie"},"content":"`help`","lastModifiedDate":"2022-02-18"},{"lineNumber":206,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":207,"author":{"gitId":"louisdavinlie"},"content":"Expected outcome:","lastModifiedDate":"2022-02-18"},{"lineNumber":208,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":209,"author":{"gitId":"louisdavinlie"},"content":"A list of valid commands.","lastModifiedDate":"2022-02-18"},{"lineNumber":210,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":211,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":212,"author":{"gitId":"louisdavinlie"},"content":"Here are the commands you can give to Duke:","lastModifiedDate":"2022-02-18"},{"lineNumber":213,"author":{"gitId":"louisdavinlie"},"content":"1. todo [TO_DO_TASK] (To add a to do task)","lastModifiedDate":"2022-02-18"},{"lineNumber":214,"author":{"gitId":"louisdavinlie"},"content":"2. deadline [DEADLINE] /by [YYYY-MM-DDTHH:mm:ss] (To add a deadline)","lastModifiedDate":"2022-02-18"},{"lineNumber":215,"author":{"gitId":"louisdavinlie"},"content":"3. event [EVENT] /at [YYYY-MM-DDTHH:mm:ss] (To add an event)","lastModifiedDate":"2022-02-18"},{"lineNumber":216,"author":{"gitId":"louisdavinlie"},"content":"4. list (To list all your tasks)","lastModifiedDate":"2022-02-18"},{"lineNumber":217,"author":{"gitId":"louisdavinlie"},"content":"5. find [KEYWORD] (To find tasks with the specified keyword)","lastModifiedDate":"2022-02-18"},{"lineNumber":218,"author":{"gitId":"louisdavinlie"},"content":"6. delete [TASK_NUMBER] (To delete a task by its number)","lastModifiedDate":"2022-02-18"},{"lineNumber":219,"author":{"gitId":"louisdavinlie"},"content":"7. mark [TASK_NUMBER] (To mark a task as done)","lastModifiedDate":"2022-02-18"},{"lineNumber":220,"author":{"gitId":"louisdavinlie"},"content":"8. unmark [TASK_NUMBER] (To mark a task as not done)","lastModifiedDate":"2022-02-18"},{"lineNumber":221,"author":{"gitId":"louisdavinlie"},"content":"9. help (To display this help page)","lastModifiedDate":"2022-02-18"},{"lineNumber":222,"author":{"gitId":"louisdavinlie"},"content":"10. bye (To exit duke)","lastModifiedDate":"2022-02-18"},{"lineNumber":223,"author":{"gitId":"louisdavinlie"},"content":"```","lastModifiedDate":"2022-02-18"},{"lineNumber":224,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":225,"author":{"gitId":"louisdavinlie"},"content":"### `bye` - Exits the Duke program","lastModifiedDate":"2022-02-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":227,"author":{"gitId":"louisdavinlie"},"content":"Duke will exit its program, saving all your tasks.","lastModifiedDate":"2022-02-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":231,"author":{"gitId":"louisdavinlie"},"content":"`bye`","lastModifiedDate":"2022-02-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":235,"author":{"gitId":"louisdavinlie"},"content":"A goodbye message","lastModifiedDate":"2022-02-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":238,"author":{"gitId":"louisdavinlie"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-02-18"},{"lineNumber":239,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":20,"louisdavinlie":219}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":" * Represents a Duke chatbot.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    protected Storage storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"    protected Ui ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a Duke chatbot.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"    public Duke() {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"        this.storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"        this.taskList \u003d this.storage.readFromFile();","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    public String getResponse(String fullCommand) {","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"            Command command \u003d Parser.parse(fullCommand, this.taskList);","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"            response \u003d command.execute(taskList, ui, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"        return response;","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"louisdavinlie":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.command.*;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":" * Represents a class that parses the users\u0027 commands.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"public class Parser {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the command that needed to be executed.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"     * @param fullCommand the user\u0027s full input to the chatbot.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList a list of the tasks that the user have.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"     * @return the command to be executed.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * @throws DukeException if there is an error in the command.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    public static Command parse(String fullCommand, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"        String[] commandAndDetails \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"        String command \u003d commandAndDetails[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"        switch (command) {","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"        case \"bye\":","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"            if (commandAndDetails.length \u003e 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"There\u0027s too many input!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"        case \"list\":","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"            if (commandAndDetails.length \u003e 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"There\u0027s too many input!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"            return new ListCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"        case \"help\":","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"            if (commandAndDetails.length \u003e 1) {","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"There\u0027s too many input!\");","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"        case \"find\":","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"            if (commandAndDetails.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"Enter the keyword of the tasks you want to find.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"            return new FindCommand(commandAndDetails);","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"            if (commandAndDetails.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"Please specify the task number to \" + command + \".\");","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"            int taskNumber \u003d Integer.parseInt(commandAndDetails[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"            if (taskNumber \u003e taskList.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"Invalid task number! You have \" + taskList.size() + \" task(s).\");","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"            return new ModifyCommand(commandAndDetails);","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"            if (commandAndDetails.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"Please specify the task you want to do.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"            return new AddCommand(commandAndDetails);","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"        case \"event\":","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"            if (commandAndDetails.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"Please specify the description and time of the \"","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"                        + command + \" you want to add.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"            String[] taskAndTime \u003d commandAndDetails[1].split(\"/\");","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"            if (taskAndTime.length \u003c 2 || taskAndTime[0].equals(\"\") || taskAndTime[1].length() \u003c 3) {","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"                throw new DukeException(\"Invalid input. Please specify the description/time of the \" + command + \".\");","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"            return new AddCommand(commandAndDetails);","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"            return new InvalidCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":75}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import java.io.File;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":" * Represents a storage for data to be saved.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"    private String dataPath;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    private File file;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a Storage object","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"     * @param dataPath the path of the file that is used to save the tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"    public Storage(String dataPath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"        this.dataPath \u003d dataPath;","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"        checkFolderAndFile();","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"     * Checks if a data directory and file specified by data path exist.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"     * If not, create a new one.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"    public void checkFolderAndFile() {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"            File directory \u003d new File(\"data\");","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"            directory.mkdir();","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"            this.file \u003d new File(this.dataPath);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"                System.out.println(\"File is not found. A new file has been created for you.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"                System.out.println(\"File is found.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"     * Saves the tasks of the user into a file.","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList a list of the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"            PrintWriter printWriter \u003d new PrintWriter(new FileWriter(this.file, false));","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"                assert task instanceof Deadline || task instanceof Event || task instanceof Deadline","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"                        : \"Invalid task type.\";","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"                    printWriter.println(\"D | \" + deadline.getStatusIcon() + \" | \" + deadline.getDescription()","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"                            + \" | \" + deadline.getDateAndTime());","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"                    printWriter.println(\"E | \" + event.getStatusIcon() + \" | \" + event.getDescription()","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"                            + \" | \" + event.getDateAndTime());","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"                } else if (task instanceof Todo) {","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"                    printWriter.println(\"T | \" + todo.getStatusIcon() + \" | \" + todo.getDescription());","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"louisdavinlie"},"content":"            printWriter.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"louisdavinlie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"            System.out.println(\"An error has occurred.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"     * Reads the tasks that the user has from the saved file.","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"     * @return a list of the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"    public TaskList readFromFile() {","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(this.file));","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"            String currentLine \u003d bufferedReader.readLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"            while (currentLine !\u003d null) {","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"                String[] taskDetails \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"                Task task;","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"                char taskType \u003d currentLine.charAt(0);","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"louisdavinlie"},"content":"                assert taskType \u003d\u003d \u0027D\u0027 || taskType \u003d\u003d \u0027E\u0027 || taskType \u003d\u003d \u0027T\u0027","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"louisdavinlie"},"content":"                        : \"Task type in storage file is invalid\";","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"louisdavinlie"},"content":"                if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"louisdavinlie"},"content":"                    task \u003d new Deadline(taskDetails[2], taskDetails[3]);","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"louisdavinlie"},"content":"                } else if (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"louisdavinlie"},"content":"                    task \u003d new Event(taskDetails[2], taskDetails[3]);","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"louisdavinlie"},"content":"                } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"louisdavinlie"},"content":"                    task \u003d new Todo(taskDetails[2]);","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"louisdavinlie"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"louisdavinlie"},"content":"                if (taskDetails[1].equals(\"[X]\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"louisdavinlie"},"content":"                    task.markAsDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"louisdavinlie"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"louisdavinlie"},"content":"                taskList.addTask(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"louisdavinlie"},"content":"                currentLine \u003d bufferedReader.readLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"louisdavinlie"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"louisdavinlie"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"louisdavinlie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"louisdavinlie"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"louisdavinlie"},"content":"        return taskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"louisdavinlie":120}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":" * Represenst a user interface.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"public class Ui {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"    public static final String WELCOME_MSG \u003d \"Hi! I\u0027m Duke.\\nWhat can I do for you?\\n\" + Ui.HELP_MSG;","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"    public static final String BYE_MSG \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"    public static final String INVALID_MSG \u003d \"I don\u0027t understand your query! Please try again.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"    public static final String HELP_MSG \u003d \"Here are the commands you can give to Duke:\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"            + \"1. todo [TO_DO_TASK] (To add a to do task)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"            + \"2. deadline [DEADLINE] /by [YYYY-MM-DDTHH:mm:ss] (To add a deadline)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"            + \"3. event [EVENT] /at [YYYY-MM-DDTHH:mm:ss] (To add an event)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"            + \"4. list (To list all your tasks)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"            + \"5. find [KEYWORD] (To find tasks with the specified keyword)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"            + \"6. delete [TASK_NUMBER] (To delete a task by its number)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"            + \"7. mark [TASK_NUMBER] (To mark a task as done)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"            + \"8. unmark [TASK_NUMBER] (To mark a task as not done)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"            + \"9. help (To display this help page)\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"            + \"10. bye (To exit duke)\";","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a Ui object.","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"    public Ui() {}","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":28}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":" * Represents a command for adding tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    protected String[] commandAndDetails;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for an AddCommand object.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     * @param commandAndDetails the specific task command and details of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    public AddCommand(String[] commandAndDetails) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"        this.commandAndDetails \u003d commandAndDetails;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the tasks a user has.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"     * @param ui an instance of a user interface.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"     * @param storage a storage used to save the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"     * @return a boolean indicating whether it is an exit command.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"        String command \u003d this.commandAndDetails[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"        String details \u003d this.commandAndDetails[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"        switch (command) {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"            task \u003d new Todo(details.strip());","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d \"Added a to do task.\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"            String[] deadlineAndTime \u003d details.split(\"/by\");","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"            task \u003d new Deadline(deadlineAndTime[0].strip(), deadlineAndTime[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d \"Added a deadline.\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"        case \"event\":","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"            String[] eventAndTime \u003d details.split(\"/at\");","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"            task \u003d new Event(eventAndTime[0].strip(), eventAndTime[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d \"Added an event.\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"        default:","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d \"There has been an error. Please try again.\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d \"  \" + task.toString() + \"\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"                    + \"You have \" + taskList.size() + \" task(s) in the list.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"            return response;","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"        return response;","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":67}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":" * Represents a command for exiting Duke.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a ByeCommand object.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    public ByeCommand() {}","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the tasks a user has.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     * @param ui an instance of a user interface.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"     * @param storage a storage used to save the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"     * @return a boolean indicating whether it is an exit command.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"        return Ui.BYE_MSG;","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":" * Represents an interface for a command.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"public interface Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the tasks a user has.","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"     * @param ui an instance of a user interface.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"     * @param storage a storage used to save the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * @return a boolean indicating whether it is an exit command.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":22}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":" * Represents a command for finding tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"    protected String[] commandAndDetails;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a FindCommand object.","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"     * @param commandAndDetails the find command and the keyword of the tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"    public FindCommand(String[] commandAndDetails) {","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"        this.commandAndDetails \u003d commandAndDetails;","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the tasks a user has.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"     * @param ui an instance of a user interface.","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"     * @param storage a storage used to save the user\u0027s tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"     * @return a boolean indicating whether it is an exit command.","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"        return taskList.listTasks(this.commandAndDetails[1]);","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"louisdavinlie":33}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.command;","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":" * Represents a command for Duke\u0027s help.","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a HelpCommand object.","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    public HelpCommand() {}","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the tasks a user has.","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     * @param ui an instance of a user interface.","lastModifiedDate":"2022-02-17"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"     * @param storage a storage used to save the user\u0027s tasks.","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"     * @return a boolean indicating whether it is an exit command.","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"        return Ui.HELP_MSG;","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"louisdavinlie":28}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":" * Represents a command when the user\u0027s input is invalid.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for an InvalidCommand object.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    public InvalidCommand() {}","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the tasks a user has.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     * @param ui an instance of a user interface.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"     * @param storage a storage used to save the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"     * @return a boolean indicating whether it is an exit command.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"        return Ui.INVALID_MSG;","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":28}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":" * Represents a command for listing all the tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a ListCommand object.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    public ListCommand() {}","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the tasks a user has.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     * @param ui an instance of a user interface.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"     * @param storage a storage used to save the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"     * @return a boolean indicating whether it is an exit command.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"        return taskList.listTasks();","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":28}},{"path":"src/main/java/duke/command/ModifyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":" * Represents a command for modifying tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"public class ModifyCommand implements Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"    protected String[] commandAndDetails;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a ModifyCommand object.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * @param commandAndDetails the specific modify command and index of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    public ModifyCommand(String[] commandAndDetails) {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"        this.commandAndDetails \u003d commandAndDetails;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"     * Executes the command.","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the tasks a user has.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"     * @param ui an instance of a user interface.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"     * @param storage a storage used to save the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"     * @return a boolean indicating whether it is an exit command.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"        String command \u003d this.commandAndDetails[0];","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"        int taskNumber \u003d Integer.parseInt(this.commandAndDetails[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"        assert taskNumber \u003e\u003d 0 : \"Task number should not be negative\";","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"        assert taskNumber \u003c taskList.size() : \"Invalid task number! You have \" + taskList.size() + \" task(s).\";","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"        switch (command) {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d this.markTask(taskNumber, taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d this.unmarkTask(taskNumber, taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d this.deleteTask(taskNumber, taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"            break;","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"        default:","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"            response +\u003d \"There has been an error. Please try again.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"        return response;","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskNumber the index of the task in the task list.","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"    public String markTask(int taskNumber, TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"        task.markAsDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"        return \"Good job! This task is done:\\n\" + \"  \" + task;","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"     * Marks the specified task as not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskNumber the index of the task in the task list.","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"    public String unmarkTask(int taskNumber, TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"        return \"Hurry up and get it done!\\n\" + \"  \" + task;","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"     * Deletes the specified task from the list.","lastModifiedDate":"2022-02-07"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskNumber the index of the task in the task list.","lastModifiedDate":"2022-02-07"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"     * @param taskList the list of the user\u0027s tasks.","lastModifiedDate":"2022-02-07"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"    public String deleteTask(int taskNumber, TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"        taskList.removeTask(taskNumber - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"        return \"This task has been removed:\\n\" + \"  \" + task + \"\\n\" + \"Now you have \"","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"                + taskList.size() + \" task(s).\";","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":91}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.exception;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":" * Represents a Duke exception.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a Duke exception.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"     * @param message the error message that wants to be displayed.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the error message.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     * @return the error message.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"        return getMessage();","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"louisdavinlie":26}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.gui;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    private Circle displayPicture;","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"    private void flip() {","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"        dialog.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"    public static DialogBox getUserDialog(String text, Image image) {","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"        return new DialogBox(text, image);","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"    public static DialogBox getDukeDialog(String text, Image image) {","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"        var db \u003d new DialogBox(text, image);","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"        db.flip();","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"        return db;","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"louisdavinlie":55}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.gui;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"public class Launcher {","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"louisdavinlie":9}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.gui;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"            stage.show();","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"louisdavinlie":33}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.gui;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/russell.png\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/edna.png\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.WELCOME_MSG, dukeImage));","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"        String dukeText \u003d duke.getResponse(userText);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"                DialogBox.getDukeDialog(dukeText, dukeImage)","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"        );","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"        if (dukeText.equals(Ui.BYE_MSG)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"            handleCloseAction();","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"    private void handleCloseAction() {","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"        Stage stage \u003d (Stage) scrollPane.getScene().getWindow();","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"        delay.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"        delay.play();","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"louisdavinlie":59}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":" * Represents a deadline task.","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"    protected String dateAndTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a Deadline object.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     * @param dateAndTime the date and time of the deadline.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"    public Deadline(String description, String dateAndTime) {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"        this.dateAndTime \u003d dateAndTime.strip();","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the parsed date and time that the user inputted.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"     * @return the parsed date and time.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"    public String getParsedDateAndTime() throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\");","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"            LocalDateTime localDateTime \u003d LocalDateTime.parse(this.dateAndTime);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"            return localDateTime.format(dateTimeFormatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"            System.out.println(\"Invalid Date/Time format!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"        throw new DukeException(\"Invalid Date/Time format! Please use /by YYYY-MM-DDTHH:mm:ss format\");","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the date and time the user inputted.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"     * @return the date and time.","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"    public String getDateAndTime() {","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"        return this.dateAndTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"     * @return a string representing the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"            return \"[D]\" + this.getStatusIcon() + \" \" + super.description + \" (by: \" + this.getParsedDateAndTime() + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"            System.out.println(\"Task date format is invalid.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"        return \"[D]\" + this.getStatusIcon() + \" \" + super.description;","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"louisdavinlie":65}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":" * Represents an event task.","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"    protected String dateAndTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for an Event object.","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     * @param dateAndTime the date and time of the event.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"    public Event(String description, String dateAndTime) {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"        this.dateAndTime \u003d dateAndTime.strip();","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the parsed date and time that the user inputted.","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"     * @return the parsed date and time.","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"    public String getParsedDateAndTime() throws DukeException {","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\");","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"            LocalDateTime localDateTime \u003d LocalDateTime.parse(this.dateAndTime);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"            return localDateTime.format(dateTimeFormatter);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"            System.out.println(\"Invalid Date/Time format!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"        throw new DukeException(\"Invalid Date/Time format! Please use /by YYYY-MM-DDTHH:mm:ss format\");","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the date and time the user inputted.","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"     * @return the date and time.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"    public String getDateAndTime() {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"        return this.dateAndTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"     * @return a string representing the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"        try {","lastModifiedDate":"2022-02-17"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"            return \"[E]\" + this.getStatusIcon() + \" \" + super.description + \" (at: \" + this.getParsedDateAndTime() + \")\";","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-17"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"            System.out.println(\"Task date format is invalid.\");","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-17"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"        return \"[E]\" + this.getStatusIcon() + \" \" + super.description;","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"louisdavinlie":66}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":" * Represents a task.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a task object.","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"     * @param description the description of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"     * @return status icon of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"     * Marks a task as not done.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"     * @return the description of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"        return this.description;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2022-02-07"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"     * @return the string representation of a task.","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"        return \"  \" + this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"louisdavinlie":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":" * Represents a list of the tasks the user has.","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"public class TaskList {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a TaskList object.","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the size of the list.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     * @return the size of the list.","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"    public int size() {","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"     * Gets a specific task from the list.","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"     * @param index the index of the task to be accessed.","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"     * @return the task to be accessed.","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"louisdavinlie"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"louisdavinlie"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"louisdavinlie"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"louisdavinlie"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"louisdavinlie"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"louisdavinlie"},"content":"     * Removes a task from the list.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":49,"author":{"gitId":"louisdavinlie"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2022-02-07"},{"lineNumber":50,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"louisdavinlie"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"louisdavinlie"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":56,"author":{"gitId":"louisdavinlie"},"content":"     * Displays all the tasks in the list.","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"louisdavinlie"},"content":"     * @return a list of the user\u0027s task.","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"louisdavinlie"},"content":"    public String listTasks() {","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"louisdavinlie"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"louisdavinlie"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"louisdavinlie"},"content":"            stringBuilder.append(\"You have no tasks!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"louisdavinlie"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"louisdavinlie"},"content":"            stringBuilder.append(\"The tasks on your list. Get it done!\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"louisdavinlie"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"louisdavinlie"},"content":"                int taskNumber \u003d i + 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"louisdavinlie"},"content":"                stringBuilder.append(\"  \" + taskNumber + \". \" + taskList.get(i));","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"louisdavinlie"},"content":"                if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"louisdavinlie"},"content":"                    stringBuilder.append(\"\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"louisdavinlie"},"content":"                }","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"louisdavinlie"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":78,"author":{"gitId":"louisdavinlie"},"content":"     * Displays the tasks in the list with a given keyword.","lastModifiedDate":"2022-02-09"},{"lineNumber":79,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"louisdavinlie"},"content":"     * @param keyword the search keyword used to find the tasks.","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"louisdavinlie"},"content":"     * @return a list of the user\u0027s task.","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"louisdavinlie"},"content":"    public String listTasks(String keyword) {","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"louisdavinlie"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"louisdavinlie"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-07"},{"lineNumber":86,"author":{"gitId":"louisdavinlie"},"content":"            stringBuilder.append(\"You have no tasks!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"louisdavinlie"},"content":"        } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":88,"author":{"gitId":"louisdavinlie"},"content":"            stringBuilder.append(\"Here are the task(s) that contain(s) your keyword.\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"louisdavinlie"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":90,"author":{"gitId":"louisdavinlie"},"content":"                int taskNumber \u003d i + 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":91,"author":{"gitId":"louisdavinlie"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2022-02-07"},{"lineNumber":92,"author":{"gitId":"louisdavinlie"},"content":"                if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":93,"author":{"gitId":"louisdavinlie"},"content":"                    stringBuilder.append(\"  \" + taskNumber + \". \" + task);","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"louisdavinlie"},"content":"                    if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"louisdavinlie"},"content":"                        stringBuilder.append(\"\\n\");","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"louisdavinlie"},"content":"                    }","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"louisdavinlie"},"content":"                }","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"louisdavinlie"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"louisdavinlie"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"louisdavinlie"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":102,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"louisdavinlie":102}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke.task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"/**","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":" * Represents a to do task.","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":" */","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"     * Constructor for a Todo object.","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"     * @param description the description of the tasl","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"     * Returns the string representation of the to do task.","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"     * @return a string representing the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"        return \"[T]\" + this.getStatusIcon() + \" \" + super.description;","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"louisdavinlie":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"      \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"RIGHT\" lineSpacing\u003d\"1.0\" style\u003d\"-fx-border-color: grey; -fx-border-radius: 12px;\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"30.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"            \u003cFont name\u003d\"Apple SD Gothic Neo Regular\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"#ffffff00\" radius\u003d\"44.0\" stroke\u003d\"TRANSPARENT\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"louisdavinlie":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"657.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"419.0\" promptText\u003d\"What do you want me to do?\" style\u003d\"-fx-background-color: transparent;\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"81.0\" AnchorPane.topAnchor\u003d\"657.0\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"            \u003cFont name\u003d\"Apple SD Gothic Neo Regular\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"422.0\" layoutY\u003d\"657.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"78.0\" style\u003d\"-fx-background-color: transparent;\" text\u003d\"Send\" textFill\u003d\"#3866c3\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"            \u003cFont name\u003d\"Apple SD Gothic Neo Regular\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"659.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"659.0\" prefWidth\u003d\"485.0\"\u003e","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"louisdavinlie":30}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package duke;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"import duke.command.ModifyCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"    public void testParser() throws DukeException {","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"        taskList.addTask(new Todo(\"testing\"));","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"        assertTrue(Parser.parse(\"list\", taskList) instanceof ListCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"        assertTrue(Parser.parse(\"bye\", taskList) instanceof ByeCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"louisdavinlie"},"content":"        assertTrue(Parser.parse(\"todo drink water\", taskList) instanceof AddCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"louisdavinlie"},"content":"        assertTrue(Parser.parse(\"mark 1\", taskList) instanceof ModifyCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"louisdavinlie"},"content":"        assertTrue(Parser.parse(\"invalid command\", taskList) instanceof InvalidCommand);","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"louisdavinlie":33}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"package task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"louisdavinlie"},"content":"public class TaskListTest {","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"louisdavinlie"},"content":"    @Test","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"louisdavinlie"},"content":"    public void testTaskList() {","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"louisdavinlie"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"louisdavinlie"},"content":"        taskList.addTask(new Todo(\"testing\"));","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"louisdavinlie"},"content":"        taskList.addTask(new Deadline(\"homework\", \"2022-02-11T11:59:00\"));","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(taskList.size(), 2);","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(taskList.getTask(0).toString(), \"[T][ ] testing\");","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"louisdavinlie"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"louisdavinlie"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(taskList.size(), 1);","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"louisdavinlie"},"content":"        assertEquals(taskList.getTask(0).toString(), \"[D][ ] homework (by: Feb 11 2022 11:59:00)\");","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"louisdavinlie"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"louisdavinlie"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"louisdavinlie":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"louisdavinlie"},"content":"todo drink water","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"louisdavinlie"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"louisdavinlie"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"louisdavinlie"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"louisdavinlie"},"content":"event project meeting /at Monday, 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"louisdavinlie"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"louisdavinlie"},"content":"unmark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"louisdavinlie"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"louisdavinlie"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"louisdavinlie":9}}]
