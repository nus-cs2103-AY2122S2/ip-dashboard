[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janald99":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"javafx {","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    version \u003d \"17\"","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janald99":23,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"Koro Task Manager","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"## Quick Start","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"1. Ensure you have Java `11` installed in your computer.","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"2. Download the latest duke.jar from [here](https://github.com/janald99/ip)","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"3. Double-click the file to start the app.","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"4. Type the commands in the text box at the bottom and press Enter","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"to execute it. e.g typing `help` and pressing Enter will display a detailed guide.","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"5. Refer to the Features below for details of each command.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"### Adding a Task","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"- Adding a Todo task[^1] ","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    - `todo (task description)`","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"  ","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"- Adding a Deadline task[^2]","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    - `deadline (task description) /by`","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"      ","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"- Adding an Event task[^3]","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    - `event (task description) /at (location)`","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    ","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"[^1]: *Todo*","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"A **task** that you ought to do, without any strict deadlines.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"[^2]: *Deadline*","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"A **task** with a *deadline*","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"[^3]: *Event*","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"A **task** with a specific *location*.","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"### Deleting a Task","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"`delete (task number)`: deletes the task associated with the task number.","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"### Marking and Unmarking a Task as done","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"- `mark (task number)`: marks a task as *done*, represented by an `[X]`","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"- `unmark (task number)`: marks the task as *not done*, represented by a `[ ]`","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"### Printing the entire TaskList","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"`list`: prints the current tasklist.","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"### Searching for a Task","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"`find (keyword)`: displays tasks in the list that contain the given keyword.","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"### View Help","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"`help`: a user-friendly manual will be displayed to guide you.","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"Koro Task Manager is a user friendly ...","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"Here at the list of commands and what they do:","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"...","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"...","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"## FAQ","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"**Q**: How do I save my tasks after updating it?","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"**A**: Your tasks will automatically be saved in the file. Fret not!","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"![This is an image](https://janald99.github.io/ip/Ui.png)","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"## Enjoy managing your tasks!","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"janald99":54,"-":20}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"    private void flip() {","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"        db.flip();","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        return db;","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"janald99":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":" * A chatbot that helps manage tasks of user.","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"public class Duke {","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    //the specified filePath in user\u0027s computer downloads.","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    private static Storage storage;","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    private static Ui ui;","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    /** Interprets messages sent by the user */","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * Starts up the Duke Bot in a specified filePath. If filePath","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * exists, then load the previously saved TaskList. Else, create a new one.","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    public Duke() {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        this.parser \u003d new Parser(ui);","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) { //abstract to duke.exception.DukeException","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"            ui.showError(\"Error loading file.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"     * Gets the response to the user input.","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        return parser.parse(input, tasks, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"janald99":44,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"public class Launcher {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"janald99":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    private Image dukeIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaIcon.png\"));","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"            stage.setTitle(\"Koro Task Manager\");","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"            stage.getIcons().add(dukeIcon);","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"            stage.show();","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"janald99":38}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     * Initializes the main window for GUI.","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Messages.WELCOME_MESSAGE, dukeImage));","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"        if (Parser.isExit(input)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"        );","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"janald99":62}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import duke.parser.Action;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    private Action action;","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    private String input;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     * Adds a Task into TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param action","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     * @param input","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    public AddCommand(Action action, String input) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"     * Adds a task to the Tasklist.","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        switch (action) {","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        case TODO:","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"            return addTodo(tasks, ui, storage);","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        case DEADLINE:","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            return addDeadline(tasks, ui, storage);","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        case EVENT:","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"            return addEvent(tasks, ui, storage);","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        default:","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"            assert false : \"add command should not reach here\";","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        assert false : \"add command should not reach here\";","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"        return null;","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"     * Adds a Todo task.","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"     * @return resultant string to output to user.","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    public String addTodo(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"            String description \u003d Parser.parseDescription(this.input);","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"            tasks.add(new Todo(description));","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"            output \u003d ui.printTaskAdded(tasks);","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.SAVE_ERROR);","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"     * Adds a Deadline Task.","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"     * @return resultant string to output to user.","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"    public String addDeadline(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"            String[] deadlineFields \u003d Parser.parseDeadline(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"          ","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"            tasks.add(new Deadline(deadlineFields[0], deadlineFields[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"          ","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"            output \u003d ui.printTaskAdded(tasks);","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.UNKNOWN_DATETIME);","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.SAVE_ERROR);","lastModifiedDate":"2022-02-10"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"janald99"},"content":"     * Adds an Event task.","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-11"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"     * @return resultant string to output to user.","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"    public String addEvent(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":116,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":117,"author":{"gitId":"janald99"},"content":"        //event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"janald99"},"content":"            String[] eventFields \u003d Parser.parseEvent(input);","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"janald99"},"content":"          ","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"janald99"},"content":"            tasks.add(new Event(eventFields[0], eventFields[1]));","lastModifiedDate":"2022-01-31"},{"lineNumber":122,"author":{"gitId":"janald99"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-01-31"},{"lineNumber":123,"author":{"gitId":"janald99"},"content":"          ","lastModifiedDate":"2022-02-12"},{"lineNumber":124,"author":{"gitId":"janald99"},"content":"            output \u003d ui.printTaskAdded(tasks);","lastModifiedDate":"2022-02-10"},{"lineNumber":125,"author":{"gitId":"janald99"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":127,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.SAVE_ERROR);","lastModifiedDate":"2022-02-10"},{"lineNumber":129,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":131,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":133,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":133}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":" * Command that user intends to use.","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     * Executes the Command.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":20}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.exception.OutOfBoundsException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    private String[] inputWords;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    public DeleteCommand(String[] inputWords) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        this.inputWords \u003d inputWords;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"     * Deletes a Task in TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"            if (!(inputWords.length \u003d\u003d 2)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"                throw new InvalidArgumentException(Messages.UNKNOWN_DELETE);","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"            int taskNumber \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"            if (tasks.isOutOfBounds(taskNumber)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"                throw new OutOfBoundsException(Messages.getOutOfBoundsMsg(taskNumber));","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, Messages.DELETE_SUCCESS);","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, tasks.getTaskStatement(taskNumber - 1));","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"            tasks.remove(taskNumber - 1);","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, ui.printTaskCount(tasks));","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        } catch (OutOfBoundsException | InvalidArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.DELETE_ERROR);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.UNKNOWN_DELETE);","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":55}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"     * Ends the program.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        return ui.farewell();","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":" * A type of command that searches for task according to user input keyword.","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    private String input;","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     * Searches for the task that user wants to find from a given keyword and prints it.","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"            String keyword \u003d Parser.parseDescription(input).toLowerCase();","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, Messages.FINDING_MSG);","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"            int matchCount \u003d 0;","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"                String taskData \u003d tasks.get(i).getDescription().toLowerCase();","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"                if (taskData.contains(keyword)) {","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"                    matchCount++;","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"                    output \u003d Ui.append(output, matchCount + \".\" + tasks.getTaskStatement(i));","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"                }","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"            if (matchCount \u003d\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"                output \u003d ui.showToUser(Messages.NO_FIND_MATCH_MSG);","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"                output \u003d Ui.append(output, ui.showToUser(Messages.getMatchCountMsg(matchCount)));","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"janald99":54}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"     * Displays a message to explain the features of Duke.","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     * @return","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"        String output \u003d Messages.HELP_INTRO;","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"        output +\u003d ui.showCommands();","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        output +\u003d Messages.HELP_BODY;","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"janald99":24}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"     * Returns the invalid command message when an invalid user input is provided.","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     * @return","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"        output \u003d Ui.append(output, Messages.UNKNOWN_COMMAND);","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        output \u003d Ui.append(output, ui.showCommands());","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        output +\u003d Messages.TRY_HELP_MSG;","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"     * Prints out the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"        output \u003d Ui.append(output, Messages.LIST_MSG);","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, i + 1 + \". \" + tasks.getTaskStatement(i));","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":25}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.exception.OutOfBoundsException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    private String[] inputWords;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    public MarkCommand(String[] inputWords) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        this.inputWords \u003d inputWords;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"            if (!(inputWords.length \u003d\u003d 2)) { //e.g mark 2, cannot be mark 2 2 or just mark","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"                throw new InvalidArgumentException(Messages.UNKNOWN_MARK);","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"            int taskNumber \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"            if (tasks.isOutOfBounds(taskNumber)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"                throw new OutOfBoundsException(Messages.getOutOfBoundsMsg(taskNumber));","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"            tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, Messages.MARK_SUCCESS);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, tasks.getTaskStatement(taskNumber - 1));","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        } catch (OutOfBoundsException | InvalidArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.DELETE_ERROR);","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.UNKNOWN_MARK);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":53}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.command;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.exception.OutOfBoundsException;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    private String[] inputWords;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    public UnmarkCommand(String[] inputWords) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        this.inputWords \u003d inputWords;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     * @param tasks TaskList that command is executed on.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * @param ui User interface that interacts with the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param storage Storage that saves and loads tasks after Command is executed.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"            if (!(inputWords.length \u003d\u003d 2)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"                throw new InvalidArgumentException(Messages.UNKNOWN_UNMARK);","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"            int taskNumber \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"            if (tasks.isOutOfBounds(taskNumber)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"                throw new OutOfBoundsException(Messages.getOutOfBoundsMsg(taskNumber));","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"            tasks.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, Messages.UNMARK_SUCCESS);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, tasks.getTaskStatement(taskNumber - 1));","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"        } catch (OutOfBoundsException | InvalidArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.DELETE_ERROR);","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"            output \u003d ui.showError(Messages.UNKNOWN_UNMARK);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":53}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.exception;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":" * Exception that is specific to Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"janald99":12}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.exception;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"janald99":9}},{"path":"src/main/java/duke/exception/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.exception;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"public class OutOfBoundsException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"    public OutOfBoundsException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"janald99":8}},{"path":"src/main/java/duke/parser/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":" * Actions according to the available commands in Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"public enum Action {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"    BYE,","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"    LIST,","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    TODO,","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    DEADLINE,","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    EVENT,","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    MARK,","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    UNMARK,","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    DELETE,","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    FIND,","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    HELP","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":17}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.parser;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import duke.ui.Messages;","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":" * Parser that reads and analyzes strings.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"public class Parser {","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    public Parser(Ui ui) {","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"     * Reads user input and outputs the desired Command.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"     * @param input Input by the user.","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"     * @return Command that is desired according to input.","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    public String parse(String input, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        Command command \u003d new InvalidCommand();","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"            String[] inputWords \u003d splitWhiteSpace(input);","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"            //action is first word of the input","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"            String actionWord \u003d inputWords[0];","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"            Action action \u003d Parser.getAction(actionWord);","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"            switch (action) {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            case BYE:","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"                command \u003d new ExitCommand();","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"            case LIST:","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"                command \u003d new ListCommand();","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"            case TODO:","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"                command \u003d new AddCommand(Action.TODO, input);","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"                command \u003d new AddCommand(Action.DEADLINE, input);","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"            case EVENT:","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"                command \u003d new AddCommand(Action.EVENT, input);","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"            case MARK:","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"                command \u003d new MarkCommand(inputWords);","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"                command \u003d new UnmarkCommand(inputWords);","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"            case DELETE:","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"                command \u003d new DeleteCommand(inputWords);","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"            case FIND:","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"                command \u003d new FindCommand(input);","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"            case HELP:","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"                command \u003d new HelpCommand();","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"                break;","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"            default:","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"                command \u003d new InvalidCommand();","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"        } finally {","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"    ","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"     * Gets Action from input string.","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"     * @param command input string.","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"     * @return the Action.","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"     * @throws IllegalArgumentException exception when not one of enum types.","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"     * @throws NullPointerException exception when input string is null.","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"    public static Action getAction(String command) throws IllegalArgumentException, NullPointerException {","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"        return Action.valueOf(command.toUpperCase());","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"janald99"},"content":"     * Checks if user has input \u0027bye\u0027 command.","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"     * @param input user input.","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"     * @return whether input equals bye, ignoring case.","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"    public static boolean isExit(String input) {","lastModifiedDate":"2022-02-10"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"        return input.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"     * Returns the Description of task.","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"     * @param input Input task to parse.","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"     * @return Description of task.","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"     * @throws InvalidArgumentException Exception when there are no keywords provided.","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":116,"author":{"gitId":"janald99"},"content":"    public static String parseDescription(String input) throws InvalidArgumentException {","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"janald99"},"content":"        String[] arr \u003d splitWhiteSpace(input);","lastModifiedDate":"2022-02-11"},{"lineNumber":118,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":119,"author":{"gitId":"janald99"},"content":"        //no keyword given by user","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"janald99"},"content":"        if (arr.length \u003c\u003d 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"janald99"},"content":"            Action action \u003d Parser.getAction(arr[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":122,"author":{"gitId":"janald99"},"content":"            if (action.equals(Action.TODO)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":123,"author":{"gitId":"janald99"},"content":"                throw new InvalidArgumentException(Messages.UNKNOWN_TODO);","lastModifiedDate":"2022-01-31"},{"lineNumber":124,"author":{"gitId":"janald99"},"content":"            } else if (action.equals(Action.FIND)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":125,"author":{"gitId":"janald99"},"content":"                throw new InvalidArgumentException(Messages.UNKNOWN_FIND);","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"janald99"},"content":"            } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":127,"author":{"gitId":"janald99"},"content":"                assert false : \"no commands other than todo and find should use parseDescription\";","lastModifiedDate":"2022-02-11"},{"lineNumber":128,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":129,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":131,"author":{"gitId":"janald99"},"content":"        String description \u003d arr[1].trim();","lastModifiedDate":"2022-02-11"},{"lineNumber":132,"author":{"gitId":"janald99"},"content":"        return description;","lastModifiedDate":"2022-02-11"},{"lineNumber":133,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"janald99"},"content":"    // returns duke.task.Deadline description and dateTime in a String[] like a pair.","lastModifiedDate":"2022-01-31"},{"lineNumber":136,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":137,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":138,"author":{"gitId":"janald99"},"content":"     * Returns the description and dateTime of Deadline task in a String array.","lastModifiedDate":"2022-02-01"},{"lineNumber":139,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":140,"author":{"gitId":"janald99"},"content":"     * @param input Input Deadline to parse.","lastModifiedDate":"2022-02-01"},{"lineNumber":141,"author":{"gitId":"janald99"},"content":"     * @return String array of description and dateTime.","lastModifiedDate":"2022-02-01"},{"lineNumber":142,"author":{"gitId":"janald99"},"content":"     * @throws InvalidArgumentException when invalid format is given in user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":143,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":144,"author":{"gitId":"janald99"},"content":"    public static String[] parseDeadline(String input) throws InvalidArgumentException {","lastModifiedDate":"2022-01-31"},{"lineNumber":145,"author":{"gitId":"janald99"},"content":"        /* Example: deadline abc /by xyz is split into:","lastModifiedDate":"2022-02-11"},{"lineNumber":146,"author":{"gitId":"janald99"},"content":"           deadline abc AND xyz.","lastModifiedDate":"2022-02-11"},{"lineNumber":147,"author":{"gitId":"janald99"},"content":"         */","lastModifiedDate":"2022-02-11"},{"lineNumber":148,"author":{"gitId":"janald99"},"content":"        String[] deadlineArr \u003d splitWithRegex(input, \"/by\");","lastModifiedDate":"2022-02-11"},{"lineNumber":149,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":150,"author":{"gitId":"janald99"},"content":"        // Example: deadline deadlineDescription is split to deadline and deadlineDescription.","lastModifiedDate":"2022-02-11"},{"lineNumber":151,"author":{"gitId":"janald99"},"content":"        String[] deadlineSplit \u003d splitWhiteSpace(deadlineArr[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":152,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":153,"author":{"gitId":"janald99"},"content":"        // deadline with no description stated.","lastModifiedDate":"2022-02-11"},{"lineNumber":154,"author":{"gitId":"janald99"},"content":"        if (deadlineSplit.length \u003c\u003d 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"janald99"},"content":"            throw new InvalidArgumentException(Messages.UNKNOWN_DEADLINE);","lastModifiedDate":"2022-01-31"},{"lineNumber":156,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":157,"author":{"gitId":"janald99"},"content":"        // deadline with no /by keyword.","lastModifiedDate":"2022-02-11"},{"lineNumber":158,"author":{"gitId":"janald99"},"content":"        if (deadlineArr.length \u003c\u003d 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"janald99"},"content":"            throw new InvalidArgumentException(Messages.UNKNOWN_DATETIME);","lastModifiedDate":"2022-01-31"},{"lineNumber":160,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":161,"author":{"gitId":"janald99"},"content":"        return new String[]{deadlineSplit[1].trim(), deadlineArr[1].trim()};","lastModifiedDate":"2022-01-31"},{"lineNumber":162,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":163,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":164,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":165,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":166,"author":{"gitId":"janald99"},"content":"     * Returns the description and \u0027at\u0027 of Event task in a String array.","lastModifiedDate":"2022-02-01"},{"lineNumber":167,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":168,"author":{"gitId":"janald99"},"content":"     * @param input Input Event to parse.","lastModifiedDate":"2022-02-01"},{"lineNumber":169,"author":{"gitId":"janald99"},"content":"     * @return String array of description and \u0027at\u0027.","lastModifiedDate":"2022-02-01"},{"lineNumber":170,"author":{"gitId":"janald99"},"content":"     * @throws InvalidArgumentException when invalid is given in user input.","lastModifiedDate":"2022-02-01"},{"lineNumber":171,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":172,"author":{"gitId":"janald99"},"content":"    public static String[] parseEvent(String input) throws InvalidArgumentException {","lastModifiedDate":"2022-01-31"},{"lineNumber":173,"author":{"gitId":"janald99"},"content":"        /* Example: event abc /at xyz is split into:","lastModifiedDate":"2022-02-11"},{"lineNumber":174,"author":{"gitId":"janald99"},"content":"           event abc AND xyz","lastModifiedDate":"2022-02-11"},{"lineNumber":175,"author":{"gitId":"janald99"},"content":"         */","lastModifiedDate":"2022-02-11"},{"lineNumber":176,"author":{"gitId":"janald99"},"content":"        String[] eventArr \u003d splitWithRegex(input, \"/at\");","lastModifiedDate":"2022-02-11"},{"lineNumber":177,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":178,"author":{"gitId":"janald99"},"content":"        // Example: deadline deadlineDescription is split to deadline and deadlineDescription.","lastModifiedDate":"2022-02-11"},{"lineNumber":179,"author":{"gitId":"janald99"},"content":"        String[] eventSplit \u003d splitWhiteSpace(eventArr[0]);","lastModifiedDate":"2022-02-11"},{"lineNumber":180,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":181,"author":{"gitId":"janald99"},"content":"        //event with no description stated.","lastModifiedDate":"2022-02-11"},{"lineNumber":182,"author":{"gitId":"janald99"},"content":"        if (eventSplit.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":183,"author":{"gitId":"janald99"},"content":"            throw new InvalidArgumentException(Messages.UNKNOWN_EVENT);","lastModifiedDate":"2022-01-31"},{"lineNumber":184,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":185,"author":{"gitId":"janald99"},"content":"        //event with no /at stated.","lastModifiedDate":"2022-02-11"},{"lineNumber":186,"author":{"gitId":"janald99"},"content":"        if (eventArr.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":187,"author":{"gitId":"janald99"},"content":"            throw new InvalidArgumentException(Messages.UNKNOWN_LOCATION);","lastModifiedDate":"2022-01-31"},{"lineNumber":188,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":189,"author":{"gitId":"janald99"},"content":"        // description, and /at respectively","lastModifiedDate":"2022-02-11"},{"lineNumber":190,"author":{"gitId":"janald99"},"content":"        return new String[]{eventSplit[1].trim(), eventArr[1].trim()};","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":192,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":193,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":194,"author":{"gitId":"janald99"},"content":"     * Splits a String into an array of strings, with white space as divider.","lastModifiedDate":"2022-02-11"},{"lineNumber":195,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":196,"author":{"gitId":"janald99"},"content":"     * @param input String to be split.","lastModifiedDate":"2022-02-11"},{"lineNumber":197,"author":{"gitId":"janald99"},"content":"     * @return String array result after dividing.","lastModifiedDate":"2022-02-11"},{"lineNumber":198,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":199,"author":{"gitId":"janald99"},"content":"    public static String[] splitWhiteSpace(String input) {","lastModifiedDate":"2022-02-11"},{"lineNumber":200,"author":{"gitId":"janald99"},"content":"        return input.split(\"\\\\s\", 2);","lastModifiedDate":"2022-02-11"},{"lineNumber":201,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":202,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":203,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":204,"author":{"gitId":"janald99"},"content":"     * Splits the string with given regex.","lastModifiedDate":"2022-02-11"},{"lineNumber":205,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":206,"author":{"gitId":"janald99"},"content":"     * @param input String to be split.","lastModifiedDate":"2022-02-11"},{"lineNumber":207,"author":{"gitId":"janald99"},"content":"     * @param regex the dividing regex that splits the String.","lastModifiedDate":"2022-02-11"},{"lineNumber":208,"author":{"gitId":"janald99"},"content":"     * @return array of split Strings.","lastModifiedDate":"2022-02-11"},{"lineNumber":209,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":210,"author":{"gitId":"janald99"},"content":"    public static String[] splitWithRegex(String input, String regex) {","lastModifiedDate":"2022-02-11"},{"lineNumber":211,"author":{"gitId":"janald99"},"content":"        return input.split(regex, 2);","lastModifiedDate":"2022-02-11"},{"lineNumber":212,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":213,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":214,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":215,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":215}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.storage;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.io.File;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":" * A class that saves and loads the tasks in a filepath.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"public class Storage {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    private String filePath;","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    private File file;","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * Stores the TaskList in the specified filePath.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     * @param filePath specified filePath.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"        if (!file.exists()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"            createFile();","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"     * Creates a file, and if file is not in specified folder, creates the directory path toe the file too.","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    public void createFile() {","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"            File directory \u003d new File(file.getParent());","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"            //data file not in specific folder, need to handle","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"                directory.mkdirs();","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"            file.createNewFile();","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"            e.getMessage();","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"     * Saves tasks into file.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"     * @param tasks Tasks to be saved.","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"     * @throws IOException Exception if an I/O exception occurs.","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"            fileWriter.write(tasks.get(i).getTaskData() + System.lineSeparator());","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"        fileWriter.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"     * Loads up the tasks that were previously saved into Strings, and creates new file if required file","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"     * does not exist in computer.","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"     * @return the Arraylist of Task objects.","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"     * @throws FileNotFoundException Exception if the input filepath is not found.","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"     * @throws IOException Exception if an I/O exception occurs.","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"                char letter \u003d getLetter(task);","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"                boolean isDone \u003d getDoneStatus(task);","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"                // the content after letter and mark.","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"                String taskContent \u003d getTaskContent(task);","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"                Task taskToAdd \u003d generateTask(letter, isDone, taskContent);","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"                tasks.add(taskToAdd);","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"            //required file doesnt exist in their computer, create new file","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"            this.file.createNewFile();","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"        return tasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"     * Returns \u0027T\u0027, \u0027D\u0027, or \u0027E\u0027 based on Task type.","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"janald99"},"content":"     * @param task the given task.","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"     * @return the letter of given task type.","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"    public char getLetter(String task) {","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"        return task.charAt(0);","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"     * Returns whether a task is done.","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"janald99"},"content":"     * @param task the given task.","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"     * @return the isDone status of task.","lastModifiedDate":"2022-02-11"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"    public boolean getDoneStatus(String task) {","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"        char markedBool \u003d task.charAt(4);","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"        return markedBool \u003d\u003d (\u00271\u0027);","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":116,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":117,"author":{"gitId":"janald99"},"content":"     * Returns the string of the task that was saved into formatted data.","lastModifiedDate":"2022-02-11"},{"lineNumber":118,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":119,"author":{"gitId":"janald99"},"content":"     * @param task the given task.","lastModifiedDate":"2022-02-11"},{"lineNumber":120,"author":{"gitId":"janald99"},"content":"     * @return the formatted task string.","lastModifiedDate":"2022-02-11"},{"lineNumber":121,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":122,"author":{"gitId":"janald99"},"content":"    public String getTaskContent(String task) {","lastModifiedDate":"2022-02-11"},{"lineNumber":123,"author":{"gitId":"janald99"},"content":"        return task.substring(8);","lastModifiedDate":"2022-02-11"},{"lineNumber":124,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":125,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":126,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":127,"author":{"gitId":"janald99"},"content":"     * Constructs the given task.","lastModifiedDate":"2022-02-11"},{"lineNumber":128,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":129,"author":{"gitId":"janald99"},"content":"     * @param letter char of task type.","lastModifiedDate":"2022-02-11"},{"lineNumber":130,"author":{"gitId":"janald99"},"content":"     * @param isDone isDone status of task.","lastModifiedDate":"2022-02-11"},{"lineNumber":131,"author":{"gitId":"janald99"},"content":"     * @param taskContent the formatted task string.","lastModifiedDate":"2022-02-11"},{"lineNumber":132,"author":{"gitId":"janald99"},"content":"     * @return Task generated.","lastModifiedDate":"2022-02-11"},{"lineNumber":133,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":134,"author":{"gitId":"janald99"},"content":"    public Task generateTask(char letter, boolean isDone, String taskContent) {","lastModifiedDate":"2022-02-11"},{"lineNumber":135,"author":{"gitId":"janald99"},"content":"        String[] tokens \u003d taskContent.split(\"\\\\| \", 2);","lastModifiedDate":"2022-02-11"},{"lineNumber":136,"author":{"gitId":"janald99"},"content":"        String description \u003d tokens[0];","lastModifiedDate":"2022-02-11"},{"lineNumber":137,"author":{"gitId":"janald99"},"content":"        switch (letter) {","lastModifiedDate":"2022-01-29"},{"lineNumber":138,"author":{"gitId":"janald99"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2022-01-29"},{"lineNumber":139,"author":{"gitId":"janald99"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":140,"author":{"gitId":"janald99"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2022-01-29"},{"lineNumber":141,"author":{"gitId":"janald99"},"content":"            String by \u003d tokens[1];","lastModifiedDate":"2022-02-11"},{"lineNumber":142,"author":{"gitId":"janald99"},"content":"            return new Deadline(description, by, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":143,"author":{"gitId":"janald99"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2022-01-29"},{"lineNumber":144,"author":{"gitId":"janald99"},"content":"            String at \u003d tokens[1];","lastModifiedDate":"2022-02-11"},{"lineNumber":145,"author":{"gitId":"janald99"},"content":"            return new Event(description, at, isDone);","lastModifiedDate":"2022-02-11"},{"lineNumber":146,"author":{"gitId":"janald99"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"janald99"},"content":"            assert false : \"generateTask should not reach here.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":148,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"janald99"},"content":"        assert false : \"generateTask should not reach here.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":150,"author":{"gitId":"janald99"},"content":"        return null;","lastModifiedDate":"2022-02-11"},{"lineNumber":151,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"janald99":152}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":" * A type of Task, which has a deadline the task is due by.","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    protected String by;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     * Creates a Deadline Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     * @param description description of Deadline Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"     * @param by dateTime of Deadline Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        this.dateTime \u003d LocalDateTime.parse(this.by,","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"                //if fail to parse, throw exception","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"     * Creates a Deadline Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"     * @param description description of Deadline Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"     * @param by dateTime of Deadline Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     * @param isDone status of Task, whether or not done.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        this.dateTime \u003d LocalDateTime.parse(this.by,","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"                //if fail to parse, throw exception","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"     * @return the DateTime in the new format: MMM dd yyyy HH:mm","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"    public String reFormatDateTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"        return this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"     * Returns the task data for a task, for Storage to save and load.","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"     * @return the Deadline Task Data in String for Storage to parse and load.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"    public String getTaskData() {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"        return super.getTaskData() + \" | \" + this.by;","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.reFormatDateTime() + \")\";","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"janald99":67}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":" * A type of Task, which is to be done at somewhere.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"    protected String at;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"     * Creates an Event task.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     * @param description description of Event task.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     * @param at where the Event Task is at.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"     * Creates an Event task.","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     * @param description description of Event task.","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * @param at where the Event Task is at.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param isDone status of Task, whether done or not.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    public String getTaskData() {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"        return super.getTaskData() + \" | \" + this.at;","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"janald99":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":" * Task that users input into Duke.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"     * Creates a Task object.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"     * @param description description of Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     * Creates a Task object, including its Done status.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     * @param description description of Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * @param isDone status of Task, whether is done or not.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     * Gets isDone status.","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"     * @return isDone status of Task.","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"        return this.isDone;","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"     * Returns \"X\" when a task is done, and \" \" when a task is yet to be done.","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"     * @return the status \"X\" or \" \".","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"     * Marks a task as undone.","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"     * Returns \"1\" when a task is done, and \"0\" when a task is yet to be done.","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"     * @return the String representation of boolean, \"1\" or \"0\".","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"    public String getBool() {","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"        return isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"     * Returns \"T\" for todo task, \"D\" for deadline task, \"E\" for Event tasks.","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"     * @return the letter of the Task Type.","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"    public String getLetter() {","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"            return \"T\";","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"            return \"D\";","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"            return \"E\";","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"            return null;","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"     * Getter for description.","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"     * @return task description.","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"        return this.description;","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":99,"author":{"gitId":"janald99"},"content":"     * Returns the task data for a task, for Storage to save and load.","lastModifiedDate":"2022-02-01"},{"lineNumber":100,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"janald99"},"content":"     * @return the Task Data in String for Storage to parse and load.","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":103,"author":{"gitId":"janald99"},"content":"    public String getTaskData() {","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"janald99"},"content":"        return this.getLetter() + \" | \" + this.getBool() + \" | \" + this.description;","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":108,"author":{"gitId":"janald99"},"content":"     * @return the String representation of a Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":109,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":110,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":112,"author":{"gitId":"janald99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":113,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":114,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"janald99":114}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":" * A list of Task objects.","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"public class TaskList {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"     * Returns the number of tasks in TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"     * @return the number of tasks in TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"     * Returns the Task object in TaskList specified by the index.","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"     * @param i the task number to get.","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     * @return the Task to get from TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    public Task get(int i) {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"     * Adds a Task object to TaskList.","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"     * Removes a Task object from Tasklist.","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"     * @param i Task number to be removed.","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    public void remove(int i) {","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"     * @param i Task number.","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"     * @return the String representation of the specified task number to be displayed.","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"    public String getTaskStatement(int i) {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"        return this.get(i).toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"     * Checks if a given task number exists in tasklist.","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"     * @param taskNumber input task number.","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"     * @return whether number is out of bounds in tasklist.","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"    public boolean isOutOfBounds(int taskNumber) {","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        return taskNumber \u003e getSize() || taskNumber \u003c\u003d 0;","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"janald99":74}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.task;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":" * A type of Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     * @return String representation of a todo Task.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"janald99":23}},{"path":"src/main/java/duke/ui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":" * A class that consists of messages that the Ui will show to the user as needed.","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"public class Messages {","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    public static final String EXCLAMATION \u003d \"!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    public static final String BOT_NAME \u003d \"Koro\";","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Yoooo! My name is \"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"            + BOT_NAME + EXCLAMATION + LINE_SEPARATOR + \"How can i help you bro?\";","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    public static final String FAREWELL_MESSAGE \u003d \"See you next time\" + EXCLAMATION;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_COMMAND \u003d \"Unknown command! Here is the list of commands: \";","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"    public static final String TRY_HELP_MSG \u003d \"If unsure, try \u0027help\u0027.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_TODO \u003d \"todo.. todo what?\";","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_DEADLINE \u003d \"Sorry but.. deadline of what??\";","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    public static final String DATETIME_FORMAT \u003d \"\u003cdd/MM/yyyy HHMM\u003e\";","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_DATETIME \u003d \"Invalid date-time format! Format: \" + DATETIME_FORMAT","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"            + System.lineSeparator() + \"An example: 12/12/2222 0800\";","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_EVENT \u003d \"What event? No event stated.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_LOCATION \u003d \"At where? Please specify again\";","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    public static final String DELETE_ERROR \u003d \"Error saving.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_MARK \u003d \"Please specify what task number to mark clearly.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    public static final String MARK_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_UNMARK \u003d \"Please specify what task number to unmark clearly.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"    public static final String UNMARK_SUCCESS \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_DELETE \u003d \"Please specify what task number to delete clearly.\";","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    public static final String DELETE_SUCCESS \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"    public static final String UNKNOWN_FIND \u003d \"Please provide a keyword to search for your task.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    public static final String FINDING_MSG \u003d \"Finding matching tasks in your list:\";","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"    public static final String NO_FIND_MATCH_MSG \u003d \"I cannot find any task associated with the given keyword!\";","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"    public static final String SAVE_ERROR \u003d \"Error saving file\";","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"    public static final String LIST_MSG \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    // whole block involves the help messages of each command.","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    public static final String HELP_INTRO \u003d \"New to the App? Fret not bro!\" + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"            + \"This app allows you to add Tasks to your TaskList, so that you can keep track of them!\" + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"            + \"Here are the list of commands:\" + LINE_SEPARATOR;","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    public static final String TODO_HELP \u003d \"\u0027todo\u0027 adds a task to do, without any constraints.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"    public static final String DEADLINE_HELP \u003d \"\u0027deadline\u0027, with the valid format provided,\"","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"            + \" adds a task that has a deadline.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"    public static final String EVENT_HELP \u003d \"\u0027event\u0027 adds a task with a location or destination,\"","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"            + \" i.e, where the task is at.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    public static final String LIST_HELP \u003d \"\u0027list\u0027 prints out your whole task list currently!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"    public static final String BYE_HELP \u003d \"\u0027bye\u0027 ends the program- Don\u0027t worry, I would have saved your tasks!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"    public static final String MARK_AND_UNMARK_HELP \u003d \"\u0027mark\u0027 and \u0027unmark\u0027 marks the task as done, \"","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"            + \"or not done respectively.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"    public static final String DELETE_HELP \u003d \"\u0027delete\u0027 deletes a task, obviously.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"    public static final String FIND_HELP \u003d \"\u0027find\u0027 is very useful when searching for a task with the given keyword,\"","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"            + \" especially when the list is long!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"    public static final String HELP_HELP \u003d \"\u0027help\u0027 gives you an overview of our commands. You literally just used it.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    //body of help.","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"    public static final String HELP_SUMMARY \u003d \"todo, deadline, and event are commands that adds the respective \"","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"            + \"type of task into your list.\" + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"            + TODO_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"            + DEADLINE_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"            + EVENT_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"            + LIST_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"            + BYE_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"            + MARK_AND_UNMARK_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"            + DELETE_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"            + FIND_HELP + LINE_SEPARATOR","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"            + HELP_HELP + LINE_SEPARATOR;","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"    //conclusion of Help.","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"    public static final String HELP_CONCLUSION \u003d \"Go ahead and manage and your tasks bro! I\u0027ll be here to help.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"    public static final String HELP_BODY \u003d HELP_SUMMARY + HELP_CONCLUSION;","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"    public static String getMatchCountMsg (int matchCount) {","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"        return String.format(\"There are %d task(s) that match your keyword.\", matchCount);","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"     * Returns the message indicating the task number does not exist.","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"janald99"},"content":"     * @param taskNumber Task number that does not exist.","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"janald99"},"content":"     * @return The message indicating that that task number does not exist.","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"janald99"},"content":"    public static String getOutOfBoundsMsg (int taskNumber) {","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"janald99"},"content":"        return String.format(\"The task %d does not exist!\", taskNumber);","lastModifiedDate":"2022-01-31"},{"lineNumber":94,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":96,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":96}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package duke.ui;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":" * Class that deals with user interaction between Duke chatbot and user.","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"public class Ui {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    public static final String[] COMMANDS \u003d {\"list\", \"todo \u003ctask\u003e\", \"deadline \u003ctask\u003e /by \" + Messages.DATETIME_FORMAT,","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"                                                \"event \u003ctask\u003e /at \u003cat\u003e\", \"mark \u003ctaskNumber\u003e\",","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"                                                \"unmark \u003ctaskNumber\u003e\", \"delete \u003ctaskNumber\u003e\", \"bye\"};","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"     * Appends a string to the original string.","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"     * @param curr the original string.","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"     * @param add the string to append.","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    public static String append(String curr, String add) {","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        return curr + add + LINE_SEPARATOR;","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"     * Says bye to the user and closes the scanner for system input.","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    public String farewell() {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        return showToUser(LINE_SEPARATOR, Messages.FAREWELL_MESSAGE);","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"     * Displays the available commands Duke chatbot consists of.","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    public String showCommands() {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"        for (int i \u003d count; i \u003c COMMANDS.length; i++) {","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"            count++;","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"            output +\u003d count + \". \" + COMMANDS[i] + LINE_SEPARATOR;","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"     * Prints the number of tasks left.","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"     * @param tasks The TaskList that consists of the task number we want to retrieve.","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"    public String printTaskCount(TaskList tasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"        return String.format(\"Now you have %d task(s) in your list.\", tasks.getSize());","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"janald99"},"content":"     * Prints the message indicating a task has been added.","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"janald99"},"content":"     * @param tasks The TaskList that consists of the latest task added and the total task count.","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"janald99"},"content":"    public String printTaskAdded(TaskList tasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"janald99"},"content":"        output \u003d Ui.append(output, \"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"janald99"},"content":"        output \u003d Ui.append(output, tasks.get(tasks.getSize() - 1).toString());","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"janald99"},"content":"        output \u003d Ui.append(output, printTaskCount(tasks));","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"janald99"},"content":"     * Displays an error message to user.","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"janald99"},"content":"     * @param message The message that is displayed to user.","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"janald99"},"content":"    public String showError(String message) {","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"janald99"},"content":"        return showToUser(message);","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"janald99"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"janald99"},"content":"     * Prints the input messages line by line to user.","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"janald99"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"janald99"},"content":"     * @param message The messages that are displayed to the user, can be 1 or more using Varargs.","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"janald99"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"janald99"},"content":"    public String showToUser(String... message) {","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"janald99"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"janald99"},"content":"        for (String m : message) {","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"janald99"},"content":"            output \u003d Ui.append(output, m);","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"janald99"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"janald99"},"content":"        return output;","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"janald99":87}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" style\u003d\"-fx-padding: 20; -fx-border-style: solid inside; -fx-border-width: 3.5; -fx-border-insets: 5; -fx-border-radius: 15; -fx-border-color: white; -fx-opacity: 0.9;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"            \u003cFont name\u003d\"Courier New Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"            \u003cGlow level\u003d\"0.85\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"         \u003c/effect\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"janald99":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.effect.ColorAdjust?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter text here..\" style\u003d\"-fx-background-color: #000080; -fx-text-inner-color: #FFF8DC;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"            \u003cColorAdjust brightness\u003d\"-0.49\" contrast\u003d\"1.0\" hue\u003d\"0.1\" saturation\u003d\"-0.4\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: black;\" text\u003d\"Send\" textFill\u003d\"#f2eeee\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"            \u003cFont name\u003d\"DengXian Regular\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"        \u003cScrollPane id\u003d\"scrollPane\" fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"viewport\" stylesheets\u003d\"@styles.css\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"janald99":30}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package parser;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"class ParserTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"    void testParse() {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"    void testParseDescription() throws InvalidArgumentException {","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"        assertEquals(\"TodoDescription\", parser.parseDescription(\"todo TodoDescription\"));","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"    void testParseDeadline() throws InvalidArgumentException {","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"        assertTrue(Arrays.equals(new String[]{\"taskDescription\", \"taskDeadline\"},","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"                parser.parseDeadline(\"deadline taskDescription /by taskDeadline\")));","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"    void testParseEvent() throws InvalidArgumentException {","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"        assertTrue(Arrays.equals(new String[]{\"eventDescription\", \"eventAt\"},","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"                parser.parseEvent(\"event eventDescription /at eventAt\")));","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"janald99":43}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"class StorageTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"    void save() {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"    void load() {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"janald99":15}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"class TaskTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"    void testGetStatusIcon() {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"janald99"},"content":"        assertEquals(\"X\", new Task(\"testing task\", true).getStatusIcon());","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"janald99"},"content":"    void testMarkAsDone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"janald99"},"content":"        Task task \u003d new Task(\"testing mark as done\", false);","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"janald99"},"content":"        task.markAsDone();","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"janald99"},"content":"        assertEquals(true, task.getDoneStatus());","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"janald99"},"content":"    void testMarkAsUndone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"janald99"},"content":"        Task task \u003d new Task(\"testing mark as undone\", true);","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"janald99"},"content":"        task.markAsUndone();","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"janald99"},"content":"        assertEquals(false, task.getDoneStatus());","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"janald99"},"content":"    void testGetBool() {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"janald99"},"content":"        assertEquals(\"1\", new Task(\"test getBool1\", true).getBool());","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"janald99"},"content":"        assertEquals(\"0\", new Task(\"test getBool0\", false).getBool());","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"janald99"},"content":"    void testGetLetter() {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"janald99"},"content":"        assertEquals(\"T\", new Todo(\"todo\").getLetter());","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"janald99"},"content":"        assertEquals(\"E\", new Event(\"event\", \"at here\").getLetter());","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"janald99"},"content":"        assertNull(new Task(\"task\").getLetter());","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"janald99"},"content":"    void testToString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"janald99"},"content":"        assertEquals(\"[X] task description\", new Task(\"task description\", true).toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"janald99":51}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"package task;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"class TodoTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"    void testToString() {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"        assertEquals(\"[T][X] the task todo\", new Todo(\"the task todo\", true).toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"janald99"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"janald99"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"janald99":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"janald99"},"content":"drink coffee","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"janald99"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"janald99"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"janald99"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"janald99"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"janald99"},"content":"mark 5","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"janald99"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"janald99"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"janald99"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"janald99"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"janald99"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"janald99"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"janald99"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"janald99":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"janald99"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janald99":1,"-":20}}]
