[{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"E#X#s#Dec-22-2002","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"D# #j#Dec-12-2222","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"T# #jj","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"D# #hw#Dec-21-2000","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"E# #hw#Dec-21-2222","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"T#X#cook","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"T# #j","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"D# #s#Dec-21-2222 12:22 pm","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"Tiffanylin21":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import duke.helpers.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import duke.helpers.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import duke.helpers.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import duke.helpers.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a chatbot. A Duke object corresponds to","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":" * a chatbot that tracks tasks for users","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"public class Duke {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a Duke object where Task data is stored in a given file with given directory.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"     * @param dirPath Directory path to store Task data.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"     * @param filePath File path to store Task data.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    public Duke(String dirPath, String filePath) {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        this.storage \u003d new Storage(dirPath, filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"            this.tasks \u003d new TaskList(this.storage.loadFileContents());","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-13"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"     * Runs the Duke chatbot, saving a list of tasks in the specified file.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    public void run() {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        ui.welcome();","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"            userInput \u003d ui.readCommand();","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"            Parser.parse(userInput);","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        ui.closeScanner();","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates a Duke object and calls the run method.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        String dirPath \u003d \"./src/main/data\";","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        String filePath \u003d \"./src/main/data/duke.txt\";","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        Duke duke \u003d new Duke(dirPath, filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"        duke.run();","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Tiffanylin21":54,"-":7}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":" * Enum class representing the type of commands a Duke object recognizes.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"public enum Command {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"    BYE(\"bye\"), LIST(\"list\"), DELETE(\"delete\"),","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"    TOGGLEMARK(\"toggleMark\"), TODO(\"todo\"), DEADLINE(\"deadline\"),","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"    EVENT(\"event\"), FIND(\"find\");","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"    private String str;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"    Command(String str) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"        this.str \u003d str;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"        return this.str;","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Tiffanylin21":22}},{"path":"src/main/java/duke/commands/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a Deadline to be met by the user with a specified date and/or time.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private String by;","lastModifiedDate":"2022-01-13"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    private LocalTime time;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    private String dateFormat;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    private String timeFormat;","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"            \"dd MM yyyy\",","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"            \"yyyy/MM/dd\",","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"            \"yyyy MM dd\",","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"            \"MMM dd yyyy\",","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    };","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String[] TIME_FORMATS \u003d {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"            \"HHmm\",","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"            \"HH:mm\",","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    };","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"     * @param description description of Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"     * @param by date and/or time of Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-13"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        super(description, \"D\");","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if time given is in valid format and sets the timeFormat attribute.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"     * @return True if time is given in a recognised format, False otherwise","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws DateTimeParseException If parser could not parse the time according to format.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean isValidTime() {","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        for (String format : TIME_FORMATS) {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"                if (this.by.split(\" \").length !\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"                    LocalTime.parse(this.by.split(\" \")[1], formatter);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"                    this.timeFormat \u003d format;","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"                    return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"                    return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if date given is in valid format and sets the dateFormat attribute.","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"     * @return True if date is given in a recognised format, False otherwise","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws DateTimeParseException If parser could not parse the date according to format.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean isValidDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        String d \u003d this.by.split(\" \")[0].replace(\"-\", \" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"                LocalDate.parse(d, formatter);","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"                this.dateFormat \u003d format;","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"                return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns formatted date of Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"     * @return date of Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        String d \u003d this.by.split(\" \")[0].replace(\"-\", \" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        if (this.isValidDate()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(this.dateFormat);","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"            this.date \u003d LocalDate.parse(d, formatter);","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"            return this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"            return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns formatted time of Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"     * @return time of Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-22"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"        if (this.isValidTime()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(this.timeFormat);","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"            this.time \u003d LocalTime.parse(this.by.split(\" \")[1], formatter);","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"            return this.time.format(DateTimeFormatter.ofPattern(\"HH:mm a\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"            return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns a formatted String describing the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"     * @return formatted String describing the Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + (this.getDate() + \" \" + this.getTime()).trim() + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-13"}],"authorContributionMap":{"Tiffanylin21":115,"-":12}},{"path":"src/main/java/duke/commands/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a Event to be attended by the user with a specified date and/or time.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-13"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"    private String at;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"    private LocalTime time;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    private String dateFormat;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    private String timeFormat;","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"            \"dd MM yyyy\",","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"            \"yyyy/MM/dd\",","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"            \"yyyy MM dd\",","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"            \"MMM dd yyyy\",","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    };","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String[] TIME_FORMATS \u003d {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"            \"HHmm\",","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"            \"HH:mm\",","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    };","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs an Event object.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"     * @param description description of Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"     * @param at date and/or time at which Event occurs.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        super(description, \"E\");","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if time given is in valid format and sets the timeFormat attribute.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     * @return True if time is given in a recognised format, False otherwise","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws DateTimeParseException If parser could not parse the time according to format.","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean isValidTime() {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        for (String format : TIME_FORMATS) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"                if (this.at.split(\" \").length !\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"                    LocalTime.parse(this.at.split(\" \")[1], formatter);","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"                    this.timeFormat \u003d format;","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"                    return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"                    return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if date given is in valid format and sets the dateFormat attribute.","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"     * @return True if date is given in a recognised format, False otherwise","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws DateTimeParseException If parser could not parse the date according to format.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean isValidDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        String d \u003d this.at.split(\" \")[0].replace(\"-\", \" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"                LocalDate.parse(d, formatter);","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"                this.dateFormat \u003d format;","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"                return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        return false;","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns formatted date of Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"     * @return date of Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"    public String getDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"        String d \u003d this.at.split(\" \")[0].replace(\"-\", \" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        if (this.isValidDate()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(this.dateFormat);","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"            this.date \u003d LocalDate.parse(d, formatter);","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"            return this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"            return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns formatted time of Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"     * @return time of Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"    public String getTime() {","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"        if (this.isValidTime()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(this.timeFormat);","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"            this.time \u003d LocalTime.parse(this.at.split(\" \")[1], formatter);","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"            return this.time.format(DateTimeFormatter.ofPattern(\"HH:mm a\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"            return \"\";","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns a formatted String describing the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"     * @return formatted String describing the Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-13"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + (this.getDate() + \" \" + this.getTime()).trim() + \")\";","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-13"}],"authorContributionMap":{"Tiffanylin21":118,"-":8}},{"path":"src/main/java/duke/commands/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a task to be done by the user. It contains a description of the task, type of task and mark status.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Task  {","lastModifiedDate":"2022-01-13"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private String description;","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"    private String type;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a Task object that is initially unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-13"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns type of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"     * @return character that represents type of Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    public String getType() { return this.type; }","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns description of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"     * @return description of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2022-01-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns mark status of task which represents whether the user has completed the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"     * @return \"X\" if task is completed, \" \" otherwise.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns time of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"     * @return time of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"    public String getTime() { return \"\"; };","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns date of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"     * @return date of Task","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    public String getDate() { return \"\"; };","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"     * Marks Task as completed.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void markDone() {","lastModifiedDate":"2022-01-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"     * Marks Task as uncompleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void markUndone() {","lastModifiedDate":"2022-01-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if Task description matches a given string.","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"     * @param s String to be checked if description contains.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"     * @return True if description contains s, false otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean matchDescription(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        return this.description.contains(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns a formatted String describing the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"     * @return formatted String describing the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2022-01-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-13"}],"authorContributionMap":{"Tiffanylin21":65,"-":28}},{"path":"src/main/java/duke/commands/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a Task to be done by the user with no specified date.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a ToDo object.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-13"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"        super(description, \"T\");","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns a formatted String describing the Todo.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"     * @return formatted String describing the Todo.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-13"}],"authorContributionMap":{"Tiffanylin21":14,"-":10}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"    public DukeException(String str) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"        super(str);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Tiffanylin21":7}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"    public EmptyDescriptionException(String command) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"        super(\"OOPS!!! The description of a \" + command + \" cannot be empty\");","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Tiffanylin21":7}},{"path":"src/main/java/duke/exceptions/EmptyTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"public class EmptyTimeException extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"    public EmptyTimeException (String command) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"        super(\"OOPS!!! Time of \" + command + \" is missing. Please indicate a stipulated time.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Tiffanylin21":7}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Tiffanylin21":7}},{"path":"src/main/java/duke/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"    public InvalidDateException() { super(\"OOPS! Please provide a valid date!\"); }","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Tiffanylin21":5}},{"path":"src/main/java/duke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"        super(\"OOPS!!! This is an invalid index.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Tiffanylin21":7}},{"path":"src/main/java/duke/helpers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.helpers;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import duke.exceptions.EmptyTimeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a parser which makes sense of user inputs and calls the calls the corresponding commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"     * Determines the type of commands given in the user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"     * @param s user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"     * @param command type of command to be checked against.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"     * @return boolean that indicates if the user gave the specified command.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws DukeException If deadline and event commands are missing date and/or time.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    static boolean isCommand(String s, Command command) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"        boolean res \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"        boolean missingDesc \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        boolean missingTime \u003d false;","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        switch (command) {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        case BYE:","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"            res \u003d s.equals(\"bye\");","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        case LIST:","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"            res \u003d s.equals(\"list\");","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        case DELETE:","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"            res \u003d Pattern.matches(\"delete \\\\d+\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        case TOGGLEMARK:","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"            res \u003d Pattern.matches(\"mark \\\\d+|unmark \\\\d+\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        case TODO:","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"            res \u003d Pattern.matches(\"todo .+\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"            missingDesc \u003d !res \u0026\u0026 s.equals(\"todo \");","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"            res \u003d Pattern.matches(\"deadline .+ /by .+\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"            missingDesc \u003d !res \u0026\u0026 Pattern.matches(\"deadline\\\\s+|deadline\\\\s+/by.*\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"            missingTime \u003d !res \u0026\u0026 !missingDesc \u0026\u0026 Pattern.matches(\"deadline .+\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        case EVENT:","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"            res \u003d Pattern.matches(\"event .+ /at .+\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"            missingDesc \u003d !res \u0026\u0026 Pattern.matches(\"event\\\\s+|event\\\\s+/at.*\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            missingTime \u003d !res \u0026\u0026 !missingDesc \u0026\u0026 Pattern.matches(\"event .+\", s);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"            case FIND:","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"                res \u003d res \u003d Pattern.matches(\"find .+\", s);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"        if (missingDesc) { throw new EmptyDescriptionException(command.toString()); }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        if (missingTime) { throw new EmptyTimeException(command.toString()); }","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        return res;","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"     * Parse user input and calls TaskList to perform operations accordingly.","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"     * @param input User input.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws DukeException If command doesn\u0027t exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws java.io.IOException If I/O operations fail or is interrupted.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"    public static void parse(String input) {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        String ans \u003d \"\\t\";","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"            if (isCommand(input, Command.BYE)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"                System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"            } else if (isCommand(input, Command.LIST)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"                TaskList.getTaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"            } else if (isCommand(input, Command.DELETE)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"                TaskList.deleteTask(input, ans);","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"            } else if (isCommand(input, Command.TOGGLEMARK)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"                TaskList.toggleMarkTask(input, ans);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"            } else if (isCommand(input, Command.TODO)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"                TaskList.onTodo(input, ans);","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"            } else if (isCommand(input, Command.DEADLINE)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"                TaskList.onDeadline(input, ans);","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"            } else if (isCommand(input, Command.EVENT)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"                TaskList.onEvent(input, ans);","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"            } else if (isCommand(input, Command.FIND)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"                TaskList.getMatchedTasks(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (DukeException | java.io.IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Tiffanylin21":97}},{"path":"src/main/java/duke/helpers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.helpers;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import java.nio.file.NoSuchFileException;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a storage for all Task data a Duke object saves according to user input.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    private String dirPath;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    private String filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"     * @param dirPath directory path for directory of data to be stored.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"     * @param filePath file path for data to be stored.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    public Storage(String dirPath, String filePath) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"     * Loads existing data on Tasks if it exists, creates directory and file to store data if it doesn\u0027t exist.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"     * @return An array of Task where a Duke object stores all Task data from the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws IOException If I/O operations fails or is interrupted.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws NoSuchFileException If file for storage of Task data could not be created.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    public ArrayList\u003cTask\u003e loadFileContents() throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        if (!new File(this.dirPath).exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"            Files.createDirectory(Path.of(dirPath));","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        if (!new File(this.filePath).exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"            File newFile \u003d new File(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"            newFile.createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"            java.nio.file.Path path \u003d java.nio.file.Paths.get(\"src/main/data/duke.txt\");","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"            BufferedReader reader \u003d java.nio.file.Files.newBufferedReader(path);","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"            String line;","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"            while((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"                String[] temp \u003d line.split(\"#\");","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"                String command \u003d temp[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"                boolean isMarked \u003d temp[1].equals(\"X\");","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"                String desc \u003d temp[2];","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"                Task t;","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"                if (command.equals(\"T\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"                    t \u003d new ToDo(desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"                } else if (command.equals(\"D\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"                    String by \u003d temp[3];","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"                    t \u003d new Deadline(desc, by);","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"                    String time \u003d temp[3];","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"                    t \u003d new Event(desc, time);","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"                if (isMarked) {","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"                    t.markDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"                    t.markUndone();","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"                taskArr.add(t);","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (NoSuchFileException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        return taskArr;","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"     * Writes existing data on Tasks to a directory and file.","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"     * @return An array of Task where a Duke object stores all Task data from the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws IOException If I/O operations fails or is interrupted.","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"    public static ArrayList\u003cTask\u003e saveToFile(ArrayList\u003cTask\u003e taskArr) {","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"            java.nio.file.Path path \u003d java.nio.file.Paths.get(\"src/main/data/duke.txt\");","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"            BufferedWriter writer \u003d java.nio.file.Files.newBufferedWriter(path);","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"            for (Task t : taskArr) {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"                String toSave;","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"                String separator \u003d \"#\";","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"                String command \u003d t.getType();","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"                String mark \u003d t.getStatusIcon();","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"                String desc \u003d t.getDescription();","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"                String dateTime \u003d (t.getDate().replace(\" \", \"-\") + \" \" + t.getTime()).trim();","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"                if (command.equals(\"D\") | command.equals(\"E\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"                    toSave \u003d String.join(separator, command, mark, desc, dateTime);","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"                } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"                    toSave \u003d String.join(separator, command, mark, desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"                writer.write(toSave + System.lineSeparator());","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"            writer.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"        return taskArr;","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Tiffanylin21":119}},{"path":"src/main/java/duke/helpers/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.helpers;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":" * Represents an array of Tasks which the user can perform operations on including adding,","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":" * deleting, marking and getting specific Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"public class TaskList {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a TaskList object based on a given array of Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     * @param a An array of Tasks to initialize TaskList to.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public TaskList(ArrayList\u003cTask\u003e a) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        tasks \u003d a;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a TaskList object that stores an empty ArrayList\u003cTask\u003e.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds a Task object to the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"     * @param t Task object to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        tasks.add(t);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"     * Deletes a Task object from the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"     * @param input User input that calls for the task deletion.","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"     * @param ans the Duke object\u0027s reply to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"    public static void deleteTask(String input, String ans) throws DukeException {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"        String[] strArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        int index \u003d Integer.valueOf(strArr[1]) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c len()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"            Task t \u003d getTask(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"            tasks.remove(t);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"            ans +\u003d \"Noted. I\u0027ve removed this task:\\n\\t\\t\" + t.toString() +","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"                    \"\\n\\tNow you have \" + getNumOfTasks() + \" in the list.\";;","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        Storage.saveToFile(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(ans);","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"     * Prints the TaskList as a formatted String.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"    public static void getTaskList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        String ans \u003d \"\\tHere are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        for (int i \u003d 0; i \u003c len(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"            if (i \u003d\u003d len() - 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"                ans +\u003d String.format(\"\\t%d.%s\", i + 1, t.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"                ans +\u003d String.format(\"\\t%d.%s \\n\", i + 1, t.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(ans);","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"     * Marks a specific Task in TaskList as \u0027marked\u0027 or \u0027unmarked\u0027 depending on user input","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"     * @param input User input that calls for the task marking or un-marking.","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"     * @param ans the Duke object\u0027s reply to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws DukeException If user specified an unknown Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"    public static void toggleMarkTask(String input, String ans) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        String[] strArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        int index \u003d Integer.valueOf(strArr[1]) - 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c len()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"            Task t \u003d getTask(index);","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"            if (strArr[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"                t.markDone();","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"                ans +\u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\\t\" + t.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"                t.markUndone();","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"                ans +\u003d \"OK, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + t.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"        Storage.saveToFile(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(ans);","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds a ToDo to the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"     * @param input User input that calls for the ToDo to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"     * @param ans the Duke object\u0027s reply to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws java.io.IOException If I/O operations fail or is interrupted.","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"    public static void onTodo(String input, String ans) throws java.io.IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"        String desc \u003d input.substring(5);","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"        ToDo t \u003d new ToDo(desc);","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"        addTask(t);","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"        Storage.saveToFile(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"        ans +\u003d \"Got it. I\u0027ve added this task:\\n\\t\\t\" + t.toString() +","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"Tiffanylin21"},"content":"                \"\\n\\tNow you have \" + getNumOfTasks() + \" in the list.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(ans);","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds a Deadline to the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"     * @param input User input that calls for the Deadline to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"     * @param ans the Duke object\u0027s reply to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws java.io.IOException If I/O operations fail or is interrupted.","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws InvalidDateException If a date with an invalid format and/or time is given by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"    public static void onDeadline(String input, String ans) throws java.io.IOException, InvalidDateException {","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"        String desc \u003d input.substring(9, input.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"        String by \u003d input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"        Deadline t \u003d new Deadline(desc, by);","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"        if (!t.isValidDate() \u0026\u0026 !t.isValidTime()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        addTask(t);","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"        Storage.saveToFile(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"        ans +\u003d \"Got it. I\u0027ve added this task:\\n\\t\\t\" + t.toString() +","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"                \"\\n\\tNow you have \" + getNumOfTasks() + \" in the list.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(ans);","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds an Event to the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"     * @param input User input that calls for the Event to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"Tiffanylin21"},"content":"     * @param ans the Duke object\u0027s reply to the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws java.io.IOException If I/O operations fail or is interrupted.","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws InvalidDateException If a date with an invalid format and/or time is given by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"Tiffanylin21"},"content":"    public static void onEvent(String input, String ans) throws java.io.IOException, InvalidDateException {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"Tiffanylin21"},"content":"        String desc \u003d input.substring(6, input.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"Tiffanylin21"},"content":"        String time \u003d input.substring(input.indexOf(\"/at\") + 4);","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"Tiffanylin21"},"content":"        Event t \u003d new Event(desc, time);","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"Tiffanylin21"},"content":"        if (!t.isValidDate() \u0026\u0026 !t.isValidTime()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"Tiffanylin21"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"        addTask(t);","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"Tiffanylin21"},"content":"        Storage.saveToFile(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"        ans +\u003d \"Got it. I\u0027ve added this task:\\n\\t\\t\" + t.toString() +","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"                \"\\n\\tNow you have \" + getNumOfTasks() + \" in the list.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":168,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(ans);","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns specific Task based on an index.","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"Tiffanylin21"},"content":"     * @param index Index of Task to be returned.","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"Tiffanylin21"},"content":"     * @return Specified Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"Tiffanylin21"},"content":"    public static Task getTask(int index) {","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"Tiffanylin21"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":179,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":183,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns number of Tasks in TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"Tiffanylin21"},"content":"     * @return number of Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"Tiffanylin21"},"content":"    public static int len() {","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"Tiffanylin21"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns formatted String description of number of Tasks in TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":194,"author":{"gitId":"Tiffanylin21"},"content":"     * @return String dictating number of Tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":195,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":196,"author":{"gitId":"Tiffanylin21"},"content":"    private static String getNumOfTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":197,"author":{"gitId":"Tiffanylin21"},"content":"        return len() \u003d\u003d 1","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"Tiffanylin21"},"content":"                ? \"1 task\"","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"Tiffanylin21"},"content":"                : len() + \" tasks\";","lastModifiedDate":"2022-01-25"},{"lineNumber":200,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":201,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":202,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns a formatted string that lists all Tasks with description matching user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"Tiffanylin21"},"content":"     * @param input User input that calls Duke to find Tasks with descriptions containing a given keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"Tiffanylin21"},"content":"    public static void getMatchedTasks(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"Tiffanylin21"},"content":"        boolean isMatched \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":209,"author":{"gitId":"Tiffanylin21"},"content":"        String keyword \u003d input.substring(5);","lastModifiedDate":"2022-01-27"},{"lineNumber":210,"author":{"gitId":"Tiffanylin21"},"content":"        String ans \u003d \"\\tHere are the matching tasks in your list:\";","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"Tiffanylin21"},"content":"        for (int i \u003d 0; i \u003c len(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"Tiffanylin21"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"Tiffanylin21"},"content":"            if(t.matchDescription(keyword)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"Tiffanylin21"},"content":"                ans +\u003d String.format(\"\\n\\t%d.%s\", i + 1, t.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"Tiffanylin21"},"content":"                isMatched \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"Tiffanylin21"},"content":"        ans \u003d (isMatched) ? ans : \"There are no matching tasks in your list!\";","lastModifiedDate":"2022-01-27"},{"lineNumber":219,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(ans);","lastModifiedDate":"2022-01-27"},{"lineNumber":220,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":221,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":222,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Tiffanylin21":222}},{"path":"src/main/java/duke/helpers/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.helpers;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":" * Reads user inputs","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"    private static Scanner sc;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a Ui object and initializes a Scanner object to read user inputs.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    public Ui() {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"     * Displays a welcome message for the user upon running a Duke object","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"    public void welcome() {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"     * Reads the next line of user input using a Scanner object","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"     * @return the next line of user input","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"    public static String readCommand() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"     * Closes the Scanner object","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    public static void closeScanner() {","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        sc.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     * Displays an error message for the user if IOException is thrown","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        System.out.println(\"Loading error!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Tiffanylin21":50}},{"path":"src/test/java/duke/commands/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"    private Deadline deadline \u003d new Deadline(\"do homework\", \"20-12-2001 1322\");","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"    public void getDate_exampleDate_formattedDateReturned() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"        String d \u003d \"Dec 20 2001\";","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(d, deadline.getDate());","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"    public void getTime_exampleTime_formattedTimeReturned() {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"        String t \u003d \"13:22 pm\";","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(t, deadline.getTime());","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    public void toString_exampleDeadline_formattedDeadlineReturned() {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"        String s \u003d \"[D][ ] do homework (by: Dec 20 2001 13:22 pm)\";","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(s, deadline.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Tiffanylin21":29}},{"path":"src/test/java/duke/helpers/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package duke.helpers;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    Ui ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"    public void uiWelcome_welcomePrinted() {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"        ui.welcome();","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(\"Hello! I\u0027m duke.Duke\\n\" + \"What can I do for you?\",","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public void parserIsCommand_wrongDate_dukeExceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        String s \u003d \"OOPS!!! Time of deadline is missing. Please indicate a stipulated time.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"            Parser.isCommand(\"deadline cook /by\", Command.DEADLINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"            assertEquals(s, e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Tiffanylin21":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"deadline return book /by 21/12/2020","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"event project meeting /at 21-12-2020","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"unmark 1","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Tiffanylin21":6}}]
