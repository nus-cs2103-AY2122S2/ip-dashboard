[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"//noinspection GroovyAssignabilityCheck","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MelvinCZJ":19,"-":45}},{"path":"src/main/java/duke/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * The ClearCommand class contains the basic","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" * behaviour of a clear command.","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the clear command, saves the data and returns","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"     * a message to let user know that execution was","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     * successful.","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message of either successful or","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     *                unsuccessful execution","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"            tasks.clear();","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showClear();","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":37}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * The abstract Command class contains basic","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of a command.","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"public abstract class Command {","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"     * Abstract method that models the execution","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * of this Command","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks - TaskList for tasks related methods","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui - Ui for I/O related methods","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage - Storage for data saving method","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message informing user about the","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     *                success of execution","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":25}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"import duke.time.ManagerDate;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"import duke.time.ManagerTime;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" * The DeadlineCommand class contains basic attributes and","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of a deadline command.","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * Name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    private final String name;","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     * Date of task","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    private final String date;","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"     * Time of task","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"    private final String time;","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     * Validity of task (based on date and time check)","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    private final boolean isTaskValid;","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     * @param name name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     * @param date date of task","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * @param time time of task","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    public DeadlineCommand(String name, String date, String time) {","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        ManagerDate md \u003d new ManagerDate(date);","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"        ManagerTime mt \u003d new ManagerTime(time);","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"        this.isTaskValid \u003d md.isDateValid() \u0026\u0026 mt.isTimeValid();","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the deadline command, saves the data and returns","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"     * a message to let user know that execution was","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"     * successful.","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"     * Task will only be created if date and time is valid.","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message of either successful or","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"     *                unsuccessful execution","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"            if (!this.isTaskValid) {","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid date and/or time!\");","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"            } else {","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"                Task task \u003d new DeadlineTask(this.name, this.date, this.time);","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"                tasks.add(task);","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"                return ui.showTaskAdded();","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":85}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * The DeleteCommand class contains basic attributes and","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of a delete command.","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Index of task","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * Possible NumberFormatException during the parsing of","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * the input from String into int. Checks whether","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     * the String input can be parsed into an int.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     * @param str - raw task number input from the user","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException - if str is not an int","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    public DeleteCommand(String str) throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"            this.taskNum \u003d Integer.parseInt(str);","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Invalid input!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the clear command, saves the data and returns","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * a message to let user know that execution was","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     * successful.","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message of either successful or","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"     *                unsuccessful execution","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"            tasks.delete(this.taskNum);","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showTaskDeleted();","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":60}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"import duke.time.ManagerDate;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"import duke.time.ManagerTime;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" * The EventCommand class contains basic attributes and","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of a event command.","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * Name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    private final String name;","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     * Date of task","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    private final String date;","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"     * Time of task","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"    private final String time;","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     * Validity of task (based on date and time check)","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    private final boolean isTaskValid;","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     * @param name name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     * @param date date of task","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * @param time time of task","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    public EventCommand(String name, String date, String time) {","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        ManagerDate md \u003d new ManagerDate(date);","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"        ManagerTime mt \u003d new ManagerTime(time);","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"        this.isTaskValid \u003d md.isDateValid() \u0026\u0026 mt.isTimeValid();","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the event command, saves the data and returns","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"     * a message to let user know that execution was","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"     * successful.","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"     * Task will only be created if date and time is valid.","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message of either successful or","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"     *                unsuccessful execution","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"            if (!this.isTaskValid) {","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid date and/or time!\");","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"            } else {","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"                Task task \u003d new EventTask(this.name, this.date, this.time);","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"                tasks.add(task);","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"                storage.save(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"                return ui.showTaskAdded();","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":85}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * The ExitCommand class contains the basic","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of an exit command.","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the exit command, and returns message to","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     * let user know that execution was successful.","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message of successful execution","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"        return ui.showExit();","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"MelvinCZJ":28}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * The FindCommand class contains basic attributes and","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of a find command.","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Keyword used for the search","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    private final String keyword;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * @param keyword - raw task number input from the user","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the find command, returns the result","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String search result","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showResult(tasks.find(this.keyword));","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":46}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * The HelpCommand class contains the basic","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * behaviour of a help command.","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the help command, and returns list of","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     * commands and their usages.","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String command list","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"        return ui.showTutorial();","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"MelvinCZJ":28}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * The ListCommand class contains the basic","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" * behaviour of a list command.","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the exit command, and returns list","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"     * of tasks in task list","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message of successful execution","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showList(tasks.tasksAsString());","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"MelvinCZJ":33}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * The MarkCommand class contains basic attributes and","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of a mark command.","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Index of Task","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * Possible NumberFormatException during the parsing of","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * the input from String into int. Checks whether","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     * the String input can be parsed into an int.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     * @param str raw task number input from the user","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if str is not an int","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    public MarkCommand(String str) throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"            this.taskNum \u003d Integer.parseInt(str);","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Invalid input!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the mark command, saves the data and returns","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * a message to let user know that execution was","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     * successful.","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"            tasks.mark(this.taskNum);","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showTaskMarked();","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":57}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.ToDoTask;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" * The ToDoCommand class contains basic attributes and","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of a todo command.","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"     * Name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    private final String name;","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     * @param name name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    public ToDoCommand(String name) {","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the todo command, saves the data and returns","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     * a message to let user know that execution was","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     * successful.","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message of either successful or","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     *                unsuccessful execution","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"            Task task \u003d new ToDoTask(this.name);","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"            tasks.add(task);","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showTaskAdded();","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"MelvinCZJ":54}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * The UnmarkCommand class contains basic attributes and","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" * behaviours of a unmark command.","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Index of Task to be unmarked","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    private final int taskNum;","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * Possible NumberFormatException during the parsing of","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * the input from String into int. Checks whether","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     * the String input can be parsed into an int.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     * @param str - raw task number input from the user","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException - str cannot be parsed into an int","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    public UnmarkCommand(String str) throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"            this.taskNum \u003d Integer.parseInt(str);","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Invalid input!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method in parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     * Executes the unmark command, saves the data and returns","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * a message to let user know that execution was","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     * successful.","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * @param ui duke\u0027s ui","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     * @param storage duke\u0027s storage","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"            tasks.unmark(this.taskNum);","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"            storage.save(tasks);","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showTaskUnmarked();","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":57}},{"path":"src/main/java/duke/enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.enums;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":" * The Commands enum contains a list of all","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":" * valid commands that Duke accepts","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"public enum Commands {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"    TODO, EVENT, DEADLINE, LIST, MARK, UNMARK, DELETE, EXIT, HELP, FIND, CLEAR;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":12}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.exceptions;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":" * The DukeException class will duke to handle","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":" * the various exceptions encountered while","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" * using duke.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * Will definitely make this class an abstract class","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * and create more specific DukeException classes that","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" * extends from this class.","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"        super(msg);","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":18}},{"path":"src/main/java/duke/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.javafx;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    private final Circle circle \u003d new Circle(50, 50, 35);","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"    private void flip() {","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns user dialog box","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.rgb(95, 107, 118), new CornerRadii(35),","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"            new Insets(10, 10, 10, 50))));","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"        return db;","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns duke\u0027s dialog box","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.rgb(66, 80, 97), new CornerRadii(35),","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"                new Insets(10, 50, 10, 10))));","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"        db.flip();","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"        return db;","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"MelvinCZJ":75}},{"path":"src/main/java/duke/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.javafx;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"            fxmlLoader.setRoot(new MainWindow());","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"            stage.setTitle(\"Duke O.o\");","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"            stage.show();","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"MelvinCZJ":36}},{"path":"src/main/java/duke/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.javafx;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     * Initialize main window.","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"        assert userImage !\u003d null;","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"        assert dukeImage !\u003d null;","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"        assert duke !\u003d null;","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"        String greeting \u003d duke.getGreeting();","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"        DialogBox dbGreeting \u003d DialogBox.getDukeDialog(greeting, dukeImage);","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"        dialogContainer.getChildren().addAll(dbGreeting);","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"        DialogBox dbUser \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"        DialogBox dbDuke \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"        dialogContainer.getChildren().addAll(dbUser, dbDuke);","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"MelvinCZJ":61}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.main;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Parser;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Storage;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.TaskList;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import duke.system.Ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" * The Duke program implements an application that","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * manages three different types of tasks based on the","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" * user\u0027s input","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     * Overloaded constructor for javaFX integration.","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     * Constructor without params required for javaFX to run.","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     * Previous file path specification have been transferred here.","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    public Duke() {","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"        storage \u003d new Storage(\"data\");","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns response from executing the command","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String message from execution or error","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"            return ui.showException(e);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns greeting message","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String greeting message","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"    public String getGreeting() {","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"        return ui.showGreeting();","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"MelvinCZJ":60,"-":1}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.main;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.javafx.Main;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"public class Launcher {","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"MelvinCZJ":13}},{"path":"src/main/java/duke/system/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.system;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.ClearCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"import duke.enums.Commands;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":" * The Parser class will allow Duke to","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":" * understand and act upon the user\u0027s input.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"public class Parser {","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     * Processes the user\u0027s input by splitting it at each","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     * regex: \"/\" into a multiple parameters.","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     * If there is at least one parameter, a valid input in assumed at this stage.","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"     * The first parameter will always be the command, which","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"     * will be compared against an enum of commands.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     * If the enum contains the command, the selectCommand method will be called","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     * with the ordinal of the command in the enum to determine the","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     * command to be returned.","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     * Else a DukeException will be thrown.","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"     * @param fullCommand the unprocessed full command input","lastModifiedDate":"2022-02-14"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"     * @return Command the command to be executed","lastModifiedDate":"2022-02-14"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if input or command is invalid","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"        String[] params \u003d fullCommand.split(\"/\");","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"        if (params.length \u003d\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Invalid input!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"        String command \u003d params[0].toUpperCase();","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"        boolean containsCommand \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"        int commandNum \u003d -1;","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        Commands[] commands \u003d Commands.values();","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"        for (Commands c : commands) {","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"            if (c.toString().equals(command)) {","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"                commandNum \u003d c.ordinal();","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"                containsCommand \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"        if (!containsCommand) {","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Invalid command!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"        return selectCommand(commandNum, params);","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"     * Handles the creation of new commands if given valid inputs","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"     * @param num the ordinal num of the command in the Commands enum","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"     * @param params the String array containing all the","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"     *               parameters of the command","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"     * @return Command the Command to be returned","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if params size does not match the number","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"     *                         of required parameters of the command","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"    public static Command selectCommand(int num, String[] params) throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"        switch(num) {","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"        case 0: // todo","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 2) {","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"            return new ToDoCommand(params[1]);","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"MelvinCZJ"},"content":"        case 1: // event","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 4) {","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"MelvinCZJ"},"content":"            return new EventCommand(params[1], params[2], params[3]);","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"MelvinCZJ"},"content":"        case 2: // deadline","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 4) {","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"MelvinCZJ"},"content":"            return new DeadlineCommand(params[1], params[2], params[3]);","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"MelvinCZJ"},"content":"        case 3: // list","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"MelvinCZJ"},"content":"            return new ListCommand();","lastModifiedDate":"2022-02-14"},{"lineNumber":104,"author":{"gitId":"MelvinCZJ"},"content":"        case 4: // mark","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 2) {","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"MelvinCZJ"},"content":"            return new MarkCommand(params[1]);","lastModifiedDate":"2022-02-14"},{"lineNumber":110,"author":{"gitId":"MelvinCZJ"},"content":"        case 5: // unmark","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 2) {","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"MelvinCZJ"},"content":"            return new UnmarkCommand(params[1]);","lastModifiedDate":"2022-02-14"},{"lineNumber":116,"author":{"gitId":"MelvinCZJ"},"content":"        case 6: // delete","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 2) {","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"MelvinCZJ"},"content":"            return new DeleteCommand(params[1]);","lastModifiedDate":"2022-02-14"},{"lineNumber":122,"author":{"gitId":"MelvinCZJ"},"content":"        case 7: // exit","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":124,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":125,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"MelvinCZJ"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-14"},{"lineNumber":128,"author":{"gitId":"MelvinCZJ"},"content":"        case 8: // help","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":131,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"MelvinCZJ"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-02-14"},{"lineNumber":134,"author":{"gitId":"MelvinCZJ"},"content":"        case 9: // find","lastModifiedDate":"2022-02-02"},{"lineNumber":135,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 2) {","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":137,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":138,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":139,"author":{"gitId":"MelvinCZJ"},"content":"            return new FindCommand(params[1]);","lastModifiedDate":"2022-02-14"},{"lineNumber":140,"author":{"gitId":"MelvinCZJ"},"content":"        case 10: // find","lastModifiedDate":"2022-02-02"},{"lineNumber":141,"author":{"gitId":"MelvinCZJ"},"content":"            if (params.length !\u003d 1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"MelvinCZJ"},"content":"                throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"MelvinCZJ"},"content":"                        + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"MelvinCZJ"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-02-14"},{"lineNumber":146,"author":{"gitId":"MelvinCZJ"},"content":"        default: // invalid","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Invalid command! \"","lastModifiedDate":"2022-02-02"},{"lineNumber":148,"author":{"gitId":"MelvinCZJ"},"content":"                    + \"Input /chelp to see the full list of commands!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":150,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":151,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":151}},{"path":"src/main/java/duke/system/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.system;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.File;","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.TaskCreator;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":" * The Storage class loads data from previous sessions","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":" * of duke stores data from current session.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"public class Storage {","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     * File path for the directory where the data will","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     * be stored.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    private final String filePath;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     * @param filePath the file path of the directory where","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     *                 the data of duke will be stored","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     * Creates the directory which the data from","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     * the current session of duke will be stored in.","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     * If directory already exists, user will be notified.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * The text file tasks.txt will be created in the directory.","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"     * @return ArrayList tasks loaded from data","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if unsuccessful creation of directory","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"     *                       or file","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        File dukeFile \u003d new File(this.filePath);","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"        if (!Files.exists(Path.of(this.filePath))) {","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"            if (dukeFile.mkdir()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"                System.out.println(\"File \\\"data\\\" has been created.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"                System.out.println(\"Failed to create file \\\"data\\\".\");","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"        File tasksPath \u003d new File(this.filePath + \"/tasks.txt\");","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"            if (tasksPath.createNewFile()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"                System.out.println(\"Duke set up successfully\");","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"            } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"                return read(tasksPath);","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Failed to create tasks file!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"     * This method reads the tasks.txt and adds the exisiting tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"     * on the file into a arraylist and returns it.","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"     * @param filePath path of the directory where","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"     *                 the data of duke will be stored","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"     * @return ArrayList tasks loaded from data","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if FileNotFoundException or","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"     *                       IOException is caught","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"    public ArrayList\u003cTask\u003e read(File filePath) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"MelvinCZJ"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"MelvinCZJ"},"content":"            int numOfTasks \u003d Integer.parseInt(br.readLine());","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"MelvinCZJ"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"MelvinCZJ"},"content":"            while (numOfTasks !\u003d 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"MelvinCZJ"},"content":"                numOfTasks--;","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"MelvinCZJ"},"content":"                String taskAsText \u003d br.readLine();","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"MelvinCZJ"},"content":"                Task currentTask \u003d create(taskAsText);","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"MelvinCZJ"},"content":"                tasks.add(currentTask);","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"MelvinCZJ"},"content":"            return tasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"File not found!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Error with tasks.txt! Clear tasks.txt and run Duke again!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"MelvinCZJ"},"content":"     * This method takes in the data form of a task","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"MelvinCZJ"},"content":"     * and returns the Task object.","lastModifiedDate":"2022-02-03"},{"lineNumber":109,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":110,"author":{"gitId":"MelvinCZJ"},"content":"     * @param taskAsData data form of a task","lastModifiedDate":"2022-02-14"},{"lineNumber":111,"author":{"gitId":"MelvinCZJ"},"content":"     * @return Task new task object","lastModifiedDate":"2022-02-14"},{"lineNumber":112,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"MelvinCZJ"},"content":"    public Task create(String taskAsData) throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":114,"author":{"gitId":"MelvinCZJ"},"content":"        String[] taskAsArray \u003d taskAsData.split(\"/\");","lastModifiedDate":"2022-02-03"},{"lineNumber":115,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"MelvinCZJ"},"content":"        char prefix \u003d taskAsArray[0].charAt(0);","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"MelvinCZJ"},"content":"        boolean isCompleted \u003d taskAsArray[1].equals(\"T\");","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"MelvinCZJ"},"content":"        String name \u003d taskAsArray[2];","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"MelvinCZJ"},"content":"        String date \u003d taskAsArray[3];","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"MelvinCZJ"},"content":"        String time \u003d taskAsArray[4];","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"MelvinCZJ"},"content":"        TaskCreator taskCreator \u003d new TaskCreator(prefix,","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"MelvinCZJ"},"content":"                isCompleted,","lastModifiedDate":"2022-02-02"},{"lineNumber":124,"author":{"gitId":"MelvinCZJ"},"content":"                name,","lastModifiedDate":"2022-02-02"},{"lineNumber":125,"author":{"gitId":"MelvinCZJ"},"content":"                date,","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"MelvinCZJ"},"content":"                time);","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-14"},{"lineNumber":128,"author":{"gitId":"MelvinCZJ"},"content":"            Task task \u003d taskCreator.createTask();","lastModifiedDate":"2022-02-14"},{"lineNumber":129,"author":{"gitId":"MelvinCZJ"},"content":"            return task;","lastModifiedDate":"2022-02-14"},{"lineNumber":130,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-14"},{"lineNumber":131,"author":{"gitId":"MelvinCZJ"},"content":"            throw e;","lastModifiedDate":"2022-02-14"},{"lineNumber":132,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":133,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":134,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":135,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":137,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":138,"author":{"gitId":"MelvinCZJ"},"content":"     * Overwrites saved data with new data of task list","lastModifiedDate":"2022-02-14"},{"lineNumber":139,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":141,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if IOException is caught","lastModifiedDate":"2022-02-14"},{"lineNumber":142,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":143,"author":{"gitId":"MelvinCZJ"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"MelvinCZJ"},"content":"        try {","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"MelvinCZJ"},"content":"            FileWriter fw \u003d new FileWriter(\"data/tasks.txt\", false);","lastModifiedDate":"2022-02-02"},{"lineNumber":146,"author":{"gitId":"MelvinCZJ"},"content":"            PrintWriter pw \u003d new PrintWriter(fw);","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":148,"author":{"gitId":"MelvinCZJ"},"content":"            pw.write(tasks.getNumOfTasks() + \"\\n\");","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"MelvinCZJ"},"content":"            pw.write(tasks.taskAsData());","lastModifiedDate":"2022-02-02"},{"lineNumber":150,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":151,"author":{"gitId":"MelvinCZJ"},"content":"            pw.flush();","lastModifiedDate":"2022-02-02"},{"lineNumber":152,"author":{"gitId":"MelvinCZJ"},"content":"            pw.close();","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":154,"author":{"gitId":"MelvinCZJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-02"},{"lineNumber":155,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Failed to save data!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":156,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":158,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":159,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":159}},{"path":"src/main/java/duke/system/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.system;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * The TaskList class manages the operations of the","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" * arraylist of tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"public class TaskList {","lastModifiedDate":"2022-02-02"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * The arraylist of tasks","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Overloaded constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks - arraylist of tasks loaded","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     *                from storage","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     * Overloaded constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"    public TaskList() {","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * This method adds tasks into the tasklist.","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * @param task - task to be added","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"     * This method deletes the task at given index","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"     * from the tasklist.","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"     * @param i - the acutal index of task in","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"     *            the arraylist is i - 1","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException - if tasklist is empty or","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"     *                         index out of range","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"    public void delete(int i) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"        if (!this.get(i).isEmptyTask()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"            this.tasks.remove(i - 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"No such task found!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"     * This method gets the task at given index","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"     * from the tasklist.","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"     * @param i - the acutal index of task in","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"     *            the arraylist is i - 1","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"     * @return Task - task at index","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException - if tasklist is empty or","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"     *                         index out of range","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"    public Task get(int i) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"TaskList is empty!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"        } else if (i \u003c 1 || i \u003e tasks.size()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Requested task does not exist!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"            return tasks.get(i - 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the size of the arraylist","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"MelvinCZJ"},"content":"     * @return int size of arraylist","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"MelvinCZJ"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"MelvinCZJ"},"content":"        return tasks.size();","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":93,"author":{"gitId":"MelvinCZJ"},"content":"     * Consolidates all tasks in the task list into","lastModifiedDate":"2022-02-14"},{"lineNumber":94,"author":{"gitId":"MelvinCZJ"},"content":"     * the format to be displayed to the user.","lastModifiedDate":"2022-02-14"},{"lineNumber":95,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String all tasks in task list","lastModifiedDate":"2022-02-14"},{"lineNumber":97,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if arraylist is empty or","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"MelvinCZJ"},"content":"     *                       i is out of range","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"MelvinCZJ"},"content":"    public String tasksAsString() throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"MelvinCZJ"},"content":"        String taskAsString \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"MelvinCZJ"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"MelvinCZJ"},"content":"        while (i \u003c this.tasks.size()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"MelvinCZJ"},"content":"            String space \u003d \"     \";","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"MelvinCZJ"},"content":"            Task curr \u003d this.get(i + 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"MelvinCZJ"},"content":"            taskAsString +\u003d space + (i + 1) + \". \" + curr + \"\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"MelvinCZJ"},"content":"            i++;","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"MelvinCZJ"},"content":"        return taskAsString;","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":113,"author":{"gitId":"MelvinCZJ"},"content":"     * Consolidates all tasks in the arraylist into","lastModifiedDate":"2022-02-14"},{"lineNumber":114,"author":{"gitId":"MelvinCZJ"},"content":"     * the format to be stored as data.","lastModifiedDate":"2022-02-14"},{"lineNumber":115,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":116,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String all tasks in task list in their data form","lastModifiedDate":"2022-02-14"},{"lineNumber":117,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if arraylist is empty or","lastModifiedDate":"2022-02-14"},{"lineNumber":118,"author":{"gitId":"MelvinCZJ"},"content":"     *                       i is out of range","lastModifiedDate":"2022-02-03"},{"lineNumber":119,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":120,"author":{"gitId":"MelvinCZJ"},"content":"    public String taskAsData() throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"MelvinCZJ"},"content":"        String taskAsData \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"MelvinCZJ"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"MelvinCZJ"},"content":"        while (i \u003c this.tasks.size()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":124,"author":{"gitId":"MelvinCZJ"},"content":"            Task curr \u003d this.get(i + 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":125,"author":{"gitId":"MelvinCZJ"},"content":"            String isMarked \u003d curr.isMarked()","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"MelvinCZJ"},"content":"                    ? \"T\"","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"MelvinCZJ"},"content":"                    : \"F\";","lastModifiedDate":"2022-02-02"},{"lineNumber":128,"author":{"gitId":"MelvinCZJ"},"content":"            taskAsData +\u003d curr.getPrefix() + \"/\"","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"MelvinCZJ"},"content":"                    + isMarked + \"/\"","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"MelvinCZJ"},"content":"                    + curr.getName() + \"/\"","lastModifiedDate":"2022-02-02"},{"lineNumber":131,"author":{"gitId":"MelvinCZJ"},"content":"                    + curr.getDate() + \"/\"","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"MelvinCZJ"},"content":"                    + curr.getTime() + \"\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"MelvinCZJ"},"content":"            i++;","lastModifiedDate":"2022-02-02"},{"lineNumber":134,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":135,"author":{"gitId":"MelvinCZJ"},"content":"        return taskAsData;","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":137,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":138,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":139,"author":{"gitId":"MelvinCZJ"},"content":"     * Marks an incomplete task as complete.","lastModifiedDate":"2022-02-14"},{"lineNumber":140,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":141,"author":{"gitId":"MelvinCZJ"},"content":"     * @param i index of task as shown from the list command","lastModifiedDate":"2022-02-14"},{"lineNumber":142,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if arraylist is empty,","lastModifiedDate":"2022-02-14"},{"lineNumber":143,"author":{"gitId":"MelvinCZJ"},"content":"     *                       i is out of range or","lastModifiedDate":"2022-02-03"},{"lineNumber":144,"author":{"gitId":"MelvinCZJ"},"content":"     *                       task is already marked","lastModifiedDate":"2022-02-03"},{"lineNumber":145,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":146,"author":{"gitId":"MelvinCZJ"},"content":"    public void mark(int i) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":148,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"No tasks in TaskList!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"MelvinCZJ"},"content":"        } else if (get(i).isMarked()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":150,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Task is already marked!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":151,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":152,"author":{"gitId":"MelvinCZJ"},"content":"            get(i).mark();","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":154,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":155,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":156,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":157,"author":{"gitId":"MelvinCZJ"},"content":"     * Marks a complete task as incomplete.","lastModifiedDate":"2022-02-14"},{"lineNumber":158,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":159,"author":{"gitId":"MelvinCZJ"},"content":"     * @param i index of task as shown from the list command","lastModifiedDate":"2022-02-14"},{"lineNumber":160,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if arraylist is empty,","lastModifiedDate":"2022-02-14"},{"lineNumber":161,"author":{"gitId":"MelvinCZJ"},"content":"     *                       i is out of range or","lastModifiedDate":"2022-02-03"},{"lineNumber":162,"author":{"gitId":"MelvinCZJ"},"content":"     *                       task is already unmarked","lastModifiedDate":"2022-02-03"},{"lineNumber":163,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":164,"author":{"gitId":"MelvinCZJ"},"content":"    public void unmark(int i) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":165,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":166,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"No tasks in TaskList!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":167,"author":{"gitId":"MelvinCZJ"},"content":"        } else if (get(i).isMarked()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":168,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Task is already unmarked!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":169,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":170,"author":{"gitId":"MelvinCZJ"},"content":"            get(i).unmark();","lastModifiedDate":"2022-02-02"},{"lineNumber":171,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":172,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":173,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":174,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":175,"author":{"gitId":"MelvinCZJ"},"content":"     * This method consolidates all tasks in the arraylist","lastModifiedDate":"2022-02-03"},{"lineNumber":176,"author":{"gitId":"MelvinCZJ"},"content":"     * that contains the given keyword into a String in the","lastModifiedDate":"2022-02-03"},{"lineNumber":177,"author":{"gitId":"MelvinCZJ"},"content":"     * format to be displayed to the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":178,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":179,"author":{"gitId":"MelvinCZJ"},"content":"     * @param keyword input from user","lastModifiedDate":"2022-02-14"},{"lineNumber":180,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String all the tasks containing the keyword","lastModifiedDate":"2022-02-14"},{"lineNumber":181,"author":{"gitId":"MelvinCZJ"},"content":"     * @throws DukeException if arraylist is empty or","lastModifiedDate":"2022-02-14"},{"lineNumber":182,"author":{"gitId":"MelvinCZJ"},"content":"     *                       i is out of range","lastModifiedDate":"2022-02-03"},{"lineNumber":183,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":184,"author":{"gitId":"MelvinCZJ"},"content":"    public String find(String keyword) throws DukeException {","lastModifiedDate":"2022-02-02"},{"lineNumber":185,"author":{"gitId":"MelvinCZJ"},"content":"        String taskAsString \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":186,"author":{"gitId":"MelvinCZJ"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-02-02"},{"lineNumber":187,"author":{"gitId":"MelvinCZJ"},"content":"        while (i \u003c this.tasks.size()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":188,"author":{"gitId":"MelvinCZJ"},"content":"            String space \u003d \"     \";","lastModifiedDate":"2022-02-05"},{"lineNumber":189,"author":{"gitId":"MelvinCZJ"},"content":"            Task curr \u003d this.get(i + 1);","lastModifiedDate":"2022-02-02"},{"lineNumber":190,"author":{"gitId":"MelvinCZJ"},"content":"            if (curr.getName().contains(keyword)) {","lastModifiedDate":"2022-02-02"},{"lineNumber":191,"author":{"gitId":"MelvinCZJ"},"content":"                taskAsString +\u003d space + (i + 1) + \". \" + curr + \"\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":192,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":193,"author":{"gitId":"MelvinCZJ"},"content":"            i++;","lastModifiedDate":"2022-02-02"},{"lineNumber":194,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":195,"author":{"gitId":"MelvinCZJ"},"content":"        return taskAsString;","lastModifiedDate":"2022-02-02"},{"lineNumber":196,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":197,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":198,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":199,"author":{"gitId":"MelvinCZJ"},"content":"     * Removes all tasks in the arraylist.","lastModifiedDate":"2022-02-14"},{"lineNumber":200,"author":{"gitId":"MelvinCZJ"},"content":"     * Use with caution.","lastModifiedDate":"2022-02-03"},{"lineNumber":201,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":202,"author":{"gitId":"MelvinCZJ"},"content":"    public void clear() {","lastModifiedDate":"2022-02-02"},{"lineNumber":203,"author":{"gitId":"MelvinCZJ"},"content":"        this.tasks.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":204,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":205,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":206,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":207,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns a boolean value of whether the arraylist is empty.","lastModifiedDate":"2022-02-14"},{"lineNumber":208,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":209,"author":{"gitId":"MelvinCZJ"},"content":"     * @return true if list is empty","lastModifiedDate":"2022-02-14"},{"lineNumber":210,"author":{"gitId":"MelvinCZJ"},"content":"     *         and false otherwise","lastModifiedDate":"2022-02-03"},{"lineNumber":211,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":212,"author":{"gitId":"MelvinCZJ"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-02-02"},{"lineNumber":213,"author":{"gitId":"MelvinCZJ"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2022-02-02"},{"lineNumber":214,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":215,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":215}},{"path":"src/main/java/duke/system/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.system;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":" * The Ui class will allow users to interface with Duke.","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"public class Ui {","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns greeting message.","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"    public String showGreeting() {","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"        return \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"                + \"Nice to meet you!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns a list of the available commands.","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"    public String showTutorial() {","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"        return \"Here are my features!\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To add a ToDo task, input: ToDo/\u003cname\u003e\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To add a Event task, input: Event/\u003cname\u003e/\u003cdate\u003e/\u003ctime\u003e\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To add a Deadline task, input: Deadline/\u003cname\u003e/\u003cdate\u003e/\u003ctime\u003e\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To list all tasks, input: list\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To mark a task as completed, \"","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"                + \"input: mark/\u003ctask number based on the most recent list call\u003e\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To unmark a task as completed, \"","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"                + \"input: mark/\u003ctask number based on the most recent list call\u003e\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To delete a task, \"","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"                + \"input: delete/\u003ctask number based on the most recent list call\u003e\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To search for a task by keyword, input: Find/\u003ckeyword\u003e\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To clear the tasklist, input: Clear\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To exit duke, input: exit\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"                + \"To view this manual again, input: help\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"                + \"The first word of each command is not case-sensitive!\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"                + \"The format of the date should be in the format DDMMYYYY!\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"                + \"The format of the time should be in the format HHMM!\\n\"","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"                + \"Please DO NOT use \\\"/\\\" in the task name as it will confuse Duke!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns message that the task has been added.","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    public String showTaskAdded() {","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"        return \"Task has been added!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns message that the task has been marked.","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"    public String showTaskMarked() {","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"        return \"Task has been marked!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns message that the task has been unmarked.","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"    public String showTaskUnmarked() {","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"        return \"Task has been unmarked!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns message that the task has been deleted.","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"    public String showTaskDeleted() {","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"        return \"Task has been deleted!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns all the tasks in the task list.","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks duke\u0027s task list","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"    public String showList(String tasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"        if (tasks.isBlank()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"            return \"There is nothing in the TaskList!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"            return \"Here is a List of your Tasks:\\n\" + tasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns all the tasks that contains the keyword from the user.","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"MelvinCZJ"},"content":"     * @param tasks list of tasks containing keyword","lastModifiedDate":"2022-02-14"},{"lineNumber":88,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":89,"author":{"gitId":"MelvinCZJ"},"content":"    public String showResult(String tasks) {","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"MelvinCZJ"},"content":"        if (tasks.isBlank()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"MelvinCZJ"},"content":"            return \"There is nothing in the TaskList that matches your search!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"MelvinCZJ"},"content":"            return \"Here is a List of your Tasks that matches your search:\\n\" + tasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns message that the task list has been cleared.","lastModifiedDate":"2022-02-14"},{"lineNumber":99,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":100,"author":{"gitId":"MelvinCZJ"},"content":"    public String showClear() {","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"MelvinCZJ"},"content":"        return \"TaskList has been cleared!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":105,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns message from DukeException that has been thrown.","lastModifiedDate":"2022-02-14"},{"lineNumber":106,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":107,"author":{"gitId":"MelvinCZJ"},"content":"     * @param e a DukeException that was thrown","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":109,"author":{"gitId":"MelvinCZJ"},"content":"    public String showException(DukeException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"MelvinCZJ"},"content":"        return e.getMessage();","lastModifiedDate":"2022-02-14"},{"lineNumber":111,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":114,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns message that there was an error loading old data.","lastModifiedDate":"2022-02-14"},{"lineNumber":115,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":116,"author":{"gitId":"MelvinCZJ"},"content":"    public String showLoadingError() {","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"MelvinCZJ"},"content":"        return \"Error loading old data!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":118,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the exit message.","lastModifiedDate":"2022-02-14"},{"lineNumber":122,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"MelvinCZJ"},"content":"    public String showExit() {","lastModifiedDate":"2022-02-10"},{"lineNumber":124,"author":{"gitId":"MelvinCZJ"},"content":"        return \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":125,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"MelvinCZJ":126}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.time.ManagerDate;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.time.ManagerTime;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" * The DeadlineTask class contains basic attributes","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * and behaviours of a deadline task. It extends","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * from the Task class.","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"     * date of Task.","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    private final String date;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * time of Task.","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    private final String time;","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     * @param name name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     * @param date date of task","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"     * @param time time of task","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    public DeadlineTask(String name, String date, String time) {","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"        this.time \u003d new ManagerTime(time).getFormat24hr();","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the prefix of deadline task.","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String prefix of deadline task","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"    public String getPrefix() {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"        return \"D\";","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the date of deadline task.","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String date of deadline task","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"    public String getDate() {","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"        return this.date;","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the time of deadline task.","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String time of this deadline task","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"    public String getTime() {","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"        return this.time;","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the toString() method of the parent.","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String deadline task in String form","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"        String prefix \u003d \"[D]\";","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"        return prefix + super.toString() + \" on: \"","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"                + ManagerDate.formatDate(this.date) + \" \"","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"                + this.time;","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"MelvinCZJ":82}},{"path":"src/main/java/duke/tasks/EmptyTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":" * The EmptyTask class contains basic attributes","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":" * and behaviours of an empty task. It extends","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" * from the Task class. This is returned in cases","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" * where a Task is not created due to DukeException.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"public class EmptyTask extends Task {","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    public EmptyTask() {","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"        super(\"EMPTY\");","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the prefix of empty task.","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String prefix of empty task","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"    public String getPrefix() {","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"        return \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the date of empty task.","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String date of the empty task","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    public String getDate() {","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"        return \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the time of empty task.","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String time of this empty task","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"    public String getTime() {","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"        return \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"     * Always returns true.","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"     * @return boolean true","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"    public boolean isEmptyTask() {","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"        return true;","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"MelvinCZJ":62}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.time.ManagerDate;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"import duke.time.ManagerTime;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" * The EventTask class contains basic attributes","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * and behaviours of an event task. It extends","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * from the Task class.","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"     * date of Task.","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    private final String date;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * time of Task.","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    private final String time;","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     * @param name name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     * @param date date of task","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"     * @param time time of task","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    public EventTask(String name, String date, String time) {","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"        this.time \u003d new ManagerTime(time).getFormat24hr();","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the prefix of event task.","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String prefix of the TaskEvent","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"    public String getPrefix() {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"        return \"E\";","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the date of event task.","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String prefix of the TaskEvent","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"    public String getDate() {","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"        return this.date;","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the time of event task.","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String prefix of event task","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"    public String getTime() {","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"        return this.time;","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the toString() method of the parent.","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String event task in String form","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"        String prefix \u003d \"[E]\";","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"        return prefix + super.toString() + \" on: \"","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"                + ManagerDate.formatDate(this.date) + \" \"","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"                + this.time;","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"MelvinCZJ":82}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":" * The abstract Task class contains basic attributes","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":" * and behaviours of a Task.","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"     * Name of the Task.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"    private final String name;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Whether the task is complete. Set to false by default","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * @param name - name of task","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    Task(String name) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"     * Abstract method that returns prefix of the Task","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String prefix of task","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    public abstract String getPrefix();","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * Abstract method that returns date of the Task","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String date of task","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"    public abstract String getDate();","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     * Abstract method that returns time of the Task","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String time of task","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"    public abstract String getTime();","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"     * Updates the completion state of the Task to true.","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"    public void mark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"     * Updates the completion state of the Task to false.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the completion state of the Task.","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"     * @return boolean completion state of task","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"    public boolean isMarked() {","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"        return this.isCompleted;","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns true if task is an EmptyTask.","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"     * Otherwise, always return false.","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"     * @return boolean false unless this is an EmptyTask,","lastModifiedDate":"2022-02-14"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"     *                 otherwise true","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"    public boolean isEmptyTask() {","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"        return false;","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the name of the Task.","lastModifiedDate":"2022-02-03"},{"lineNumber":87,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":90,"author":{"gitId":"MelvinCZJ"},"content":"    public String getName() {","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"MelvinCZJ"},"content":"        return this.name;","lastModifiedDate":"2022-02-01"},{"lineNumber":92,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the default toString() method.","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":97,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String task in String form","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"MelvinCZJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"MelvinCZJ"},"content":"        String box \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":102,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2022-02-05"},{"lineNumber":103,"author":{"gitId":"MelvinCZJ"},"content":"            box +\u003d \"[X] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":104,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"MelvinCZJ"},"content":"            box +\u003d \"[ ] \";","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"MelvinCZJ"},"content":"        return box + this.name;","lastModifiedDate":"2022-01-19"},{"lineNumber":108,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":109,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":110,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"MelvinCZJ":110}},{"path":"src/main/java/duke/tasks/TaskCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" * The TaskCreator class creates Task objects","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" * from parameters passed into it.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"public class TaskCreator {","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"     * Prefix of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    private final char prefix;","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"     * Whether the task is complete.","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    private final boolean isCompleted;","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     * Name of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"    private final String name;","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     * Date of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"    private final String date;","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     * Time of task.","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"    private final String time;","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"     * @param prefix prefix of task","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"     * @param isCompleted task completion state","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     * @param name name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     * @param date date of task","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * @param time time of task","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    public TaskCreator(char prefix, boolean isCompleted,","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"                       String name, String date, String time) {","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"     * Return a new task based on the variables of this class","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"     * @return Task the type of Task returned depends on the","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"     *              prefix stored in this TaskCreator","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"    public Task createTask() throws DukeException {","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"        Task task;","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"        if (prefix \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"            task \u003d new DeadlineTask(this.name, this.date, this.time);","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"        } else if (prefix \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"            task \u003d new EventTask(this.name, this.date, this.time);","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"        } else if (prefix \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"            task \u003d new ToDoTask(this.name);","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"            throw new DukeException(\"Data is corrupted! Task List will now be reset!\");","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.isCompleted \u0026\u0026 !task.isEmptyTask()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"            task.mark();","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"        return task;","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"MelvinCZJ":77}},{"path":"src/main/java/duke/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.tasks;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":" * The ToDoTask class contains basic attributes","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":" * and behaviours of a todo task. It extends","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" * from the Task class.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"     * @param name name of task","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"    public ToDoTask(String name) {","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"        super(name);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the prefix of todo task.","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String prefix of todo task","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"    public String getPrefix() {","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"        return \"T\";","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String always returns \"00000000\"","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"    public String getDate() {","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"        return \"00000000\";","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the abstract method of its parent class.","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String always returns \"0000","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"    public String getTime() {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"        return \"0000\";","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"     * Overrides the toString() method of the parent.","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String todo task in String form","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"        String prefix \u003d \"[T]\";","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"        return prefix + super.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"MelvinCZJ":61}},{"path":"src/main/java/duke/time/ManagerDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.time;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":" * The ManagerDate class handles validation check for","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":" * dates and formatting dates into the String form","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" * from the number form.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"public class ManagerDate {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"     * int format of day","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    private final int day;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     * int format of month","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    private final int month;","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"     * int format of year","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    private final int year;","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     * flag to indicate whether date is valid","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    private boolean isValid \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"     * @param date in DDMMYYYY format","lastModifiedDate":"2022-02-14"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"    public ManagerDate(String date) {","lastModifiedDate":"2022-02-02"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"        this.day \u003d Integer.parseInt(date.substring(0, 2));","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"        this.month \u003d Integer.parseInt(date.substring(2, 4));","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"        this.year \u003d Integer.parseInt(date.substring(4, 8));","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"        // check valid month","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.month \u003c 13 \u0026\u0026 this.month \u003e 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"            // check for leap year","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"            if (this.year % 4 !\u003d 0) { // no leap year","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"                // check for valid day","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"                int[] daysPerMonth \u003d {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"                if (daysPerMonth[this.month - 1] \u003e\u003d this.day \u0026\u0026 this.day \u003e 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"                    this.isValid \u003d true;","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"            } else { // leap year","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"                // check valid day","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"                int[] daysPerMonthLeapYear \u003d {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"                if (daysPerMonthLeapYear[this.month - 1] \u003e\u003d this.day \u0026\u0026 this.day \u003e 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"                    this.isValid \u003d true;","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the validity of the date","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"     * @return boolean whether date is valid","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"    public boolean isDateValid() {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"        return this.isValid;","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns a more readable format of","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"     * the input date.","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"     * @param date in DDMMYYYY format","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"     * @return boolean whether date is valid","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"    public static String formatDate(String date) {","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"        String[] nameOfMonths \u003d {\"January\", \"February\", \"March\", \"April\",","lastModifiedDate":"2022-02-05"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"            \"May\", \"June\", \"July\", \"August\",","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"            \"September\", \"October\", \"November\", \"December\"};","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"        int day \u003d Integer.parseInt(date.substring(0, 2));","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"        int month \u003d Integer.parseInt(date.substring(2, 4));","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"        int year \u003d Integer.parseInt(date.substring(4, 8));","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"        return nameOfMonths[month - 1] + \" \" + String.format(\"%02d\", day) + \" \" + year;","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":86,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"MelvinCZJ":86}},{"path":"src/main/java/duke/time/ManagerTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"package duke.time;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":" * The ManagerTime class handles validation check for","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":" * time and formatting time into twelve-hour format or","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":" * the twenty-four-hour format.","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":" *","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":" * @author  Melvin Chan Zijun","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"public class ManagerTime {","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"     * Time in twenty-four-hour format","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"    private final String format24hr;","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"     * Time in twelve-hour format","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    private final String format12hr;","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"     * flag to indicate whether time is valid","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"    private boolean isValid \u003d false;","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"MelvinCZJ"},"content":"     * Sole constructor.","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"MelvinCZJ"},"content":"     * @param time in HHMM format","lastModifiedDate":"2022-02-14"},{"lineNumber":28,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"MelvinCZJ"},"content":"    public ManagerTime(String time) {","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"MelvinCZJ"},"content":"        int hour \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"MelvinCZJ"},"content":"        int minute \u003d Integer.parseInt(time.substring(2, 4));","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"MelvinCZJ"},"content":"        if (hour \u003e\u003d 0 \u0026\u0026 hour \u003c\u003d 23) {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"MelvinCZJ"},"content":"            if (minute \u003e\u003d 0 \u0026\u0026 minute \u003c\u003d 59) {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"MelvinCZJ"},"content":"                this.isValid \u003d true;","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"MelvinCZJ"},"content":"        this.format24hr \u003d time;","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"MelvinCZJ"},"content":"        String postfix \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"MelvinCZJ"},"content":"        if (this.isValid) {","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"MelvinCZJ"},"content":"            if (hour \u003e 11) {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"MelvinCZJ"},"content":"                postfix +\u003d \"pm\";","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"MelvinCZJ"},"content":"            } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"MelvinCZJ"},"content":"                postfix +\u003d \"am\";","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"MelvinCZJ"},"content":"            if (hour \u003e 12) {","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"MelvinCZJ"},"content":"                hour -\u003d 12;","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"MelvinCZJ"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"MelvinCZJ"},"content":"            this.format12hr \u003d String.format(\"%d:%02d%s\", hour, minute, postfix);","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"MelvinCZJ"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"MelvinCZJ"},"content":"            this.format12hr \u003d \"\";","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"MelvinCZJ"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the validity of the time","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"MelvinCZJ"},"content":"     * @return boolean whether time is valid","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"MelvinCZJ"},"content":"    public boolean isTimeValid() {","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"MelvinCZJ"},"content":"        return this.isValid;","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the time in twelve-hour format","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String time in twelve-hour format","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"MelvinCZJ"},"content":"    public String getFormat12hr() {","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"MelvinCZJ"},"content":"        return this.format12hr;","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"MelvinCZJ"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"MelvinCZJ"},"content":"     * Returns the time in twenty-four-hour format","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"MelvinCZJ"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"MelvinCZJ"},"content":"     * @return String time in twenty-four-hour format","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"MelvinCZJ"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"MelvinCZJ"},"content":"    public String getFormat24hr() {","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"MelvinCZJ"},"content":"        return this.format24hr;","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"MelvinCZJ"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"MelvinCZJ"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"MelvinCZJ":86}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"600.0\" minHeight\u003d\"70.0\" style\u003d\"-fx-label-padding: 10 5 5 10;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"                \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"MelvinCZJ"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"MelvinCZJ"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"MelvinCZJ"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"MelvinCZJ"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"MelvinCZJ":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"MelvinCZJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"MelvinCZJ"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"MelvinCZJ"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"1000.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.javafx.MainWindow\"\u003e","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"MelvinCZJ"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"924.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"MelvinCZJ"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"924.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"MelvinCZJ"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"757.0\" prefWidth\u003d\"1000.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"MelvinCZJ"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"MelvinCZJ"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"752.0\" prefWidth\u003d\"988.0\" style\u003d\"-fx-background-color: #C6DDF2;\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"MelvinCZJ"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"MelvinCZJ"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"MelvinCZJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"MelvinCZJ"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"MelvinCZJ":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MelvinCZJ"},"content":"todo read","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"MelvinCZJ"},"content":"bye","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"MelvinCZJ":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"MelvinCZJ"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*java","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"MelvinCZJ":1}}]
