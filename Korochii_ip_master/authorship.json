[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    mainClassName \u003d \"holobot.Launcher\"","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    archiveBaseName \u003d \"HoloBot\"","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Korochii":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"HoloBot is a **desktop app** for managing tasks, optimized for use via a Command Line Interface (CLI) while having the looks of a Graphical User Interface (GUI) application. ","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"* [Quick Start][1]","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"* [Features][4]","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"  *  [Listing all tasks : `list`][5]","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"  *  [Creating a To-Do Task: `todo`][6]","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"  *  [Creating a Deadline Task: `deadline`][7]","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"  *  [Creating an Event Task: `event`][8]","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"  *  [Marking a task as completed: `mark`][9]","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"  *  [Unmarking a task: `unmark`][10]","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"  *  [Deleting a task: `delete`][11]","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"  *  [Finding a task: `find`][12]","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"  *  [Listing out tasks scheduled on a particular day: `schedule`][13]","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"  *  [Exiting HoloBot: `bye`][14]","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"  *  [Saving and Editing the data file][15]","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"* [Command Summary][16]","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"## Quick Start","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"1. Ensure you have [Java 11][2] or above installed in your computer.","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"2. Download the latest HoloBot.jar from [here][3].","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"3. Copy the file to the folder you want to use as the home folder for your HoloBot.","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. ","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"![Startup Screen](Startup.PNG \"Startup\")","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"5. Type the command in the command box and press Enter to execute it. ","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"Some example commands you can try:","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"- `list` : Lists all tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"- `todo x` : Adds a todo task named `x` to HoloBot.","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"- `delete 1` : Deletes the 1st task in the current list.","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"- `bye` : Exits the app.","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"Refer to the [Features][4] below for details of each command.","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"### Listing all tasks : `list`","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"Displays a list of tasks that are stored in the data file.","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"Format: `list`","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"- Each task is represented as the following: `TASK_INDEX.[TYPE][COMPLETION_STATUS] NAME (ADDITIONAL_DETAILS)`","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"Usage Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"![List](List.PNG \"List\")","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"### Creating a To-Do Task: `todo`","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"Creates a new to-do task based on the description that you have specified.","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"Format: ","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"- `todo TASK_NAME`","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"  - This task is unmarked by default (yet to be completed).","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"  - The task name field cannot be empty.","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":" ","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"Usage Example: ","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"- `todo xyz` ","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"  - Creates a to-do task called `xyz`","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"### Creating a Deadline Task: `deadline`","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"Creates a task that has a deadline.","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"Format: ","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"- `deadline TASK_NAME /by DATE_IN_YYYY-MM-DD [TIME_IN_HHMM]`","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"  -  This task is unmarked by default (yet to be completed).","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"  -  The task name and date fields cannot be empty.","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"  -  The time field is optional.","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"  -  The date and time fields cannot be in the past.","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"  ","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"Usage Example: ","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"- `deadline x /by 2022-12-12`","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"  - Creates a deadline task called `x`, and has a deadline by 12/12/2022","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"- `deadline y /by 2022-12-12 1200`","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"  - Creates a deadline task called `y`, and has a deadline by 12/12/2022, 12:00pm","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"### Creating an Event Task: `event`","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"Creates a event task that has a start date/time.","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"Format: ","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"- `event TASK_NAME /at DATE_IN_YYYY-MM-DD [START_TIME_IN_HHMM] [END_TIME_IN_HHMM]`","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"  -  This task is unmarked by default (yet to be completed).","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"  -  The task name and date fields cannot be empty.","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"  -  The starting time and ending time field is optional.","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"  -  However, the ending time field can only work if the starting time is specified.","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"  -  The date and time fields cannot be in the past.  ","lastModifiedDate":"2022-02-12"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"  ","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"Usage Example: ","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"- `event x /at 2022-12-12`","lastModifiedDate":"2022-02-12"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"  - Creates an event task called `x`, which will be held at 12/12/2022","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"- `event y /at 2022-12-12 1200`","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"  - Creates an event task called `y`, which will be held at 12/12/2022, 12:00pm","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"- `event z /at 2022-12-12 1200 1300`","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"  - Creates an event task called `z`, which will be held at 12/12/2022, from 12:00pm to 1pm","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"### Marking a task as completed: `mark`","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"Marks a task with `X` once the task is completed.","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"- `mark TASK_INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"  - Marks the task at the specified `TASK_INDEX`. The index refers to the index number shown in the displayed list.","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"  - The `TASK_INDEX` must be a positive integer and less than/equals to the number of tasks in the list.","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"Usage Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"- `mark 1`","lastModifiedDate":"2022-02-12"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"  - Marks the first task in the list.","lastModifiedDate":"2022-02-12"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2022-02-12"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"Unmarks a task if the task is not completed.","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"- `unmark TASK_INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"  - Unmarks the task at the specified `TASK_INDEX`. The index refers to the index number shown in the displayed list.","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"  - The `TASK_INDEX` must be a positive integer and less than/equals to the number of tasks in the list.","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"Usage Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"- `unmark 1`","lastModifiedDate":"2022-02-12"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"  - Unmarks the first task in the list.","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-02-12"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"Deletes a task from the data file.","lastModifiedDate":"2022-02-12"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"- `delete TASK_INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"  - Deletes the task at the specified `TASK_INDEX`. The index refers to the index number shown in the displayed list.","lastModifiedDate":"2022-02-12"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"  - The `TASK_INDEX` must be a positive integer and less than/equals to the number of tasks in the list.","lastModifiedDate":"2022-02-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"Usage Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"- `delete 1`","lastModifiedDate":"2022-02-12"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"  - Deletes the first task in the list.","lastModifiedDate":"2022-02-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"### Finding a task: `find`","lastModifiedDate":"2022-02-12"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"Finds and lists out tasks that contain the keyword specified.","lastModifiedDate":"2022-02-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"- `find SEARCH_SUBSTRING`","lastModifiedDate":"2022-02-12"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"  - Finds the task that contain `SEARCH_SUBSTRING` in its name.","lastModifiedDate":"2022-02-12"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"  - The find function is case-sensitive. e.g `find abc` will **NOT** match `ABC`","lastModifiedDate":"2022-02-12"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"  - Only the name is searched.","lastModifiedDate":"2022-02-12"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"  - Only parts of the name needs to match with the `SEARCH_SUBSTRING`. e.g `find ab` will match `abc`","lastModifiedDate":"2022-02-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"Usage Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"![Find](Find.PNG \"Find\")","lastModifiedDate":"2022-02-12"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"### Listing out tasks scheduled on a particular day: `schedule`","lastModifiedDate":"2022-02-12"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"Finds and lists out tasks that happens/is due on the date specified.","lastModifiedDate":"2022-02-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"- `schedule DATE_IN_YYYY-MM-DD`","lastModifiedDate":"2022-02-12"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"  - Finds event tasks that were held/is going to be held on the `DATE_IN_YYYY-MM-DD`.","lastModifiedDate":"2022-02-12"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"  - Finds deadline tasks that were due/is going to be due on the `DATE_IN_YYYY-MM-DD`.","lastModifiedDate":"2022-02-12"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"  - Only the date is searched.","lastModifiedDate":"2022-02-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"Usage Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"![Schedule](Schedule.PNG \"Schedule\")","lastModifiedDate":"2022-02-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"### Exiting HoloBot: `bye`","lastModifiedDate":"2022-02-12"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"Exits the program.","lastModifiedDate":"2022-02-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"- `bye`","lastModifiedDate":"2022-02-12"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"  - The program will exit automatically, 5 seconds after the exit message is being displayed.","lastModifiedDate":"2022-02-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"Usage Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"![Bye](Bye.PNG \"Bye\")","lastModifiedDate":"2022-02-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"### Saving and Editing the data file","lastModifiedDate":"2022-02-12"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"The data file `data.txt` can be found in the data folder (ip/data).","lastModifiedDate":"2022-02-12"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"Advanced users can attempt to edit the data file directly using any text editor.","lastModifiedDate":"2022-02-12"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"- **⚠ WARNING**: Ensure that the format of the data is correct!","lastModifiedDate":"2022-02-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"## Command Summary ","lastModifiedDate":"2022-02-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"Action | Format, Examples","lastModifiedDate":"2022-02-12"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"--------|------------------","lastModifiedDate":"2022-02-12"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"**List** | `list`","lastModifiedDate":"2022-02-12"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"**Todo** | `todo TASK_NAME`","lastModifiedDate":"2022-02-12"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"**Deadline** | `deadline TASK_NAME /by DATE_IN_YYYY-MM-DD [TIME_IN_HHMM]`","lastModifiedDate":"2022-02-12"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"**Event** | `event TASK_NAME /at DATE_IN_YYYY-MM-DD [START_TIME_IN_HHMM] [END_TIME_IN_HHMM]`","lastModifiedDate":"2022-02-12"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"**Mark** | `mark TASK_INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"**Unmark** | `unmark TASK_INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"**Delete** | `delete TASK_INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"**Find** | `find SEARCH_SUBSTRING`","lastModifiedDate":"2022-02-12"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"**Schedule** | `schedule DATE_IN_YYYY-MM-DD`","lastModifiedDate":"2022-02-12"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"**Exit** | `bye`","lastModifiedDate":"2022-02-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"[1]: https://korochii.github.io/ip/#quick-start","lastModifiedDate":"2022-02-12"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"[2]: https://www.oracle.com/java/technologies/downloads/#java11","lastModifiedDate":"2022-02-12"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"[3]: https://github.com/Korochii/ip/releases/download/A-Release/HoloBot.jar","lastModifiedDate":"2022-02-12"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"[4]: https://korochii.github.io/ip/#features","lastModifiedDate":"2022-02-12"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"[5]: https://korochii.github.io/ip/#listing-all-tasks--list","lastModifiedDate":"2022-02-12"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"[6]: https://korochii.github.io/ip/#creating-a-to-do-task-todo","lastModifiedDate":"2022-02-12"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"[7]: https://korochii.github.io/ip/#creating-a-deadline-task-deadline","lastModifiedDate":"2022-02-12"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"[8]: https://korochii.github.io/ip/#creating-an-event-task-event","lastModifiedDate":"2022-02-12"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"[9]: https://korochii.github.io/ip/#marking-a-task-as-completed-mark","lastModifiedDate":"2022-02-12"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"[10]: https://korochii.github.io/ip/#unmarking-a-task-unmark","lastModifiedDate":"2022-02-12"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"[11]: https://korochii.github.io/ip/#deleting-a-task-delete","lastModifiedDate":"2022-02-12"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"[12]: https://korochii.github.io/ip/#finding-a-task-find","lastModifiedDate":"2022-02-12"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"[13]: https://korochii.github.io/ip/#listing-out-tasks-scheduled-on-a-particular-day-schedule","lastModifiedDate":"2022-02-12"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"[14]: https://korochii.github.io/ip/#exiting-holobot-bye","lastModifiedDate":"2022-02-12"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"[15]: https://korochii.github.io/ip/#saving-and-editing-the-data-file","lastModifiedDate":"2022-02-12"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"[16]: https://korochii.github.io/ip/#command-summary","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"Korochii":189,"-":19}},{"path":"src/main/java/holobot/HoloBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import holobot.exception.HoloBotException;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import holobot.misc.Parser;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import holobot.misc.Storage;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import holobot.misc.TaskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" * HoloBot is a chatbot that tracks the list of tasks on hand.","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":" * @version 10.0","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":" * @since 1.0","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"public class HoloBot {","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    private TaskList listOfTasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * Creates a new instance of HoloBot.","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public HoloBot() {","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        listOfTasks \u003d storage.initTaskList(100); // Assume there will be no more than 100 tasks","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Transfers the user input to the parser, which generates an output for the DialogBox.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * @param userInput The command that the user entered.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     * @return Either the parsed string input or an exception message.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"            return Parser.parse(userInput, listOfTasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        } catch (HoloBotException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"            return e.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Korochii":40}},{"path":"src/main/java/holobot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"public class Launcher {","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Korochii":9}},{"path":"src/main/java/holobot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import holobot.gui.MainWindow;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":" * A GUI for HoloBot using FXML.","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    private HoloBot holoBot \u003d new HoloBot();","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"            Font.loadFont(Main.class.getResource(\"/font/KristenITC.ttf\").toExternalForm(), 13);","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            stage.setTitle(\"HoloBot\");","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setHoloBot(holoBot);","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"            stage.show();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Korochii":35}},{"path":"src/main/java/holobot/exception/HoloBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.exception;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":" * Represents an exception class that can be thrown when using HoloBot.","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"public class HoloBotException extends RuntimeException {","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new instance of HoloBotException.","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    public HoloBotException(String errorMessage) {","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"Korochii":20}},{"path":"src/main/java/holobot/exception/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.exception;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":" * Represents an exception that will be thrown when the user enters an invalid command.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"public class InvalidCommand extends HoloBotException {","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new instance of holobot.exception.InvalidCommand.","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"     * Creates an error message to be displayed to the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     * @return String containing the output message.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"        return \"EHHHHHHH~ \" + errorMessage;","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Korochii":30}},{"path":"src/main/java/holobot/exception/InvalidDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.exception;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":" * Represents an exception that will be thrown when the user enters an invalid date or time.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"public class InvalidDateTime extends HoloBotException {","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new instance of InvalidDateTime.","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    public InvalidDateTime(String errorMessage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"     * Creates an error message to be displayed to the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     * @return String containing the output message.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"        return \"EHHHHHHH~ \" + errorMessage;","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Korochii":30}},{"path":"src/main/java/holobot/exception/InvalidIndex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.exception;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":" * Represents an exception that will be thrown when the user tries to mark/unmark/delete an entry","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":" * that is not in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"public class InvalidIndex extends HoloBotException {","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new instance of InvalidIndex.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    public InvalidIndex(String errorMessage) {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     * Creates an error message to be displayed to the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     * @return String containing the output message.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        return \"EHHHHHHH~ \" + errorMessage;","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Korochii":31}},{"path":"src/main/java/holobot/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.gui;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    private void flip() {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"     * Creates a dialog box for the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"     * @param text Text in the dialog box.","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"     * @param img Image of the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"     * @return A new DialogBox.","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"     * Creates a dialog box for HoloBot.","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"     * @param text Text in the dialog box.","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"     * @param img Image of the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"     * @return A new DialogBox.","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"    public static DialogBox getHoloBotDialog(String text, Image img) {","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        db.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        db.flip();","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        return db;","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Korochii":77}},{"path":"src/main/java/holobot/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.gui;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import holobot.HoloBot;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    private HoloBot holoBot;","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    // Image Credit to kelsoji (https://www.pinterest.com/kelsoji)","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Rushia.png\"));","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    private Image holoBotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pekora.png\"));","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     * Initialises Holobot with a scrollPane.","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * Displays the welcome message.","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     * @param d The HoloBot object","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    public void setHoloBot(HoloBot d) {","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        holoBot \u003d d;","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getHoloBotDialog(\"Hi! I am HoloBot :D\\n\"","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"                + \"How may I help you?\", holoBotImage));","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing HoloBot\u0027s reply and then appends them","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"     * to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        String response \u003d holoBot.getResponse(input);","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"                DialogBox.getHoloBotDialog(response, holoBotImage)","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        );","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        if (response.equals(\"See you again, peko!\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(5));","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            delay.play();","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Korochii":72}},{"path":"src/main/java/holobot/misc/DateTimeChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.misc;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.time.Clock;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import holobot.exception.InvalidDateTime;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":" * Deals with the checking validity of date and time.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"public class DateTimeChecker {","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"     * Checks if date/time specified is in the present.","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * @param newDate Date to be tested.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @param newStartTime Start time to be tested.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * @param newEndTime End time to be tested.","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public static void checkDateTime(LocalDate newDate, LocalTime newStartTime, LocalTime newEndTime) {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        Clock cl \u003d Clock.systemUTC();","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        LocalDate nowDate \u003d LocalDate.now(cl);","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"        LocalTime nowTime \u003d LocalTime.now(cl);","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"        if (newDate.isBefore(nowDate)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        if (newStartTime !\u003d null) {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"            if (newDate.isEqual(nowDate) \u0026 newStartTime.isBefore(nowTime)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"                throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"            } else if (newEndTime !\u003d null) {","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"                if (newDate.isEqual(nowDate) \u0026 newEndTime.isBefore(nowTime)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"                } else if (!newEndTime.isAfter(newStartTime)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidDateTime(\"The end time must be after the start time!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * Checks if date/time specified is in the present.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     * @param newDate Date to be tested.","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"     * @param newTime Time to be tested.","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    public static void checkDateTime(LocalDate newDate, LocalTime newTime) {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        Clock cl \u003d Clock.systemUTC();","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        LocalDate nowDate \u003d LocalDate.now(cl);","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        LocalTime nowTime \u003d LocalTime.now(cl);","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        if (newDate.isBefore(nowDate)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"            throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        if (newTime !\u003d null) {","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"            if (newDate.isEqual(nowDate) \u0026 newTime.isBefore(nowTime)) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"                throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"Korochii":61}},{"path":"src/main/java/holobot/misc/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.misc;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import holobot.exception.HoloBotException;","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import holobot.exception.InvalidCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import holobot.exception.InvalidDateTime;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import holobot.exception.InvalidIndex;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":" * Extracts and deciphers the user\u0027s input, and subsequently calls the relevant function.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":" * Type of inputs that are currently supported:","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":" * list/todo/deadline/event/mark/unmark/delete/bye","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     * Calls different functions according to the user\u0027s input command.","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     * Any command that is not in the correct form will be throw an \"error\" message.","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user.","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    public static String parse(String userInput, TaskList listOfTasks) throws HoloBotException {","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        List\u003cString\u003e wordsList \u003d separateInput(userInput);","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        String firstWord \u003d wordsList.get(0);","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        case (\"list\"):","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"                return listOfTasks.display();","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"This command should not have any arguments :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        case (\"todo\"):","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() \u003e 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"                return listOfTasks.todo(userInput.substring(5));","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The description of a todo cannot be empty :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        case (\"deadline\"):","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() \u003c 4) {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"            } else if (!wordsList.contains(\"/by\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"Please follow this format: deadline \u003ctask\u003e \"","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"                        + \"/by \u003cdate in yyyy-MM-dd\u003e \u003ctime in 24hrs format\u003e\");","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"                return createDeadline(wordsList, listOfTasks);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        case (\"event\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() \u003c 4) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"            } else if (!wordsList.contains(\"/at\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"Please follow this format: event \u003ctask\u003e \"","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"                        + \"/at \u003cdate in yyyy-MM-dd\u003e \u003ctime in 24hrs format\u003e\");","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"                return createEvent(wordsList, listOfTasks);","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        case(\"mark\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() !\u003d 2) {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"This command should have exactly 1 argument.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"            } else if (!isInteger(wordsList.get(1))) {","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"                return markTask(wordsList, listOfTasks);","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        case(\"unmark\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() !\u003d 2) {","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"This command should have exactly 1 argument.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"            } else if (!isInteger(wordsList.get(1))) {","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"                return unmarkTask(wordsList, listOfTasks);","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"        case(\"delete\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() !\u003d 2) {","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"This command should have exactly 1 argument.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"            } else if (!isInteger(wordsList.get(1))) {","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"                return deleteTask(wordsList, listOfTasks);","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"        case (\"find\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() \u003e 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"                return listOfTasks.find(userInput.substring(5));","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The search field cannot be empty :(\");","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        case (\"schedule\"):","lastModifiedDate":"2022-02-07"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"            if (wordsList.size() \u003d\u003d 2) {","lastModifiedDate":"2022-02-07"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"                return listOfTasks.schedule(wordsList.get(1));","lastModifiedDate":"2022-02-07"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The argument MUST contain a single date.\");","lastModifiedDate":"2022-02-07"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"        case (\"bye\"):","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"            return \"See you again, peko!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"            throw new InvalidCommand(\"I don\u0027t know what that means :(\");","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"     * Converts the user input string into a List of strings, partitioned by a whitespace character.","lastModifiedDate":"2022-02-12"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"     * @param userInput String specified by the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"     * @return A list of Strings.","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"    private static List\u003cString\u003e separateInput(String userInput) {","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"        String[] wordsArray \u003d userInput.trim().split(\" \");","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"        return Arrays.asList(wordsArray);","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"     * Creates a new Deadline Task.","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"     * @param wordsList User input.","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"     * @param listOfTasks Current TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"     * @return Success Message after the Deadline task has been added to the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"    private static String createDeadline(List\u003cString\u003e wordsList, TaskList listOfTasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"        int separator \u003d wordsList.indexOf(\"/by\");","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"        String desc \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"        String dateTime \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"        for (int i \u003d 1; i \u003c separator; i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"            desc +\u003d wordsList.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"            desc +\u003d \" \";","lastModifiedDate":"2022-01-24"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"        for (int i \u003d separator + 1; i \u003c wordsList.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"            dateTime +\u003d wordsList.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"            dateTime +\u003d \" \";","lastModifiedDate":"2022-01-24"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"        dateTime \u003d removeLastChar(dateTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"        String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 2 || dateTimeArray.length \u003c 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"            throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"        // Parse user input into LocalDate/LocalTime if it is in the correct format.","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"        LocalDate newDate \u003d convertDate(dateTimeArray[0]);","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"        LocalTime newTime \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 1) { // Optional time input","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"            newTime \u003d convertTime(dateTimeArray[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"        DateTimeChecker.checkDateTime(newDate, newTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"        return listOfTasks.deadline(removeLastChar(desc), newDate, newTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"     * Creates a new Deadline Task.","lastModifiedDate":"2022-02-12"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"     * @param wordsList User input.","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"     * @param listOfTasks Current TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"     * @return Success Message after the Event task has been added to the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"    private static String createEvent(List\u003cString\u003e wordsList, TaskList listOfTasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"        int separator \u003d wordsList.indexOf(\"/at\");","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"        String desc \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"        String dateTime \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"        for (int i \u003d 1; i \u003c separator; i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"            desc +\u003d wordsList.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"            desc +\u003d \" \";","lastModifiedDate":"2022-01-24"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"        for (int i \u003d separator + 1; i \u003c wordsList.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"            dateTime +\u003d wordsList.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"            dateTime +\u003d \" \";","lastModifiedDate":"2022-01-24"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"        dateTime \u003d removeLastChar(dateTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"        String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 3 || dateTimeArray.length \u003c 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"            throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"        // Parse user input into LocalDate/LocalTime if it is in the correct format.","lastModifiedDate":"2022-01-24"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"        LocalDate newDate \u003d convertDate(dateTimeArray[0]);","lastModifiedDate":"2022-01-24"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"        LocalTime newStartTime \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"        LocalTime newEndTime \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 1) { // Optional start time input","lastModifiedDate":"2022-01-24"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"            newStartTime \u003d convertTime(dateTimeArray[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 2) { // Optional end time input","lastModifiedDate":"2022-01-24"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"            newEndTime \u003d convertTime(dateTimeArray[2]);","lastModifiedDate":"2022-01-24"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"        DateTimeChecker.checkDateTime(newDate, newStartTime, newEndTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"        return listOfTasks.event(removeLastChar(desc), newDate, newStartTime, newEndTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"     * Marks a task if the index specified is valid.","lastModifiedDate":"2022-02-12"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"     * @param wordsList User input.","lastModifiedDate":"2022-02-12"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"     * @param listOfTasks Current TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"     * @return Success Message after task has been marked.","lastModifiedDate":"2022-02-12"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"    private static String markTask(List\u003cString\u003e wordsList, TaskList listOfTasks) {","lastModifiedDate":"2022-02-12"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"        int currTaskId \u003d Integer.parseInt(wordsList.get(1));","lastModifiedDate":"2022-02-12"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"        if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d listOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"            return listOfTasks.mark(currTaskId); // Valid taskID, proceed to mark task","lastModifiedDate":"2022-02-12"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"            throw new InvalidIndex(\"The specified task ID is out of range. \"","lastModifiedDate":"2022-02-12"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"                    + \"Please enter a number from 0 to \" + listOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-02-12"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":210,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":211,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":212,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":213,"author":{"gitId":"Korochii"},"content":"     * Unmarks a task if the index specified is valid.","lastModifiedDate":"2022-02-12"},{"lineNumber":214,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":215,"author":{"gitId":"Korochii"},"content":"     * @param wordsList User input.","lastModifiedDate":"2022-02-12"},{"lineNumber":216,"author":{"gitId":"Korochii"},"content":"     * @param listOfTasks Current TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":217,"author":{"gitId":"Korochii"},"content":"     * @return Success Message after task has been unmarked.","lastModifiedDate":"2022-02-12"},{"lineNumber":218,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":219,"author":{"gitId":"Korochii"},"content":"    private static String unmarkTask(List\u003cString\u003e wordsList, TaskList listOfTasks) {","lastModifiedDate":"2022-02-12"},{"lineNumber":220,"author":{"gitId":"Korochii"},"content":"        int currTaskId \u003d Integer.parseInt(wordsList.get(1));","lastModifiedDate":"2022-02-12"},{"lineNumber":221,"author":{"gitId":"Korochii"},"content":"        if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d listOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":222,"author":{"gitId":"Korochii"},"content":"            return listOfTasks.unmark(currTaskId); // Valid taskID, proceed to unmark task","lastModifiedDate":"2022-02-12"},{"lineNumber":223,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":224,"author":{"gitId":"Korochii"},"content":"            throw new InvalidIndex(\"The specified task ID is out of range. \"","lastModifiedDate":"2022-02-12"},{"lineNumber":225,"author":{"gitId":"Korochii"},"content":"                    + \"Please enter a number from 0 to \" + listOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-02-12"},{"lineNumber":226,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":227,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":228,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":229,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":230,"author":{"gitId":"Korochii"},"content":"     * Deletes a task if the index specified is valid.","lastModifiedDate":"2022-02-12"},{"lineNumber":231,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":232,"author":{"gitId":"Korochii"},"content":"     * @param wordsList User input.","lastModifiedDate":"2022-02-12"},{"lineNumber":233,"author":{"gitId":"Korochii"},"content":"     * @param listOfTasks Current TaskList.","lastModifiedDate":"2022-02-12"},{"lineNumber":234,"author":{"gitId":"Korochii"},"content":"     * @return Success Message after task has been deleted.","lastModifiedDate":"2022-02-12"},{"lineNumber":235,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":236,"author":{"gitId":"Korochii"},"content":"    private static String deleteTask(List\u003cString\u003e wordsList, TaskList listOfTasks) {","lastModifiedDate":"2022-02-12"},{"lineNumber":237,"author":{"gitId":"Korochii"},"content":"        int currTaskId \u003d Integer.parseInt(wordsList.get(1));","lastModifiedDate":"2022-02-12"},{"lineNumber":238,"author":{"gitId":"Korochii"},"content":"        if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d listOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":239,"author":{"gitId":"Korochii"},"content":"            return listOfTasks.delete(currTaskId); // Valid taskID, proceed to unmark task","lastModifiedDate":"2022-02-12"},{"lineNumber":240,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":241,"author":{"gitId":"Korochii"},"content":"            throw new InvalidIndex(\"The specified task ID is out of range. \"","lastModifiedDate":"2022-02-12"},{"lineNumber":242,"author":{"gitId":"Korochii"},"content":"                    + \"Please enter a number from 0 to \" + listOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-02-12"},{"lineNumber":243,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":244,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":245,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":246,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":247,"author":{"gitId":"Korochii"},"content":"     * Tests if the input string represents an integer value.","lastModifiedDate":"2022-01-24"},{"lineNumber":248,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":249,"author":{"gitId":"Korochii"},"content":"     * @param input Target string.","lastModifiedDate":"2022-01-24"},{"lineNumber":250,"author":{"gitId":"Korochii"},"content":"     * @return true if the input string represents an integer value, and false otherwise.","lastModifiedDate":"2022-01-24"},{"lineNumber":251,"author":{"gitId":"Korochii"},"content":"     * @throws NumberFormatException thrown if the string does not represent an integer value.","lastModifiedDate":"2022-01-24"},{"lineNumber":252,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":253,"author":{"gitId":"Korochii"},"content":"    private static boolean isInteger(String input) throws NumberFormatException {","lastModifiedDate":"2022-01-24"},{"lineNumber":254,"author":{"gitId":"Korochii"},"content":"        boolean isInt \u003d true;","lastModifiedDate":"2022-01-24"},{"lineNumber":255,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":256,"author":{"gitId":"Korochii"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2022-01-24"},{"lineNumber":257,"author":{"gitId":"Korochii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":258,"author":{"gitId":"Korochii"},"content":"            isInt \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":259,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":260,"author":{"gitId":"Korochii"},"content":"        return isInt;","lastModifiedDate":"2022-01-24"},{"lineNumber":261,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":262,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":263,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":264,"author":{"gitId":"Korochii"},"content":"     * Removes the last character of a string.","lastModifiedDate":"2022-01-25"},{"lineNumber":265,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":266,"author":{"gitId":"Korochii"},"content":"     * @param str Target String.","lastModifiedDate":"2022-01-25"},{"lineNumber":267,"author":{"gitId":"Korochii"},"content":"     * @return New string after removing the last character of the original string.","lastModifiedDate":"2022-01-25"},{"lineNumber":268,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":269,"author":{"gitId":"Korochii"},"content":"    private static String removeLastChar(String str) {","lastModifiedDate":"2022-01-24"},{"lineNumber":270,"author":{"gitId":"Korochii"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":271,"author":{"gitId":"Korochii"},"content":"            return \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":272,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":273,"author":{"gitId":"Korochii"},"content":"            return str.substring(0, str.length() - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":274,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":275,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":276,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":277,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":278,"author":{"gitId":"Korochii"},"content":"     * Checks if the input date is in the correct format.","lastModifiedDate":"2022-01-24"},{"lineNumber":279,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":280,"author":{"gitId":"Korochii"},"content":"     * @param date Date to be tested.","lastModifiedDate":"2022-01-24"},{"lineNumber":281,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":282,"author":{"gitId":"Korochii"},"content":"    private static LocalDate convertDate(String date) {","lastModifiedDate":"2022-01-24"},{"lineNumber":283,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-24"},{"lineNumber":284,"author":{"gitId":"Korochii"},"content":"        LocalDate convertedDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":285,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":286,"author":{"gitId":"Korochii"},"content":"            convertedDate \u003d LocalDate.parse(date, format);","lastModifiedDate":"2022-01-24"},{"lineNumber":287,"author":{"gitId":"Korochii"},"content":"        } catch (DateTimeParseException | NullPointerException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":288,"author":{"gitId":"Korochii"},"content":"            throw new InvalidDateTime(\"Please enter date in this format: \u003cyyyy-MM-dd\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":289,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":290,"author":{"gitId":"Korochii"},"content":"        return convertedDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":291,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":292,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":293,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":294,"author":{"gitId":"Korochii"},"content":"     * Checks if the input date is in the correct format.","lastModifiedDate":"2022-01-24"},{"lineNumber":295,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":296,"author":{"gitId":"Korochii"},"content":"     * @param time Time to be tested.","lastModifiedDate":"2022-01-24"},{"lineNumber":297,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":298,"author":{"gitId":"Korochii"},"content":"    private static LocalTime convertTime(String time) {","lastModifiedDate":"2022-01-24"},{"lineNumber":299,"author":{"gitId":"Korochii"},"content":"        if (time \u003d\u003d null) { // Time is optional","lastModifiedDate":"2022-01-24"},{"lineNumber":300,"author":{"gitId":"Korochii"},"content":"            return null;","lastModifiedDate":"2022-01-24"},{"lineNumber":301,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":302,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-24"},{"lineNumber":303,"author":{"gitId":"Korochii"},"content":"        LocalTime convertedTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":304,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":305,"author":{"gitId":"Korochii"},"content":"            convertedTime \u003d LocalTime.parse(time, format);","lastModifiedDate":"2022-01-24"},{"lineNumber":306,"author":{"gitId":"Korochii"},"content":"        } catch (DateTimeParseException | NullPointerException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":307,"author":{"gitId":"Korochii"},"content":"            throw new InvalidDateTime(\"Please enter time in this 24hrs-format: \u003cHHmm\u003e\");","lastModifiedDate":"2022-01-24"},{"lineNumber":308,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":309,"author":{"gitId":"Korochii"},"content":"        return convertedTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":310,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":311,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Korochii":311}},{"path":"src/main/java/holobot/misc/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.misc;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import holobot.exception.InvalidCommand;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import holobot.task.Deadline;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import holobot.task.Event;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import holobot.task.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import holobot.task.Todo;","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":" * Deals with the loading/storing of data from/to the hard disk folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" * It also provides a function to check if the target data file/folder exist.","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    public static final String DATA_FOLDER_PATH \u003d \"./data\";","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    public static final String DATA_PATH \u003d \"./data/data.txt\";","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    private static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new storage instance.","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public Storage() {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            initFileFolder();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     * Creates new data file/folder if it does not exists.","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     * @throws IOException Failed to create data file/folder in the correct location.","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    public static void initFileFolder() throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"        // Check if folder exist","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        File dataFolder \u003d new File(DATA_FOLDER_PATH);","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        // Create new folder if it does not exist","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        if (!dataFolder.isDirectory()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"            boolean isSuccess \u003d dataFolder.mkdirs();","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            if (!isSuccess) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"                throw new IOException(\"     Failed to create folder.\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"                        + \"     Please create a folder named \u0027data\u0027 in src manually\"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"                        + \"     , before running this program!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        // Check if file exists","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        File dataFile \u003d new File(DATA_PATH);","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        // Create new data.txt file if it does not exist","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        if (!dataFile.isFile()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"            boolean isSuccess \u003d dataFile.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"            if (!isSuccess) {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"                throw new IOException(\"     Failed to create datafile.\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"                        + \"     Please create a data.txt in src/data manually\"","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"                        + \"     , before running this program!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"     * Initialises the task list according to the size specified.","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"     * Copies content from data file if it exists on the hard-disk.","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"     * @param size Size of tasklist","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"     * @return A TaskList that may contain stored data from previous runs.","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"    public static TaskList initTaskList(int size) {","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"        File dataFile \u003d new File(DATA_PATH);","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        assert size \u003e 0;","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        TaskList taskListOfTasks \u003d new TaskList(size);","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"        if (dataFile.length() !\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"            loadData(dataFile, taskListOfTasks);","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"        return taskListOfTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"     * Loads data from the data.txt file in the TaskList.","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"     * @param f File that contains the data.","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"     * @param listOfTasks Target TaskList to store the data.","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"    public static void loadData(File f, TaskList listOfTasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"                String currCommand \u003d sc.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"                if (currCommand.startsWith(\"[T]\") \u0026 currCommand.length() \u003e 7) { // Valid To-do task","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"                    Task currTask \u003d createTodo(currCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.addTasks(currTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"                } else if (currCommand.startsWith(\"[D]\")","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"                        \u0026 currCommand.contains(\"(by:\")","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"                        \u0026 currCommand.length() \u003e\u003d 16) { // Valid Deadline task","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"                    Task currTask \u003d createDeadline(currCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.addTasks(currTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"                } else if (currCommand.startsWith(\"[E]\")","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"                        \u0026 currCommand.contains(\"(at:\")","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"                        \u0026 currCommand.length() \u003e\u003d 16) { // Valid Event task","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"                    Task currTask \u003d createEvent(currCommand);","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.addTasks(currTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"                } // else invalid command \u003d\u003e do nothing","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"     * Creates a new Todo task based on the command stored.","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"     * @param currCommand Command stored in the hard disk.","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"     * @return A Todo task","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"    private static Todo createTodo(String currCommand) {","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"        boolean isMarked \u003d currCommand.startsWith(\"[X]\", 3);","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"        String currDesc \u003d currCommand.substring(7);","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"        Todo currTask \u003d new Todo(currDesc);","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(isMarked);","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"        return currTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"     * Creates a new Deadline task based on the command stored.","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"     * @param currCommand Command stored in the hard disk.","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"     * @return A Deadline task.","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"    private static Deadline createDeadline(String currCommand) {","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"        boolean isMarked \u003d currCommand.startsWith(\"[X]\", 3);","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"        int indexBy \u003d currCommand.indexOf(\"(by:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"        String currDesc \u003d currCommand.substring(7, indexBy - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"        String currBy \u003d currCommand.substring(indexBy + 5, currCommand.length() - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"        String[] dateTimeArray \u003d currBy.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 4 || dateTimeArray.length \u003c 3) {","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"            throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"        // Parse user input into LocalDate/LocalTime if it is in the correct format.","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"        String currDate \u003d dateTimeArray[0] + \" \" + dateTimeArray[1] + \" \" + dateTimeArray[2];","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"        LocalDate newDate \u003d LocalDate.parse(currDate, dateFormatter);","lastModifiedDate":"2022-01-24"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"        LocalTime newTime \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 3) { // Optional time input","lastModifiedDate":"2022-01-24"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"            newTime \u003d LocalTime.parse(dateTimeArray[3], timeFormatter);","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"        DateTimeChecker.checkDateTime(newDate, newTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"        Deadline currTask \u003d new Deadline(currDesc, newDate, newTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(isMarked);","lastModifiedDate":"2022-01-24"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"        return currTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"     * Creates a new Event task based on the command stored.","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"     * @param currCommand Command stored in the hard disk.","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"     * @return An Event task.","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"    private static Event createEvent(String currCommand) {","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"        boolean isMarked \u003d currCommand.startsWith(\"[X]\", 3);","lastModifiedDate":"2022-01-24"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"        int indexAt \u003d currCommand.indexOf(\"(at:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"        String currDesc \u003d currCommand.substring(7, indexAt - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"        String currAt \u003d currCommand.substring(indexAt + 5, currCommand.length() - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"        String[] dateTimeArray \u003d currAt.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 4 || dateTimeArray.length \u003c 3) {","lastModifiedDate":"2022-01-24"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"            throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-24"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"        // Parse user input into LocalDate/LocalTime if it is in the correct format.","lastModifiedDate":"2022-01-24"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"        String currDate \u003d dateTimeArray[0] + \" \" + dateTimeArray[1] + \" \" + dateTimeArray[2];","lastModifiedDate":"2022-01-24"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"        LocalDate newDate \u003d LocalDate.parse(currDate, dateFormatter);","lastModifiedDate":"2022-01-24"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"        LocalTime newStartTime \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"        LocalTime newEndTime \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"        if (dateTimeArray.length \u003e 3) { // Optional start time input","lastModifiedDate":"2022-01-24"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"            String[] startEndTime \u003d dateTimeArray[3].split(\"-\");","lastModifiedDate":"2022-01-24"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"            newStartTime \u003d LocalTime.parse(startEndTime[0], timeFormatter);","lastModifiedDate":"2022-01-24"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"            if (startEndTime.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"                newEndTime \u003d LocalTime.parse(startEndTime[1], timeFormatter);","lastModifiedDate":"2022-01-24"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"        DateTimeChecker.checkDateTime(newDate, newStartTime, newEndTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"        Event currTask \u003d new Event(currDesc, newDate, newStartTime, newEndTime);","lastModifiedDate":"2022-02-06"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(isMarked);","lastModifiedDate":"2022-01-24"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"        return currTask;","lastModifiedDate":"2022-02-06"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"Korochii":200}},{"path":"src/main/java/holobot/misc/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.misc;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import holobot.exception.InvalidDateTime;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import holobot.task.Deadline;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import holobot.task.Event;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import holobot.task.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import holobot.task.Todo;","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":" * Acts as a storage for all the tasks that the user has entered.","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"public class TaskList {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    private int numberOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new instance of list of tasks, according to the size specified.","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * @param size Size of list of tasks.","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public TaskList(int size) {","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e(size);","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"     * Retrieves the current amount of tasks in the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     * @return the total number of tasks in the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        return numberOfTasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"     * Retrieves the array list of task.","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"     * @return The list of tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        return listOfTasks;","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"     * Adds the task into the TaskList.","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"    public void addTasks(Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"     * Iterates through the list and prints out each task that is on the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"    public String display() {","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        result +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        for (int i \u003d 1; i \u003c\u003d numberOfTasks; i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"            Task currTask \u003d listOfTasks.get(i - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"            String output \u003d i + \". \" + currTask + \"\\n\";","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"            result +\u003d output;","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        return result;","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"     * Marks task by changing its status to \"done\".","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be marked.","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"    public String mark(int taskId) {","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(true);","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + currTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"     * Unmarks task by changing its status to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be unmarked.","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"    public String unmark(int taskId) {","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(false);","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + currTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"     * Adds the to-do task into the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"    public String todo(String userInput) {","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Todo(userInput);","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"        listOfTasks.add(currentTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"                + \"Now you have \" + numberOfTasks + \" task/s in the list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"     * Adds the task (which has a deadline) into the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"     * @param dueDate Specifies the date that this task has to be done by.","lastModifiedDate":"2022-01-22"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"     * @param dueTime Specifies the time that this task has to be done by.","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"    public String deadline(String userInput, LocalDate dueDate, LocalTime dueTime) {","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Deadline(userInput, dueDate, dueTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"        listOfTasks.add(currentTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"                + \"Now you have \" + numberOfTasks + \" task/s in the list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"     * Adds the event task into the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"    public String event(String userInput, LocalDate eventDate,","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"                      LocalTime eventStartTime, LocalTime eventEndTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"        numberOfTasks++;","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Event(userInput, eventDate, eventStartTime, eventEndTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"        listOfTasks.add(currentTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"                + \"Now you have \" + numberOfTasks + \" task/s in the list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"     * Deletes task that corresponds to the specified task ID.","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be deleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"    public String delete(int taskId) {","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"        listOfTasks.remove(taskId - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"        numberOfTasks--;","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + currTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"     * Searches for and prints all tasks that contains the keyword specified by the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"     * @param searchTarget Keyword specified by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"    public String find(String searchTarget) {","lastModifiedDate":"2022-01-28"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"            Task currTask \u003d listOfTasks.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"            String currTaskDesc \u003d currTask.getDescription().toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"            if (currTaskDesc.contains(searchTarget)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"                String currString \u003d count + \". \" + currTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"                res.append(currString).append(\"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"                count++;","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2022-01-28"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"            return \"No results found :(\";","lastModifiedDate":"2022-01-28"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"            return \"Here are the matching tasks in your list:\\n\" + res;","lastModifiedDate":"2022-01-28"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"     * Converts the TaskList into a single string file, to be stored in data.txt on the hard disk.","lastModifiedDate":"2022-01-22"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"     * @return All tasks in the form of a String.","lastModifiedDate":"2022-01-22"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"    private String parseList() {","lastModifiedDate":"2022-01-22"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2022-01-22"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"        for (Task listOfTask : listOfTasks) {","lastModifiedDate":"2022-01-22"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"            String currTask \u003d listOfTask.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"            res.append(currTask).append(\"\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"        return res.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"     * Saves the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-02-12"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"    private void writeToFile() {","lastModifiedDate":"2022-01-22"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"        String filePath \u003d Storage.DATA_PATH;","lastModifiedDate":"2022-01-24"},{"lineNumber":210,"author":{"gitId":"Korochii"},"content":"        FileWriter fw;","lastModifiedDate":"2022-01-22"},{"lineNumber":211,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":212,"author":{"gitId":"Korochii"},"content":"            fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-22"},{"lineNumber":213,"author":{"gitId":"Korochii"},"content":"            fw.write(parseList());","lastModifiedDate":"2022-01-22"},{"lineNumber":214,"author":{"gitId":"Korochii"},"content":"            fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":215,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":216,"author":{"gitId":"Korochii"},"content":"            System.out.println(\"An error has occurred when writing to data file!\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":217,"author":{"gitId":"Korochii"},"content":"                    + \"Please try again later.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":218,"author":{"gitId":"Korochii"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":219,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":220,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":221,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":222,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":223,"author":{"gitId":"Korochii"},"content":"     * Searches for and prints all tasks that happens on the specified date.","lastModifiedDate":"2022-02-12"},{"lineNumber":224,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":225,"author":{"gitId":"Korochii"},"content":"     * @param date Date specified by the user.","lastModifiedDate":"2022-02-07"},{"lineNumber":226,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":227,"author":{"gitId":"Korochii"},"content":"    public String schedule(String date) {","lastModifiedDate":"2022-02-07"},{"lineNumber":228,"author":{"gitId":"Korochii"},"content":"        LocalDate convertedDate \u003d convertDate(date);","lastModifiedDate":"2022-02-12"},{"lineNumber":229,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":230,"author":{"gitId":"Korochii"},"content":"        StringBuilder listOfEvent \u003d new StringBuilder();","lastModifiedDate":"2022-02-07"},{"lineNumber":231,"author":{"gitId":"Korochii"},"content":"        listOfEvent.append(\"You have the following events on \").append(date).append(\" :\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":232,"author":{"gitId":"Korochii"},"content":"        int eventCount \u003d 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":233,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":234,"author":{"gitId":"Korochii"},"content":"        StringBuilder listOfDeadline \u003d new StringBuilder();","lastModifiedDate":"2022-02-07"},{"lineNumber":235,"author":{"gitId":"Korochii"},"content":"        listOfDeadline.append(\"Here are the list of tasks that are due on \").append(date).append(\" :\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":236,"author":{"gitId":"Korochii"},"content":"        int deadlineCount \u003d 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":237,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":238,"author":{"gitId":"Korochii"},"content":"        for (Task currTask : listOfTasks) {","lastModifiedDate":"2022-02-07"},{"lineNumber":239,"author":{"gitId":"Korochii"},"content":"            if (currTask instanceof Event) {","lastModifiedDate":"2022-02-07"},{"lineNumber":240,"author":{"gitId":"Korochii"},"content":"                eventCount \u003d addEventToList(listOfEvent, (Event) currTask, convertedDate, eventCount);","lastModifiedDate":"2022-02-12"},{"lineNumber":241,"author":{"gitId":"Korochii"},"content":"            } else if (currTask instanceof Deadline) {","lastModifiedDate":"2022-02-12"},{"lineNumber":242,"author":{"gitId":"Korochii"},"content":"                deadlineCount \u003d addDeadlineToList(listOfDeadline, (Deadline) currTask, convertedDate, deadlineCount);","lastModifiedDate":"2022-02-12"},{"lineNumber":243,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":244,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":245,"author":{"gitId":"Korochii"},"content":"        return printSchedule(eventCount, deadlineCount, listOfEvent, listOfDeadline);","lastModifiedDate":"2022-02-12"},{"lineNumber":246,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":247,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":248,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":249,"author":{"gitId":"Korochii"},"content":"     * Converts the date String into a LocalDate variable if the input string is of the right format.","lastModifiedDate":"2022-02-12"},{"lineNumber":250,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":251,"author":{"gitId":"Korochii"},"content":"     * @param date Date string input by user.","lastModifiedDate":"2022-02-12"},{"lineNumber":252,"author":{"gitId":"Korochii"},"content":"     * @return LocalDate variable.","lastModifiedDate":"2022-02-12"},{"lineNumber":253,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":254,"author":{"gitId":"Korochii"},"content":"    private LocalDate convertDate(String date) {","lastModifiedDate":"2022-02-12"},{"lineNumber":255,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-02-12"},{"lineNumber":256,"author":{"gitId":"Korochii"},"content":"        LocalDate convertedDate;","lastModifiedDate":"2022-02-12"},{"lineNumber":257,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-02-12"},{"lineNumber":258,"author":{"gitId":"Korochii"},"content":"            convertedDate \u003d LocalDate.parse(date, format);","lastModifiedDate":"2022-02-12"},{"lineNumber":259,"author":{"gitId":"Korochii"},"content":"        } catch (DateTimeParseException | NullPointerException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":260,"author":{"gitId":"Korochii"},"content":"            throw new InvalidDateTime(\"Please enter date in this format: \u003cyyyy-MM-dd\u003e\");","lastModifiedDate":"2022-02-12"},{"lineNumber":261,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":262,"author":{"gitId":"Korochii"},"content":"        return convertedDate;","lastModifiedDate":"2022-02-12"},{"lineNumber":263,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":264,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":265,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":266,"author":{"gitId":"Korochii"},"content":"     * Checks if the currTask is on the same date as convertedDate.","lastModifiedDate":"2022-02-12"},{"lineNumber":267,"author":{"gitId":"Korochii"},"content":"     * If the dates match, the currTask will be appended to the StringBuilder.","lastModifiedDate":"2022-02-12"},{"lineNumber":268,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":269,"author":{"gitId":"Korochii"},"content":"     * @param listOfEvent Current list of Events in the form of a StringBuilder.","lastModifiedDate":"2022-02-12"},{"lineNumber":270,"author":{"gitId":"Korochii"},"content":"     * @param currTask Current task that we are checking.","lastModifiedDate":"2022-02-12"},{"lineNumber":271,"author":{"gitId":"Korochii"},"content":"     * @param convertedDate LocalDate that is specified by the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":272,"author":{"gitId":"Korochii"},"content":"     * @param eventCount Current number of tasks that matches the date specified by the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":273,"author":{"gitId":"Korochii"},"content":"     * @return The updated eventCount.","lastModifiedDate":"2022-02-12"},{"lineNumber":274,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":275,"author":{"gitId":"Korochii"},"content":"    private int addEventToList(StringBuilder listOfEvent, Event currTask, LocalDate convertedDate, int eventCount) {","lastModifiedDate":"2022-02-12"},{"lineNumber":276,"author":{"gitId":"Korochii"},"content":"        if (currTask.getDate().isEqual(convertedDate)) {","lastModifiedDate":"2022-02-12"},{"lineNumber":277,"author":{"gitId":"Korochii"},"content":"            String currString \u003d eventCount + \". \" + currTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":278,"author":{"gitId":"Korochii"},"content":"            listOfEvent.append(currString).append(\"\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":279,"author":{"gitId":"Korochii"},"content":"            return eventCount + 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":280,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":281,"author":{"gitId":"Korochii"},"content":"            return eventCount;","lastModifiedDate":"2022-02-12"},{"lineNumber":282,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":283,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":284,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":285,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":286,"author":{"gitId":"Korochii"},"content":"     * Checks if the currTask is on the same date as convertedDate.","lastModifiedDate":"2022-02-12"},{"lineNumber":287,"author":{"gitId":"Korochii"},"content":"     * If the dates match, the currTask will be appended to the StringBuilder.","lastModifiedDate":"2022-02-12"},{"lineNumber":288,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":289,"author":{"gitId":"Korochii"},"content":"     * @param listOfDeadline Current list of Deadline in the form of a StringBuilder.","lastModifiedDate":"2022-02-12"},{"lineNumber":290,"author":{"gitId":"Korochii"},"content":"     * @param currTask Current task that we are checking.","lastModifiedDate":"2022-02-12"},{"lineNumber":291,"author":{"gitId":"Korochii"},"content":"     * @param convertedDate LocalDate that is specified by the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":292,"author":{"gitId":"Korochii"},"content":"     * @param deadlineCount Current number of tasks that matches the date specified by the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":293,"author":{"gitId":"Korochii"},"content":"     * @return The updated eventCount.","lastModifiedDate":"2022-02-12"},{"lineNumber":294,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":295,"author":{"gitId":"Korochii"},"content":"    private int addDeadlineToList(StringBuilder listOfDeadline, Deadline currTask,","lastModifiedDate":"2022-02-12"},{"lineNumber":296,"author":{"gitId":"Korochii"},"content":"                                  LocalDate convertedDate, int deadlineCount) {","lastModifiedDate":"2022-02-12"},{"lineNumber":297,"author":{"gitId":"Korochii"},"content":"        if (currTask.getDate().isEqual(convertedDate)) {","lastModifiedDate":"2022-02-12"},{"lineNumber":298,"author":{"gitId":"Korochii"},"content":"            String currString \u003d deadlineCount + \". \" + currTask;","lastModifiedDate":"2022-02-07"},{"lineNumber":299,"author":{"gitId":"Korochii"},"content":"            listOfDeadline.append(currString).append(\"\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":300,"author":{"gitId":"Korochii"},"content":"            return deadlineCount + 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":301,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-12"},{"lineNumber":302,"author":{"gitId":"Korochii"},"content":"            return deadlineCount;","lastModifiedDate":"2022-02-12"},{"lineNumber":303,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":304,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":305,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":306,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":307,"author":{"gitId":"Korochii"},"content":"     * Prints the lists of tasks that corresponds to the user specified date.","lastModifiedDate":"2022-02-12"},{"lineNumber":308,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":309,"author":{"gitId":"Korochii"},"content":"     * @param eventCount Number of Event Tasks that matched the user specified date.","lastModifiedDate":"2022-02-12"},{"lineNumber":310,"author":{"gitId":"Korochii"},"content":"     * @param deadlineCount Number of Deadline Tasks that matched the user specified date.","lastModifiedDate":"2022-02-12"},{"lineNumber":311,"author":{"gitId":"Korochii"},"content":"     * @param listOfEvent List of Event Tasks that matched the user specified date.","lastModifiedDate":"2022-02-12"},{"lineNumber":312,"author":{"gitId":"Korochii"},"content":"     * @param listOfDeadline List of Deadline Tasks that matched the user specified date.","lastModifiedDate":"2022-02-12"},{"lineNumber":313,"author":{"gitId":"Korochii"},"content":"     * @return A String to be printed onto the GUI and displayed to the user.","lastModifiedDate":"2022-02-12"},{"lineNumber":314,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":315,"author":{"gitId":"Korochii"},"content":"    private String printSchedule(int eventCount, int deadlineCount,","lastModifiedDate":"2022-02-12"},{"lineNumber":316,"author":{"gitId":"Korochii"},"content":"                                 StringBuilder listOfEvent, StringBuilder listOfDeadline) {","lastModifiedDate":"2022-02-12"},{"lineNumber":317,"author":{"gitId":"Korochii"},"content":"        if (eventCount \u003d\u003d 1 \u0026\u0026 deadlineCount \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":318,"author":{"gitId":"Korochii"},"content":"            return \"No results found :(\";","lastModifiedDate":"2022-02-07"},{"lineNumber":319,"author":{"gitId":"Korochii"},"content":"        } else if (eventCount \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":320,"author":{"gitId":"Korochii"},"content":"            return listOfDeadline.toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":321,"author":{"gitId":"Korochii"},"content":"        } else if (deadlineCount \u003d\u003d 1) {","lastModifiedDate":"2022-02-07"},{"lineNumber":322,"author":{"gitId":"Korochii"},"content":"            return listOfEvent.toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":323,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-07"},{"lineNumber":324,"author":{"gitId":"Korochii"},"content":"            return listOfEvent.toString() + \"\\n\" + listOfDeadline.toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":325,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":326,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":327,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":327}},{"path":"src/main/java/holobot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.task;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" * It has a date field, and an optional time field.","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    private LocalTime dueTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new instance of task that has a deadline.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task.","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"     * @param dueDate Specifies the date that this task has to be done by.","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     * @param dueTime Specifies the time that this task has to be done by.","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    public Deadline(String description, LocalDate dueDate, LocalTime dueTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     * Retrieves the due date of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     * @return the due date of the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        return dueDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[D]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        String formattedDate \u003d dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        String formattedTime \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        if (dueTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            formattedTime \u003d \" \" + dueTime.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + formattedTime + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":54}},{"path":"src/main/java/holobot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.task;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * Represents a task that has a start date, as well as an optional start time and end time.","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    private LocalTime eventStartTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    private LocalTime eventEndTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new event task.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     * This task has a specific date as well as a start and end time.","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task.","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     * @param eventDate Date of event.","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     * @param eventStartTime Start time of event.","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     * @param eventEndTime End time of event.","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    public Event(String description, LocalDate eventDate, LocalTime eventStartTime, LocalTime eventEndTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"     * Retrieves the date in which the event will be happenning on.","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"     * @return the date of event.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        return eventDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[E]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        String formattedDate \u003d eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        String formattedStartTime \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        String formattedEndTime \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        if (eventStartTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"            formattedStartTime \u003d \" \" + eventStartTime.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        if (eventEndTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"            formattedEndTime \u003d \"-\" + eventEndTime.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"                + formattedDate + formattedStartTime + formattedEndTime + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":64}},{"path":"src/main/java/holobot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.task;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":" * Represents the task that the user has created in HoloBot.","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new instance of task, according to the task description.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     * Retrieves the status icon corresponding to the current status (isDone).","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     * @return \"X\" if task is already done, \" \" if task is not done.","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     * Retrieves the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     * @return A string that represents the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        return description;","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     * Sets the current status for the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     * @param isDone True/False depending if the task is already done.","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"     * Prepends a status checkbox that shows if the task is done.","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"     * @return String containing a status icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":59}},{"path":"src/main/java/holobot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.task;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":" * Represents a task that is to be done by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     * Instantiates a new instance of a task that is to be done, according to the task description.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"     * By default, this task is set to \"not done\" and does not have any date/time attached to it.","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task.","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[T]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 10; -fx-background-color: #F8C8DC; -fx-border-color: #F8C8DC; -fx-border-radius: 70; -fx-background-radius: 10; \" text\u003d\"Label\" textFill\u003d\"#404040\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"            \u003cFont name\u003d\"Kristen ITC\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"            \u003cInsets left\u003d\"12.0\" right\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"        \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Korochii":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"holobot.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"        \u003c!-- Background Image Credit to https://wallpapercave.com/w/wp8159354 --\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background: transparent; -fx-background-image: url(\u0027/images/Background.jpg\u0027);\" vvalue\u003d\"1.0\" opacity\u003d\"0.9\"\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"  /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"Korochii":20}},{"path":"src/test/java/holobot/misc/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.misc;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static holobot.misc.Parser.parse;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public void testParse_listSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"            parse(\"list\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"            assertEquals(0, listOfTasks.getNumberOfTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    public void testParse_listExceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            parse(\"list x\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"This command should not have any arguments :(\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    public void testParse_todoSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"            parse(\"todo x\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[T][ ] x]\", listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    public void testParse_todoExceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"            parse(\"todo\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The description of a todo cannot be empty :(\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"    public void testParse_deadlineDateOnlySuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline correct format date only /by 2022-12-12\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[D][ ] correct format date only (by: Dec 12 2022)]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"    public void testParse_deadlineDateTimeSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline correct format date and time /by 2022-12-12 1200\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[D][ ] correct format date and time (by: Dec 12 2022 12:00)]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"    public void testParse_deadlineExceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Incorrect number of arguments supplied :(\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline task without /_by\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please follow this format: deadline \u003ctask\u003e \"","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"                    + \"/by \u003cdate in yyyy-MM-dd\u003e \u003ctime in 24hrs format\u003e\", e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline incomplete without date /by\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter date in this format: \u003cyyyy-MM-dd\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline wrong date format /by 2022/12/12\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter date in this format: \u003cyyyy-MM-dd\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline invalid date /by 1111-11-11\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"You cannot travel back in time!\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline wrong time format /by 2022-12-12 12:10pm\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter time in this 24hrs-format: \u003cHHmm\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline invalid time /by 2022-12-12 9999\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter time in this 24hrs-format: \u003cHHmm\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"    public void testParse_eventDateOnlySuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"            parse(\"event correct format date only /at 2022-12-12\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[E][ ] correct format date only (at: Dec 12 2022)]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"    public void testParse_eventStartTimeSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"            parse(\"event correct format date and start time /at 2022-12-12 1200\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[E][ ] correct format date and start time (at: Dec 12 2022 12:00)]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"    public void testParse_eventStartEndTimeSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"        TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"            parse(\"event correct format date and start/end time /at 2022-12-12 1200 1300\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[E][ ] correct format date and start/end time (at: Dec 12 2022 12:00-13:00)]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"    public void testParse_eventExceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"            parse(\"event\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Incorrect number of arguments supplied :(\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"            parse(\"event task without /_at\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please follow this format: event \u003ctask\u003e \"","lastModifiedDate":"2022-01-28"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"                    + \"/at \u003cdate in yyyy-MM-dd\u003e \u003ctime in 24hrs format\u003e\", e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":210,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":211,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":212,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":213,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":214,"author":{"gitId":"Korochii"},"content":"            parse(\"event incomplete without date /at\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":215,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":216,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":217,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter date in this format: \u003cyyyy-MM-dd\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":218,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":219,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":220,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":221,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":222,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":223,"author":{"gitId":"Korochii"},"content":"            parse(\"event wrong date format /at 2022/12/12\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":224,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":225,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":226,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter date in this format: \u003cyyyy-MM-dd\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":227,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":228,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":229,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":230,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":231,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":232,"author":{"gitId":"Korochii"},"content":"            parse(\"event invalid date /at 1111-11-11\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":233,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":234,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":235,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"You cannot travel back in time!\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":236,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":237,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":238,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":239,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":240,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":241,"author":{"gitId":"Korochii"},"content":"            parse(\"event wrong start time format /at 2022-12-12 12:10pm\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":242,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":243,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":244,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter time in this 24hrs-format: \u003cHHmm\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":245,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":246,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":247,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":248,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":249,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":250,"author":{"gitId":"Korochii"},"content":"            parse(\"event wrong end time format /at 2022-12-12 1200 12:22pm\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":251,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":252,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":253,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter time in this 24hrs-format: \u003cHHmm\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":254,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":255,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":256,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":257,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":258,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":259,"author":{"gitId":"Korochii"},"content":"            parse(\"event invalid start time /at 2022-12-12 9999\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":260,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":261,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":262,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter time in this 24hrs-format: \u003cHHmm\u003e\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":263,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":264,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":265,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":266,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":267,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":268,"author":{"gitId":"Korochii"},"content":"            parse(\"event invalid end time /at 2022-12-12 1200 1100\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":269,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":270,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":271,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The end time must be after the start time!\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":272,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":273,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":274,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":275,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":276,"author":{"gitId":"Korochii"},"content":"    public void testParse_markSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":277,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":278,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":279,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":280,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":281,"author":{"gitId":"Korochii"},"content":"            parse(\"mark 1\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":282,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[T][X] borrow book]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":283,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":284,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":285,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":286,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":287,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":288,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":289,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":290,"author":{"gitId":"Korochii"},"content":"    public void testParse_markExceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":291,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":292,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":293,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":294,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":295,"author":{"gitId":"Korochii"},"content":"            parse(\"mark\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":296,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":297,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":298,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"This command should have exactly 1 argument.\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":299,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":300,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":301,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":302,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":303,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":304,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":305,"author":{"gitId":"Korochii"},"content":"            parse(\"mark 0\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":306,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":307,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":308,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The specified task ID is out of range. Please enter a number from 0 to 1.\",","lastModifiedDate":"2022-01-28"},{"lineNumber":309,"author":{"gitId":"Korochii"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":310,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":311,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":312,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":313,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":314,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":315,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":316,"author":{"gitId":"Korochii"},"content":"            parse(\"mark x\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":317,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":318,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":319,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The argument MUST contain a single integer.\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":320,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":321,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":322,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":323,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":324,"author":{"gitId":"Korochii"},"content":"    public void testParse_unmarkSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":325,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":326,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":327,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":328,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":329,"author":{"gitId":"Korochii"},"content":"            parse(\"mark 1\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":330,"author":{"gitId":"Korochii"},"content":"            parse(\"unmark 1\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":331,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[T][ ] borrow book]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":332,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":333,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":334,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":335,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":336,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":337,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":338,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":339,"author":{"gitId":"Korochii"},"content":"    public void testParse_unmarkExceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":340,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":341,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":342,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":343,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":344,"author":{"gitId":"Korochii"},"content":"            parse(\"mark 1\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":345,"author":{"gitId":"Korochii"},"content":"            parse(\"unmark\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":346,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":347,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":348,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"This command should have exactly 1 argument.\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":349,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":350,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":351,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":352,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":353,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":354,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":355,"author":{"gitId":"Korochii"},"content":"            parse(\"mark 1\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":356,"author":{"gitId":"Korochii"},"content":"            parse(\"unmark 0\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":357,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":358,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":359,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The specified task ID is out of range. Please enter a number from 0 to 1.\",","lastModifiedDate":"2022-01-28"},{"lineNumber":360,"author":{"gitId":"Korochii"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":361,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":362,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":363,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":364,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":365,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":366,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":367,"author":{"gitId":"Korochii"},"content":"            parse(\"mark 1\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":368,"author":{"gitId":"Korochii"},"content":"            parse(\"unmark x\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":369,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":370,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":371,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The argument MUST contain a single integer.\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":372,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":373,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":374,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":375,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":376,"author":{"gitId":"Korochii"},"content":"    public void testParse_deleteSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":377,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":378,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":379,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":380,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":381,"author":{"gitId":"Korochii"},"content":"            parse(\"delete 1\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":382,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":383,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":384,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":385,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":386,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":387,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":388,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":389,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":390,"author":{"gitId":"Korochii"},"content":"    public void testParse_deleteExceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":391,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":392,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":393,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":394,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":395,"author":{"gitId":"Korochii"},"content":"            parse(\"delete\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":396,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":397,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":398,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"This command should have exactly 1 argument.\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":399,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":400,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":401,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":402,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":403,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":404,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":405,"author":{"gitId":"Korochii"},"content":"            parse(\"delete 0\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":406,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":407,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":408,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The specified task ID is out of range. Please enter a number from 0 to 1.\",","lastModifiedDate":"2022-01-28"},{"lineNumber":409,"author":{"gitId":"Korochii"},"content":"                    e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":410,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":411,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":412,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":413,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":414,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":415,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":416,"author":{"gitId":"Korochii"},"content":"            parse(\"delete x\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":417,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":418,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":419,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The argument MUST contain a single integer.\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":420,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":421,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":422,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":423,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":424,"author":{"gitId":"Korochii"},"content":"    public void testParse_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":425,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":426,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":427,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":428,"author":{"gitId":"Korochii"},"content":"            parse(\"this is an invalid command\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":429,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":430,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":431,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"I don\u0027t know what that means :(\", e.getMessage());","lastModifiedDate":"2022-02-11"},{"lineNumber":432,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":433,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":434,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":435,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":436,"author":{"gitId":"Korochii"},"content":"    public void testParse_findSuccess() {","lastModifiedDate":"2022-01-25"},{"lineNumber":437,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":438,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":439,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":440,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":441,"author":{"gitId":"Korochii"},"content":"            parse(\"todo read book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":442,"author":{"gitId":"Korochii"},"content":"            parse(\"find book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":443,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[T][ ] borrow book, [T][ ] read book]\",","lastModifiedDate":"2022-01-25"},{"lineNumber":444,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":445,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":446,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":447,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":448,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":449,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":450,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":451,"author":{"gitId":"Korochii"},"content":"    public void testParse_findExceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":452,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":453,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-01-25"},{"lineNumber":454,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-01-25"},{"lineNumber":455,"author":{"gitId":"Korochii"},"content":"            parse(\"todo borrow book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":456,"author":{"gitId":"Korochii"},"content":"            parse(\"todo read book\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":457,"author":{"gitId":"Korochii"},"content":"            parse(\"find\", listOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":458,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":459,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":460,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The search field cannot be empty :(\", e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":461,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":462,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":463,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":464,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-02-07"},{"lineNumber":465,"author":{"gitId":"Korochii"},"content":"    public void testParse_scheduleSuccess() {","lastModifiedDate":"2022-02-07"},{"lineNumber":466,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":467,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-02-07"},{"lineNumber":468,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-02-07"},{"lineNumber":469,"author":{"gitId":"Korochii"},"content":"            parse(\"event x /at 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":470,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline y /by 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":471,"author":{"gitId":"Korochii"},"content":"            parse(\"schedule 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":472,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"[[E][ ] x (at: Nov 11 2111), [D][ ] y (by: Nov 11 2111)]\",","lastModifiedDate":"2022-02-07"},{"lineNumber":473,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().toString());","lastModifiedDate":"2022-02-07"},{"lineNumber":474,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":475,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-02-07"},{"lineNumber":476,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":477,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":478,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":479,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-02-07"},{"lineNumber":480,"author":{"gitId":"Korochii"},"content":"    public void testParse_scheduleExceptionThrown() {","lastModifiedDate":"2022-02-07"},{"lineNumber":481,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":482,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-02-07"},{"lineNumber":483,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-02-07"},{"lineNumber":484,"author":{"gitId":"Korochii"},"content":"            parse(\"event x /at 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":485,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline y /by 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":486,"author":{"gitId":"Korochii"},"content":"            parse(\"schedule xyz xxxx\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":487,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-02-07"},{"lineNumber":488,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":489,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The argument MUST contain a single date.\", e.getMessage());","lastModifiedDate":"2022-02-07"},{"lineNumber":490,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":491,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":492,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":493,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-02-07"},{"lineNumber":494,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-02-07"},{"lineNumber":495,"author":{"gitId":"Korochii"},"content":"            parse(\"event x /at 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":496,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline y /by 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":497,"author":{"gitId":"Korochii"},"content":"            parse(\"schedule\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":498,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-02-07"},{"lineNumber":499,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":500,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"The argument MUST contain a single date.\", e.getMessage());","lastModifiedDate":"2022-02-07"},{"lineNumber":501,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":502,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":503,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":504,"author":{"gitId":"Korochii"},"content":"            TaskList listOfTasks \u003d new TaskList(100);","lastModifiedDate":"2022-02-07"},{"lineNumber":505,"author":{"gitId":"Korochii"},"content":"            Storage.initFileFolder();","lastModifiedDate":"2022-02-07"},{"lineNumber":506,"author":{"gitId":"Korochii"},"content":"            parse(\"event x /at 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":507,"author":{"gitId":"Korochii"},"content":"            parse(\"deadline y /by 2111-11-11\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":508,"author":{"gitId":"Korochii"},"content":"            parse(\"schedule 11-11-2111\", listOfTasks);","lastModifiedDate":"2022-02-07"},{"lineNumber":509,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-02-07"},{"lineNumber":510,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":511,"author":{"gitId":"Korochii"},"content":"            assertEquals(\"Please enter date in this format: \u003cyyyy-MM-dd\u003e\", e.getMessage());","lastModifiedDate":"2022-02-07"},{"lineNumber":512,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":513,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":514,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":515,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-25"},{"lineNumber":516,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Korochii":516}},{"path":"src/test/java/holobot/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.task;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    public void testToString_withDateTime() {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"        Deadline task \u003d new Deadline(\"x\", LocalDate.parse(\"2077-12-12\"), LocalTime.parse(\"12:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"[D][ ] x (by: Dec 12 2077 12:00)\", task.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    public void testToString_withDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"        Deadline task \u003d new Deadline(\"x\", LocalDate.parse(\"2077-12-12\"), null);","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"[D][ ] x (by: Dec 12 2077)\", task.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    public void testToString_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            Deadline task \u003d new Deadline(\"x\", null, null);","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            task.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"            assertEquals(null, e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public void testGetStatusIcon_unmarked() {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        Deadline task \u003d new Deadline(\"x\", LocalDate.parse(\"2077-12-12\"), LocalTime.parse(\"12:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    public void testGetStatusIcon_marked() {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        Deadline task \u003d new Deadline(\"x\", LocalDate.parse(\"2077-12-12\"), LocalTime.parse(\"12:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        task.setStatus(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    public void testGetDescription() {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        Deadline task \u003d new Deadline(\"x\", LocalDate.parse(\"2077-12-12\"), LocalTime.parse(\"12:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"x\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"    public void testSetStatus_true() {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        Deadline task \u003d new Deadline(\"x\", LocalDate.parse(\"2077-12-12\"), LocalTime.parse(\"12:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        task.setStatus(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    public void testSetStatus_false() {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        Deadline task \u003d new Deadline(\"x\", LocalDate.parse(\"2077-12-12\"), LocalTime.parse(\"12:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        task.setStatus(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Korochii":67}},{"path":"src/test/java/holobot/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.task;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"public class EventTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    public void testToString_withDateStartEndTime() {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"        Event task \u003d new Event(\"x\", LocalDate.parse(\"2077-12-12\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"                LocalTime.parse(\"12:00\"), LocalTime.parse(\"13:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"[E][ ] x (at: Dec 12 2077 12:00-13:00)\", task.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    public void testToString_withDateStartTime() {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"        Event task \u003d new Event(\"x\", LocalDate.parse(\"2077-12-12\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"                LocalTime.parse(\"12:00\"), null);","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"[E][ ] x (at: Dec 12 2077 12:00)\", task.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    public void testToString_withDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"        Event task \u003d new Event(\"x\", LocalDate.parse(\"2077-12-12\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"                null, null);","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"[E][ ] x (at: Dec 12 2077)\", task.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public void testToString_exceptionThrown() {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"            Event task \u003d new Event(\"x\", null,","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"                    null, null);","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"            task.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"            fail();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"            assertEquals(null, e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public void testGetStatusIcon_unmarked() {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        Event task \u003d new Event(\"x\", LocalDate.parse(\"2077-12-12\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"                LocalTime.parse(\"12:00\"), LocalTime.parse(\"13:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    public void testGetStatusIcon_marked() {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        Event task \u003d new Event(\"x\", LocalDate.parse(\"2077-12-12\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"                LocalTime.parse(\"12:00\"), LocalTime.parse(\"13:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        task.setStatus(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"    public void testGetDescription() {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        Event task \u003d new Event(\"x\", LocalDate.parse(\"2077-12-12\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"                LocalTime.parse(\"12:00\"), LocalTime.parse(\"13:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"x\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"    public void testSetStatus_true() {","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        Event task \u003d new Event(\"x\", LocalDate.parse(\"2077-12-12\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"                LocalTime.parse(\"12:00\"), LocalTime.parse(\"13:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        task.setStatus(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"    public void testSetStatus_false() {","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        Event task \u003d new Event(\"x\", LocalDate.parse(\"2077-12-12\"),","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"                LocalTime.parse(\"12:00\"), LocalTime.parse(\"13:00\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        task.setStatus(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Korochii":82}},{"path":"src/test/java/holobot/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package holobot.task;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    public void testToString_success() {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"        Todo task \u003d new Todo(\"x\");","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"[T][ ] x\", task.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    public void testGetStatusIcon_unmarked() {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"        Todo task \u003d new Todo(\"x\");","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public void testGetStatusIcon_marked() {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        Todo task \u003d new Todo(\"x\");","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        task.setStatus(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    public void testGetDescription() {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        Todo task \u003d new Todo(\"x\");","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"x\", task.getDescription());","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public void testSetStatus_true() {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        Todo task \u003d new Todo(\"x\");","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"        task.setStatus(true);","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    @Test","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    public void testSetStatus_false() {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        Todo task \u003d new Todo(\"x\");","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        task.setStatus(false);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"Korochii":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"list 2","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"read book","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"mark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"mark x","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"unmark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"unmark x","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"deadline task without /_by","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"deadline incomplete without date /by","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"deadline wrong date format /by 2022/12/12","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"deadline invalid date /by 1111/11/11","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"deadline wrong time format /by 2022-12-12 12:10pm","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"deadline invalid time /by 2022-12-12 9999","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"deadline correct format date only /by 2022-12-12","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"deadline correct format date and time /by 2022-12-12 1200","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"event task without /_at","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"event incomplete without date /at","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"event wrong date format /at 2022/12/12","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"event invalid date /at 1111/11/11","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"event wrong start time format /at 2022-12-12 12:10pm","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"event wrong end time format /at 2022-12-12 1200 12:22pm","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"event invalid start time /at 2022-12-12 9999","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"event invalid end time /at 2022-12-12 1200 1100","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"event correct format date only /at 2022-12-12","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"event correct format date and start time /at 2022-12-12 1200","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"event correct format date and start/end time /at 2022-12-12 1200 1300","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"delete 0","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"delete x","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"delete 1","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":46}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"REM delete data from previous run","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"if exist data rmdir /S /Q data","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"java -classpath ..\\bin holobot.HoloBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Korochii":4,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"# delete data file from previous run","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"then","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    rm -r data","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"fi","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Korochii":8,"-":36}}]
