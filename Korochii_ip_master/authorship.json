[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"    private LocalTime dueTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     * Initializes a new instance of task that has a deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task.","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * @param dueDate Specifies the date that this task has to be done by.","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     * @param dueTime Specifies the time that this task has to be done by.","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    public Deadline(String description, LocalDate dueDate, LocalTime dueTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[D]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        String formattedDate \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        String formattedTime \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        if (dueTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            formattedTime \u003d \" \" + dueTime.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + formattedTime + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":37}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.time.Clock;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import java.util.List;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":" * KoroBot is a chatbot that tracks the list of tasks on hand.","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":" * @version 8.0","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":" * @since 1.0","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    private static final String BOT_NAME \u003d \"KoroBot\";","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    private static final String WELCOME_MESSAGE \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"            + \"     Hi! I\u0027m \" + BOT_NAME + \"~\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"            + \"    ____________________________________________________________\";","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    private static final String EXIT_MESSAGE \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            + \"     Bye! Hope to see you again soon :D\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + \"    ____________________________________________________________\";","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    public static final String DATA_FOLDER_PATH \u003d \"./data\";","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    public static final String DATA_PATH \u003d \"./data/data.txt\";","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    private static TaskList taskListOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     * Greets the user by printing the default welcome message.","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    private static void greet() {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     * Exits the program when user inputs \"bye\".","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     * Default exit message is printed as well.","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    private static void exit() {","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        System.out.println(EXIT_MESSAGE);","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"     * Tests if the input string represents an integer value.","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"     * @param input Target string.","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"     * @return true if the input string represents an integer value, and false otherwise.","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"     * @throws NumberFormatException thrown if the string does not represent an integer value.","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    private static boolean isInteger(String input) throws NumberFormatException  {","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        boolean isInt \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"            isInt \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        return isInt;","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"     * Removes the last character of a string","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"     * @param str Target String","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"     * @return New string after removing the last character of the original string","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"    private static String removeLastChar(String str) {","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"            return \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"            return str.substring(0, str.length() - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"     * Calls different functions according to the user\u0027s input command.","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"     * Any command that is not in the correct form will be throw an \"error\" message.","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"    private static void parse(String userInput) throws DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"        String[] wordArray \u003d userInput.trim().split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"        List\u003cString\u003e wordList \u003d Arrays.asList(wordArray);","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"        String firstWord \u003d wordList.get(0);","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"        case (\"list\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"            if (wordList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"                taskListOfTasks.display();","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"This command should not have any arguments :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"        case (\"todo\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"            if (wordList.size() \u003e 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"                taskListOfTasks.todo(userInput.substring(5));","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The description of a todo cannot be empty :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"        case (\"deadline\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() \u003c 4) {","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"                } else if (!wordList.contains(\"/by\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"Please follow this format: deadline \u003ctask\u003e \" +","lastModifiedDate":"2022-01-22"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"                            \"/by \u003cdate in yyyy-MM-dd\u003e \u003ctime in 24hrs format\u003e \");","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"                    int separator \u003d wordList.indexOf(\"/by\");","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"                    String desc \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"                    String dateTime \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"                    for (int i \u003d 1; i \u003c separator; i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"                        desc +\u003d wordList.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"                        desc +\u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"                    for (int i \u003d separator + 1; i \u003c wordList.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"                        dateTime +\u003d wordList.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"                        dateTime +\u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"                    dateTime \u003d removeLastChar(dateTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"                    String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 2 || dateTimeArray.length \u003c 1) {","lastModifiedDate":"2022-01-22"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"                    // Parse user input into LocalDate/LocalTime if it is in the correct format.","lastModifiedDate":"2022-01-22"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"                    LocalDate newDate \u003d convertDate(dateTimeArray[0]);","lastModifiedDate":"2022-01-22"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"                    LocalTime newTime \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 1) { // Optional time input","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"                       newTime \u003d convertTime(dateTimeArray[1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"                    // Check if date/time specified is in the present.","lastModifiedDate":"2022-01-22"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"                    Clock cl \u003d Clock.systemUTC();","lastModifiedDate":"2022-01-22"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"                    LocalDate nowDate \u003d LocalDate.now(cl);","lastModifiedDate":"2022-01-22"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"                    LocalTime nowTime \u003d LocalTime.now(cl);","lastModifiedDate":"2022-01-22"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"                    if (newDate.isBefore(nowDate)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"                    if (newTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"                        if (newDate.isEqual(nowDate) \u0026 newTime.isBefore(nowTime)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"                            throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.deadline(removeLastChar(desc), newDate, newTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"            case (\"event\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() \u003c 4) {","lastModifiedDate":"2022-01-18"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"                } else if (!wordList.contains(\"/at\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"Please follow this format: event \u003ctask\u003e \" +","lastModifiedDate":"2022-01-22"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"                            \"/at \u003cdate in yyyy-MM-dd\u003e \u003ctime in 24hrs format\u003e \");","lastModifiedDate":"2022-01-22"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"                    int separator \u003d wordList.indexOf(\"/at\");","lastModifiedDate":"2022-01-18"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"                    String desc \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"                    String dateTime \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"                    for (int i \u003d 1; i \u003c separator; i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"                        desc +\u003d wordList.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"                        desc +\u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"                    for (int i \u003d separator + 1; i \u003c wordList.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"                        dateTime +\u003d wordList.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"                        dateTime +\u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"                    dateTime \u003d removeLastChar(dateTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"                    String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 3 || dateTimeArray.length \u003c 1) {","lastModifiedDate":"2022-01-22"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"                    // Parse user input into LocalDate/LocalTime if it is in the correct format.","lastModifiedDate":"2022-01-22"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"                    LocalDate newDate \u003d convertDate(dateTimeArray[0]);","lastModifiedDate":"2022-01-22"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"                    LocalTime newStartTime \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"                    LocalTime newEndTime \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 1) { // Optional start time input","lastModifiedDate":"2022-01-22"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"                        newStartTime \u003d convertTime(dateTimeArray[1]);","lastModifiedDate":"2022-01-22"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 2) { // Optional end time input","lastModifiedDate":"2022-01-22"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"                        newEndTime \u003d convertTime(dateTimeArray[2]);","lastModifiedDate":"2022-01-22"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"                    // Check if date/time specified is in the present.","lastModifiedDate":"2022-01-22"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"                    Clock cl \u003d Clock.systemUTC();","lastModifiedDate":"2022-01-22"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"                    LocalDate nowDate \u003d LocalDate.now(cl);","lastModifiedDate":"2022-01-22"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"                    LocalTime nowTime \u003d LocalTime.now(cl);","lastModifiedDate":"2022-01-22"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"                    if (newDate.isBefore(nowDate)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"                    if (newStartTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"                        if (newDate.isEqual(nowDate) \u0026 newStartTime.isBefore(nowTime)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"                            throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"                        } else if (newEndTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"                            if (newDate.isEqual(nowDate) \u0026 newEndTime.isBefore(nowTime)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"                                throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"                            } else if (!newEndTime.isAfter(newStartTime)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"                                throw new InvalidDateTime(\"The end time must be after the start time\");","lastModifiedDate":"2022-01-22"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"                            }","lastModifiedDate":"2022-01-22"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.event(removeLastChar(desc), newDate, newStartTime, newEndTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"        case(\"mark\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"            if (wordList.size() !\u003d 2) {","lastModifiedDate":"2022-01-18"},{"lineNumber":210,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"This command should have exactly 1 argument.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":211,"author":{"gitId":"Korochii"},"content":"            } else if (!isInteger(wordList.get(1))) {","lastModifiedDate":"2022-01-18"},{"lineNumber":212,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":213,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":214,"author":{"gitId":"Korochii"},"content":"                int currTaskId \u003d Integer.parseInt(wordList.get(1));","lastModifiedDate":"2022-01-18"},{"lineNumber":215,"author":{"gitId":"Korochii"},"content":"                if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d taskListOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":216,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.mark(currTaskId); // Valid taskID, proceed to mark task","lastModifiedDate":"2022-01-18"},{"lineNumber":217,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":218,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidIndex(\"The specified task ID is out of range. \" +","lastModifiedDate":"2022-01-18"},{"lineNumber":219,"author":{"gitId":"Korochii"},"content":"                            \"Please enter a number from 0 to \" + taskListOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-01-18"},{"lineNumber":220,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":221,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":222,"author":{"gitId":"Korochii"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":223,"author":{"gitId":"Korochii"},"content":"        case(\"unmark\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":224,"author":{"gitId":"Korochii"},"content":"            if (wordList.size() !\u003d 2) {","lastModifiedDate":"2022-01-18"},{"lineNumber":225,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"This command should have exactly 1 argument\");","lastModifiedDate":"2022-01-18"},{"lineNumber":226,"author":{"gitId":"Korochii"},"content":"            } else if (!isInteger(wordList.get(1))) {","lastModifiedDate":"2022-01-18"},{"lineNumber":227,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":228,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":229,"author":{"gitId":"Korochii"},"content":"                int currTaskId \u003d Integer.parseInt(wordList.get(1));","lastModifiedDate":"2022-01-18"},{"lineNumber":230,"author":{"gitId":"Korochii"},"content":"                if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d taskListOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":231,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.unmark(currTaskId); // Valid taskID, proceed to unmark task","lastModifiedDate":"2022-01-18"},{"lineNumber":232,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":233,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidIndex(\"The specified task ID is out of range. \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":234,"author":{"gitId":"Korochii"},"content":"                            \"Please enter a number from 0 to \" + taskListOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-01-19"},{"lineNumber":235,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":236,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":237,"author":{"gitId":"Korochii"},"content":"            break;","lastModifiedDate":"2022-01-19"},{"lineNumber":238,"author":{"gitId":"Korochii"},"content":"        case(\"delete\"):","lastModifiedDate":"2022-01-19"},{"lineNumber":239,"author":{"gitId":"Korochii"},"content":"            if (wordList.size() !\u003d 2) {","lastModifiedDate":"2022-01-19"},{"lineNumber":240,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"This command should have exactly 1 argument\");","lastModifiedDate":"2022-01-19"},{"lineNumber":241,"author":{"gitId":"Korochii"},"content":"            } else if (!isInteger(wordList.get(1))) {","lastModifiedDate":"2022-01-19"},{"lineNumber":242,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":243,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":244,"author":{"gitId":"Korochii"},"content":"                int currTaskId \u003d Integer.parseInt(wordList.get(1));","lastModifiedDate":"2022-01-19"},{"lineNumber":245,"author":{"gitId":"Korochii"},"content":"                if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d taskListOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":246,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.delete(currTaskId); // Valid taskID, proceed to unmark task","lastModifiedDate":"2022-01-19"},{"lineNumber":247,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":248,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidIndex(\"The specified task ID is out of range. \" +","lastModifiedDate":"2022-01-18"},{"lineNumber":249,"author":{"gitId":"Korochii"},"content":"                            \"Please enter a number from 0 to \" + taskListOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-01-18"},{"lineNumber":250,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":251,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":252,"author":{"gitId":"Korochii"},"content":"            break;","lastModifiedDate":"2022-01-18"},{"lineNumber":253,"author":{"gitId":"Korochii"},"content":"        default:","lastModifiedDate":"2022-01-18"},{"lineNumber":254,"author":{"gitId":"Korochii"},"content":"            throw new InvalidCommand(\"I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":255,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":256,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":257,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":258,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":259,"author":{"gitId":"Korochii"},"content":"     * Creates new data file/folder if it does not exists.","lastModifiedDate":"2022-01-22"},{"lineNumber":260,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":261,"author":{"gitId":"Korochii"},"content":"     * @throws IOException Failed to create data file/folder in the correct location","lastModifiedDate":"2022-01-22"},{"lineNumber":262,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":263,"author":{"gitId":"Korochii"},"content":"    private static void initTaskList() throws IOException {","lastModifiedDate":"2022-01-22"},{"lineNumber":264,"author":{"gitId":"Korochii"},"content":"        // Check if folder exist","lastModifiedDate":"2022-01-22"},{"lineNumber":265,"author":{"gitId":"Korochii"},"content":"        File dataFolder \u003d new File(DATA_FOLDER_PATH);","lastModifiedDate":"2022-01-22"},{"lineNumber":266,"author":{"gitId":"Korochii"},"content":"        // Create new folder if it does not exist","lastModifiedDate":"2022-01-22"},{"lineNumber":267,"author":{"gitId":"Korochii"},"content":"        if (!dataFolder.isDirectory()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":268,"author":{"gitId":"Korochii"},"content":"            System.out.println(\"     Data folder not found... Creating folder now...\");","lastModifiedDate":"2022-01-22"},{"lineNumber":269,"author":{"gitId":"Korochii"},"content":"            boolean isSuccess \u003d dataFolder.mkdirs();","lastModifiedDate":"2022-01-22"},{"lineNumber":270,"author":{"gitId":"Korochii"},"content":"            if (isSuccess) {","lastModifiedDate":"2022-01-22"},{"lineNumber":271,"author":{"gitId":"Korochii"},"content":"                System.out.println(\"     Success in creating folder!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":272,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":273,"author":{"gitId":"Korochii"},"content":"                throw new IOException(\"     Failed to create folder.\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":274,"author":{"gitId":"Korochii"},"content":"                        + \"     Please create a folder named \u0027data\u0027 in src manually\"","lastModifiedDate":"2022-01-22"},{"lineNumber":275,"author":{"gitId":"Korochii"},"content":"                        + \"     , before running this program!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":276,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":277,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":278,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":279,"author":{"gitId":"Korochii"},"content":"        // Check if file exists","lastModifiedDate":"2022-01-22"},{"lineNumber":280,"author":{"gitId":"Korochii"},"content":"        File dataFile \u003d new File(DATA_PATH);","lastModifiedDate":"2022-01-22"},{"lineNumber":281,"author":{"gitId":"Korochii"},"content":"        // Create new data.txt file if it does not exist","lastModifiedDate":"2022-01-22"},{"lineNumber":282,"author":{"gitId":"Korochii"},"content":"        if (!dataFile.isFile()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":283,"author":{"gitId":"Korochii"},"content":"            System.out.println(\"     Data file not found... Creating data file now...\");","lastModifiedDate":"2022-01-22"},{"lineNumber":284,"author":{"gitId":"Korochii"},"content":"            boolean isSuccess \u003d dataFile.createNewFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":285,"author":{"gitId":"Korochii"},"content":"            if (isSuccess) {","lastModifiedDate":"2022-01-22"},{"lineNumber":286,"author":{"gitId":"Korochii"},"content":"                System.out.println(\"     Success in creating data file!\" + \"\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":287,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":288,"author":{"gitId":"Korochii"},"content":"                throw new IOException(\"     Failed to create datafile.\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":289,"author":{"gitId":"Korochii"},"content":"                        + \"     Please create a data.txt in src/data manually\"","lastModifiedDate":"2022-01-22"},{"lineNumber":290,"author":{"gitId":"Korochii"},"content":"                        + \"     , before running this program!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":291,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":292,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":293,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":294,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":295,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":296,"author":{"gitId":"Korochii"},"content":"     * Prints each line in the data file.","lastModifiedDate":"2022-01-22"},{"lineNumber":297,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":298,"author":{"gitId":"Korochii"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2022-01-22"},{"lineNumber":299,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":300,"author":{"gitId":"Korochii"},"content":"    private static void readData() throws FileNotFoundException {","lastModifiedDate":"2022-01-22"},{"lineNumber":301,"author":{"gitId":"Korochii"},"content":"        File dataFile \u003d new File(DATA_PATH);","lastModifiedDate":"2022-01-22"},{"lineNumber":302,"author":{"gitId":"Korochii"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":303,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"     Here are the records in the hard disk:\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":304,"author":{"gitId":"Korochii"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":305,"author":{"gitId":"Korochii"},"content":"            System.out.println(\"     \" + s.nextLine());","lastModifiedDate":"2022-01-22"},{"lineNumber":306,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":307,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":308,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":309,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":310,"author":{"gitId":"Korochii"},"content":"     * Loads data from the data.txt file in the TaskList.","lastModifiedDate":"2022-01-22"},{"lineNumber":311,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":312,"author":{"gitId":"Korochii"},"content":"     * @param f File that contains the data.","lastModifiedDate":"2022-01-22"},{"lineNumber":313,"author":{"gitId":"Korochii"},"content":"     * @param listOfTasks Target TaskList to store the data.","lastModifiedDate":"2022-01-22"},{"lineNumber":314,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":315,"author":{"gitId":"Korochii"},"content":"    private static void loadData(File f, TaskList listOfTasks) {","lastModifiedDate":"2022-01-22"},{"lineNumber":316,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2022-01-23"},{"lineNumber":317,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":318,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":319,"author":{"gitId":"Korochii"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-01-22"},{"lineNumber":320,"author":{"gitId":"Korochii"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":321,"author":{"gitId":"Korochii"},"content":"                String currCommand \u003d sc.nextLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":322,"author":{"gitId":"Korochii"},"content":"                if (currCommand.startsWith(\"[T]\") \u0026 currCommand.length() \u003e 7) { // Valid To-do task","lastModifiedDate":"2022-01-22"},{"lineNumber":323,"author":{"gitId":"Korochii"},"content":"                    boolean isMarked \u003d currCommand.startsWith(\"[X]\", 3);","lastModifiedDate":"2022-01-22"},{"lineNumber":324,"author":{"gitId":"Korochii"},"content":"                    String currDesc \u003d currCommand.substring(7);","lastModifiedDate":"2022-01-22"},{"lineNumber":325,"author":{"gitId":"Korochii"},"content":"                    Task currTask \u003d new Todo(currDesc);","lastModifiedDate":"2022-01-22"},{"lineNumber":326,"author":{"gitId":"Korochii"},"content":"                    currTask.setStatus(isMarked);","lastModifiedDate":"2022-01-22"},{"lineNumber":327,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().add(currTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":328,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.incrementTasks();","lastModifiedDate":"2022-01-22"},{"lineNumber":329,"author":{"gitId":"Korochii"},"content":"                } else if (currCommand.startsWith(\"[D]\")","lastModifiedDate":"2022-01-22"},{"lineNumber":330,"author":{"gitId":"Korochii"},"content":"                        \u0026 currCommand.contains(\"(by:\")","lastModifiedDate":"2022-01-22"},{"lineNumber":331,"author":{"gitId":"Korochii"},"content":"                        \u0026 currCommand.length() \u003e\u003d 16) { // Valid Deadline task","lastModifiedDate":"2022-01-22"},{"lineNumber":332,"author":{"gitId":"Korochii"},"content":"                    boolean isMarked \u003d currCommand.startsWith(\"[X]\", 3);","lastModifiedDate":"2022-01-22"},{"lineNumber":333,"author":{"gitId":"Korochii"},"content":"                    int indexBy \u003d currCommand.indexOf(\"(by:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":334,"author":{"gitId":"Korochii"},"content":"                    String currDesc \u003d currCommand.substring(7, indexBy - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":335,"author":{"gitId":"Korochii"},"content":"                    String currBy \u003d currCommand.substring(indexBy + 5, currCommand.length() - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":336,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":337,"author":{"gitId":"Korochii"},"content":"                    String[] dateTimeArray \u003d currBy.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":338,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":339,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 4 || dateTimeArray.length \u003c 3) {","lastModifiedDate":"2022-01-23"},{"lineNumber":340,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":341,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":342,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":343,"author":{"gitId":"Korochii"},"content":"                    // Parse user input into LocalDate/LocalTime if it is in the correct format.","lastModifiedDate":"2022-01-22"},{"lineNumber":344,"author":{"gitId":"Korochii"},"content":"                    String currDate \u003d dateTimeArray[0] + \" \" + dateTimeArray[1] + \" \" + dateTimeArray[2];","lastModifiedDate":"2022-01-23"},{"lineNumber":345,"author":{"gitId":"Korochii"},"content":"                    LocalDate newDate \u003d LocalDate.parse(currDate, dateFormatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":346,"author":{"gitId":"Korochii"},"content":"                    LocalTime newTime \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":347,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 3) { // Optional time input","lastModifiedDate":"2022-01-23"},{"lineNumber":348,"author":{"gitId":"Korochii"},"content":"                        newTime \u003d LocalTime.parse(dateTimeArray[3], timeFormatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":349,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":350,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":351,"author":{"gitId":"Korochii"},"content":"                    // Check if date/time specified is in the present.","lastModifiedDate":"2022-01-22"},{"lineNumber":352,"author":{"gitId":"Korochii"},"content":"                    Clock cl \u003d Clock.systemUTC();","lastModifiedDate":"2022-01-22"},{"lineNumber":353,"author":{"gitId":"Korochii"},"content":"                    LocalDate nowDate \u003d LocalDate.now(cl);","lastModifiedDate":"2022-01-22"},{"lineNumber":354,"author":{"gitId":"Korochii"},"content":"                    LocalTime nowTime \u003d LocalTime.now(cl);","lastModifiedDate":"2022-01-22"},{"lineNumber":355,"author":{"gitId":"Korochii"},"content":"                    if (newDate.isBefore(nowDate)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":356,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":357,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":358,"author":{"gitId":"Korochii"},"content":"                    if (newTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":359,"author":{"gitId":"Korochii"},"content":"                        if (newDate.isEqual(nowDate) \u0026 newTime.isBefore(nowTime)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":360,"author":{"gitId":"Korochii"},"content":"                            throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":361,"author":{"gitId":"Korochii"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":362,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":363,"author":{"gitId":"Korochii"},"content":"                    Task currTask \u003d new Deadline(currDesc, newDate, newTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":364,"author":{"gitId":"Korochii"},"content":"                    currTask.setStatus(isMarked);","lastModifiedDate":"2022-01-22"},{"lineNumber":365,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().add(currTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":366,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.incrementTasks();","lastModifiedDate":"2022-01-22"},{"lineNumber":367,"author":{"gitId":"Korochii"},"content":"                } else if (currCommand.startsWith(\"[E]\")","lastModifiedDate":"2022-01-22"},{"lineNumber":368,"author":{"gitId":"Korochii"},"content":"                        \u0026 currCommand.contains(\"(at:\")","lastModifiedDate":"2022-01-22"},{"lineNumber":369,"author":{"gitId":"Korochii"},"content":"                        \u0026 currCommand.length() \u003e\u003d 16) { // Valid Event task","lastModifiedDate":"2022-01-22"},{"lineNumber":370,"author":{"gitId":"Korochii"},"content":"                    boolean isMarked \u003d currCommand.startsWith(\"[X]\", 3);","lastModifiedDate":"2022-01-22"},{"lineNumber":371,"author":{"gitId":"Korochii"},"content":"                    int indexAt \u003d currCommand.indexOf(\"(at:\");","lastModifiedDate":"2022-01-22"},{"lineNumber":372,"author":{"gitId":"Korochii"},"content":"                    String currDesc \u003d currCommand.substring(7, indexAt - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":373,"author":{"gitId":"Korochii"},"content":"                    String currAt \u003d currCommand.substring(indexAt + 5, currCommand.length() - 1);","lastModifiedDate":"2022-01-22"},{"lineNumber":374,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":375,"author":{"gitId":"Korochii"},"content":"                    String[] dateTimeArray \u003d currAt.split(\" \");","lastModifiedDate":"2022-01-22"},{"lineNumber":376,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":377,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 4 || dateTimeArray.length \u003c 3) {","lastModifiedDate":"2022-01-23"},{"lineNumber":378,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidCommand(\"Incorrect number of arguments supplied :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":379,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":380,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":381,"author":{"gitId":"Korochii"},"content":"                    // Parse user input into LocalDate/LocalTime if it is in the correct format.","lastModifiedDate":"2022-01-22"},{"lineNumber":382,"author":{"gitId":"Korochii"},"content":"                    String currDate \u003d dateTimeArray[0] + \" \" + dateTimeArray[1] + \" \" + dateTimeArray[2];","lastModifiedDate":"2022-01-23"},{"lineNumber":383,"author":{"gitId":"Korochii"},"content":"                    LocalDate newDate \u003d LocalDate.parse(currDate, dateFormatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":384,"author":{"gitId":"Korochii"},"content":"                    LocalTime newStartTime \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":385,"author":{"gitId":"Korochii"},"content":"                    LocalTime newEndTime \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":386,"author":{"gitId":"Korochii"},"content":"                    if (dateTimeArray.length \u003e 3) { // Optional start time input","lastModifiedDate":"2022-01-23"},{"lineNumber":387,"author":{"gitId":"Korochii"},"content":"                        String[] startEndTime \u003d dateTimeArray[3].split(\"-\");","lastModifiedDate":"2022-01-23"},{"lineNumber":388,"author":{"gitId":"Korochii"},"content":"                        newStartTime \u003d LocalTime.parse(startEndTime[0], timeFormatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":389,"author":{"gitId":"Korochii"},"content":"                        if (startEndTime.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":390,"author":{"gitId":"Korochii"},"content":"                            newEndTime \u003d LocalTime.parse(startEndTime[1], timeFormatter);","lastModifiedDate":"2022-01-23"},{"lineNumber":391,"author":{"gitId":"Korochii"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":392,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":393,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":394,"author":{"gitId":"Korochii"},"content":"                    // Check if date/time specified is in the present.","lastModifiedDate":"2022-01-22"},{"lineNumber":395,"author":{"gitId":"Korochii"},"content":"                    Clock cl \u003d Clock.systemUTC();","lastModifiedDate":"2022-01-22"},{"lineNumber":396,"author":{"gitId":"Korochii"},"content":"                    LocalDate nowDate \u003d LocalDate.now(cl);","lastModifiedDate":"2022-01-22"},{"lineNumber":397,"author":{"gitId":"Korochii"},"content":"                    LocalTime nowTime \u003d LocalTime.now(cl);","lastModifiedDate":"2022-01-22"},{"lineNumber":398,"author":{"gitId":"Korochii"},"content":"                    if (newDate.isBefore(nowDate)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":399,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":400,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":401,"author":{"gitId":"Korochii"},"content":"                    if (newStartTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":402,"author":{"gitId":"Korochii"},"content":"                        if (newDate.isEqual(nowDate) \u0026 newStartTime.isBefore(nowTime)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":403,"author":{"gitId":"Korochii"},"content":"                            throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":404,"author":{"gitId":"Korochii"},"content":"                        } else if (newEndTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":405,"author":{"gitId":"Korochii"},"content":"                            if (newDate.isEqual(nowDate) \u0026 newEndTime.isBefore(nowTime)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":406,"author":{"gitId":"Korochii"},"content":"                                throw new InvalidDateTime(\"You cannot travel back in time!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":407,"author":{"gitId":"Korochii"},"content":"                            } else if (!newEndTime.isAfter(newStartTime)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":408,"author":{"gitId":"Korochii"},"content":"                                throw new InvalidDateTime(\"The end time must be after the start time\");","lastModifiedDate":"2022-01-22"},{"lineNumber":409,"author":{"gitId":"Korochii"},"content":"                            }","lastModifiedDate":"2022-01-22"},{"lineNumber":410,"author":{"gitId":"Korochii"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":411,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":412,"author":{"gitId":"Korochii"},"content":"                    Task currTask \u003d new Event(currDesc, newDate, newStartTime, newEndTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":413,"author":{"gitId":"Korochii"},"content":"                    currTask.setStatus(isMarked);","lastModifiedDate":"2022-01-22"},{"lineNumber":414,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.getListOfTasks().add(currTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":415,"author":{"gitId":"Korochii"},"content":"                    listOfTasks.incrementTasks();","lastModifiedDate":"2022-01-22"},{"lineNumber":416,"author":{"gitId":"Korochii"},"content":"                } // else invalid command \u003d\u003e do nothing","lastModifiedDate":"2022-01-22"},{"lineNumber":417,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":418,"author":{"gitId":"Korochii"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":419,"author":{"gitId":"Korochii"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":420,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":421,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":422,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":423,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":424,"author":{"gitId":"Korochii"},"content":"     * Checks if the input date is in the correct format.","lastModifiedDate":"2022-01-22"},{"lineNumber":425,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":426,"author":{"gitId":"Korochii"},"content":"     * @param date Date to be tested.","lastModifiedDate":"2022-01-22"},{"lineNumber":427,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":428,"author":{"gitId":"Korochii"},"content":"    private static LocalDate convertDate(String date) {","lastModifiedDate":"2022-01-22"},{"lineNumber":429,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-22"},{"lineNumber":430,"author":{"gitId":"Korochii"},"content":"        LocalDate convertedDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":431,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":432,"author":{"gitId":"Korochii"},"content":"            convertedDate \u003d LocalDate.parse(date, format);","lastModifiedDate":"2022-01-22"},{"lineNumber":433,"author":{"gitId":"Korochii"},"content":"        } catch (DateTimeParseException | NullPointerException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":434,"author":{"gitId":"Korochii"},"content":"            throw new InvalidDateTime(\"Please enter date in this format: \u003cyyyy-MM-dd\u003e\");","lastModifiedDate":"2022-01-22"},{"lineNumber":435,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":436,"author":{"gitId":"Korochii"},"content":"        return convertedDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":437,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":438,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":439,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":440,"author":{"gitId":"Korochii"},"content":"     * Checks if the input date is in the correct format.","lastModifiedDate":"2022-01-22"},{"lineNumber":441,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":442,"author":{"gitId":"Korochii"},"content":"     * @param time Time to be tested.","lastModifiedDate":"2022-01-22"},{"lineNumber":443,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":444,"author":{"gitId":"Korochii"},"content":"    private static LocalTime convertTime(String time) {","lastModifiedDate":"2022-01-22"},{"lineNumber":445,"author":{"gitId":"Korochii"},"content":"        if (time \u003d\u003d null) { // Time is optional","lastModifiedDate":"2022-01-22"},{"lineNumber":446,"author":{"gitId":"Korochii"},"content":"            return null;","lastModifiedDate":"2022-01-22"},{"lineNumber":447,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":448,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-01-22"},{"lineNumber":449,"author":{"gitId":"Korochii"},"content":"        LocalTime convertedTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":450,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":451,"author":{"gitId":"Korochii"},"content":"            convertedTime \u003d LocalTime.parse(time, format);","lastModifiedDate":"2022-01-22"},{"lineNumber":452,"author":{"gitId":"Korochii"},"content":"        } catch (DateTimeParseException | NullPointerException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":453,"author":{"gitId":"Korochii"},"content":"            throw new InvalidDateTime(\"Please enter time in this 24hrs-format: \u003cHHmm\u003e\");","lastModifiedDate":"2022-01-22"},{"lineNumber":454,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":455,"author":{"gitId":"Korochii"},"content":"        return convertedTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":456,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-17"},{"lineNumber":458,"author":{"gitId":"Korochii"},"content":"        greet();","lastModifiedDate":"2022-01-17"},{"lineNumber":459,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":460,"author":{"gitId":"Korochii"},"content":"            initTaskList();","lastModifiedDate":"2022-01-22"},{"lineNumber":461,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":462,"author":{"gitId":"Korochii"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-22"},{"lineNumber":463,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":464,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":465,"author":{"gitId":"Korochii"},"content":"            readData();","lastModifiedDate":"2022-01-22"},{"lineNumber":466,"author":{"gitId":"Korochii"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":467,"author":{"gitId":"Korochii"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":468,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":469,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":470,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":471,"author":{"gitId":"Korochii"},"content":"                + \"     What can I do for you?\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":472,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":473,"author":{"gitId":"Korochii"},"content":"        File dataFile \u003d new File(DATA_PATH);","lastModifiedDate":"2022-01-22"},{"lineNumber":474,"author":{"gitId":"Korochii"},"content":"        taskListOfTasks \u003d new TaskList(100); // Assume there will be no more than 100 tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":475,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":476,"author":{"gitId":"Korochii"},"content":"        if (dataFile.length() !\u003d 0) {","lastModifiedDate":"2022-01-22"},{"lineNumber":477,"author":{"gitId":"Korochii"},"content":"            loadData(dataFile, taskListOfTasks);","lastModifiedDate":"2022-01-22"},{"lineNumber":478,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":479,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":480,"author":{"gitId":"Korochii"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":481,"author":{"gitId":"Korochii"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":482,"author":{"gitId":"Korochii"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":483,"author":{"gitId":"Korochii"},"content":"            try {","lastModifiedDate":"2022-01-18"},{"lineNumber":484,"author":{"gitId":"Korochii"},"content":"                parse(userInput);","lastModifiedDate":"2022-01-18"},{"lineNumber":485,"author":{"gitId":"Korochii"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":486,"author":{"gitId":"Korochii"},"content":"                System.out.println(e);","lastModifiedDate":"2022-01-18"},{"lineNumber":487,"author":{"gitId":"Korochii"},"content":"            } finally {","lastModifiedDate":"2022-01-18"},{"lineNumber":488,"author":{"gitId":"Korochii"},"content":"                userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":489,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":490,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":491,"author":{"gitId":"Korochii"},"content":"        sc.close();","lastModifiedDate":"2022-01-17"},{"lineNumber":492,"author":{"gitId":"Korochii"},"content":"        exit();","lastModifiedDate":"2022-01-17"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":494,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Korochii":490,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"     * Initialises a new instance of DukeException.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"class InvalidCommand extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Initialises a new instance of InvalidCommand.","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Creates an error message to be displayed to the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * @return String containing the output message.","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        return \"OOPS!!! \" + this.errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"class InvalidIndex extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     * Initialises a new instance of InvalidIndex.","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    public InvalidIndex(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"     * Creates an error message to be displayed to the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"     * @return String containing the output message.","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        return \"OOPS!!! \" + this.errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"class InvalidDateTime extends DukeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"     * Initialises a new instance of InvalidDateTime.","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"    public InvalidDateTime(String errorMessage) {","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"     * Creates an error message to be displayed to the user.","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"     * @return String containing the output message.","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        return \"OOPS!!! \" + this.errorMessage;","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"Korochii":82}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"    private LocalTime eventStartTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"    private LocalTime eventEndTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     * Initializes a new event task.","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"     * This task has a specific date as well as a start and end time.","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task.","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     * @param eventDate Date of event.","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"     * @param eventStartTime Start time of event.","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * @param eventEndTime End time of event.","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    public Event(String description, LocalDate eventDate, LocalTime eventStartTime, LocalTime eventEndTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[E]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        String formattedDate \u003d this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        String formattedStartTime \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        String formattedEndTime \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"        if (eventStartTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"            formattedStartTime \u003d \" \" + eventStartTime.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        if (eventEndTime !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"            formattedEndTime \u003d \"-\" + eventEndTime.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"                + formattedDate + formattedStartTime + formattedEndTime + \")\";","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":46}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"     * Initializes a new instance of task, according to the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Retrieves the status icon corresponding to the current status (isDone).","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @return \"X\" if task is already done, \" \" if task is not done.","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     * Retrieves the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     * @return A string that represents the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        return this.description;","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     * Sets the current status for the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"     * @param isDone True/False depending if the task is already done.","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     * Prepends a status checkbox that shows if the task is done.","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"     * @return String containing a status icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"public class TaskList {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    private int numberOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"     * Initializes a new instance of list of tasks, according to the size specified.","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * @param size Size of list of tasks.","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    public TaskList(int size) {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e(size);","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"     * Retrieves the current amount of tasks in the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     * @return the total number of tasks in the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"        return this.numberOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * Retrieves the array list of task.","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     * @return The list of tasks.","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"        return this.listOfTasks;","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    public void incrementTasks(){","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * Iterates through the list and prints out each task that is on the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    public void display() {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"                + \"     Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        for (int i \u003d 1; i \u003c\u003d this.numberOfTasks; i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"            Task currTask \u003d this.listOfTasks.get(i - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            String output \u003d \"     \" + i + \".\" + currTask + \"\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"            System.out.println(output);","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"     * Marks task by changing its status to \"done\"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be marked.","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"    public void mark(int taskId) {","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d this.listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(true);","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"                + \"     Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currTask + \"\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"     * Unmarks task by changing its status to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be unmarked.","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"    public void unmark(int taskId) {","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d this.listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(false);","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"                + \"     OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currTask + \"\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"     * Adds the to-do task into the list","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"    public void todo(String userInput) {","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Todo(userInput);","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks.add(currentTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"        String output \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"                + \"     Now you have \" + this.numberOfTasks + \" task/s in the list.\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        System.out.println(output);","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"     * Adds the task (which has a deadline) into the list","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"     * @param dueDate Specifies the date that this task has to be done by.","lastModifiedDate":"2022-01-22"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"     * @param dueTime Specifies the time that this task has to be done by.","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"    public void deadline(String userInput, LocalDate dueDate, LocalTime dueTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Deadline(userInput, dueDate, dueTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks.add(currentTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"        String output \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"                + \"     Now you have \" + this.numberOfTasks + \" task/s in the list.\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"        System.out.println(output);","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"     * Adds the event task into the list","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"    public void event(String userInput, LocalDate eventDate,","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"                      LocalTime eventStartTime, LocalTime eventEndTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2022-01-18"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Event(userInput, eventDate, eventStartTime, eventEndTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks.add(currentTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"        String output \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"                + \"     Now you have \" + this.numberOfTasks + \" task/s in the list.\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"        System.out.println(output);","lastModifiedDate":"2022-01-18"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"     * Deletes task that corresponds to the specified task ID.","lastModifiedDate":"2022-01-19"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be deleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"    public void delete(int taskId) {","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d this.listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks.remove(taskId - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks--;","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"        writeToFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"                + \"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currTask + \"\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-19"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"     * Converts the TaskList into a single string file, to be stored in data.txt on the hard disk.","lastModifiedDate":"2022-01-22"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"     * @return All tasks in the form of a String.","lastModifiedDate":"2022-01-22"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"    private String parseList() {","lastModifiedDate":"2022-01-22"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2022-01-22"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"        for (Task listOfTask : listOfTasks) {","lastModifiedDate":"2022-01-22"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"            String currTask \u003d listOfTask.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"            res.append(currTask).append(\"\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"        return res.toString();","lastModifiedDate":"2022-01-22"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"     * Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-01-22"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"    private void writeToFile() {","lastModifiedDate":"2022-01-22"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"        String filePath \u003d Duke.DATA_PATH;","lastModifiedDate":"2022-01-22"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"        FileWriter fw;","lastModifiedDate":"2022-01-22"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"            fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-22"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"            fw.write(parseList());","lastModifiedDate":"2022-01-22"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"            fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"            System.out.println(\"An error has occurred when writing to data file!\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"                    + \"Please try again later.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-22"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":196}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"     * Initializes a new instance of a task that is to be done, according to the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"     * By default, this task is set to \"not done\" and does not have any date/time attached to it.","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[T]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"list 2","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"read book","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"mark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"mark x","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"unmark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"unmark x","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"deadline task without /_by","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"deadline incomplete without date /by","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"deadline wrong date format /by 2022/12/12","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"deadline invalid date /by 1111/11/11","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"deadline wrong time format /by 2022-12-12 12:10pm","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"deadline invalid time /by 2022-12-12 9999","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"deadline correct format date only /by 2022-12-12","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"deadline correct format date and time /by 2022-12-12 1200","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"event task without /_at","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"event incomplete without date /at","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"event wrong date format /at 2022/12/12","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"event invalid date /at 1111/11/11","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"event wrong start time format /at 2022-12-12 12:10pm","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"event wrong end time format /at 2022-12-12 1200 12:22pm","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"event invalid start time /at 2022-12-12 9999","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"event invalid end time /at 2022-12-12 1200 1100","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"event correct format date only /at 2022-12-12","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"event correct format date and start time /at 2022-12-12 1200","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"event correct format date and start/end time /at 2022-12-12 1200 1300","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"delete 0","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"delete x","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"delete 1","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":46}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"REM delete data from previous run","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"if exist data rmdir /S /Q data","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Korochii":3,"-":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"# delete data file from previous run","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"then","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    rm -r data","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"fi","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Korochii":6,"-":38}}]
