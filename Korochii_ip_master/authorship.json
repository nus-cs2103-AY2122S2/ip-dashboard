[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"    protected String by;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"     * Initializes a new instance of task that has a deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task.","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"     * @param by Specifies the date/time that this task has to be done by.","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[D]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"import java.util.List;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * KoroBot is a chatbot that tracks the list of tasks on hand.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * @author Terng Yan Long","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * @version 4.0","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" * @since 1.0","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    private static final String BOT_NAME \u003d \"KoroBot\";","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    private static final String WELCOME_MESSAGE \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"            + \"     Hi! I\u0027m \" + BOT_NAME + \"\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"            + \"     What can I do for you?\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"            + \"    ____________________________________________________________\";","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    private static final String EXIT_MESSAGE \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"            + \"     Bye! Hope to see you again soon :D\\n\"","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"            + \"    ____________________________________________________________\";","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    private static TaskList taskListOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     * Greets the user by printing the default welcome message.","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    private static void greet() {","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     * Exits the program when user inputs \"bye\".","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * Default exit message is printed as well.","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    private static void exit() {","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        System.out.println(EXIT_MESSAGE);","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        System.exit(0);","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     * Tests if the input string represents an integer value.","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     * @param input Target string.","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     * @return true if the input string represents an integer value, and false otherwise.","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * @throws NumberFormatException thrown if the string does not represent an integer value.","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    private static boolean isInteger(String input) throws NumberFormatException  {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        boolean isInt \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            isInt \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        return isInt;","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"     * Removes the last character of a string","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"     * @param str Target String","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"     * @return New string after removing the last character of the original string","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"    public static String removeLastChar(String str) {","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            return \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"            return str.substring(0, str.length() - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"     * Calls different functions according to the user\u0027s input command.","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"     * Any command that is not in the correct form will be throw an \"error\" message.","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"    private static void parse(String userInput) throws DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"        String[] wordArray \u003d userInput.trim().split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        List\u003cString\u003e wordList \u003d Arrays.asList(wordArray);","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"        String firstWord \u003d wordList.get(0);","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"            case (\"list\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.display();","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"This command should not have any arguments :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"            case (\"todo\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() \u003e 1) {","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.todo(userInput.substring(5));","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"The description of a todo cannot be empty :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"            case (\"deadline\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() \u003c 4) {","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"Insufficient arguments supplied :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"                } else if (!wordList.contains(\"/by\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"Formatting error detected. \" +","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"                            \"Please follow this format: deadline \u003cdescription\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"                    int separator \u003d wordList.indexOf(\"/by\");","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"                    String desc \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"                    String dateTime \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"                    for (int i \u003d 1; i \u003c separator; i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"                        desc +\u003d wordList.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"                        desc +\u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"                    for (int i \u003d separator + 1; i \u003c wordList.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"                        dateTime +\u003d wordList.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"                        dateTime +\u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.deadline(removeLastChar(desc), removeLastChar(dateTime));","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"            case (\"event\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() \u003c 4) {","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"Insufficient arguments supplied :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"                } else if (!wordList.contains(\"/at\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"Formatting error detected. \" +","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"                            \"Please follow this format: event \u003cdescription\u003e /at \u003cdate/time\u003e\");","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"                    int separator \u003d wordList.indexOf(\"/at\");","lastModifiedDate":"2022-01-18"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"                    String desc \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"                    String dateTime \u003d \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"                    for (int i \u003d 1; i \u003c separator; i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"                        desc +\u003d wordList.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"                        desc +\u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"                    for (int i \u003d separator + 1; i \u003c wordList.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"                        dateTime +\u003d wordList.get(i);","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"                        dateTime +\u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"                    taskListOfTasks.event(removeLastChar(desc), removeLastChar(dateTime));","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"            case(\"mark\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() !\u003d 2) {","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"This command should have exactly 1 argument.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"                } else if (!isInteger(wordList.get(1))) {","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"                    int currTaskId \u003d Integer.parseInt(wordList.get(1));","lastModifiedDate":"2022-01-18"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"                    if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d taskListOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"                        taskListOfTasks.mark(currTaskId); // Valid taskID, proceed to mark task","lastModifiedDate":"2022-01-18"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"                    } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidIndex(\"The specified task ID is out of range. \" +","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"                                \"Please enter a number from 0 to \" + taskListOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-01-18"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"            case(\"unmark\"):","lastModifiedDate":"2022-01-18"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() !\u003d 2) {","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"This command should have exactly 1 argument\");","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"                } else if (!isInteger(wordList.get(1))) {","lastModifiedDate":"2022-01-18"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-01-18"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"                    int currTaskId \u003d Integer.parseInt(wordList.get(1));","lastModifiedDate":"2022-01-18"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"                    if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d taskListOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-01-18"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"                        taskListOfTasks.unmark(currTaskId); // Valid taskID, proceed to unmark task","lastModifiedDate":"2022-01-18"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"                    } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidIndex(\"The specified task ID is out of range. \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"                                \"Please enter a number from 0 to \" + taskListOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-01-19"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"            case(\"delete\"):","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"                if (wordList.size() !\u003d 2) {","lastModifiedDate":"2022-01-19"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"This command should have exactly 1 argument\");","lastModifiedDate":"2022-01-19"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"                } else if (!isInteger(wordList.get(1))) {","lastModifiedDate":"2022-01-19"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"                    throw new InvalidCommand(\"The argument MUST contain a single integer.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"                } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"                    int currTaskId \u003d Integer.parseInt(wordList.get(1));","lastModifiedDate":"2022-01-19"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"                    if (currTaskId \u003e 0 \u0026 currTaskId \u003c\u003d taskListOfTasks.getNumberOfTasks()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"                        taskListOfTasks.delete(currTaskId); // Valid taskID, proceed to unmark task","lastModifiedDate":"2022-01-19"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"                    } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"                        throw new InvalidIndex(\"The specified task ID is out of range. \" +","lastModifiedDate":"2022-01-18"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"                                \"Please enter a number from 0 to \" + taskListOfTasks.getNumberOfTasks() + \".\");","lastModifiedDate":"2022-01-18"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"                    }","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"            default:","lastModifiedDate":"2022-01-18"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"                throw new InvalidCommand(\"I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2022-01-18"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-17"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"        greet();","lastModifiedDate":"2022-01-17"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"        taskListOfTasks \u003d new TaskList(100); // Assume there will be no more than 100 tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-17"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"            try {","lastModifiedDate":"2022-01-18"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"                parse(userInput);","lastModifiedDate":"2022-01-18"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-18"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"                System.out.println(e);","lastModifiedDate":"2022-01-18"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"            } finally {","lastModifiedDate":"2022-01-18"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"                userInput \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"        sc.close();","lastModifiedDate":"2022-01-17"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"        exit();","lastModifiedDate":"2022-01-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"Korochii":200,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"     * Initialises a new instance of DukeException.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"class InvalidCommand extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Initialises a new instance of InvalidCommand.","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Creates an error message to be displayed to the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * @return String containing the output message.","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        return \"OOPS!!! \" + this.errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"class InvalidIndex extends DukeException {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    private final String errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     * Initialises a new instance of InvalidIndex.","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * @param errorMessage The error message that is related to the exception.","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    public InvalidIndex(String errorMessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"     * Creates an error message to be displayed to the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"     * @return String containing the output message.","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        return \"OOPS!!! \" + this.errorMessage;","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":59}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"    protected String at;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"     * Initializes a new event task","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"     * This task has a specific date as well as a start and end time.","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[E]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"     * Initializes a new instance of task, according to the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"     * By default, the new task is set to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Retrieves the status icon corresponding to the current status (isDone).","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @return \"X\" if task is already done, \" \" if task is not done.","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     * Retrieves the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     * @return A string that represents the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        return this.description;","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     * Sets the current status for the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"     * @param isDone True/False depending if the task is already done.","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     * Prepends a status checkbox that shows if the task is done.","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"     * @return String containing a status icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"public class TaskList {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"    private int numberOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"     * Initializes a new instance of list of tasks, according to the size specified.","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"     * @param size Size of list of tasks.","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    public TaskList(int size) {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e(size);","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * Retrieves the current amount of tasks in the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * @return the total number of tasks in the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        return this.numberOfTasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Iterates through the list and prints out each task that is on the list.","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    public void display() {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"                + \"     Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        for (int i \u003d 1; i \u003c\u003d this.numberOfTasks; i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            Task currTask \u003d this.listOfTasks.get(i - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"            String output \u003d \"     \" + i + \".\" + currTask + \"\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"            System.out.println(output);","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     * Marks task by changing its status to \"done\"","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be marked.","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    public void mark(int taskId) {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d this.listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(true);","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"                + \"     Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currTask + \"\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"     * Unmarks task by changing its status to \"not done\".","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be unmarked.","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"    public void unmark(int taskId) {","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d this.listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        currTask.setStatus(false);","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"                + \"     OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currTask + \"\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"     * Adds the to-do task into the list","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"    public void todo(String userInput) {","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Todo(userInput);","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks.add(currentTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        String output \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"                + \"     Now you have \" + this.numberOfTasks + \" task/s in the list.\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"        System.out.println(output);","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"     * Adds the task (which has a deadline) into the list","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"    public void deadline(String userInput, String by) {","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Deadline(userInput, by);","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks.add(currentTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"        String output \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"                + \"     Now you have \" + this.numberOfTasks + \" task/s in the list.\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        System.out.println(output);","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"     * Adds the event task into the list","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"     * @param userInput Command entered by the user that describes the task.","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"    public void event(String userInput, String at) {","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"        Task currentTask \u003d new Event(userInput, at);","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks.add(currentTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"        String output \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currentTask + \"\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"                + \"     Now you have \" + this.numberOfTasks + \" task/s in the list.\\n\"","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"        System.out.println(output);","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"     * Deletes task that corresponds to the specified task ID.","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"     * @param taskId The taskID that corresponds to the task that is to be deleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"    public void delete(int taskId) {","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"        Task currTask \u003d this.listOfTasks.get(taskId - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"        this.listOfTasks.remove(taskId - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"        this.numberOfTasks--;","lastModifiedDate":"2022-01-19"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"                + \"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"                + \"       \" + currTask + \"\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"                + \"    ____________________________________________________________\\n\");","lastModifiedDate":"2022-01-19"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":139}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"     * Initializes a new instance of a task that is to be done, according to the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"     * By default, this task is set to \"not done\" and does not have any date/time attached to it.","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"     * @param description Describes what needs to be done in this task","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * Prepends a checkbox \"[T]\" to the front of the task, which indicates the type of task.","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"     * @return String containing a type icon that is prepended in front of the task description.","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"list 2","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"read book","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"todo","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"mark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"mark x","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"unmark 0","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"unmark x","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"unmark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"deadline","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"deadline task without separator","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"deadline incomplete","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"deadline return book /by","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"deadline finish work /by Monday 3pm","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"event","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"event task without separator","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"event incomplete","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"event new meeting without time and date /at","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"event tutorial /at Monday 5pm","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"delete 0","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"delete x","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"delete 1","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"Korochii":35}}]
