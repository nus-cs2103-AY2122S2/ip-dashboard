{"authorDailyContributionsMap":{"charmainehly":[{"date":"2022-01-20","commitResults":[{"hash":"32987e0a1e06e909e1d6444c2997cc818f444e80","messageTitle":"Level-1 v1.0","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"13e439b74d4d1510e7936d9685418d31f494b437","messageTitle":"Level-2 v1.0","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":2}}},{"hash":"93f176b2e5c5775a762ea737105094b2751b5cae","messageTitle":"Level-3 v1.0","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":14}}},{"hash":"2d21953135215c91fc95bb9813e261c98701b747","messageTitle":"Level-4 v1.0 n A-TextUiTesting","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"java":{"insertions":66,"deletions":4}}},{"hash":"8cd2bcee58b44641ed5f1bd8abd4dc683d77e9e6","messageTitle":"(add tag) A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e3f5e4cc09de1fe2dd8d487ca844e91f37734f55","messageTitle":"Level-5 v1.0","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":76,"deletions":41}}},{"hash":"a5bd6b06957b12b5d26a0040fa6971f6084806dd","messageTitle":"Level-6 v1.0","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":11,"deletions":0}}}]},{"date":"2022-01-27","commitResults":[{"hash":"b94d9a28c6a78e2418fad5e8586903181dd0340b","messageTitle":"CREATE: create level-7 save (v1)","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":48,"deletions":0}}},{"hash":"05e31cad87ccebee8f9f43b240fa92b87df51cf6","messageTitle":"CREATE: create level-8 dates and times (v1)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":8}}},{"hash":"1113da57d27b7a50c3b75de77e2a928cbed42510","messageTitle":"UPDATE: add tags for Level-7 and Level-8","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2022-01-28","commitResults":[{"hash":"680e53b519efc8cc66c4bcffc893ba148c45f2ca","messageTitle":"UPDATE: add tags for Level-7 due to previous error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2022-01-29","commitResults":[{"hash":"d546e78928a10ebd7a8ee0a6618be148c0cfe045","messageTitle":"Extract Ui, Storage, Parser and TaskList classes","messageBody":"The current driver in the main method lumps everything that needs to\nbe done, there is no good OOP practice in place.\n\nLet\u0027s create separate classes to encapsulate the different methods that\nneed to be called.\n\nSeparating the different methods into the relevant classes help to make\nthe code more readable and will help with scalability.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":388,"deletions":192}}}]},{"date":"2022-01-30","commitResults":[{"hash":"8dbf61de9aaf463583f31077cd2a980962b98d2d","messageTitle":"Add JUnit tests to test behaviour of toString()","messageBody":"Currently no JUnit tests to test for correct behaviour of methods.\n\nErrors in toString() methods can lead to the wrong output being printed.\n\nLet\u0027s add separate Test classes to check if toString() prints the\ncorrect output for a specific instance of the class object.\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":0}}}]},{"date":"2022-02-02","commitResults":[{"hash":"8a0d20be1d2e6ba53ed033f8363f6625af186dd5","messageTitle":"Modify accepted input conventions in Parser class","messageBody":"Lack of standard accepted user input causes inconsistent behaviour when\nuser enters different inputs.\n\nDifficult to troubleshoot errors when dealing with user inputs or catch\nerrors to throw new DukeException. Need to standardise what user input\nis accepted when adding Tasks for Deadline, Event and Todo so that\nexpected behaviour of Duke chatbot is more intuitive and standardised.\n\nLet\u0027s modify how the user input is parsed in by changing the\nString.split() method arguments. The description and date/time for\nDeadline and Event will be split by \" - by: \" and \" - at: \"\nrespectively. The date/time will be accepted in the format dd-MM-yyyy,\nand will be read from the local taskHistory.txt file in the format MMM\ndd yyyy.\n\nAdjusting the acceptable user input format will prevent special\ncharacters from affecting the behaviour of the String.split() method.\nStandardising how the description and date/time is separated will allow\nfor more intuitive and standardised use of the Duke chatbot.\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":4},"java":{"insertions":22,"deletions":5},"sh":{"insertions":2,"deletions":2}}},{"hash":"55066121ca5de98aad1ce2b5c1fc543705343cc7","messageTitle":"Update the jar file built by IntelliJ","messageBody":"Modification to code in previous commit requires a new Jar file to be\nbuilt.\n\nLet\u0027s re-build a new Jar file with the main Duke class.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}},{"hash":"e3d9909ca0377e153b92c71119993e0d82757a64","messageTitle":"Add JavaDoc comments to public methods and classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":252,"deletions":1}}},{"hash":"82482420bfe32029525a74e25f4dc8422265516b","messageTitle":"Modify naming to comply with coding standards","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":31,"deletions":31}}},{"hash":"0d8b7a1696596f5cb9cdbe6b03bf2c91e5cace9a","messageTitle":"Create methods to find tasks with specific keyword","messageBody":"Current functionalities only allow printing of all tasks in the task list.\n\nUser may want to search and print only tasks containing a specific\nkeyword.\n\nLet\u0027s create a new method in the TaskList class to filter the original\ntask list, to return a new task list with only tasks containing the\nspecified keyword.\n","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":9}}}]},{"date":"2022-02-03","commitResults":[{"hash":"f436dd15d8124fc8b946839dc949e3e1fa5e41f4","messageTitle":"Add parent directory to duke package \u0027seedu.duke\u0027","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":13}}},{"hash":"586e2e49738e3c7d1a75cf38bdd640872c73c7b1","messageTitle":"Add dependencies in build.gradle for gui set up","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}}]},{"date":"2022-02-08","commitResults":[{"hash":"e3edf659269f065e7d7040526e23333f52523438","messageTitle":"Set up basic functionality for GUI","messageBody":"Current set up only allowed CLI from the user, and System.out.println.\n\nUser may want to utilise a more user friendly and visual user interface.\n\nLet\u0027s create the GUI to take in user inputs, and print out a generic\n\u0027Hi\u0027 response.\n","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":171,"deletions":13}}}]},{"date":"2022-02-09","commitResults":[{"hash":"b7238cda82bb557ba5aad353988c7f2faca573c5","messageTitle":"Fix GUI to be functional for all commands","messageBody":"Current functionalities for GUI only allow a generic fixed response \u0027hi\u0027\nto any user input.\n\nUser would need the GUI to be able to respond with relevant messages\nbased on the commands input by the user.\n\nLet\u0027s implement the run method of the Duke class to be able to return a\nstring of a specific format based on the command entered by the user. To\ndo this, we make the following main modifications:\n    1. Create a command package to store all the different command\n       classes.\n    2. Create individual classes for each command type to implement the\n       run() method to return a string of the required format - each of\n       these command classes inherits from the generic Command class.\n    3. Delete the Ui class which is no longer needed to interact with\n       the user interface.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"txt":{"insertions":3,"deletions":2},"java":{"insertions":272,"deletions":172}}}]}]},"authorFileTypeContributionMap":{"charmainehly":{"java":1031,"md":0,"fxml":35,"sh":1,"bat":0,"gradle":15,"txt":27}},"authorContributionVariance":{"charmainehly":26085.314},"authorDisplayNameMap":{"charmainehly":"CS2103-F11-2 HO L..AINE"}}
