[{"path":"src/main/java/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":" * Bot that is the driver for the responses to the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":" * Internally, Bot has a Storage, which is used whenever an input is given by the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":" * 1st method: add, which adds inputs by the user into the storage.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":" * 2nd method: list, which shows what\u0027s in the storage currently.","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"import com.sun.jdi.InvalidTypeException;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"public class Bot {","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"    TaskList tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a new Bot containing a Storage","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"    Bot() {","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"    void greet() {","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"Hello! I\u0027m Bernie\\nWhat\u0027s up?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"    void leave() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"See ya!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"     * Displays to the user a message according to the input given","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, takes in an input and either adds or list the items","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"     * @return a boolean to indicate whether to end the program","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"    boolean respond(String input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"                tasks.list();","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"            } else if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"                leave();","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"            } else if (input.contains(\"mark\") || input.contains(\"unmark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"                tasks.mark(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"            } else if (input.equals(\"\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"                throw new InvalidTypeException(\"No input given!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"                tasks.add(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"        } finally {","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"            return input.equals(\"bye\");","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"michaelseyo":50}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"    protected String by;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a Deadline class for tasks that needs to be done before a timing","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"     * @param id int, the task number","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"     * @param by String, the deadline to meet by","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"    Deadline(String description, int id, String by) {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"        super(description, id);","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"michaelseyo":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"        Bot bot \u003d new Bot();","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"        bot.greet();","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"        while (true) {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"            boolean end \u003d bot.respond(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"            if (end) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"michaelseyo":12,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"    protected String at;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a Event class for tasks that starts and ends at specific time","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"     * @param id int, the task number","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"     * @param at String, the timeframe of the Event","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"    Event(String description, int id, String at) {","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"        super(description, id);","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"michaelseyo":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":" * Task is contained in the TaskList: it contains description, done status and id.","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"    protected int id;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a Task object with description, id and isDone","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"     * @param id int, the taskNumber (+ 1 of index)","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    Task(String description, int id) {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"    void markDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"    void markNotDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"        return isDone ? String.format(\"[X] %s\", description) :","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"                        String.format(\"[ ] %s\", description);","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"michaelseyo":33}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import com.sun.jdi.InvalidTypeException;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":" * TaskList helps to store tasks given by the user. TaskList is contained in","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":" * the Bot class.","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":" * 1st method: add, which adds inputs by the user into the storage.","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":" * 2nd method: list, which shows what\u0027s in the TaskList currently.","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"public class TaskList {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"    Task[] tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    int currentEndIndex \u003d 0;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"    int done \u003d 0;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a TaskList containing an array to contain tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"    TaskList() {","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"        this.tasks \u003d new Task[100];","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"     * Adds a Task given an input by the user. The specific","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"     * class created is determined by what is contained in the input.","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, given by user. Either contains todo, deadline or event.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"    void add(String input) throws Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"        if (isType(\"todo\", input)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"            String[] inputArr \u003d getParams(\"todo\", input);","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"            String description \u003d inputArr[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"            newTask \u003d new ToDo(description, currentEndIndex + 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"        } else if (isType(\"deadline\", input)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"            String[] inputArr \u003d getParams(\"deadline\", input);","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"            String description \u003d inputArr[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"            String by \u003d inputArr[1];","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"            newTask \u003d new Deadline(description, currentEndIndex + 1, by);","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"        } else if (isType(\"event\", input)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"            String[] inputArr \u003d getParams(\"event\", input);","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"            String description \u003d inputArr[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"            String at \u003d inputArr[1];","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"            newTask \u003d new Event(description, currentEndIndex + 1, at);","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"            throw new InvalidTypeException(\"Not a valid type of task!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"        tasks[currentEndIndex] \u003d newTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"        currentEndIndex++;","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"        System.out.printf(\"Got ya. Added: \\n%s\\nYou got %d tasks waiting for ya!\\n\",","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"                            newTask, currentEndIndex - done);","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"michaelseyo"},"content":"     * Checks if the user input is of which task","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"michaelseyo"},"content":"     * @param taskType String","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"michaelseyo"},"content":"     * @param input String","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"michaelseyo"},"content":"     * @return boolean to affirm if the input is of this task","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"michaelseyo"},"content":"    boolean isType(String taskType, String input) {","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"michaelseyo"},"content":"        return input.indexOf(taskType) \u003d\u003d 0;","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"michaelseyo"},"content":"     * Splits a user input into an array accordingly depending on taskType.","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"michaelseyo"},"content":"     * Array contains the respective Task parameters","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"michaelseyo"},"content":"     * @param taskType String, what","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, a user input","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"michaelseyo"},"content":"     * @return String[] inputArr. For \"todo\": an array of 1, containing description.","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"michaelseyo"},"content":"     * For \"deadline\": an array of 2: [description, by]","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"michaelseyo"},"content":"     * For \"event\": an array of 2: [descrption, at]","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"michaelseyo"},"content":"    String[] getParams(String taskType, String input) {","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"michaelseyo"},"content":"        String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"michaelseyo"},"content":"        String[] inputArr \u003d null;","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"michaelseyo"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"michaelseyo"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"michaelseyo"},"content":"                inputArr \u003d new String[]{input.split(\"todo \")[1]};","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"michaelseyo"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"michaelseyo"},"content":"                inputArr \u003d input.split(\" /by \");","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"michaelseyo"},"content":"                description \u003d inputArr[0].split(\"deadline \")[1];","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"michaelseyo"},"content":"                String by \u003d inputArr[1];","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"michaelseyo"},"content":"                inputArr \u003d new String[]{description, by};","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"michaelseyo"},"content":"            case \"event\":","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"michaelseyo"},"content":"                inputArr \u003d input.split(\" /at \");","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"michaelseyo"},"content":"                description \u003d inputArr[0].split(\"event \")[1];","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"michaelseyo"},"content":"                String at \u003d inputArr[1];","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"michaelseyo"},"content":"                inputArr \u003d new String[]{description, at};","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"michaelseyo"},"content":"            default:","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"michaelseyo"},"content":"        return inputArr;","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"michaelseyo"},"content":"     * Prints out every item contained in the tasks array","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"michaelseyo"},"content":"    void list() {","lastModifiedDate":"2022-01-18"},{"lineNumber":99,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"Here\u0027s what you need to do buddy:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"michaelseyo"},"content":"        for (int i \u003d 0; i \u003c currentEndIndex; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"michaelseyo"},"content":"            Task currentTask \u003d tasks[i];","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"michaelseyo"},"content":"            System.out.printf(\"%d. %s\\n\", currentTask.id, currentTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":103,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":104,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":107,"author":{"gitId":"michaelseyo"},"content":"     * Mark or unmark a task number depending on the input","lastModifiedDate":"2022-01-18"},{"lineNumber":108,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, containing mark/unmark and the task number to perform action","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":110,"author":{"gitId":"michaelseyo"},"content":"    void mark(String input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":111,"author":{"gitId":"michaelseyo"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":112,"author":{"gitId":"michaelseyo"},"content":"        if (inputArr.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"michaelseyo"},"content":"            String type \u003d inputArr[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"michaelseyo"},"content":"            String num \u003d inputArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":115,"author":{"gitId":"michaelseyo"},"content":"            int taskIndex \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"michaelseyo"},"content":"            if (checkTaskExistence(taskIndex)) {","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"michaelseyo"},"content":"                if (type.equals(\"mark\")) { // future check: a marked task can\u0027t mark again","lastModifiedDate":"2022-01-19"},{"lineNumber":118,"author":{"gitId":"michaelseyo"},"content":"                    tasks[taskIndex].markDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":119,"author":{"gitId":"michaelseyo"},"content":"                    done++;","lastModifiedDate":"2022-01-19"},{"lineNumber":120,"author":{"gitId":"michaelseyo"},"content":"                    System.out.printf(\"This is now done: \\n%s\\n\", tasks[taskIndex]);","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"michaelseyo"},"content":"                } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"michaelseyo"},"content":"                    tasks[taskIndex].markNotDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"michaelseyo"},"content":"                    done--;","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"michaelseyo"},"content":"                    System.out.printf(\"This is now undone:\\n%s\\n\", tasks[taskIndex]);","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"michaelseyo"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":126,"author":{"gitId":"michaelseyo"},"content":"                    System.out.println(\"Please check the action input!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":127,"author":{"gitId":"michaelseyo"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":128,"author":{"gitId":"michaelseyo"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"michaelseyo"},"content":"                System.out.println(\"Task number does not exist!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":131,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(\"Have you entered the correct input?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":135,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":136,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":137,"author":{"gitId":"michaelseyo"},"content":"     * Checks if the task index is a valid one","lastModifiedDate":"2022-01-18"},{"lineNumber":138,"author":{"gitId":"michaelseyo"},"content":"     * @param index int, index of the task","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"michaelseyo"},"content":"     * @return boolean value indicating if task exists","lastModifiedDate":"2022-01-18"},{"lineNumber":140,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":141,"author":{"gitId":"michaelseyo"},"content":"    boolean checkTaskExistence(int index) {","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"michaelseyo"},"content":"        return (index \u003c\u003d this.currentEndIndex);","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":144,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"michaelseyo":144}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a ToDo class for a general Task","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"     * @param id int, the task number","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"    ToDo(String description, int id) {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"        super(description, id);","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"michaelseyo":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"michaelseyo":2}}]
