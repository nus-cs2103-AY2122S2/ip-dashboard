[{"path":"src/main/java/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":" * Bot that is the driver for the responses to the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":" * Internally, Bot has a Storage, which is used whenever an input is given by the user.","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":" * 1st method: add, which adds inputs by the user into the storage.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":" * 2nd method: list, which shows what\u0027s in the storage currently.","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"public class Bot {","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"    TaskList tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a new Bot containing a Storage","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    Bot() {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"    void greet() {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"Hello! I\u0027m Bernie\\nWhat\u0027s up?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"    void leave() {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"See ya!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"     * Displays to the user a message according to the input given","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, takes in an input and either adds or list the items","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"     * @return a boolean to indicate whether to end the program","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"    boolean respond(String input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"            tasks.list();","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"            return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"            leave();","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"            return true;","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"        } else if (input.contains(\"mark\") || input.contains(\"unmark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"            tasks.mark(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"            return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"        } else if (input.equals(\"\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(\"Say something!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"            return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"            tasks.add(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"            return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"michaelseyo":47}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"        Bot bot \u003d new Bot();","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"        bot.greet();","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"        while (true) {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"            boolean end \u003d bot.respond(input);","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"            if (end) {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"michaelseyo":12,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":" * Task is contained in the TaskList: it contains description, done status and id.","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"    protected int id;","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a Task object with description, id and isDone","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"     * @param id int, the taskNumber (+ 1 of index)","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    Task(String description, int id) {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"    void markDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"    void markNotDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"        return isDone ? String.format(\"%d.[X] %s\", id, description) :","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"                        String.format(\"%d.[ ] %s\", id, description);","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"michaelseyo":33}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":" * TaskList helps to store tasks given by the user. TaskList is contained in","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":" * the Bot class.","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":" * 1st method: add, which adds inputs by the user into the storage.","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":" * 2nd method: list, which shows what\u0027s in the TaskList currently.","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"public class TaskList {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"    Task[] tasks;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"    int index \u003d 0;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a TaskList containing an array to contain tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    TaskList() {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"        this.tasks \u003d new Task[100];","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"     * Adds a given input to the tasks array by creating a Task object","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, given by user","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"    void add(String input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"        System.out.printf(\"added: %s\\n\", input);","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"        Task newTask \u003d new Task(input, index + 1);","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"        tasks[index] \u003d newTask;","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"        index++;","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"     * Prints out every item contained in the tasks array","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"    void list() {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"Here\u0027s what you need to do buddy:\");","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"        for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"            Task currentTask \u003d tasks[i];","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(currentTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"     * Mark or unmark a task number depending on the input","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, containing mark/unmark and the task number to perform action","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"    void mark(String input) {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"        if (inputArr.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"            String type \u003d inputArr[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"            String num \u003d inputArr[1];","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"            int taskIndex \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"michaelseyo"},"content":"            if (checkTaskExistence(taskIndex)) {","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"michaelseyo"},"content":"                if (type.equals(\"mark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"michaelseyo"},"content":"                    tasks[taskIndex].markDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"michaelseyo"},"content":"                    System.out.printf(\"This is now done: \\n%s\\n\", tasks[taskIndex]);","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"michaelseyo"},"content":"                } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"michaelseyo"},"content":"                    tasks[taskIndex].markNotDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"michaelseyo"},"content":"                    System.out.printf(\"This is now undone:\\n%s\\n\", tasks[taskIndex]);","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"michaelseyo"},"content":"                } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"michaelseyo"},"content":"                    System.out.println(\"Please check the action input!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"michaelseyo"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"michaelseyo"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"michaelseyo"},"content":"                System.out.println(\"Task number does not exist!\");","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(\"Have you entered the correct input?\");","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":68,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":69,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"michaelseyo"},"content":"     * Checks if the task index is a valid one","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"michaelseyo"},"content":"     * @param index int, index of the task","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"michaelseyo"},"content":"     * @return boolean value indicating if task exists","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"michaelseyo"},"content":"    boolean checkTaskExistence(int index) {","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"michaelseyo"},"content":"        return (index \u003c\u003d this.index);","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"michaelseyo":77}}]
