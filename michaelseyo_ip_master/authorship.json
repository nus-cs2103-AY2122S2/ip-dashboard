[{"path":"data/Bernie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"1. [T][ ] something","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"michaelseyo":1}},{"path":"src/main/java/Bernie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":" * Bernie the bot that is the driver for the responses to the user.","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":" * Internally, Bernie has TaskList, which contain the Tasks that a user inputs","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"public class Bernie {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"    TaskList tasks;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"    Ui ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"    Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    Parser parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"     * Different Type of tasks: notable types are EMPTY, when the user inputs nothing: \"\"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"     * ADD: refers to when Type is to be added: TODO, DEADLINE, EVENT","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"    enum Type {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"        LIST,","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"        BYE,","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"        EMPTY,","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"        ADD,","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"        TODO,","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"        DEADLINE,","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"        EVENT,","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"        MARK,","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"        UNMARK,","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"        DELETE","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a new Bot containing TaskList and greets the user","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"    Bernie() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"        this.parser \u003d new Parser(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"        ui.greet();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"    Storage getStorage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"        return storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"     * Displays to the user a message according to their input. Actions are performed according","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"     * to the input. Exceptions are caught and printed out for the user.","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, user input","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"     * @return boolean value, indicating if the program will end or not.","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"michaelseyo"},"content":"    boolean respond(String input) {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"michaelseyo"},"content":"        Bernie.Type type \u003d Parser.parseType(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"michaelseyo"},"content":"            switch (type) {","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"michaelseyo"},"content":"            case LIST:","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"michaelseyo"},"content":"                ui.showListTasksMsg(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"michaelseyo"},"content":"            case BYE:","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"michaelseyo"},"content":"                ui.showLeaveMsg();","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"michaelseyo"},"content":"            case MARK:","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"michaelseyo"},"content":"                mark(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"michaelseyo"},"content":"            case EMPTY:","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"michaelseyo"},"content":"                throw new BernieException(\"Say something???\");","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"michaelseyo"},"content":"            case DELETE:","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"michaelseyo"},"content":"                delete(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"michaelseyo"},"content":"            case ADD:","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"michaelseyo"},"content":"                add(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"michaelseyo"},"content":"            default:","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"michaelseyo"},"content":"        } catch (BernieException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"michaelseyo"},"content":"            ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"michaelseyo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"michaelseyo"},"content":"            ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"michaelseyo"},"content":"        } finally {","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"michaelseyo"},"content":"            return input.equals(\"bye\");","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"michaelseyo"},"content":"     * Bernie will decide what kind of task is to be created. Bernie splits the input accordingly,","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"michaelseyo"},"content":"     * to get the parameters required to create the type of task. The creation and adding of task will be","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"michaelseyo"},"content":"     * handled by the TaskList. New state of tasks is saved to the data directory","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"michaelseyo"},"content":"     * after we add a task.","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, given by user. Bernie verifies the Task type and the Task either is todo,","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"michaelseyo"},"content":"     * deadline or event","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"michaelseyo"},"content":"     * @throws BernieException, if the task is not a valid type.","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"michaelseyo"},"content":"    void add(String input) throws BernieException {","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"michaelseyo"},"content":"        Task newTask;","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"michaelseyo"},"content":"        if (Parser.isType(Type.TODO, input)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"michaelseyo"},"content":"            String[] inputArr \u003d Parser.getParams(Type.TODO, input);","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"michaelseyo"},"content":"            newTask \u003d tasks.addTask(inputArr, \"todo\");","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"michaelseyo"},"content":"        } else if (Parser.isType(Type.DEADLINE, input)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"michaelseyo"},"content":"            String[] inputArr \u003d Parser.getParams(Type.DEADLINE, input);","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"michaelseyo"},"content":"            newTask \u003d tasks.addTask(inputArr, \"deadline\");","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"michaelseyo"},"content":"        } else if (Parser.isType(Type.EVENT, input)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"michaelseyo"},"content":"            String[] inputArr \u003d Parser.getParams(Type.EVENT, input);","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"michaelseyo"},"content":"            newTask \u003d tasks.addTask(inputArr, \"event\");","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"michaelseyo"},"content":"            throw new BernieException(\"Not a valid type of task!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"michaelseyo"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"michaelseyo"},"content":"        ui.showAddedMsg(newTask, tasks.numTasksLeft());","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"michaelseyo"},"content":"     * Delete the task according to the user input. The new state of the","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"michaelseyo"},"content":"     * tasks is saved to the data directory after deletion of task","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, which is of the form delete ___","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"michaelseyo"},"content":"    void delete(String input) {","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"michaelseyo"},"content":"            String taskNum \u003d Parser.getParams(Type.DELETE, input)[0];","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"michaelseyo"},"content":"            Task deletedTask \u003d tasks.deleteTask(taskNum);","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"michaelseyo"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"michaelseyo"},"content":"            ui.showDeleteMsg(deletedTask, tasks.numTasksLeft());","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"michaelseyo"},"content":"        } catch (BernieException e){","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"michaelseyo"},"content":"            ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"michaelseyo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":126,"author":{"gitId":"michaelseyo"},"content":"            ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"michaelseyo"},"content":"     * Mark or unmark a task number depending on the input. Handles error if user","lastModifiedDate":"2022-01-20"},{"lineNumber":132,"author":{"gitId":"michaelseyo"},"content":"     * enters invalid mark inputs etc.","lastModifiedDate":"2022-01-20"},{"lineNumber":133,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, containing mark/unmark and the task number to perform action","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"michaelseyo"},"content":"    void mark(String input) {","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"michaelseyo"},"content":"            String[] inputArr \u003d Parser.getParams(Type.MARK, input);","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"michaelseyo"},"content":"            String action \u003d inputArr[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"michaelseyo"},"content":"            String taskNum \u003d inputArr[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"michaelseyo"},"content":"            if (action.equals(\"mark\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"michaelseyo"},"content":"                Task markedTask \u003d tasks.markTask(Type.MARK, taskNum);","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"michaelseyo"},"content":"                ui.showDoneMsg(markedTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"michaelseyo"},"content":"            } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"michaelseyo"},"content":"                Task unmarkedTask \u003d tasks.markTask(Type.UNMARK, taskNum);","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"michaelseyo"},"content":"                ui.showUndoneMsg(unmarkedTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"michaelseyo"},"content":"        } catch (BernieException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"michaelseyo"},"content":"            ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"michaelseyo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"michaelseyo"},"content":"            ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":152,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":153,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"michaelseyo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-20"},{"lineNumber":155,"author":{"gitId":"michaelseyo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"michaelseyo"},"content":"        Bernie bernie \u003d new Bernie();","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"michaelseyo"},"content":"        Storage storage \u003d bernie.getStorage();","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"michaelseyo"},"content":"        storage.loadTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"michaelseyo"},"content":"        while (true) {","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"michaelseyo"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"michaelseyo"},"content":"            boolean end \u003d bernie.respond(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"michaelseyo"},"content":"            if (end) {","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":166,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"michaelseyo":167}},{"path":"src/main/java/BernieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"public class BernieException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"    BernieException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"michaelseyo":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a Deadline class for tasks that needs to be done before a timing","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"     * @param by String, the deadline to meet by","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"    String printDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), printDate());","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"michaelseyo":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"    protected String at;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"     * Constructs an Event class for tasks that starts and ends at specific time","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"     * @param at String, the timeframe of the Event","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"    Event(String description, String at) {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at);","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"michaelseyo":18}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":" * Parser Class helps to parse the inputs given by the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":" * It has parseType method: a preliminary Parser to determine what type of input","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":" * has the user keyed in.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":" * It also has getParams method which help to extract out relevant parts of the input","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":" * and return parameters needed accordingly for Bernie to perform actions","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    static TaskList tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a Parser class","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"     * @param tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"    Parser(TaskList tasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"     * Serves as the preliminary Parser to determine what","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"     * type of input has the user keyed in. The possible inputs are:","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"     * list, bye, mark, empty (the \"\"), delete, and a general add input","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"     * which is determined in the program by inputs: todo, deadline, event","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"     * @params input String","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"    static Bernie.Type parseType(String input) {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"        if (isType(Bernie.Type.LIST, input)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"            return Bernie.Type.LIST;","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"        } else if (isType(Bernie.Type.BYE, input)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"            return Bernie.Type.BYE;","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"        } else if (isType(Bernie.Type.MARK, input)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"            return Bernie.Type.MARK;","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"        } else if (isType(Bernie.Type.EMPTY, input)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"            return Bernie.Type.EMPTY;","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"        } else if (isType(Bernie.Type.DELETE, input)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"            return Bernie.Type.DELETE;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"            return Bernie.Type.ADD;","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"     * Verifies the user input is of which task","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"     * @param taskType Type","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"     * @param input String","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"     * @return boolean to affirm if the input is of this task","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"    static boolean isType(Bernie.Type taskType, String input) {","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"michaelseyo"},"content":"        if (taskType.equals(Bernie.Type.MARK)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"michaelseyo"},"content":"            return input.indexOf(\"mark\") \u003d\u003d 0 || input.indexOf(\"unmark\") \u003d\u003d 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"michaelseyo"},"content":"        } else if (taskType.equals(Bernie.Type.EMPTY)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"michaelseyo"},"content":"            return input.equals(\"\");","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"michaelseyo"},"content":"        return input.indexOf(taskType.name().toLowerCase()) \u003d\u003d 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"michaelseyo"},"content":"     * Splits a user input into an array containing parameters for creating Task accordingly,","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"michaelseyo"},"content":"     * depending on taskType.","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"michaelseyo"},"content":"     * @param taskType Type","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"michaelseyo"},"content":"     * @param input String, a user input to be split into an array of parameters","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"michaelseyo"},"content":"     * @return String[] inputArr.","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"michaelseyo"},"content":"     * For \"todo\": an array of 1, containing description.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"michaelseyo"},"content":"     * For \"deadline\": an array of 2: [description, by]","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"michaelseyo"},"content":"     * For \"event\": an array of 2: [description, at]","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"michaelseyo"},"content":"     * For \"mark\": an array of 2: [action, taskNum]","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"michaelseyo"},"content":"     * For \"delete\": an array of 1: [taskNum]","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"michaelseyo"},"content":"    static String[] getParams(Bernie.Type taskType, String input) throws BernieException {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"michaelseyo"},"content":"        String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"michaelseyo"},"content":"        String[] inputArr \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"michaelseyo"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"michaelseyo"},"content":"        case TODO:","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d input.split(\"todo \");","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"michaelseyo"},"content":"            description \u003d getDescription(inputArr, Bernie.Type.TODO);","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d new String[]{description};","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"michaelseyo"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"michaelseyo"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d input.split(\" /by \");","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"michaelseyo"},"content":"            description \u003d getDescription(inputArr, Bernie.Type.DEADLINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"michaelseyo"},"content":"            String by \u003d getTime(inputArr, Bernie.Type.DEADLINE);","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d new String[]{description, by};","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"michaelseyo"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"michaelseyo"},"content":"        case EVENT:","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d input.split(\" /at \");","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"michaelseyo"},"content":"            description \u003d getDescription(inputArr, Bernie.Type.EVENT);","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"michaelseyo"},"content":"            String at \u003d getTime(inputArr, Bernie.Type.EVENT);","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d new String[]{description, at};","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"michaelseyo"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"michaelseyo"},"content":"        case MARK:","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"michaelseyo"},"content":"            // check valid","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"michaelseyo"},"content":"            checkMarkOrDeleteInput(inputArr, Bernie.Type.MARK);","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"michaelseyo"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"michaelseyo"},"content":"        case DELETE:","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d input.split(\" \");","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"michaelseyo"},"content":"            checkMarkOrDeleteInput(inputArr, Bernie.Type.DELETE);","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"michaelseyo"},"content":"            inputArr \u003d new String[]{inputArr[1]};","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"michaelseyo"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"michaelseyo"},"content":"        default:","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"michaelseyo"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"michaelseyo"},"content":"        return inputArr;","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"michaelseyo"},"content":"     * Checks for valid \"mark\" or \"delete\" action inputs. Throws error if it is not valid.","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"michaelseyo"},"content":"     * @param inputArr String[], the user input String split into an array of String for processing","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"michaelseyo"},"content":"     *                 parameters for the action","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"michaelseyo"},"content":"     * @throws BernieException for invalid inputs","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"michaelseyo"},"content":"    static void checkMarkOrDeleteInput(String[] inputArr, Bernie.Type action) throws BernieException {","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"michaelseyo"},"content":"        if (inputArr.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"michaelseyo"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"michaelseyo"},"content":"                String taskNum \u003d inputArr[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"michaelseyo"},"content":"                Integer.parseInt(taskNum);","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"michaelseyo"},"content":"                tasks.taskExists(taskNum);","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"michaelseyo"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"michaelseyo"},"content":"                throw new BernieException(\"That\u0027s not a task number! Put a number.\");","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"michaelseyo"},"content":"            if (action.equals(Bernie.Type.MARK)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"michaelseyo"},"content":"                throw new BernieException(\"Wrong input. Type this: mark/unmark taskNumber\");","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"michaelseyo"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"michaelseyo"},"content":"                throw new BernieException(\"Wrong input. Type this: delete taskNumber\");","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"michaelseyo"},"content":"     * Gets the description from the inputArr which contains parameters for creating Task","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"michaelseyo"},"content":"     * @param inputArr String[], parameters for creating Task, obtained from user input String.","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"michaelseyo"},"content":"     * @param taskType Type","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"michaelseyo"},"content":"     * @return String description, for creating of Task","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"michaelseyo"},"content":"     * @throws BernieException for invalid descriptions such as empty or number description","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"michaelseyo"},"content":"    static String getDescription(String[] inputArr, Bernie.Type taskType) throws BernieException {","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"michaelseyo"},"content":"        String description;","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"michaelseyo"},"content":"            if (taskType.equals(Bernie.Type.TODO)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"michaelseyo"},"content":"                description \u003d inputArr[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"michaelseyo"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"michaelseyo"},"content":"                // can take note of lowercase/uppercase","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"michaelseyo"},"content":"                description \u003d inputArr[0].split(taskType.name().toLowerCase() + \" \")[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"michaelseyo"},"content":"            checkDescriptionNotNumber(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"michaelseyo"},"content":"            return description;","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"michaelseyo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"michaelseyo"},"content":"            throw new BernieException(\"Where\u0027s the description?\");","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"michaelseyo"},"content":"    static boolean checkDescriptionNotNumber(String description) throws BernieException {","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"michaelseyo"},"content":"            Integer.parseInt(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"michaelseyo"},"content":"            throw new BernieException(\"Description can\u0027t be numbers? We need String!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"michaelseyo"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"michaelseyo"},"content":"            return true;","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"michaelseyo"},"content":"     * Gets the time from the inputArr which contains parametrs for creating Task","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"michaelseyo"},"content":"     * @param inputArr String[], parameters for creating Task, obtained from user input String.","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"michaelseyo"},"content":"     * @param taskType type, if it is DEADLINE we check if the input date format is correct.","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"michaelseyo"},"content":"     * @return String time, for creating of Task. It is of format: yyyy-mm-dd for converting","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"michaelseyo"},"content":"     * to LocalDate object by TaskList\u0027s addTask class","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"michaelseyo"},"content":"     * @throws BernieException if there is no time input given","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"michaelseyo"},"content":"    static String getTime(String[] inputArr, Bernie.Type taskType) throws BernieException {","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"michaelseyo"},"content":"            if (taskType.equals(Bernie.Type.DEADLINE)) {","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"michaelseyo"},"content":"                LocalDate checkValid \u003d LocalDate.parse(inputArr[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"michaelseyo"},"content":"            return inputArr[1];","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"michaelseyo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"michaelseyo"},"content":"            throw new BernieException(\"Where\u0027s your time input?\");","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"michaelseyo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"michaelseyo"},"content":"            throw new BernieException(\"Please enter deadline date in: yyyy-mm-dd\");","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"michaelseyo":185}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":" * Storage class handles the loading and saving of tasks in the file","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    String root \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"    File tasksFile;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"    File dataDir;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    String lineBreak \u003d \"___________________________________________________________\";","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"     * Constructs the Storage class with the File tasksFile and dataDir","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"    Storage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"        this.tasksFile \u003d new File(root + \"/data\", \"Bernie.txt\");","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"        this.dataDir \u003d new File(root, \"data\");","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"     * Loads the data when Bernie starts up if it exists and reads. If doesn\u0027t","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"     * exist, creates the required files","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"    void loadTasks() {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"            if (tasksFile.exists() \u0026\u0026 dataDir.exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"                System.out.println(\"On the list:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"                FileReader fileReader \u003d new FileReader(tasksFile);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"                BufferedReader reader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"                while (true) {","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"                    String line \u003d reader.readLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"                    if (line \u003d\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"                        break;","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"                    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"                    System.out.println(line);","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"                reader.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"                // create dir and file","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"                dataDir.mkdir();","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"                tasksFile.createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"michaelseyo"},"content":"     * Handles the conditions for checking if the File exist before","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"michaelseyo"},"content":"     * saving the tasks with the save function. If File doesn\u0027t exist,","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"michaelseyo"},"content":"     * the required files will be created before save","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"michaelseyo"},"content":"     * @param tasks TaskList, takes in the current tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"michaelseyo"},"content":"    void saveTasks(TaskList tasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"michaelseyo"},"content":"            if (dataDir.exists() \u0026\u0026 tasksFile.exists()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"michaelseyo"},"content":"                save(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"michaelseyo"},"content":"            } else {","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"michaelseyo"},"content":"                // create dir and file","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"michaelseyo"},"content":"                dataDir.mkdir();","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"michaelseyo"},"content":"                tasksFile.createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"michaelseyo"},"content":"                save(tasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"michaelseyo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"michaelseyo"},"content":"     * Saves the most updated tasks whenever the tasks changes upon","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"michaelseyo"},"content":"     * delete or add by writing the file. The file is saved to ./data/Bernie.txt","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"michaelseyo"},"content":"     * @params tasks TaskList, takes in the current tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"michaelseyo"},"content":"     * @throws IOException","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"michaelseyo"},"content":"    void save(TaskList tasks) throws IOException {","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"michaelseyo"},"content":"        FileWriter fileWriter \u003d new FileWriter(tasksFile);","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"michaelseyo"},"content":"        BufferedWriter writer \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"michaelseyo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"michaelseyo"},"content":"            writer.write(\"NOTHING! :D\");","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"michaelseyo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"michaelseyo"},"content":"            Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"michaelseyo"},"content":"            writer.write(String.format(\"%d. %s\\n\", i + 1, currentTask));","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"michaelseyo"},"content":"        writer.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"michaelseyo":95}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":" * Task is contained in the TaskList: it contains description, done status and id.","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a Task object with description, id and isDone","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"    void markDone() throws BernieException {","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"            throw new BernieException(\"Cannot mark a task already done!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"    void markNotDone() throws BernieException {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"        if (!isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"            throw new BernieException(\"Cannot unmark a task not done!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"        return isDone ? String.format(\"[X] %s\", description) :","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"                        String.format(\"[ ] %s\", description);","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"michaelseyo":38}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"import java.util.List;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":" * TaskList helps to store tasks given by the user. TaskList is contained in","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":" * the Bot class and handles the Task for the Bot.","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":" * 1st method: add, which adds inputs by the user into the storage.","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":" * 2nd method: list, which shows what\u0027s in the TaskList currently.","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"public class TaskList {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"    List\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a TaskList containing an array to contain tasks","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"    TaskList() {","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"    int getSize() {","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"    boolean isEmpty() {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"        return tasks.size() \u003d\u003d 0;","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"     * Returns a Task that is indexed i","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"     * @param i int, the index of the Task","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"     * @return Task object","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"    Task getTask(int i) {","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"        return tasks.get(i);","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"    int numTasksLeft() {","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"            if (!task.isDone) {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"                count++;","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"michaelseyo"},"content":"        return count;","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"michaelseyo"},"content":"     * Adds a Task given the inputArr and taskType determined by Bernie.","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"michaelseyo"},"content":"     * @param inputArr String[], given by Bernie","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"michaelseyo"},"content":"     * @param taskType String[], either todo, deadline or event","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"michaelseyo"},"content":"     * @return Task created","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"michaelseyo"},"content":"    Task addTask(String[] inputArr, String taskType) throws IllegalArgumentException {","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"michaelseyo"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"michaelseyo"},"content":"        String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"michaelseyo"},"content":"        LocalDate by;","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"michaelseyo"},"content":"        String at;","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"michaelseyo"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"michaelseyo"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"michaelseyo"},"content":"                description \u003d inputArr[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"michaelseyo"},"content":"                newTask \u003d new ToDo(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"michaelseyo"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"michaelseyo"},"content":"                description \u003d inputArr[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"michaelseyo"},"content":"                by \u003d LocalDate.parse(inputArr[1]);","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"michaelseyo"},"content":"                newTask \u003d new Deadline(description, by);","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"michaelseyo"},"content":"            case \"event\":","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"michaelseyo"},"content":"                description \u003d inputArr[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"michaelseyo"},"content":"                at \u003d inputArr[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"michaelseyo"},"content":"                newTask \u003d new Event(description, at);","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"michaelseyo"},"content":"            default:","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"michaelseyo"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"michaelseyo"},"content":"        tasks.add(newTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"michaelseyo"},"content":"        return newTask;","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":87,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-18"},{"lineNumber":88,"author":{"gitId":"michaelseyo"},"content":"     * Prints out every item contained in the tasks array","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"michaelseyo"},"content":"    void listTasks() {","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"michaelseyo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"michaelseyo"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"michaelseyo"},"content":"            System.out.printf(\"%d. %s\\n\", i + 1, currentTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":95,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":96,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"michaelseyo"},"content":"     * Marks or unmarks Task accordingly","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"michaelseyo"},"content":"     * @param action String, mark or unmark","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"michaelseyo"},"content":"     * @param taskNumber String, the taskNumber we want to mark or unmark","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"michaelseyo"},"content":"     * @return the resulting Task after mark or unmark","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"michaelseyo"},"content":"     * @throws BernieException if we attempt to mark a marked Task or unmark an unnmarked Task","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"michaelseyo"},"content":"    Task markTask(Bernie.Type action, String taskNumber) throws BernieException {","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"michaelseyo"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"michaelseyo"},"content":"        if (action.equals(Bernie.Type.MARK)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"michaelseyo"},"content":"            tasks.get(taskIndex).markDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"michaelseyo"},"content":"        } else if (action.equals(Bernie.Type.UNMARK)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"michaelseyo"},"content":"            tasks.get(taskIndex).markNotDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"michaelseyo"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":113,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":114,"author":{"gitId":"michaelseyo"},"content":"    Task taskExists(String taskNum) throws BernieException {","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"michaelseyo"},"content":"        int index \u003d Integer.parseInt(taskNum) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"michaelseyo"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"michaelseyo"},"content":"            Task existingTask \u003d tasks.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"michaelseyo"},"content":"            return existingTask;","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"michaelseyo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"michaelseyo"},"content":"            throw new BernieException(\"Task number does not exist!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":122,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":123,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":125,"author":{"gitId":"michaelseyo"},"content":"     * Deletes tasks from the List","lastModifiedDate":"2022-01-24"},{"lineNumber":126,"author":{"gitId":"michaelseyo"},"content":"     * @param taskNum String, the task number","lastModifiedDate":"2022-01-24"},{"lineNumber":127,"author":{"gitId":"michaelseyo"},"content":"     * @return Task, the task that is deleted","lastModifiedDate":"2022-01-24"},{"lineNumber":128,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":129,"author":{"gitId":"michaelseyo"},"content":"    Task deleteTask(String taskNum) {","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"michaelseyo"},"content":"        int taskIndex \u003d Integer.parseInt(taskNum) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"michaelseyo"},"content":"        return tasks.remove(taskIndex);","lastModifiedDate":"2022-01-20"},{"lineNumber":132,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":133,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"michaelseyo":133}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"     * Constructs a ToDo class for a general Task","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"     * @param description String","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"    ToDo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"michaelseyo":14}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":" * Class to deal with any interactions with the user. It is contained","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":" * in the Bernie class and is responsible for printing out relevant messages","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":" * to the user","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"    String lineBreak \u003d \"___________________________________________________________\";","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"     * Prints out message when user starts the program","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"    void greet() {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"Hello! I\u0027m Bernie\\nWhat\u0027s up?\");","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"     * Prints out message when user exits out of the program","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"    void showLeaveMsg() {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"See ya!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"     * Prints out the error message when faced with any errors","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"     * @param msg String, the error message","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"    void showErrorMsg(String msg) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(msg);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"     * Prints out the message whenever the user adds a new task","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"     * @param newTask Task, newTask added by the user","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"     * @param numTasksLeft int, the number of tasks left","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"    void showAddedMsg(Task newTask, int numTasksLeft) {","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"        System.out.printf(\"Got ya. Added:\\n%s\\nYou got %d tasks waiting for ya!\\n\",","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"                newTask, numTasksLeft);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"     * Prints out the message whenever the user deletes a task","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"     * @param deletedTask Task, task deleted by the user","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"     * @param numTasksLeft int, the number of tasks left","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"michaelseyo"},"content":"    void showDeleteMsg(Task deletedTask, int numTasksLeft) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"michaelseyo"},"content":"        System.out.printf(\"Got ya. Removed:\\n%s\\nYou got %d tasks waiting for ya!\\n\",","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"michaelseyo"},"content":"                deletedTask, numTasksLeft);","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"michaelseyo"},"content":"     * Prints out the current taskList when the user inputs list into the program","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"michaelseyo"},"content":"     * @param tasks","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"michaelseyo"},"content":"    void showListTasksMsg(TaskList tasks) {","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(\"Here\u0027s what you need to do buddy:\");","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"michaelseyo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"michaelseyo"},"content":"            System.out.println(\"NOTHING! :D\");","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"michaelseyo"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"michaelseyo"},"content":"        tasks.listTasks();","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"michaelseyo"},"content":"     * Prints out the message when a user marks a task number","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"michaelseyo"},"content":"     * @param markedTask Task","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"michaelseyo"},"content":"    void showDoneMsg(Task markedTask) {","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"michaelseyo"},"content":"        System.out.printf(\"This is now done:\\n%s\\n\", markedTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"michaelseyo"},"content":"    /**","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"michaelseyo"},"content":"     * Prints out the message when a user unmarks a task number","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"michaelseyo"},"content":"     * @param unmarkedTask Task","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"michaelseyo"},"content":"     */","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"michaelseyo"},"content":"    void showUndoneMsg(Task unmarkedTask) {","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"michaelseyo"},"content":"        System.out.printf(\"This is now undone:\\n%s\\n\", unmarkedTask);","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"michaelseyo"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"michaelseyo"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"michaelseyo"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"michaelseyo":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"michaelseyo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"michaelseyo"},"content":"mark yo","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"michaelseyo"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"michaelseyo"},"content":"todo","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"michaelseyo"},"content":"todo 1","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"michaelseyo"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"michaelseyo"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"michaelseyo"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"michaelseyo"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"michaelseyo"},"content":"mark -5","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"michaelseyo"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"michaelseyo"},"content":"unmark 5","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"michaelseyo"},"content":"unmark -5","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"michaelseyo"},"content":"hi there","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"michaelseyo"},"content":"mark mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"michaelseyo"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"michaelseyo"},"content":"deadline 2","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"michaelseyo"},"content":"deadline return book","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"michaelseyo"},"content":"deadline return book /by","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"michaelseyo"},"content":"deadline /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"michaelseyo"},"content":"deadline return book /by 2022-01-28","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"michaelseyo"},"content":"event 2","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"michaelseyo"},"content":"event project meeting","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"michaelseyo"},"content":"event project meeting /at","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"michaelseyo"},"content":"event /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"michaelseyo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"michaelseyo"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"michaelseyo"},"content":"unmark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"michaelseyo"},"content":"mark 2","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"michaelseyo"},"content":"todo clean dishes","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"michaelseyo"},"content":"delete","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"michaelseyo"},"content":"delete yo","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"michaelseyo"},"content":"delete 5","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"michaelseyo"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"michaelseyo"},"content":"delete 3","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"michaelseyo"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"michaelseyo"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"michaelseyo"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"michaelseyo"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"michaelseyo"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"michaelseyo":50}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"michaelseyo"},"content":"java -classpath ../bin Bernie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"michaelseyo":1,"-":37}}]
