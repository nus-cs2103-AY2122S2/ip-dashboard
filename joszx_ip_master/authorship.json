[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"    mainClassName \u003d \"myboss.Launcher\"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"    archiveBaseName \u003d \"myboss\"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joszx":18,"-":44}},{"path":"src/main/java/myboss/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" * Represents a task with a specified date as deadline. A deadline Object corresponds","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":" * to a task with a specified date.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"     * Creates an undone Deadline Task Object with the specified task name and deadline.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"     * Creates a Deadline Task Object with the specified task name, deadline and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"    public Deadline(String taskName, String deadline, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"        super(taskName, \"D\", isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"        return this.deadline;","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"     * Returns string output of a Deadline Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is to be marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"     * @return string output of Deadline Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"    public String markAsDone(boolean isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"            setIsDone(true);","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"            return \" Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \"","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"                    + \"     [\" + this.getTaskType() + \"]\" + //[T]","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.getIsDone() ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"                    this.getTaskName();","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"            setIsDone(false);","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + \"  \"","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"                    + \"     [\" + this.getTaskType() + \"]\" //[T]","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"                    + \"[\" + (this.getIsDone() ? \"X\" : \" \") + \"] \" // [X]","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"                    + this.getTaskName();","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"LLL dd yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"        String deadlineFormatted \u003d deadline.format(formatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"        return \"[\" + this.getTaskType() + \"]\"","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"                + \"[\" + (getIsDone() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"                + this.getTaskName()","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"                + \" (by: \" + deadlineFormatted + \")\"","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"                + \"\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"            return false;","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"            return false;","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"        Deadline deadline1 \u003d (Deadline) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"        return Objects.equals(getTaskType(), deadline1.getTaskType()) \u0026\u0026 Objects.equals(deadline, deadline1.deadline);","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"joszx":89}},{"path":"src/main/java/myboss/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"joszx":61}},{"path":"src/main/java/myboss/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" * Represents a task with a specified date and time range of the task. An Event Object","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":" * corresponds to a task with a specified date and time range.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    private String timeRange;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     * Creates an Event Object with the specified task name and datetime.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     * @param dateTime date and time of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"    public Event(String taskName, String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"        String[] dateTimeSplit \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"        this.eventDate \u003d LocalDate.parse(dateTimeSplit[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"        this.timeRange \u003d dateTimeSplit[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     * Creates an Event Object with the specified task name, datetime and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     * @param dateTime date and time range of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    public Event(String taskName, String dateTime, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"        super(taskName, \"E\", isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"        String[] dateTimeSplit \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"        this.eventDate \u003d LocalDate.parse(dateTimeSplit[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"        this.timeRange \u003d dateTimeSplit[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"     * Creates an Event Object with the specified task name, date, time range and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"     * @param date date of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"     * @param timeRange time range of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    public Event(String taskName, String date, String timeRange, boolean isDone) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"        super(taskName, \"E\", isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"        this.eventDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"    public String getTimeRange() {","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"        return timeRange;","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    public LocalDate getEventDate() {","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"        return eventDate;","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"     * Returns the string output of an Event Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is to be marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"     * @return string output of an Event Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"    public String markAsDone(boolean isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"            setIsDone(true);","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"            return \" Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \"","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"                    + \"     [\" + this.getTaskType() + \"]\" + //[T]","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.getIsDone() ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"                    this.getTaskName();","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"            setIsDone(false);","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + \"  \"","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"                    + \"     [\" + this.getTaskType() + \"]\" //[T]","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"                    + \"[\" + (this.getIsDone() ? \"X\" : \" \") + \"] \" // [X]","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"                    + this.getTaskName();","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"LLL dd yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"        String eventDateFormatted \u003d eventDate.format(formatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"        return \"[\" + this.getTaskType() + \"]\"","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"                + \"[\" + (getIsDone() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"                + this.getTaskName()","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"                + \" (at: \" + eventDateFormatted + \" \" + this.timeRange + \")\"","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"joszx"},"content":"                + \"\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"joszx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"joszx"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"joszx"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"joszx"},"content":"            return false;","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"joszx"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":107,"author":{"gitId":"joszx"},"content":"            return false;","lastModifiedDate":"2022-02-11"},{"lineNumber":108,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"joszx"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"joszx"},"content":"        return Objects.equals(timeRange, event.timeRange) \u0026\u0026 Objects.equals(eventDate, event.eventDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"joszx":112}},{"path":"src/main/java/myboss/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"joszx":12}},{"path":"src/main/java/myboss/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    private MyBoss myBoss \u003d new MyBoss();","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMyBoss(myBoss);","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"            stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    public static void exitPlatform() {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        Platform.exit();","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"joszx":36}},{"path":"src/main/java/myboss/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    private MyBoss myBoss;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    public void setMyBoss(MyBoss d) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        myBoss \u003d d;","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"        String response \u003d myBoss.getResponse(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"joszx":51}},{"path":"src/main/java/myboss/MyBoss.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":" * Represents the Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":" * A MyBoss Object corresponds to a Personal Assistant Chatbot.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"public class MyBoss {","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"     * Creates a MyBoss Object with the pre-specified file path for saving tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    public MyBoss() {","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"        String filePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"            tasks \u003d new TaskList(storage.loadTaskListFromFile());","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"        } catch (MyBossException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     * Function to generate a response to user input.","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * @param input user input","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     * @return returns the chatbot reponse to user input","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"        String[] userCmdSplit \u003d Parser.splitUserCmd(input);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"        String command \u003d Parser.getUserCmd(userCmdSplit);","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"        String remainingUserInput \u003d Parser.getRemainingUserCmd(userCmdSplit);","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"            switch (command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"                storage.updateFile(tasks.getTaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"                Main.exitPlatform();","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"                return \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"            case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"                return ui.outputTaskList(tasks.getTaskList());","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"                // fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"                // fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"                int currTaskIndex \u003d Parser.getTaskIndex(userCmdSplit);","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"                return getMarkOrDeleteOutput(command, currTaskIndex);","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"                ToDo newToDo \u003d new ToDo(remainingUserInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"                return handleTaskEvent(newToDo);","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"                String[] parsedDeadline \u003d Parser.parseDeadlineUserCmd(remainingUserInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"                String deadlineName \u003d parsedDeadline[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"                String timeBy \u003d parsedDeadline[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"                Deadline newDeadline \u003d new Deadline(deadlineName, timeBy);","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"                return handleTaskEvent(newDeadline);","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"            case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"                String[] parsedEvent \u003d Parser.parseEventUserCmd(remainingUserInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"                String eventName \u003d parsedEvent[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"                String timeRange \u003d parsedEvent[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"                Event newEvent \u003d new Event(eventName, timeRange);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"                return handleTaskEvent(newEvent);","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"            case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"                return ui.outputFoundTasks(tasks.findTasks(remainingUserInput));","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"                throw new MyBossException(Ui.UNKNOWN_COMMAND_EXCEPTION_MSG);","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"        } catch (StringIndexOutOfBoundsException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"            return Ui.MISSING_TIME_ARGUMENT_EXCEPTION_MSG;","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"            return Ui.MISSING_ARGUMENT_EXCEPTION_MSG;","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"        } catch (MyBossException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"            return Ui.WRONG_DATE_FORMAT_EXCEPTION_MSG;","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"            return Ui.INDEX_OUT_OF_BOUNDS_EXCEPTION_MSG;","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"    String getMarkOrDeleteOutput(String command, int currTaskIndex) throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"        Task currTask \u003d tasks.get(currTaskIndex);","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"            return ui.outputMarked(currTask);","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"joszx"},"content":"            return ui.outputUnmarked(currTask);","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"joszx"},"content":"            storage.updateFile(tasks.getTaskList());","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"joszx"},"content":"            return ui.outputDeleteTask(tasks.deleteTask(currTaskIndex));","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"joszx"},"content":"    String handleTaskEvent(Task task) throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":103,"author":{"gitId":"joszx"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-02-10"},{"lineNumber":104,"author":{"gitId":"joszx"},"content":"        storage.appendTaskToFile(task);","lastModifiedDate":"2022-02-10"},{"lineNumber":105,"author":{"gitId":"joszx"},"content":"        return ui.addTaskOutput(task);","lastModifiedDate":"2022-02-10"},{"lineNumber":106,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-02-04"},{"lineNumber":109,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"joszx":109}},{"path":"src/main/java/myboss/MyBossException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":" * Represents an Exception from the MyBoss program. A MyBossException Object corresponds","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":" * to an exception thrown by the MyBoss Object.","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"public class MyBossException extends Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"    public MyBossException(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"joszx":12}},{"path":"src/main/java/myboss/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":" * A Parser that provides parsing methods.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"     * Returns a string array that contains the first word of userCmd and the remaining string","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"     * as the first and second index of the array respectively.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"     * @param userCmd user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"     * @return first word and remaining string split.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    public static String[] splitUserCmd(String userCmd) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"        return userCmd.split(\" \", 2);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"    public static String getUserCmd(String[] userCmdSplit) {","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"        return userCmdSplit[0];","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"     * Returns the task index of the task number specified by the userCmd.","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"     * @param userCmd user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"     * @return index of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"    public static int getTaskIndex(String[] userCmd) {","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"        assert userCmd[1] !\u003d null : \"There should be a second argument in the command\";","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"        return Integer.parseInt(userCmd[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"     * Returns the remaining string from a split user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"     * @param userCmd split user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"     * @return remaining string from split user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"    public static String getRemainingUserCmd(String[] userCmd) {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"        if (userCmd.length \u003c\u003d 1) {","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"            return \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"        return userCmd[1];","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"     * Returns the parsed input of a deadline command by removing /by and separating the remaining string","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"     * into the task name and deadline.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"     * @param userCmd user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"     * @return parsed input of a deadline command.","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"    public static String[] parseDeadlineUserCmd(String userCmd) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"        String taskName \u003d userCmd.substring(0, userCmd.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"        String timeBy \u003d userCmd.substring(userCmd.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"        return new String[] {taskName, timeBy};","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"     * Returns the parsed input of an event command by removing /at and separating the remaining string","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"     * into the task name and time range.","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"     * @param userCmd user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"     * @return parsed input of an event command.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"    public static String[] parseEventUserCmd(String userCmd) {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"        String taskName \u003d userCmd.substring(0, userCmd.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"        String timeRange \u003d userCmd.substring(userCmd.indexOf(\"/at\") + 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"        return new String[] {taskName, timeRange};","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":72}},{"path":"src/main/java/myboss/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":" * Represents a storage with specified file path.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    private String filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     * Creates a Storage Object. Creates directory and file as specified in file path if","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * it does not already exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"     * @param filePath path to file.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"    public Storage(String filePath) throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"        createDirAndFileIfNonExistent();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     * Appends the specified task to the storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * @param task task specified.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * @return whether the task was appended successfully.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    public boolean appendTaskToFile(Task task) throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"            String stringToAppend \u003d task.getTaskType() + \"|\" + task.getIsDone() + \"|\" + task.getTaskName();","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"            switch (task.getTaskType()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"            case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"                // typecasting because only an event would have taskType \"E\"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"                stringToAppend \u003d stringToAppend + \"|\" + event.getEventDate() + \"|\" + event.getTimeRange();","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"            case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"                // typecasting because only a deadline would have taskType \"D\"","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"                stringToAppend \u003d stringToAppend + \"|\" + deadlineTask.getDeadline();","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"            case \"T\":","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"                break;","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"            default:","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"                throw new MyBossException(Ui.APPEND_TO_FILE_EXCEPTION_MSG);","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"            fw.write(stringToAppend + System.lineSeparator());","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"            fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"            throw new MyBossException(Ui.APPEND_TO_FILE_EXCEPTION_MSG);","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"     * Clears the storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"     * @return whether the clear was successful.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"    public boolean clearTaskFile() throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"            fw.write(\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"            fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"            //Ui.outputMyBoss(\"Error clearing DB\");","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"            throw new MyBossException(Ui.CLEAR_FILE_EXCEPTION_MSG);","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"     * Creates directory and file as in the file path if it does not already exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"     * @return whether the directory and file was created successfully.","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"    public boolean createDirAndFileIfNonExistent() throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"            File fileObj \u003d new File(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"            File parentFile \u003d fileObj.getParentFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"            if (!parentFile.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"                parentFile.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"            if (!fileObj.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"                fileObj.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"joszx"},"content":"            throw new MyBossException(Ui.FILE_CREATION_EXCEPTION_MSG);","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"joszx"},"content":"     * Loads the list of tasks from storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"joszx"},"content":"     * @return the ArrayList of tasks loaded from storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"joszx"},"content":"    public ArrayList\u003cTask\u003e loadTaskListFromFile() throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":105,"author":{"gitId":"joszx"},"content":"        // get taskList from file","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"joszx"},"content":"        ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"joszx"},"content":"            File dbObj \u003d new File(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"joszx"},"content":"            if (!dbObj.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"joszx"},"content":"                createDirAndFileIfNonExistent();","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"joszx"},"content":"                return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"joszx"},"content":"            Scanner s \u003d new Scanner(dbObj);","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"joszx"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"joszx"},"content":"                String currLine \u003d s.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"joszx"},"content":"                String[] currLineSplit \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"joszx"},"content":"                String taskType \u003d currLineSplit[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"joszx"},"content":"                boolean isDone \u003d currLineSplit[1].equals(\"true\");","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"joszx"},"content":"                String taskName \u003d currLineSplit[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"joszx"},"content":"                if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"joszx"},"content":"                    tempTaskList.add(new Event(taskName,","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"joszx"},"content":"                            currLineSplit[3], currLineSplit[4], isDone));","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"joszx"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"joszx"},"content":"                    tempTaskList.add(new Deadline(taskName, currLineSplit[3], isDone));","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"joszx"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"joszx"},"content":"                    tempTaskList.add(new ToDo(taskName, isDone));","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"joszx"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"joszx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"joszx"},"content":"            throw new MyBossException(Ui.FILE_NOT_FOUND_EXCEPTION_MSG);","lastModifiedDate":"2022-02-11"},{"lineNumber":132,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"joszx"},"content":"        return tempTaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"joszx"},"content":"     * Overwrites the storage file with the specified list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"joszx"},"content":"     * @param taskList list of tasks to be written into the storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"joszx"},"content":"    public void updateFile(ArrayList\u003cTask\u003e taskList) throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":142,"author":{"gitId":"joszx"},"content":"        createDirAndFileIfNonExistent();","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"joszx"},"content":"        clearTaskFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"joszx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-10"},{"lineNumber":145,"author":{"gitId":"joszx"},"content":"            appendTaskToFile(taskList.get(i));","lastModifiedDate":"2022-02-10"},{"lineNumber":146,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":147,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":148}},{"path":"src/main/java/myboss/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":" * Represents a task. A Task Object corresponds to a task represented by a name, type","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":" * and whether it is done or not.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    private boolean isDone;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    private String taskName;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    private String taskType;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"     * Creates a Task Object with the specified task name and task type.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     * @param taskName name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * @param taskType type of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    public Task(String taskName, String taskType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"     * Creates a Task Object with the specified task name, task type and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     * @param taskName name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * @param taskType type of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    public Task(String taskName, String taskType, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"        return taskName;","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"        return taskType;","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"        return isDone;","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"    public void setIsDone(boolean bool) {","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"        this.isDone \u003d bool;","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"     * Returns the string output of a task when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is to be marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"     * @return string output of the task when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"    public String markAsDone(boolean isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"            return \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \"","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"                    + \"    [\" + (this.isDone ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"                    + this.taskName;","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + \"  \"","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"                    + \"    [\" + (this.isDone ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"                    + this.taskName;","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"                + this.taskName + \"\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"            return false;","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"        return isDone \u003d\u003d task.isDone","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"                \u0026\u0026 Objects.equals(taskName, task.taskName)","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"                \u0026\u0026 Objects.equals(taskType, task.taskType);","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"joszx":94}},{"path":"src/main/java/myboss/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"import java.util.List;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    private static int size \u003d 0;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     * Creates a TaskList Object with the specified taskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        this.size \u003d taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     * @return list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"        return taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"     * @return size of task list","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"    public static int getSize() {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"        return size;","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"     * Returns the task at the specified index","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"     * @param index index of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"     * @return task at specified index.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"     * Adds the specified task to the task list and increments the size.","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"     * @param task task to be added to the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"        size++;","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"     * Returns the deleted task at specified index.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"     * @return deleted task.","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"    public Task deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"        size--;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"        return taskList.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"     * returns the list of tasks with keyword in name","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"     * @param keyword keyword to find","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"     * @return list of tasks with specified keyword in name","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"        List\u003cTask\u003e res \u003d taskList.stream()","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"                .filter(curr -\u003e curr.getTaskName().contains(keyword))","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"                .collect(toList());","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"        return res;","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":86}},{"path":"src/main/java/myboss/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":" * Represents a task of type T.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"     * Creates a ToDo task Object of the specified name.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"     * @param taskName name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * Creates a ToDo task Object of the specified name and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"     * @param taskName name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"        super(taskName, \"T\", isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     * Returns string output of a ToDo Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is to be marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * @return string output of a ToDo Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"    public String markAsDone(boolean isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"            setIsDone(true);","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"            return \" Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \"","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"                    + \"     [\" + this.getTaskType() + \"]\" + //[T]","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.getIsDone() ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"                    this.getTaskName();","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"            setIsDone(false);","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + \"  \"","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"                    + \"     [\" + this.getTaskType() + \"]\" //[T]","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"                    + \"[\" + (this.getIsDone() ? \"X\" : \" \") + \"] \" // [X]","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"                    + this.getTaskName();","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"        return \"[\" + this.getTaskType() + \"]\"","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"                + \"[\" + (getIsDone() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"                + this.getTaskName() + \"\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"        return super.equals(o);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"joszx":61}},{"path":"src/main/java/myboss/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import java.util.List;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":" * Represents a user interface.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    static final String INDENT \u003d \"    \";","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    static final String UNKNOWN_COMMAND_EXCEPTION_MSG \u003d \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"    static final String MISSING_TIME_ARGUMENT_EXCEPTION_MSG \u003d \"OOPS!!! Argument after missing /at or /by!!!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    static final String MISSING_ARGUMENT_EXCEPTION_MSG \u003d \"OOPS!!! I think you\u0027re missing some arguments!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    static final String WRONG_DATE_FORMAT_EXCEPTION_MSG \u003d \"Date must be of format yyyy-mm-dd!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"    static final String INDEX_OUT_OF_BOUNDS_EXCEPTION_MSG \u003d \"OOPS!!! Index out of bounds!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    static final String APPEND_TO_FILE_EXCEPTION_MSG \u003d \"Error appending task to text file!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    static final String FILE_NOT_FOUND_EXCEPTION_MSG \u003d \"Error file not found!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"    static final String FILE_CREATION_EXCEPTION_MSG \u003d \"An Error has occurred with file creation!\";","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    static final String CLEAR_FILE_EXCEPTION_MSG \u003d \"Error clearing File\";","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"     * Outputs the given task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"     * @param taskList the specified list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"     * @return returns the string representation of task list.","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    public String outputTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"        StringBuilder tempOut \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"        tempOut.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"            tempOut.append(INDENT).append((i + 1) + \".\").append(taskList.get(i).toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        return tempOut.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"     * Output the given list of tasks that have been found with the find command.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"     * @param taskList the specified list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"     * @return string representation of list of found tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"    public String outputFoundTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"        StringBuilder tempOut \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"        tempOut.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"            tempOut.append(INDENT).append((i + 1) + \".\").append(taskList.get(i).toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"        return tempOut.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"     * Output the given task as marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"     * @param task the specified task marked as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"     * @return string output when a task is marked as done.","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    public String outputMarked(Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"        return task.markAsDone(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"     * Output the given task as unmarked.","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"     * @param task the specified task marked as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"     * @return string output when a task is marked as not done.","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"    public String outputUnmarked(Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"        return task.markAsDone(false);","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"     * Output the predefined output when adding a task.","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"     * @param task task added.","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"     * @return string output after adding a new task.","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"    String addTaskOutput(Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"        output.append(\"Got it. I\u0027ve added this task:\\n\")","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"                .append(INDENT + \"   \" + task)","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"                .append(\"Now you have \" + TaskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"        return output.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"     * Output the predefined output when deleting a task.","lastModifiedDate":"2022-02-03"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"     * @param task task deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"     * @return string output after deleting a task.","lastModifiedDate":"2022-02-04"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"    String outputDeleteTask(Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"        output.append(\"Noted. I\u0027ve removed this task:\\n\")","lastModifiedDate":"2022-02-04"},{"lineNumber":95,"author":{"gitId":"joszx"},"content":"                .append(INDENT + \"   \" + task)","lastModifiedDate":"2022-02-04"},{"lineNumber":96,"author":{"gitId":"joszx"},"content":"                .append(\"Now you have \" + TaskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"joszx"},"content":"        return output.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":99}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"joszx":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"myboss.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"joszx":19}},{"path":"src/test/java/myboss/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"class ParserTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    void testSplitUserCmd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"        String input \u003d \"todo borrow book\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"        String[] expected \u003d {\"todo\", \"borrow book\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"        assertArrayEquals(expected, Parser.splitUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    void testGetTaskIndex() {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"        String[] input \u003d {\"mark\", \"3\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"        int expected \u003d 2;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        assertEquals(expected, Parser.getTaskIndex(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    void testGetRemainingUserCmd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"        String[] input \u003d {\"todo\", \"borrow book\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"        String expected \u003d \"borrow book\";","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"        assertEquals(expected, Parser.getRemainingUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"    void getRemainingUserCmd_exitCommand_emptyString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"        String[] input \u003d {\"bye\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"        assertEquals(expected, Parser.getRemainingUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"    void testParseDeadlineUserCmd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"        String input \u003d \"return book /by 2023-10-01\";","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"        String[] expected \u003d {\"return book\", \"2023-10-01\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"        assertArrayEquals(expected, Parser.parseDeadlineUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"    void testParseEventUserCmd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"        String input \u003d \"return book /at 2023-10-01 2pm\";","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"        String[] expected \u003d {\"return book\", \"2023-10-01 2pm\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"        assertArrayEquals(expected, Parser.parseEventUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"joszx":51}},{"path":"src/test/java/myboss/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"class StorageTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    void testClearTaskFile() throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"        Storage s \u003d new Storage(\"./test/StorageTest.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"        assertEquals(s.clearTaskFile(), true);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    void testAppendTaskToFile() throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"        Storage s \u003d new Storage(\"./test/StorageTest.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"        assertEquals(s.appendTaskToFile(new ToDo(\"Test Todo 1\")), true);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        assertEquals(s.appendTaskToFile(new Event(\"Test Event 2\", \"2023-10-01 2pm\")), true);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        assertEquals(s.appendTaskToFile(new Deadline(\"Test Deadline 3\", \"2023-10-02\")), true);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    void testLoadTaskListFromFile() throws MyBossException {","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"        Storage s \u003d new Storage(\"./test/StorageTest.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"        taskList.add(new ToDo(\"Test Todo 1\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"        taskList.add(new Event(\"Test Event 2\", \"2023-10-01 2pm\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"        taskList.add(new Deadline(\"Test Deadline 3\", \"2023-10-02\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"        assertEquals(s.loadTaskListFromFile(), taskList);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"joszx":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"joszx":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"java -classpath ../bin MyBoss \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joszx":1,"-":37}}]
