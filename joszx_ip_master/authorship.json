[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"    mainClassName \u003d \"myboss.MyBoss\"","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"    archiveBaseName \u003d \"myboss\"","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joszx":2,"-":44}},{"path":"src/main/java/myboss/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" * Represents a task with a specified date as deadline. A deadline Object corresponds","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":" * to a task with a specified date.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    LocalDate deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"     * Creates an undone Deadline Task Object with the specified task name and deadline.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"     * Creates a Deadline Task Object with the specified task name, deadline and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     * @param deadline deadline of task","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"    public Deadline(String taskName, String deadline, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"        super(taskName, \"D\", isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"     * Returns string output of a Deadline Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is to be marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"     * @return string output of Deadline Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"    public String markAsDone(boolean isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"            return  \" Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"                    \"     [\" + this.taskType + \"]\" + //[T]","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"                    this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + \"  \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"                    \"     [\" + this.taskType + \"]\" + //[T]","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"                    this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"LLL dd yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"        String deadlineFormatted \u003d deadline.format(formatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"        return \"[\" + this.taskType + \"]\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"                \"[\" + (isDone ? \"X\" : \" \") + \"] \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"                this.taskName +","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"                \" (by: \" + deadlineFormatted + \")\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"                \"\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"        if (!super.equals(o)) return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"        Deadline deadline1 \u003d (Deadline) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"        return Objects.equals(taskType, deadline1.taskType) \u0026\u0026 Objects.equals(deadline, deadline1.deadline);","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"joszx":79}},{"path":"src/main/java/myboss/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" * Represents a task with a specified date and time range of the task. An Event Object","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":" * corresponds to a task with a specified date and time range.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    String timeRange;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"    LocalDate eventDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     * Creates an Event Object with the specified task name and datetime.","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     * @param dateTime date and time of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"    public Event(String taskName, String dateTime) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"        String[] dateTimeSplit \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"        this.eventDate \u003d LocalDate.parse(dateTimeSplit[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"        this.timeRange \u003d dateTimeSplit[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     * Creates an Event Object with the specified task name, datetime and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     * @param dateTime date and time range of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    public Event(String taskName, String dateTime, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"        super(taskName, \"E\", isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"        String[] dateTimeSplit \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"        this.eventDate \u003d LocalDate.parse(dateTimeSplit[0]);","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"        this.timeRange \u003d dateTimeSplit[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"     * Creates an Event Object with the specified task name, date, time range and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"     * @param date date of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"     * @param timeRange time range of the task.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    public Event(String taskName, String date, String timeRange, boolean isDone) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"        super(taskName, \"E\", isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"        this.eventDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"     * Returns the string output of an Event Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is to be marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"     * @return string output of an Event Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"    public String markAsDone(boolean isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"            return  \" Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"                    \"     [\" + this.taskType + \"]\" + //[T]","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"                    this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + \"  \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"                    \"     [\" + this.taskType + \"]\" + //[T]","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"                    this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"LLL dd yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"        String eventDateFormatted \u003d eventDate.format(formatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"        return \"[\" + this.taskType + \"]\"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"                + \"[\" + (isDone ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"                + this.taskName","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"                + \" (at: \" + eventDateFormatted + \" \" + this.timeRange + \")\" +","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"                \"\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"        if (!super.equals(o)) return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"joszx"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"joszx"},"content":"        return Objects.equals(timeRange, event.timeRange) \u0026\u0026 Objects.equals(eventDate, event.eventDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"joszx":98}},{"path":"src/main/java/myboss/MyBoss.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":" * Represents the Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":" * A MyBoss Object corresponds to a Personal Assistant Chatbot.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"public class MyBoss {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"     * Creates a MyBoss Object with the specified file path for saving tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     * @param filePath path to file where tasks will be saved.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"    public MyBoss(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        tasks \u003d new TaskList(storage.loadTaskListFromFile());","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"     * Logic of the Personal Assistant Chatbot that receives input and acts accordingly.","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    public void run() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"        ui.outputGreeting();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"        while (true) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"            String userCmd \u003d ui.getUserCmd();","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"            String[] userCmdSplit \u003d Parser.splitUserCmd(userCmd);","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"            String command \u003d userCmdSplit[0];","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"            String remainingUserInput \u003d Parser.getRemainingUserCmd(userCmdSplit);","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"                switch (command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"                case \"bye\":","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"                    storage.updateFile(tasks.getTaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"                    ui.outputFarewell();","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"                    System.exit(0);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"                case \"list\":","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"                    ui.outputTaskList(tasks.getTaskList());","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"                    //fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"                    // fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"                    int currTaskIndex \u003d Parser.getTaskIndex(userCmdSplit);","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"                    Task currTask \u003d tasks.get(currTaskIndex);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"                    if (command.equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"                        ui.outputMarked(currTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"                    } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"                        ui.outputUnmarked(currTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"                    } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"                        ui.outputDeleteTask(tasks.deleteTask(currTaskIndex));","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"                    ToDo newToDo \u003d new ToDo(remainingUserInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"                    tasks.addTask(newToDo);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"                    ui.addTaskOutput(newToDo);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"                    String[] parsedDeadline \u003d Parser.parseDeadlineUserCmd(remainingUserInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"                    String deadlineName \u003d parsedDeadline[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"                    String timeBy \u003d parsedDeadline[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"                    Deadline newDeadline \u003d new Deadline(deadlineName, timeBy);","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"                    tasks.addTask(newDeadline);","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"                    ui.addTaskOutput(newDeadline);","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"                case \"event\":","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"                    String[] parsedEvent \u003d Parser.parseEventUserCmd(remainingUserInput);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"                    String eventName \u003d parsedEvent[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"                    String timeRange \u003d parsedEvent[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"                    Event newEvent \u003d new Event(eventName, timeRange);","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"                    tasks.addTask(newEvent);","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"                    ui.addTaskOutput(newEvent);","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"                case \"find\":","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"                    ui.outputFoundTasks(tasks.findTasks(remainingUserInput));","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"                    break;","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"                default:","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"                    throw new MyBossException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"            } catch (StringIndexOutOfBoundsException ex) {","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"                Ui.outputMyBoss(\" OOPS!!! Argument after missing /at or /by!!!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"                Ui.outputMyBoss(\" OOPS!!! I think you\u0027re missing some arguments!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"            } catch (MyBossException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"joszx"},"content":"                Ui.outputMyBoss(e.getMessage());","lastModifiedDate":"2022-02-03"},{"lineNumber":96,"author":{"gitId":"joszx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"joszx"},"content":"                Ui.outputMyBoss(\"Date must be of format yyyy-mm-dd!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"joszx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"joszx"},"content":"        new MyBoss(\"./data/tasks.txt\").run();","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":105}},{"path":"src/main/java/myboss/MyBossException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":" * Represents an Exception from the MyBoss program. A MyBossException Object corresponds","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":" * to an exception thrown by the MyBoss Object.","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"public class MyBossException extends Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"    public MyBossException(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"joszx":12}},{"path":"src/main/java/myboss/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":" * A Parser that provides parsing methods.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"public class Parser {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"     * Returns a string array that contains the first word of userCmd and the remaining string","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"     * as the first and second index of the array respectively.","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"     * @param userCmd user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"     * @return first word and remaining string split.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    public static String[] splitUserCmd(String userCmd) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"        return userCmd.split(\" \",2);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"     * Returns the task index of the task number specified by the userCmd.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"     * @param userCmd user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"     * @return index of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    public static int getTaskIndex(String[] userCmd) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"        return Integer.parseInt(userCmd[1]) - 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * Returns the remaining string from a split user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     * @param userCmd split user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"     * @return remaining string from split user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    public static String getRemainingUserCmd(String[] userCmd) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"        if (userCmd.length \u003e 1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"            return userCmd[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"            return \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"     * Returns the parsed input of a deadline command by removing /by and separating the remaining string","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"     * into the task name and deadline.","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"     * @param userCmd user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"     * @return parsed input of a deadline command.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    public static String[] parseDeadlineUserCmd(String userCmd) {","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"        String taskName \u003d userCmd.substring(0, userCmd.indexOf(\"/by\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"        String timeBy \u003d userCmd.substring(userCmd.indexOf(\"/by\") + 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"        return new String[] {taskName, timeBy};","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"     * Returns the parsed input of an event command by removing /at and separating the remaining string","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"     * into the task name and time range.","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"     * @param userCmd user command.","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"     * @return parsed input of an event command.","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"    public static String[] parseEventUserCmd(String userCmd) {","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"        String taskName \u003d userCmd.substring(0, userCmd.indexOf(\"/at\") - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"        String timeRange \u003d userCmd.substring(userCmd.indexOf(\"/at\") + 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"        return new String[] {taskName, timeRange};","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":68}},{"path":"src/main/java/myboss/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.io.File;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":" * Represents a storage with specified file path.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"    private String filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     * Creates a Storage Object. Creates directory and file as specified in file path if","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"     * it does not already exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"     * @param filePath path to file.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"        createDirAndFileIfNonExistent();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * Appends the specified task to the storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     * @param task task specified.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"     * @return whether the task was appended successfully.","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"    public boolean appendTaskToFile(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"            String stringToAppend \u003d task.taskType + \"|\" + task.isDone + \"|\" + task.taskName;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"            switch (task.taskType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"                case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"                    // typecasting because only an event would have taskType \"E\"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"                    stringToAppend \u003d stringToAppend + \"|\" + event.eventDate + \"|\" + event.timeRange;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"                case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"                    // typecasting because only a deadline would have taskType \"D\"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"                    Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"                    stringToAppend \u003d stringToAppend + \"|\" + deadlineTask.deadline;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"                    break;","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"            fw.write(stringToAppend + System.lineSeparator());","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"            fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"            Ui.outputMyBoss(\"Error appending task to text file!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"            return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"     * Clears the storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"     * @return whether the clear was successful.","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"    public boolean clearTaskFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"            fw.write(\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"            fw.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"            Ui.outputMyBoss(\"Error clearing DB\");","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"            return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"     * Creates directory and file as in the file path if it does not already exist.","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"     * @return whether the directory and file was created successfully.","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"    public boolean createDirAndFileIfNonExistent() {","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"            File fileObj \u003d new File(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"            File parentFile \u003d fileObj.getParentFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"            if (!parentFile.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"                parentFile.mkdir();","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"            if (!fileObj.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"                fileObj.createNewFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"            return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"            Ui.outputMyBoss(\"An Error has occurred with file creation!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"joszx"},"content":"            return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"joszx"},"content":"     * Loads the list of tasks from storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"joszx"},"content":"     * @return the ArrayList of tasks loaded from storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"joszx"},"content":"    public ArrayList\u003cTask\u003e loadTaskListFromFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"joszx"},"content":"        // get taskList from file","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"joszx"},"content":"        ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"joszx"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"joszx"},"content":"            File dbObj \u003d new File(filePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"joszx"},"content":"            if (!dbObj.exists()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"joszx"},"content":"                createDirAndFileIfNonExistent();","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"joszx"},"content":"                return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"joszx"},"content":"            Scanner s \u003d new Scanner(dbObj);","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"joszx"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"joszx"},"content":"                String currLine \u003d s.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"joszx"},"content":"                String[] currLineSplit \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"joszx"},"content":"                String taskType \u003d currLineSplit[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"joszx"},"content":"                boolean isDone \u003d currLineSplit[1].equals(\"true\");","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"joszx"},"content":"                String taskName \u003d currLineSplit[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"joszx"},"content":"                if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"joszx"},"content":"                    tempTaskList.add(new Event(taskName,","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"joszx"},"content":"                            currLineSplit[3], currLineSplit[4], isDone));","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"joszx"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"joszx"},"content":"                    tempTaskList.add(new Deadline(taskName, currLineSplit[3], isDone));","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"joszx"},"content":"                } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"joszx"},"content":"                    tempTaskList.add(new ToDo(taskName, isDone));","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"joszx"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"joszx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"joszx"},"content":"            Ui.outputMyBoss(\"Error file not found!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"joszx"},"content":"        return tempTaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"joszx"},"content":"     * Overwrites the storage file with the specified list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"joszx"},"content":"     * @param taskList list of tasks to be written into the storage file.","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"joszx"},"content":"    public void updateFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"joszx"},"content":"        createDirAndFileIfNonExistent();","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"joszx"},"content":"        clearTaskFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"joszx"},"content":"        taskList.forEach((task)","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"joszx"},"content":"                -\u003e appendTaskToFile(task));","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":147}},{"path":"src/main/java/myboss/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":" * Represents a task. A Task Object corresponds to a task represented by a name, type","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":" * and whether it is done or not.","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    boolean isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    String taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    String taskType;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"     * Creates a Task Object with the specified task name and task type.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"     * @param taskName name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * @param taskType type of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    public Task(String taskName, String taskType) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"     * Creates a Task Object with the specified task name, task type and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     * @param taskName name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * @param taskType type of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    public Task(String taskName, String taskType, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"     * Returns the string output of a task when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is to be marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"     * @return string output of the task when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"    public String markAsDone(boolean isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"            return  \" Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"                    \"     [\" + (this.isDone ? \"X\" : \" \") + \"] \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"                    this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + \"  \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"                    \"     [\" + (this.isDone ? \"X\" : \" \") + \"] \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"                    this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"                this.taskName + \"\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"        return isDone \u003d\u003d task.isDone","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"                \u0026\u0026 Objects.equals(taskName, task.taskName)","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"                \u0026\u0026 Objects.equals(taskType, task.taskType);","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"joszx":74}},{"path":"src/main/java/myboss/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":" * Represents a list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"public class TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    public static int size \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"     * Creates a TaskList Object with the specified taskList.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"        this.size \u003d taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"     * @return list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"        return taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"     * @return size of task list","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"    public static int getSize() {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"        return size;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"     * Returns the task at the specified index","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"     * @param index index of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"     * @return task at specified index.","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"        return taskList.get(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"     * Adds the specified task to the task list and increments the size.","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"     * @param task task to be added to the task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"        size++;","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"     * Returns the deleted task at specified index.","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"     * @return deleted task.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"        size--;","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"        return taskList.remove(index);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"            Task curr \u003d taskList.get(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"            if (curr.taskName.contains(keyword)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"                res.add(curr);","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"        return res;","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":81}},{"path":"src/main/java/myboss/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":" * Represents a task of type T.","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"     * Creates a ToDo task Object of the specified name.","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"     * @param taskName name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"     * Creates a ToDo task Object of the specified name and whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"     * @param taskName name of task.","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is done.","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"        super(taskName, \"T\", isDone);","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"     * Returns string output of a ToDo Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"     * @param isDone whether task is to be marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * @return string output of a ToDo Object when marked as done or not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"    public String markAsDone(boolean isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"            return  \" Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"                    \"     [\" + this.taskType + \"]\" + //[T]","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"                    this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + \"  \" +","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"                    \"     [\" + this.taskType + \"]\" + //[T]","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"                    \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + // [X]","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"                    this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"        return \"[\" + this.taskType + \"]\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"                \"[\" + (isDone ? \"X\" : \" \") + \"] \" +","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"                this.taskName + \"\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"        return super.equals(o);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"joszx":61}},{"path":"src/main/java/myboss/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":" * Represents a user interface.","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"public class Ui {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    static final String INDENT \u003d \"    \";","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    private Scanner scanner;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"     * Creates a Ui Object with a scanner.","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    public Ui() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"     * Outputs the greeting message of the chatbot.","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"    public void outputGreeting() {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"        outputMyBoss(\" Hello! I\u0027m YourBoss.\\n\" +","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"                INDENT +","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"                \" What can you do for me?\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"     * Outputs the farewell message of the chatbot.","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    public void outputFarewell() {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        outputMyBoss(\" Bye. Hope I never see you again!\");","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"        scanner.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"     * Returns the next line of user input.","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"     * @return next line of user input.","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"    public String getUserCmd() {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"     * Outputs the given task list.","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"     * @param taskList the specified list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"joszx"},"content":"    public void outputTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"joszx"},"content":"        StringBuilder tempOut \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"joszx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"joszx"},"content":"            tempOut.append(\" \" + INDENT).append((i + 1) + \".\").append(taskList.get(i).toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"joszx"},"content":"        printlnWithIndent(\" Here are the tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"joszx"},"content":"        System.out.print(tempOut); // newline in tempOut","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"joszx"},"content":"     * Output the given list of tasks that have been found with the find command.","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"joszx"},"content":"     * @param taskList the specified list of tasks.","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"joszx"},"content":"    public void outputFoundTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"joszx"},"content":"        StringBuilder tempOut \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"joszx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"joszx"},"content":"            tempOut.append(\" \" + INDENT).append((i + 1) + \".\").append(taskList.get(i).toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"joszx"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"joszx"},"content":"        printlnWithIndent(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"joszx"},"content":"        System.out.print(tempOut); // newline in tempOut","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"joszx"},"content":"     * Output the given task as marked.","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"joszx"},"content":"     * @param task the specified task marked as done.","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"joszx"},"content":"    public void outputMarked(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"joszx"},"content":"        outputMyBoss(task.markAsDone(true));","lastModifiedDate":"2022-02-03"},{"lineNumber":86,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"joszx"},"content":"     * Output the given task as unmarked.","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"joszx"},"content":"     * @param task the specified task marked as not done.","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"joszx"},"content":"    public void outputUnmarked(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"joszx"},"content":"        outputMyBoss(task.markAsDone(false));","lastModifiedDate":"2022-02-03"},{"lineNumber":95,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"joszx"},"content":"     * Output a formatted line break.","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"joszx"},"content":"    static void horizontalLineBreak() {","lastModifiedDate":"2022-02-03"},{"lineNumber":101,"author":{"gitId":"joszx"},"content":"        System.out.println(INDENT +\"____________________________________________________________\");","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"joszx"},"content":"     * Outputs the given input with the predefined indent.","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"joszx"},"content":"     * @param input input to print.","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"joszx"},"content":"    static void printlnWithIndent(String input) {","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"joszx"},"content":"        System.out.print(INDENT);","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"joszx"},"content":"        System.out.println(input);","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"joszx"},"content":"     * Output the given string in a standardized format.","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"joszx"},"content":"     * @param output string to be outputted.","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"joszx"},"content":"    static void outputMyBoss(String output) {","lastModifiedDate":"2022-02-03"},{"lineNumber":120,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":121,"author":{"gitId":"joszx"},"content":"        printlnWithIndent(output);","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":123,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"joszx"},"content":"     * Output the predefined output when adding a task.","lastModifiedDate":"2022-02-03"},{"lineNumber":127,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":128,"author":{"gitId":"joszx"},"content":"     * @param task task added.","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"joszx"},"content":"    void addTaskOutput(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":132,"author":{"gitId":"joszx"},"content":"        printlnWithIndent(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"joszx"},"content":"        System.out.print(INDENT + \"   \" + task);","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"joszx"},"content":"        printlnWithIndent(\" Now you have \"+ TaskList.getSize() +\" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":136,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"joszx"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"joszx"},"content":"     * Output the predefined output when deleting a task.","lastModifiedDate":"2022-02-03"},{"lineNumber":140,"author":{"gitId":"joszx"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"joszx"},"content":"     * @param task task deleted.","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"joszx"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"joszx"},"content":"    void outputDeleteTask(Task task) {","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":145,"author":{"gitId":"joszx"},"content":"        printlnWithIndent(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"joszx"},"content":"        System.out.print(INDENT + \"   \" + task);","lastModifiedDate":"2022-01-28"},{"lineNumber":147,"author":{"gitId":"joszx"},"content":"        printlnWithIndent(\" Now you have \"+ TaskList.getSize() +\" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"joszx"},"content":"        horizontalLineBreak();","lastModifiedDate":"2022-02-03"},{"lineNumber":149,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"joszx":150}},{"path":"src/test/java/myboss/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"class ParserTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    void testSplitUserCmd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"        String input \u003d \"todo borrow book\";","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"        String[] expected \u003d {\"todo\", \"borrow book\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"        assertArrayEquals(expected, Parser.splitUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    void testGetTaskIndex() {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"        String[] input \u003d {\"mark\", \"3\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"        int expected \u003d 2;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        assertEquals(expected, Parser.getTaskIndex(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    void testGetRemainingUserCmd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"        String[] input \u003d {\"todo\", \"borrow book\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"        String expected \u003d \"borrow book\";","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"        assertEquals(expected, Parser.getRemainingUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"    void getRemainingUserCmd_exitCommand_emptyString() {","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"        String[] input \u003d {\"bye\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"joszx"},"content":"        assertEquals(expected, Parser.getRemainingUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"joszx"},"content":"    void testParseDeadlineUserCmd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"joszx"},"content":"        String input \u003d \"return book /by 2023-10-01\";","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"joszx"},"content":"        String[] expected \u003d {\"return book\", \"2023-10-01\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"joszx"},"content":"        assertArrayEquals(expected, Parser.parseDeadlineUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"joszx"},"content":"    void testParseEventUserCmd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"joszx"},"content":"        String input \u003d \"return book /at 2023-10-01 2pm\";","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"joszx"},"content":"        String[] expected \u003d {\"return book\", \"2023-10-01 2pm\"};","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"joszx"},"content":"        assertArrayEquals(expected, Parser.parseEventUserCmd(input));","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"joszx":51}},{"path":"src/test/java/myboss/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"package myboss;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"joszx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"joszx"},"content":"class StorageTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"joszx"},"content":"    void testClearTaskFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"joszx"},"content":"        Storage s \u003d new Storage(\"./test/StorageTest.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"joszx"},"content":"        assertEquals(s.clearTaskFile(),true);","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"joszx"},"content":"    void testAppendTaskToFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"joszx"},"content":"        Storage s \u003d new Storage(\"./test/StorageTest.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"joszx"},"content":"        assertEquals(s.appendTaskToFile(new ToDo(\"Test Todo 1\")),true);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"joszx"},"content":"        assertEquals(s.appendTaskToFile(new Event(\"Test Event 2\", \"2023-10-01 2pm\")),true);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"joszx"},"content":"        assertEquals(s.appendTaskToFile(new Deadline(\"Test Deadline 3\", \"2023-10-02\")),true);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"joszx"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"joszx"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"joszx"},"content":"    void testLoadTaskListFromFile() {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"joszx"},"content":"        Storage s \u003d new Storage(\"./test/StorageTest.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"joszx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"joszx"},"content":"        taskList.add(new ToDo(\"Test Todo 1\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"joszx"},"content":"        taskList.add(new Event(\"Test Event 2\", \"2023-10-01 2pm\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"joszx"},"content":"        taskList.add(new Deadline(\"Test Deadline 3\", \"2023-10-02\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"joszx"},"content":"        assertEquals(s.loadTaskListFromFile(),taskList);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"joszx"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"joszx"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"joszx":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joszx"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"joszx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"joszx"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"joszx"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"joszx"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"joszx":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"joszx"},"content":"java -classpath ../bin MyBoss \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joszx":1,"-":37}}]
