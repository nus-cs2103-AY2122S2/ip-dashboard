[{"path":"src/main/java/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * Represents the \u0027add\u0027 instruction to Duke.","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"final class Add extends Instruction{","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    private Task task;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"     * Constructor for an add instruction.","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"    protected Add(Task task) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"        super.setDescription(\"add\");","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"     * Adds the task into the task manager, and return the message when the action is done.","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"     * @return The message.","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"    protected String act() {","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"        return TaskManager.addTask(this.task);","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":28}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * Represents a deadline, which has to be done within a specific date/time.","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"final class Deadline extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    // At this stage, the due time is treated as a string.","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"    private String dueTime;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     * Initializes a deadline with a name (description).","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     * @param description The name of the task.","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"     * @param dueTime     The due time for the deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"    private Deadline(String description, String dueTime) {","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"    private Deadline(String[] details) {","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"        this(details[0], details[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"     * The constructor to be called. Instantiates an event using a single string containing all the details.","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"     * @param details Contains the description and time range for the deadline.","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"    protected Deadline(String details) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"        this(parseDetails(details));","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"     * Parses the details containing the event description and due time.","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"     * (The details will be encapsulated in a separated class in the future if needed).","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"     * @param details The string containing the event description and due time.","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"     * @return An array of strings containing the description and due time.","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"    private static String[] parseDetails(String details) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"        String[] args \u003d details.split(\" /by \", 2);","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"                    \"Oops, both of the description and the due time of the deadline can\u0027t be empty.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"AinsleyJ"},"content":"        return args;","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"AinsleyJ"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"AinsleyJ"},"content":"        return \"[D]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"AinsleyJ"},"content":"     * Converts a deadline to a string.","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"AinsleyJ"},"content":"     * @return The string that represents the deadline.","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"AinsleyJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"AinsleyJ"},"content":"        return super.toString() + \" (by \" + this.dueTime + \")\";","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":69}},{"path":"src/main/java/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"final class Delete extends Instruction {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":"    int toDeleteIndex;","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"    Task toDelete;","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"     * Instantiates an instruction \"delete\", with the given line of instruction.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"     * @param instruction The line of instruction for deletion, starting with \u0027delete\u0027.","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     * @throws IllegalArgumentException If the given instruction does not contain a valid index.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"    protected Delete(String instruction) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"        this(parseInstruction(instruction));","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"    private Delete(int index) {","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"        super.setDescription(\"delete\");","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"        this.toDeleteIndex \u003d index;","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"        this.toDelete \u003d TaskManager.getTaskIndex(index);","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"    private static int parseInstruction(String instruction) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"        String[] args \u003d instruction.split(\" \");","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"        int index;","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, the index of the task to be deleted cannot be empty!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"        } else if (args.length \u003e 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, there should be only one index of task after \u0027delete\u0027.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"            index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, delete operation only accepts integer index!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"        if (!TaskManager.isValidIndex(index)) {","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, the task provided doesn\u0027t exist!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"        return index;","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"     * Performs deletion of the task.","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"     * @return The message after deletion.","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"AinsleyJ"},"content":"    protected String act() {","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"        TaskManager.deleteIndex(toDeleteIndex);","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"AinsleyJ"},"content":"        return \"You have successfully deleted:\\n\" + this.toDelete.toString();","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"AinsleyJ":58}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello, this is Duke!\\nWhat can I do for you today?\";","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"    private static final String END_MESSAGE \u003d \"Bye!\";","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"        InstructionHandler taskHandler \u003d new InstructionHandler();","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"        taskHandler.doInstructions();","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AinsleyJ":9,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * Represents an event, which has a start time and end time.","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"final class Event extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"    // At this stage, the time range is treated as a string.","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    private String timeRange;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"     * Initializes an event with a name (description) and a time range.","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"     * @param description The name of the task.","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     * @param timeRange   The range of time associated with the event.","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"    private Event(String description, String timeRange) {","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"    private Event(String[] details) {","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"        this(details[0], details[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"     * The constructor to be called. Instantiates an event using a single string containing all the details.","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"     * @param details Contains the description and time range for the event.","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"    protected Event(String details) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"        this(parseDetails(details));","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"        return \"[E]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"     * Parses the details containing the event description and time range.","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"     * (The details will be encapsulated in a separated class in the future if needed).","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"     * @param details The string containing the event description and time range.","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"     * @return An array of strings containing the description and time range.","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"    private static String[] parseDetails(String details) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"        String[] args \u003d details.split(\" /at \", 2);","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"AinsleyJ"},"content":"                    \"Oops, both of the description and the time of the event can\u0027t be empty.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"AinsleyJ"},"content":"        return args;","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"AinsleyJ"},"content":"     * Converts an event to a string.","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"AinsleyJ"},"content":"     * @return The string that represents the event.","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"AinsleyJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"AinsleyJ"},"content":"        return super.toString() + \" (at \" + this.timeRange + \")\";","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":70}},{"path":"src/main/java/Instruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * A task represents an instruction inputted to Duke by a user.","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" * At this stage, a task has minimally a name (description).","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"abstract class Instruction {","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"    private String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    private static final String TERMINATE_INSTRUCTION \u003d \"bye\";","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"    protected static String getTerminateInstruction() {","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"        return TERMINATE_INSTRUCTION;","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"     * Factory method. Create an instance of subclass of instructions according to the string inputted, and returns it.","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"     * The instruction must have at least one word.","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"     * @param instruction The line of command.","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"     * @return A corresponding instance of instruction.","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"    protected static Instruction of(String instruction) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"        // Extract the words in the instruction. The first word should determine the type of instruction to be returned.","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"        String[] words \u003d instruction.split(\" \", 2);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, I don\u0027t know what empty instruction means.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"        String type \u003d words[0];","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"        switch (type) {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"        case \"list\":","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"            return new ListTasks();","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"        case Instruction.TERMINATE_INSTRUCTION:","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"            return new Quit(Instruction.TERMINATE_INSTRUCTION);","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"            // Mark the task as done. If the second parameter is not an integer, or if the task does not exit, throw","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"            // an exception. (To be implemented later)","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"            return new MarkAsDone(instruction);","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"            // Mark the task as not done. If the second parameter is not an integer, or if the task does not exit,","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"            // throw an exception. (To be implemented later)","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"            return new UnmarkAsDone(instruction);","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"AinsleyJ"},"content":"        case \"event\":","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"AinsleyJ"},"content":"            // These three cases are used to add tasks of different types.","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"            return new Add(Task.of(instruction));","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"            return new Delete(instruction);","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"AinsleyJ"},"content":"        default:","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, I\u0027m not sure what you mean.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"AinsleyJ"},"content":"    protected void setDescription(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"AinsleyJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"AinsleyJ"},"content":"     * @return the description of the instruction.","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"AinsleyJ"},"content":"    protected String getDescription() {","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"AinsleyJ"},"content":"        return this.description;","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"AinsleyJ"},"content":"     * Performs the associated action of the task. By default, there is no action associated to a task.","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"AinsleyJ"},"content":"     * @return The message once the instruction is executed.","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"AinsleyJ"},"content":"    protected abstract String act();","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":74}},{"path":"src/main/java/InstructionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":" * Handles instructions from system IO, and chooses the action to perform accordingly.","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"class InstructionHandler {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    private final String TERMINATE_INSTRUCTION \u003d Instruction.getTerminateInstruction();","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"    private final String OUTPUT_PREFIX \u003d \"\u003e\u003e \";","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     * Receives the instructions from user, and performs them one by one and prints the message, until a terminating","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"     * instruction is received.","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"    protected void doInstructions() throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"        Instruction nextInstruction;","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"        while (true) {","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"            try {","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"                nextInstruction \u003d Instruction.of(sc.nextLine());","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"                System.out.println(OUTPUT_PREFIX + \"Try again please:\");","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"                continue;","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"            System.out.println(OUTPUT_PREFIX + nextInstruction.act());","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"            if (nextInstruction.getDescription().equals(TERMINATE_INSTRUCTION)) {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"                // Current instruction terminates the program.","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"                break;","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":41}},{"path":"src/main/java/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"import java.util.*;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":" * Represents the instruction \"list\".","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"final class ListTasks extends Instruction {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"     * Constructor of the instruction, adds the description.","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"    protected ListTasks() {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"        super.setDescription(\"list\");","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"     * Performs a search on the list of tasks, and return them as formatted strings.","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"     * @return A list of tasks that are not done yet.","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"    protected String act() {","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"        List\u003cTask\u003e tasks \u003d TaskManager.listOfTasks();","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"        return ListTasks.getTaskList(tasks);","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"     * Obtains the list of tasks, and convert them into a single string.","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"     * @param tasks The list of tasks to be converted.","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"     * @return The converted string.","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"    private static String getTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"        StringBuilder result \u003d new StringBuilder(\"List of tasks:\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"            result.append(\"     \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"        result.append(\"\u003e\u003e Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"        return result.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":44}},{"path":"src/main/java/MarkAsDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * Represents the instruction \"mark as done\".","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"final class MarkAsDone extends Instruction {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    private Task toMark;","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"     * Constructor 1. Initializes the instruction using an index of task.","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"     * @param index The index of the task.","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"    private MarkAsDone(int index) {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"        super.setDescription(\"mark\");","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"        this.toMark \u003d TaskManager.getTaskIndex(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"     * Constructor 2. Takes in the whole instruction line and initializes the MarkAsDone instruction.","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"     * @param instruction The line of instruction. It has to be guaranteed that the first word is \u0027mark\u0027.","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"    protected MarkAsDone(String instruction) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"        this(MarkAsDone.parseInstruction(instruction));","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"     * Takes in a line of instruction (starting with a word that invokes this class), then parses it and returns the","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"     * index of task to be marked.","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"     * @param instruction The line of instruction.","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"     * @return The index of the object to be marked.","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"     * @throws IllegalArgumentException If (i) the instruction has no valid integer to be parsed; or (ii) the index is","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"     * out of range.","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"    private static int parseInstruction(String instruction) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"        String[] args \u003d instruction.split(\" \", 2);","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"        int index;","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, the index of the task to be marked cannot be empty!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"AinsleyJ"},"content":"        } else if (args.length \u003e 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, there should be only one index of task after \u0027mark\u0027.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"            index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"AinsleyJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, mark operation only accepts integer index!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"AinsleyJ"},"content":"        if (!TaskManager.isValidIndex(index)) {","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, the task provided doesn\u0027t exist!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"AinsleyJ"},"content":"        return index;","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"AinsleyJ"},"content":"    protected String act() {","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"AinsleyJ"},"content":"        TaskManager.markAsDone(this.toMark);","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"AinsleyJ"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n     \" + this.toMark.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":68}},{"path":"src/main/java/Quit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * Represents the instruction \u0027quit\u0027.","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"final class Quit extends Instruction {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    private static final String SEE_YOU_MESSAGE \u003d \"Bye!\";","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"     * Constructor, sets the description of the instruction.","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"     * @param message The terminating command that signals the end of program.","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"    protected Quit(String message) {","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"        super.setDescription(message);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"     * @return The see-you message.","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"    protected String act() {","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"        return Quit.SEE_YOU_MESSAGE;","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * Represent a task that is stored by Duke.","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"abstract class Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"    private String description;","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     * Constructor of a task. Sets the description of the task, and set the isDone status to be false by default.","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"    protected Task(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"     * Factory method. Parses the instruction and determines the type of task to be instantiated.","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"     * @param instruction The line of instruction used to create a task.","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"     * @return The instantiated task.","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"     * @throws IllegalArgumentException If the instruction (i) does not contain valid type of task; or (ii) does not","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"     * contain a valid description of task.","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"    protected static Task of(String instruction) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"        String[] args \u003d instruction.split(\" \", 2);","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"        String type \u003d args[0];","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, a type and a description for the task must be provided.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"        // Contains the description and possibly other information about the task.","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"        String details \u003d args[1];","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"        switch (type) {","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"                return new ToDo(details);","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"            case \"event\":","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"AinsleyJ"},"content":"                return new Event(details);","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"AinsleyJ"},"content":"                return new Deadline(details);","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"            default:","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"                // Invalid type.","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"                throw new IllegalArgumentException(\"Oops, the type of the task must be todo/event/deadline.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"AinsleyJ"},"content":"     * Marks the current task as done.","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"AinsleyJ"},"content":"    protected void markAsDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"AinsleyJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"AinsleyJ"},"content":"     * Marks the current task as not done.","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"AinsleyJ"},"content":"    protected void markAsNotDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"AinsleyJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":70,"author":{"gitId":"AinsleyJ"},"content":"     * Obtains the status of the task.","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":72,"author":{"gitId":"AinsleyJ"},"content":"     * @return True if the task is done already, false otherwise.","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":74,"author":{"gitId":"AinsleyJ"},"content":"    protected boolean isDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":75,"author":{"gitId":"AinsleyJ"},"content":"        return this.isDone;","lastModifiedDate":"2022-01-16"},{"lineNumber":76,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":77,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"AinsleyJ"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"AinsleyJ"},"content":"        return this.getTypeIcon() + this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"AinsleyJ"},"content":"     * Gets the icon that represents the status of the task.","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"AinsleyJ"},"content":"     * @return The icon.","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":88,"author":{"gitId":"AinsleyJ"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":89,"author":{"gitId":"AinsleyJ"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":90,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":91,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":92,"author":{"gitId":"AinsleyJ"},"content":"    protected abstract String getTypeIcon();","lastModifiedDate":"2022-01-16"},{"lineNumber":93,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":94,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":94}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":" * An object that stores a list of tasks, performs actions on tasks.","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"public class TaskManager {","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    // A list of tasks stored.","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     * Marks the status of the task as done.","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"     * @param task The task to be operated on.","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"    protected static void markAsDone(Task task) {","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"        task.markAsDone();","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"     * Marks the status of the task as not done.","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"     * @param task The task to be operated on.","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"    protected static void markAsNotDone(Task task) {","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"     * Lists all the tasks.","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"     * @return The list of all the tasks.","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"    protected static ArrayList\u003cTask\u003e listOfTasks() {","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"        return TaskManager.tasks;","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"     * Adds a task into the list.","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"     * @param task","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"     * @return The message after the task is added.","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"    protected static String addTask(Task task) {","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"AinsleyJ"},"content":"        TaskManager.tasks.add(task);","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"        return \"added: \" + task.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"     * Gets the task with the specified index.","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"AinsleyJ"},"content":"     * @param index The index of task to be retrieved (1-indexed).","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"     * @return The retrieved task.","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":56,"author":{"gitId":"AinsleyJ"},"content":"    protected static Task getTaskIndex(int index) {","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"AinsleyJ"},"content":"        return TaskManager.tasks.get(index - 1);","lastModifiedDate":"2022-01-16"},{"lineNumber":58,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":59,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"AinsleyJ"},"content":"     * Checks the validity of a task index.","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"AinsleyJ"},"content":"     * @param index An index of task. (1-indexed)","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"AinsleyJ"},"content":"     * @return True if the index is valid, false otherwise.","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"AinsleyJ"},"content":"    protected static boolean isValidIndex(int index) {","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"AinsleyJ"},"content":"        return (index \u003e 0 \u0026\u0026 index \u003c\u003d TaskManager.tasks.size());","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"AinsleyJ"},"content":"     * Removes the task with specified index.","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":74,"author":{"gitId":"AinsleyJ"},"content":"     * @param toDeleteIndex The index of the task to be deleted. (1-indexed)","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":76,"author":{"gitId":"AinsleyJ"},"content":"    protected static void deleteIndex(int toDeleteIndex) {","lastModifiedDate":"2022-01-17"},{"lineNumber":77,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":78,"author":{"gitId":"AinsleyJ"},"content":"        TaskManager.tasks.remove(toDeleteIndex - 1);","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":80,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":80}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * Represents a to-do task. There is no deadline or timeslot associated.","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"final class ToDo extends Task {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"     * Initializes a to-do item, with a description.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"    protected ToDo(String description) {","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"        super(description);","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"        return \"[T]\";","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":21}},{"path":"src/main/java/UnmarkAsDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"/**","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":" * Represents the instruction \"unmark\".","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":" */","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"final class UnmarkAsDone extends Instruction {","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"    private Task toUnmark;","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"     * Constructor 1. Initializes the instruction using an index of task.","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"     * @param index The index of the task.","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"    private UnmarkAsDone(int index) {","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"        this.toUnmark \u003d TaskManager.getTaskIndex(index);","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"        super.setDescription(\"unmark\");","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"     * Constructor 2. Takes in the whole instruction line and initializes the UnmarkAsDone instruction.","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"     * @param instruction The line of instruction. It has to be guaranteed that the first word is \u0027unmark\u0027.","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"    protected UnmarkAsDone(String instruction) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"        this(UnmarkAsDone.parseInstruction(instruction));","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"AinsleyJ"},"content":"     * Takes in a line of instruction (starting with a word that invokes this class), then parses it and returns the","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"AinsleyJ"},"content":"     * index of task to be marked.","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"     * @param instruction The line of instruction.","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"     * @return The index of the object to be marked.","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"     * @throws IllegalArgumentException If (i) the instruction has no valid integer to be parsed; or (ii) the index is","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"     * out of range.","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"    private static int parseInstruction(String instruction) throws IllegalArgumentException {","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"        String[] args \u003d instruction.split(\" \", 2);","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"        int index;","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, the index of the task to be unmarked cannot be empty!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"        } else if (args.length \u003e 2) {","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, there should be only one index of task after \u0027unmark\u0027.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"        try {","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"            index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, unmark operation only accepts integer index!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"AinsleyJ"},"content":"        if (!TaskManager.isValidIndex(index)) {","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"AinsleyJ"},"content":"            throw new IllegalArgumentException(\"Oops, the task provided doesn\u0027t exist!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"AinsleyJ"},"content":"        return index;","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"AinsleyJ"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"AinsleyJ"},"content":"    protected String act() {","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"AinsleyJ"},"content":"        TaskManager.markAsNotDone(this.toUnmark);","lastModifiedDate":"2022-01-16"},{"lineNumber":65,"author":{"gitId":"AinsleyJ"},"content":"        return \"I\u0027ve marked this task as not done yet:\\n\" + this.toUnmark.toString();","lastModifiedDate":"2022-01-16"},{"lineNumber":66,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"AinsleyJ"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AinsleyJ"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"AinsleyJ"},"content":"todo eat","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":"todo drink water","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"event study /at 3-5 pm","lastModifiedDate":"2022-01-16"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"event sleep /at 10pm - 6am","lastModifiedDate":"2022-01-16"},{"lineNumber":6,"author":{"gitId":"AinsleyJ"},"content":"deadline CS2103T Week 1 commit /by 20 Jan","lastModifiedDate":"2022-01-16"},{"lineNumber":7,"author":{"gitId":"AinsleyJ"},"content":"deadline project /by 25 Jan","lastModifiedDate":"2022-01-16"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"AinsleyJ"},"content":"mark 3","lastModifiedDate":"2022-01-16"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"mark 4","lastModifiedDate":"2022-01-16"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"unmark 3","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"mark 5","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"event run /at 5-7pm","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"deadline homework /by tomorrow","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"todo submit this work","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"list","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"bye","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"AinsleyJ":19}}]
