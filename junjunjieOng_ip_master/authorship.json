[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junjunjieOng":1,"-":45}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":" * Represent the main class of the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"     * @param filePath the directory of save file.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"     * Runs the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"     * @throws DukeException exception thrown when error occurs.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"            try {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"                String[] fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"            } finally {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"                ui.showLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"        new Duke(\"data/dukesave.txt\").run();","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"junjunjieOng":60,"-":2}},{"path":"src/main/java/Duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command that add tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    private Task task;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"     * Adds task into task list and print out message to inform user.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        ui.showTaskAdded(task, tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"     * @return false that user not exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":43}},{"path":"src/main/java/Duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":" * Represents abstract command class that perform different type of commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     * Executes the respective commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"     * @throws DukeException exception thrown when there is error occurs.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"     * @throws IOException exception thrown when there is error occurs.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * returns true if is ExitCommand. Else false.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * @return true if is ExitCommand. Else false.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":33}},{"path":"src/main/java/Duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command that delete tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    private String taskNum;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskNum the task number to be deleted.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    public DeleteCommand(String taskNum) {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     * Deletes task from task list and print out message to inform user.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     * @throws DukeException if user cannot delete tasks or key in wrong input.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"            int currTaskNum \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"            if (tasks.getTaskList().size() \u003e\u003d currTaskNum \u0026\u0026 currTaskNum \u003e 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"                Task currTask \u003d tasks.getTaskList().get(currTaskNum - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"                tasks.deleteTask(currTaskNum - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"                ui.showTaskDeleted(currTask, tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"                ui.showError(\"You don\u0027t have such task\");","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"            ui.showError(\"Error! Please input a task number\");","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"     * @return false that user not exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":56}},{"path":"src/main/java/Duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command that user exit.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"     * Saves the tasks into file and print to inform user.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"        ui.showGoodBye();","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * @return true that user is exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        return true;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":34}},{"path":"src/main/java/Duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command that find tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    private String keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     * @param keyword keyword of the task user want to find.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     * Adds task into task list and print out message to inform user.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"        ArrayList\u003cTask\u003e searchResultList \u003d tasks.findTask(keyword);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        ui.displaySearchResult(searchResultList);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"     * @return false that user not exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":45}},{"path":"src/main/java/Duke/commands/HandleErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command for errors.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class HandleErrorCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    private String errorMsg;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for HandleErrorCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @param errorMsg error message to be display.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public HandleErrorCommand(String errorMsg) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"     * Displays error message to user.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"        ui.showError(errorMsg);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"     * @return false that user not exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":42}},{"path":"src/main/java/Duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command that display list.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"     * Displays the list of tasks the user have.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"        ui.showList(tasks.getTaskList());","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * @return false that user not exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":32}},{"path":"src/main/java/Duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command that mark tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    private String taskNum;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskNum the task number to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public MarkCommand(String taskNum) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"     * Marks the task and print out message to inform user.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"            int currTaskNum \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"            if (tasks.getTaskList().size() \u003e\u003d currTaskNum \u0026\u0026 currTaskNum \u003e 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"                Task currTask \u003d tasks.markTask(currTaskNum);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"                ui.showTaskMarked(currTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"                ui.showError(\"You don\u0027t have such task\");","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"            ui.showError(\"Error! Please input a task number\");","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"     * @return false that user not exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":53}},{"path":"src/main/java/Duke/commands/NotKnownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command that is unknown.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"public class NotKnownCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"     * Prints out the error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        ui.showError(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     * @return false that user not exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":31}},{"path":"src/main/java/Duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.commands;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling command that unmark tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    private String taskNum;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskNum the task number to be marked.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public UnmarkCommand(String taskNum) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"     * Marks the task and print out message to inform user.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     * @param tasks List of the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * @param ui UI that deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * @param storage storage handles the saving and writing to file.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"            int currTaskNum \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"            if (tasks.getTaskList().size() \u003e\u003d currTaskNum \u0026\u0026 currTaskNum \u003e 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"                Task currTask \u003d tasks.unmarkTask(currTaskNum);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"                ui.showTaskUnmarked(currTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"                ui.showError(\"You don\u0027t have such task\");","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"            ui.showError(\"Error! Please input a task number\");","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"     * Checks if the user is exiting the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"     * @return false that user not exiting.","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":53}},{"path":"src/main/java/Duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.HandleErrorCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.NotKnownCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":" * Deals with handling of the user command.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"     * Handles the user inputs.","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     * @param commandList the list of command includes keyword and description.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * @return the respective commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    public static Command parse(String[] commandList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        String firstWord \u003d commandList[0];","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"        String remainingWord \u003d commandList[1].trim();","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"            switch (firstWord) {","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"            case \"list\":","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"                return new ListCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"                if (remainingWord.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"                    return new HandleErrorCommand(\"OOPS!!! The description of a deadline cannot be empty. :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"                String[] deadlineActions \u003d remainingWord.split(\"/by\", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"                Deadline deadlineTask \u003d new Deadline(deadlineActions[0].trim(), deadlineActions[1].trim());","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"                return new AddCommand(deadlineTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"            case \"event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"                if (remainingWord.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"                    return new HandleErrorCommand(\"OOPS!!! The description of a event cannot be empty. :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"                String[] eventActions \u003d remainingWord.split(\"/at\", 2);","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"                Event eventTask \u003d new Event(eventActions[0].trim(), eventActions[1].trim());","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"                return new AddCommand(eventTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"                if (remainingWord.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"                    return new HandleErrorCommand(\"OOPS!!! The description of a todo cannot be empty. :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"                ToDo todoTask \u003d new ToDo(remainingWord);","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"                return new AddCommand(todoTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"                if (remainingWord.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"                    return new HandleErrorCommand(\"OOPS!!! Please input a number. :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"                return new MarkCommand(remainingWord);","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"                if (remainingWord.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"                    return new HandleErrorCommand(\"OOPS!!! Please input a number. :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"                return new UnmarkCommand(remainingWord);","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"                if (remainingWord.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"                    return new HandleErrorCommand(\"OOPS!!! Please input a number. :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"                return new DeleteCommand(remainingWord);","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"            case \"find\":","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"                if (remainingWord.equals(\"\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"                    return new HandleErrorCommand(\"OOPS!!! Please input a number. :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"                return new FindCommand(remainingWord);","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"            default:","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"                return new NotKnownCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"            return new HandleErrorCommand(error.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"            return new HandleErrorCommand(\"Error! Wrong inputs\");","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":88}},{"path":"src/main/java/Duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    private String saveFilePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for Storage.","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"     * @param saveFilePath the directory path for the save file.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    public Storage(String saveFilePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"        this.saveFilePath \u003d saveFilePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"     * Reads the existing file. If there is existing file, then add to the ArrayList.","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"     * @return the the list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"     * @throws DukeException If files cannot be read or created.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"            File saveFile \u003d new File(saveFilePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"            saveFile.getParentFile().mkdir();","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"            Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"                String currLine \u003d scanner.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"                String[] currTaskLine \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"                switch (currTaskLine[0]) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"                case \"T\":","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"                    ToDo todoTask \u003d new ToDo(currTaskLine[2]);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"                    if (currTaskLine[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"                        todoTask.setChecked();","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"                case \"D\":","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"                    Deadline deadlineTask \u003d new Deadline(currTaskLine[2], currTaskLine[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"                    if (currTaskLine[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"                        deadlineTask.setChecked();","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"                case \"E\":","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"                    Event eventTask \u003d new Event(currTaskLine[2], currTaskLine[3]);","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"                    if (currTaskLine[1].equals(\"1\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"                        eventTask.setChecked();","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"                    break;","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"                default:","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"            throw new DukeException(\"Opps! An error occurred. @.@\");","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"        return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"     * Writes the task in task list into the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"     * @throws DukeException if you cannot write into the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"            FileWriter writer \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"                writer.write(taskList.get(i).saveToFileString());","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"            writer.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"            System.out.println(\"An error occurred. @.@\");","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":95}},{"path":"src/main/java/Duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.tasklist;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":" * Contains the task list with operation to modify the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskList list of task the user has.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * Adds the task into task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"     * Deletes the task from the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskNum the task number in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"        taskList.remove(taskNum);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"     * Marks the task in the task list as complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskNum the task number in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"     * @return the task that is mark.","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    public Task markTask(int taskNum) {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"        Task currTask \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"        currTask.setChecked();","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"        return currTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"     * Marks the task in the task list as complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskNum the task number in the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"     * @return the task that is mark.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"    public Task unmarkTask(int taskNum) {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"        Task currTask \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"        currTask.setUnchecked();","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"        return currTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"     * Returns the list of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"     * @return the list of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"        return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"     * Finds the relevant tasks based on input.","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"     * @param input input of the keyword by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"     * @return the list of result that match the input.","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"    public ArrayList\u003cTask\u003e findTask(String input) {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"            if (task.getDescription().toLowerCase().contains(input.toLowerCase())) {","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"                temp.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"        return temp;","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":94}},{"path":"src/main/java/Duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" * Represents the deadline of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"     * @param by by when the deadline end.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"        super(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"        this.date \u003d super.getTaskDate(by);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"        this.time \u003d super.getTaskTime(by);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * Strings representation of Deadline in the save file.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     * @return the formats of the String to be save in the file","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"    public String saveToFileString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        return \"D|\" + (isDone ? \"1|\" : \"0|\") + super.getDescription() + \"|\" + date + \" \"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"                + time + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"     * Strings representation of Deadline.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"     * @return [D] with the status and description of the task,","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"     *         and by when.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"                + \" \" + time + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":51}},{"path":"src/main/java/Duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Represents the event of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     * @param at by when the event at.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"        super(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"        this.date \u003d super.getTaskDate(at);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"        this.time \u003d super.getTaskTime(at);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * Strings representation of Event in the save file.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     * @return the formats of the String to be save in the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    public String saveToFileString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        return \"E|\" + (isDone ? \"1|\" : \"0|\") + super.getDescription() + \"|\" + date + \" \"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"                + time + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"     * Strings representation of event.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"     * @return [E] with the status and description of the task,","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"     *         and at when.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"                + \" \" + time + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":50}},{"path":"src/main/java/Duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" * Represents the task user want to do.","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    protected String description;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"     * Returns X if task is done, else empty.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     * @return \"X\" if task is done, else \" \".","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"     * Returns the description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"     * @return description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"        return description;","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"     * Sets the task that is done to true.","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"    public void setChecked() {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"     * Sets the task that is not done to false.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"    public void setUnchecked() {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"    public abstract String saveToFileString();","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"     * Returns the date that was converted from String to LocalDate.","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"     * @param input The input of date and time by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"     * @return as the date that was input by user instead of String.","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"     * @throws DukeException throws error if the user did not input correct format.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"    public LocalDate getTaskDate(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"            String[] dateList \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"            String dateFormat \u003d \"[dd/MM/yyyy][d/MM/yyyy][dd/M/yyyy][d/MM/yyyy]\";","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"            LocalDate date \u003d LocalDate.parse(dateList[0],","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"                    DateTimeFormatter.ofPattern(dateFormat));","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"            return date;","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"            throw new DukeException(\"ERROR! Please input your date format as dd/mm/yyy\");","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"     * Returns the time that was converted from String to LocalTime.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"     * @param input The input of date and time by user.","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"     * @return as the time that was input by user instead of String.","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"     * @throws DukeException throws error if the user did not input correct format.","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"    public LocalTime getTaskTime(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"            String[] dateList \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"            String timeFormat \u003d \"[HHmm][hha][hhmma][hmma][ha]\";","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"            LocalTime time \u003d LocalTime.parse(dateList[1], DateTimeFormatter.ofPattern(timeFormat));","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"            return time;","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"junjunjieOng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"junjunjieOng"},"content":"            throw new DukeException(\"ERROR! Please input your time format in 24hrs format or AM/PM\");","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"     * The String representation of the Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"     * @return the status and description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"junjunjieOng"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"junjunjieOng"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":108}},{"path":"src/main/java/Duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":" * Represents the Todo things of task.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"     * @param description description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"        super(description);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"     * The String representation of ToDO in the save file.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"     * @return the formats of the String to be save in the file","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    public String saveToFileString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"        return \"T|\" + (isDone ? \"1|\" : \"0|\") + super.getDescription() + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"     * The String representation of ToDo.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     * @return [T] with the status and description of the task.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":36}},{"path":"src/main/java/Duke/ui/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":" * Represents exceptions specific to Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor of DukeException","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"     * @param error error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"    public DukeException(String error) {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"        super(error);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":16}},{"path":"src/main/java/Duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"import duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    private Scanner sc;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"     * Constructor for Ui.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"    public Ui() {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"     * Prints greeting message when user run the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"        String greet \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(greet);","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"     * Reads the user command and return the list commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"     * Command list includes the keyword and description.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"    public String[] readCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"junjunjieOng"},"content":"        String[] commandList \u003d new String[]{sc.next(), sc.nextLine()};","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"junjunjieOng"},"content":"        return commandList;","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"junjunjieOng"},"content":"     * Prints dash lines. For format purpose.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"junjunjieOng"},"content":"    public void showLine() {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(\"----------------------------------\");","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"junjunjieOng"},"content":"     * Prints loading error message.","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"junjunjieOng"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(\"Opps! There is loading error :\u003c\");","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"junjunjieOng"},"content":"     * Prints error message that was thrown in other class.","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"junjunjieOng"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(errorMsg);","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"junjunjieOng"},"content":"     * Prints goodbye message when user exit the program.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"junjunjieOng"},"content":"    public void showGoodBye() {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"junjunjieOng"},"content":"     * Prints message to inform the users that task is added into the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"junjunjieOng"},"content":"     * @param task task to be added into the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskLists the list of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"junjunjieOng"},"content":"    public void showTaskAdded(Task task, ArrayList\u003cTask\u003e taskLists) {","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(task + \"\\n\" + \"Now you have \" + taskLists.size()","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"junjunjieOng"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"junjunjieOng"},"content":"     * Prints message to inform the users that task is deleted from the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"junjunjieOng"},"content":"     * @param task task to be deleted from the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"junjunjieOng"},"content":"     * @param taskLists the list of task.","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"junjunjieOng"},"content":"    public void showTaskDeleted(Task task, ArrayList\u003cTask\u003e taskLists) {","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(task + \"\\n\" + \"Now you have \" + taskLists.size()","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"junjunjieOng"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"junjunjieOng"},"content":"     * Displays the list of tasks the user has.","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"junjunjieOng"},"content":"    public void showList(ArrayList\u003cTask\u003e taskLists) {","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"junjunjieOng"},"content":"        if (taskLists.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"junjunjieOng"},"content":"            System.out.println(\"No task for now\");","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"junjunjieOng"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"junjunjieOng"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"junjunjieOng"},"content":"            for (int i \u003d 1; i \u003c taskLists.size() + 1; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"junjunjieOng"},"content":"                Task currTask \u003d taskLists.get(i - 1);","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"junjunjieOng"},"content":"                System.out.println(i + \". \" + currTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"junjunjieOng"},"content":"     * Prints message to inform the users that task is mark as complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"junjunjieOng"},"content":"     * @param currTask task to be mark.","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"junjunjieOng"},"content":"    public void showTaskMarked(Task currTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"junjunjieOng"},"content":"                + currTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"junjunjieOng"},"content":"     * Prints message to inform the users that task is unmarked as not complete.","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"junjunjieOng"},"content":"     * @param currTask task to be unmarked.","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"junjunjieOng"},"content":"    public void showTaskUnmarked(Task currTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"junjunjieOng"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"junjunjieOng"},"content":"                + currTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"junjunjieOng"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"junjunjieOng"},"content":"     * Prints the search results of what the user find.","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"junjunjieOng"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"junjunjieOng"},"content":"     * @param resultLists result lists from the search keyword.","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"junjunjieOng"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"junjunjieOng"},"content":"    public void displaySearchResult(ArrayList\u003cTask\u003e resultLists) {","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"junjunjieOng"},"content":"        if (resultLists.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"junjunjieOng"},"content":"            System.out.println(\"Opps! No such results\");","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"junjunjieOng"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"junjunjieOng"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"junjunjieOng"},"content":"            for (int i \u003d 0; i \u003c resultLists.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"junjunjieOng"},"content":"                Task currTask \u003d resultLists.get(i);","lastModifiedDate":"2022-01-30"},{"lineNumber":137,"author":{"gitId":"junjunjieOng"},"content":"                System.out.println(i + 1 + \". \" + currTask);","lastModifiedDate":"2022-01-30"},{"lineNumber":138,"author":{"gitId":"junjunjieOng"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":139,"author":{"gitId":"junjunjieOng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":140,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":141,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":142}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":5}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"    public void saveToFileString_callingMethod_outputShownCorrectly() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"        String expectedResult \u003d new Deadline(\"IP Project\", \"2/12/2019 6PM\").saveToFileString();","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"        String actualResult \u003d \"D|0|IP Project|2019-12-02 18:00\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"    public void saveToFileString_callingMethodWithDiffInput_outputShownCorrectly() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"        String expectedResult \u003d new Deadline(\"return book\", \"2/12/2019 0900\").saveToFileString();","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        String actualResult \u003d \"D|0|return book|2019-12-02 09:00\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    public void toString_callingMethod_outputShownCorrectly() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"        String expectedResult \u003d new Deadline(\"IP Project\", \"2/12/2019 6PM\").toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"        String actualResult \u003d \"[D][ ] IP Project (by: Dec 02 2019 18:00)\";","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":33}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"public class EventTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    public void saveToFileString_callingMethod_outputShownCorrectly() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"        String expectedResult \u003d new Event(\"Team meeting\", \"2/12/2019 6PM\").saveToFileString();","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"        String actualResult \u003d \"E|0|Team meeting|2019-12-02 18:00\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    public void getTaskDate_callingMethod_outputShownCorrectly() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"        String expectedResult \u003d new Event(\"Seminar\", \"2/12/2019 0900\").saveToFileString();","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"        String actualResult \u003d \"E|0|Seminar|2019-12-02 09:00\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"junjunjieOng"},"content":"    public void toString_callingMethod_outputShownCorrectly() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"junjunjieOng"},"content":"        String expectedResult \u003d new Event(\"Team meeting\", \"2/12/2019 6PM\").toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"junjunjieOng"},"content":"        String actualResult \u003d \"[E][ ] Team meeting (at: Dec 02 2019 18:00)\";","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":32}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"package duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"import duke.ui.DukeException;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"    public void saveToFileString_callingMethod_outputShownCorrectly() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"        String expectedResult \u003d new ToDo(\"Homework\").saveToFileString();","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"        String actualResult \u003d \"T|0|Homework\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"junjunjieOng"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"junjunjieOng"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"junjunjieOng"},"content":"    public void toString_callingMethod_outputShownCorrectly() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"junjunjieOng"},"content":"        String expectedResult \u003d new ToDo(\"Homework\").toString();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"junjunjieOng"},"content":"        String actualResult \u003d \"[T][ ] Homework\";","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"junjunjieOng"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"junjunjieOng"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"junjunjieOng"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":25}},{"path":"text-ui-test/data/dukesave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"T|1|borrow book","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"E|0|group project meeting|2022-07-21 14:00","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"D|0|return book|2022-07-22 14:00","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"junjunjieOng":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junjunjieOng"},"content":"todo borrow book","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"junjunjieOng"},"content":"mark 1","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"junjunjieOng"},"content":"event group project meeting /at 21/07/2022 2pm","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"junjunjieOng"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"junjunjieOng"},"content":"deadline return book /by 22/07/2022 1400","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"junjunjieOng"},"content":"mark","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"junjunjieOng"},"content":"mark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"junjunjieOng"},"content":"unmark 3","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"junjunjieOng"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"junjunjieOng"},"content":"todo","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"junjunjieOng"},"content":"todo hahahha","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"junjunjieOng"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"junjunjieOng"},"content":"delete 4","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"junjunjieOng"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"junjunjieOng"},"content":"bye","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"junjunjieOng":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"junjunjieOng"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junjunjieOng":1,"-":37}}]
