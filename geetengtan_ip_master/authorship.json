[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"T#true#borrow book","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"D#false#return book #2021-02-02","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"T#false#play","lastModifiedDate":"2022-02-02"}],"authorContributionMap":{"geetengtan":3}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":85,"geetengtan":4}},{"path":"src/main/java/seedu/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":" * A Task that specifies the date required for the task to be completed","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"    Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"        super(description, deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    Deadline(String description, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"        super(description, isDone, deadline);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"        String tempStr \u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"            tempStr \u003d \"X\";","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        return \"[D][\" + tempStr + \"] \" ","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"                + description ","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"                + \"(\" + time.get().format(DATE_FORMATTER) + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"geetengtan":32}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":" * Main executable for the Duke program.","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":" * Helps user record the tasks to be completed and their deadlines.","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"public class Duke {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"     * Runs the Duke program by starting the UI interface and awaits for input from user.","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"     * When \"bye\" command is used, saves the current list of tasks and exits the program","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"    public void run() {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"        ui.start();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"            ui.nextInput(input, tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"        sc.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"        ui.exit();","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"geetengtan":56}},{"path":"src/main/java/seedu/duke/DukeAbsentInfoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"public class DukeAbsentInfoException extends DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"    DukeAbsentInfoException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"geetengtan":9}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"    ","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"    String message;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"    DukeException() {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"        this.message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"    DukeException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"        return message;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"geetengtan":20}},{"path":"src/main/java/seedu/duke/DukeIdxOOBException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"public class DukeIdxOOBException extends DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"    DukeIdxOOBException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"        super(\"☹ OOPS!!! The index specified is out of bounds.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"geetengtan":9}},{"path":"src/main/java/seedu/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":" * A Task that specifies a date of occurrence.","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    Event(String description, LocalDate time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"        super(description, time);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    Event(String description, boolean isDone, LocalDate time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"        super(description, isDone, time);","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"        String tempStr \u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"            tempStr \u003d \"X\";","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        return \"[E][\" + tempStr + \"] \" ","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"                + description + \"(\" ","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"                + time.get().format(DATE_FORMATTER) + \")\";","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"geetengtan":31}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":" * Parser for the \u003ccode\u003eDuke\u003c/code\u003e that includes static methods to interpret user inputs.","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":" * Also includes a method to parse and read save files.","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"public class Parser {","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    private static final int LIST \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"    private static final int TODO \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    private static final int DEADLINE \u003d 2;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    private static final int EVENT \u003d 3;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    private static final int MARK \u003d 4;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    private static final int UNMARK \u003d 5;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    private static final int DELETE \u003d 6;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    private static final int FIND \u003d 7;","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"     * Reads the String input and determines the type of command to execute and returns it as an integer","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"     * @param input User input for the \u003ccode\u003eDuke\u003c/code\u003e program","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"     * @return An integer to represent the type of command to execute","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException When String input doesn\u0027t match any type of command","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    public static int getCommand(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        String str \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"        if (str.equals(\"list\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"            return LIST;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"        } else if (str.equals(\"todo\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"            return TODO;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"        } else if (str.equals(\"deadline\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"            return DEADLINE;","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        } else if (str.equals(\"event\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"            return EVENT;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"        } else if (str.equals(\"mark\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"            return MARK;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"        } else if (str.equals(\"unmark\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"            return UNMARK;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"        } else if (str.equals(\"delete\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"            return DELETE;","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"        } else if (str.equals(\"find\")) {","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"            return FIND;","lastModifiedDate":"2022-02-02"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"        }else {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"            throw new DukeException(\"OOPS!!! I don\u0027t understand what that means\");","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"     * Reads the String input and returns the description of the Task according to the input line","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"     * @param input User input for the \u003ccode\u003eDuke\u003c/code\u003e program","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"     * @return The description of the \u003ccode\u003eTask\u003c/code\u003e of the user input","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException If \u003ccode\u003eTask\u003c/code\u003e description not specified correctly.","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"    public static String getDescription(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"            return input.split(\" \", 2)[1].split(\"/\", 2)[0];  ","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"            throw new DukeAbsentInfoException(\"Description of task not specified\");","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"geetengtan"},"content":"     * Reads the String input and returns the index to apply the command","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"     * @param input User input for the \u003ccode\u003eDuke\u003c/code\u003e program.","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"     * @return The index of the \u003ccode\u003eTask\u003c/code\u003e to apply the command.","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException If parsing of the String input fails.","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"    public static int getIndex(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"            return Integer.parseInt(input.split(\" \", 2)[1].split(\"/\", 2)[0]);  ","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"            throw new DukeException(\"description parsing problem\");","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"     * Reads the String input and returns the date of the Task according to the input line","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"     * @param input User input for the \u003ccode\u003eDuke\u003c/code\u003e program.","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"     * @return The date of the \u003ccode\u003eTask\u003c/code\u003e of the user input","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException If date provided is not in correct format ([task] [description]/yyyy-mm-dd)","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"    public static LocalDate getDate(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"            return LocalDate.parse(input.split(\" \", 2)[1].split(\"/\", 2)[1]);","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"            throw new DukeException(\"Date not provided or not specified in correct format ([task] [description]/yyyy-mm-dd)\");","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"geetengtan"},"content":"     * Returns a \u003ccode\u003eTask\u003c/code\u003e that is derived from the input String","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"geetengtan"},"content":"     * @param input String inputs from the save file.","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"geetengtan"},"content":"     * @return \u003ccode\u003eTask\u003c/code\u003e corresponding to the given line of input.","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException If the input line is not is the correct save format.","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"geetengtan"},"content":"    public static Task getTask(String input) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"geetengtan"},"content":"        String[] stringArr \u003d input.split(\"#\");","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"geetengtan"},"content":"        if (stringArr[0].equals(\"T\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"geetengtan"},"content":"            return new ToDo(stringArr[2], stringArr[1].equals(\"true\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"geetengtan"},"content":"        } else if (stringArr[0].equals(\"D\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"geetengtan"},"content":"            return new Deadline(stringArr[2], stringArr[1].equals(\"true\"), LocalDate.parse(stringArr[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"geetengtan"},"content":"        } else if (stringArr[0].equals(\"E\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"geetengtan"},"content":"            return new Event(stringArr[2], stringArr[1].equals(\"true\"), LocalDate.parse(stringArr[3]));","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"geetengtan"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"geetengtan"},"content":"            throw new DukeException(\"Problem retrieving files from data\");","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"geetengtan"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"geetengtan":126}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":" * A class to manage the saving and loading of files in the \u003ccode\u003eDuke\u003c/code\u003e program","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"public class Storage {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    private String filepath;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    Storage(String filepath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"     * Reads the save file from this.filepath and returns an ArrayList\u003cTask\u003e that represents the save file.","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"     * @return ArrayList\u003cTask\u003e that represents the save file.","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException If the duke.txt file doesn\u0027t exist.","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"            File f \u003d new File(this.filepath);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"            ","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"                tasks.add(Parser.getTask(sc.nextLine()));","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"            ","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"            sc.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"            ","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"            return tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"            throw new DukeException(\"Problem loading data\");","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"     * Takes in a list of tasks and save them in a duke.txt file.","lastModifiedDate":"2022-02-02"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"     * If duke.txt file already exists, the new save will overwrite the existing one.","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"        String saveFormat \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"        for (Task t : tasks.getTasks()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"            if (t instanceof ToDo) {","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"                saveFormat +\u003d \"T#\";","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"                saveFormat +\u003d t.isDone ? \"true\" : \"false\";","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"                saveFormat +\u003d \"#\" + t.description + \"\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"                continue;","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"                saveFormat +\u003d \"D\";","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"                saveFormat +\u003d \"E\";","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"geetengtan"},"content":"            saveFormat +\u003d \"#\";","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"            saveFormat +\u003d t.isDone ? \"true\" : \"false\";","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"            saveFormat +\u003d \"#\";","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"            saveFormat +\u003d t.description;","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"            saveFormat +\u003d \"#\";","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"            saveFormat +\u003d t.time.get();","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"            saveFormat +\u003d \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"            fw.write(saveFormat);","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"            fw.close();","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"            System.out.println(\"Error while saving file.\\n\" + e);","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"    ","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"geetengtan":89}},{"path":"src/main/java/seedu/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":" * A skeleton for Tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    protected static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"LLL dd yyyy\");","lastModifiedDate":"2022-02-02"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    protected Optional\u003cLocalDate\u003e time;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    Task(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"        this.time \u003d Optional.empty();","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"    Task(String description, boolean isDone) {","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        this.time \u003d Optional.empty();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"    Task(String description, LocalDate time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        this.time \u003d Optional.\u003cLocalDate\u003eof(time);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"    Task(String description, boolean isDone, LocalDate time) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"        this.time \u003d Optional.\u003cLocalDate\u003eof(time);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"    public void mark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"    public void unmark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"        String tempStr \u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"            tempStr \u003d \"X\";","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"        return \"[\" + tempStr + \"] \" + description;","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"geetengtan":59}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":" * A container for Task.","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":" * Provides methods to manipulate list of Task in it.","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"public class TaskList {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        return tasks;","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"     * Adds a Task into the TaskList and returns a message to indicate success","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"     * @param t Task to be added","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"     * @return Message for successfully adding a Task","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"    public String add(Task t) {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        tasks.add(t);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"        return \"Got it. I\u0027ve added this task:\\n      \" + t + count();","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"     * Returns a String to represent the current list of Tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"     * @return Current list of Tasks","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"    public String list() {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"        String tempStr \u003d \"Here are the tasks in your list:\\n    \";","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"            if (i !\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"                tempStr +\u003d \"\\n    \";","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"            tempStr +\u003d (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"        return tempStr;","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"     * Marks the Task according to the index provided and returns a message for successfully marking the Task","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"     * @param idx index of the Task to be marked","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"     * @return Message for successfully marking the Task","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException If the index specified is out of bounds OR If the TaskList is empty","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"    public String mark(int idx) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"                ","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"            throw new DukeIdxOOBException();","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"        tasks.get(idx - 1).mark();","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"geetengtan"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n      \" + tasks.get(idx - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"     * Unmarks the Task according to the index provided and returns a message for successfully unmarking the Task","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"     * @param idx index of the Task to be unmarked","lastModifiedDate":"2022-02-02"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"     * @return Message for successfully unmarking the Task","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException If the index specified is out of bounds OR If the TaskList is empty","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"    public String unmark(int idx) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"                ","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"        if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"            throw new DukeIdxOOBException();","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"        tasks.get(idx - 1).unmark();","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n      \" + tasks.get(idx - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"     * Deletes the Task according to the index provided and returns a message for successfully deleting the Task","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"     * @param idx index of the Task to be deleted","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"geetengtan"},"content":"     * @return Message for successfully deleting the Task","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"geetengtan"},"content":"     * @throws DukeException If the index specified is out of bounds OR If the TaskList is empty","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"geetengtan"},"content":"    public String delete(int idx) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"geetengtan"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"geetengtan"},"content":"            throw new DukeException(\"OOPS!!! There is nothing on the list to delete!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"geetengtan"},"content":"        if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"geetengtan"},"content":"            throw new DukeIdxOOBException();","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"geetengtan"},"content":"        return \"Noted. I\u0027ve removed this task:\\n      \" + tasks.remove(idx - 1) + count();","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"geetengtan"},"content":"     * Returns a string that describes the number of tasks in the list","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"geetengtan"},"content":"     * @return String that describes the number of tasks in the TaskList","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"geetengtan"},"content":"    public String count() {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"geetengtan"},"content":"        String isSingular \u003d \"s\";","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"geetengtan"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"geetengtan"},"content":"            isSingular \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"geetengtan"},"content":"        return \"\\n    Now you have \" + tasks.size() + \" task\" + isSingular + \" in your list.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"geetengtan"},"content":"    public String find(String keyword) {","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"geetengtan"},"content":"        String resultStr \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"geetengtan"},"content":"        boolean keywordFound \u003d false;","lastModifiedDate":"2022-02-02"},{"lineNumber":131,"author":{"gitId":"geetengtan"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"geetengtan"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2022-02-02"},{"lineNumber":134,"author":{"gitId":"geetengtan"},"content":"            if (t.description.contains(keyword)) {","lastModifiedDate":"2022-02-02"},{"lineNumber":135,"author":{"gitId":"geetengtan"},"content":"                keywordFound \u003d true;","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"geetengtan"},"content":"                resultStr +\u003d i++ + \". \" + t + \"\\n      \";","lastModifiedDate":"2022-02-02"},{"lineNumber":137,"author":{"gitId":"geetengtan"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":138,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":139,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":140,"author":{"gitId":"geetengtan"},"content":"        if (keywordFound) {","lastModifiedDate":"2022-02-02"},{"lineNumber":141,"author":{"gitId":"geetengtan"},"content":"            resultStr \u003d \"Here are the matching tasks in your list:\\n      \" + resultStr;","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"geetengtan"},"content":"        } else {","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"geetengtan"},"content":"            resultStr \u003d \"No matching results found in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":146,"author":{"gitId":"geetengtan"},"content":"        return resultStr;","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-02-02"},{"lineNumber":148,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"geetengtan":149}},{"path":"src/main/java/seedu/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":" * A Task that has no time limitation","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"    ToDo(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"        super(description);","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    ToDo(String description, boolean isDone) {","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"        super(description, isDone);","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        String tempStr \u003d \" \";","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"        if (isDone) {","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"            tempStr \u003d \"X\";","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"        return \"[T][\" + tempStr + \"] \" ","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"                + description;","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"geetengtan":28}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"/**","lastModifiedDate":"2022-02-02"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":" * The user interface.","lastModifiedDate":"2022-02-02"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":" * Interacts with user to receive inputs and print outputs.","lastModifiedDate":"2022-02-02"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":" */","lastModifiedDate":"2022-02-02"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"public class Ui {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"    private static final int LIST \u003d 0;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"    private static final int TODO \u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"    private static final int DEADLINE \u003d 2;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    private static final int EVENT \u003d 3;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    private static final int MARK \u003d 4;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"    private static final int UNMARK \u003d 5;","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"    private static final int DELETE \u003d 6;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"    private static final int FIND \u003d 7;","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"     * Prints an error message for failure in loading files","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"        System.out.println(\"Failed to retrieve data from storage\");","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"     * Interprets the user input and prints outputs according to them","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"     * @param input User input","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"     * @param tasks Current TaskList in the Duke program","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"    public void nextInput(String input, TaskList tasks) {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"            int cmd \u003d Parser.getCommand(input);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"            ","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"            switch(cmd) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"            case LIST:","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"                printResponse(tasks.list());","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"geetengtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"geetengtan"},"content":"            case TODO:","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"geetengtan"},"content":"                printResponse(tasks.add(new ToDo(Parser.getDescription(input))));","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"geetengtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"geetengtan"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"geetengtan"},"content":"                printResponse(tasks.add(new Deadline(Parser.getDescription(input), Parser.getDate(input))));","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"geetengtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"geetengtan"},"content":"            case EVENT:","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"geetengtan"},"content":"                printResponse(tasks.add(new Event(Parser.getDescription(input), Parser.getDate(input))));","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"geetengtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"geetengtan"},"content":"            case MARK:","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"geetengtan"},"content":"                printResponse(tasks.mark(Parser.getIndex(input)));","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"geetengtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"geetengtan"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"geetengtan"},"content":"                printResponse(tasks.unmark(Parser.getIndex(input)));","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"geetengtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"geetengtan"},"content":"            case DELETE:","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"geetengtan"},"content":"                printResponse(tasks.delete(Parser.getIndex(input)));","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"geetengtan"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"geetengtan"},"content":"            case FIND:","lastModifiedDate":"2022-02-02"},{"lineNumber":58,"author":{"gitId":"geetengtan"},"content":"                printResponse(tasks.find(Parser.getDescription(input)));","lastModifiedDate":"2022-02-02"},{"lineNumber":59,"author":{"gitId":"geetengtan"},"content":"                break;","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"geetengtan"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"geetengtan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"geetengtan"},"content":"            printResponse(e.toString());","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"geetengtan"},"content":"     * Prints the starting logo and introduction for the Duke program","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"geetengtan"},"content":"    public void start() {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"geetengtan"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"geetengtan"},"content":"        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"geetengtan"},"content":"        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"geetengtan"},"content":"        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"geetengtan"},"content":"        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"geetengtan"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"geetengtan"},"content":"        printResponse(\"Hello! I\u0027m Duke\\n    What can I do for you?\");","lastModifiedDate":"2022-02-02"},{"lineNumber":78,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":81,"author":{"gitId":"geetengtan"},"content":"     * Prints the exiting sentence of the Duke program","lastModifiedDate":"2022-02-02"},{"lineNumber":82,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"geetengtan"},"content":"    public void exit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"geetengtan"},"content":"        printResponse(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"geetengtan"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"geetengtan"},"content":"     * Prints out the String input in a specific format as a response from Duke","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"geetengtan"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"geetengtan"},"content":"     * @param toPrint String to be printed as Duke output","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"geetengtan"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"geetengtan"},"content":"    public static void printResponse(String toPrint) {","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"geetengtan"},"content":"        System.out.println(\"    ________________________________________________________________\");","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"geetengtan"},"content":"        System.out.println(\"    \" + toPrint);","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"geetengtan"},"content":"        System.out.println(\"    ________________________________________________________________\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"geetengtan"},"content":"        ","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"geetengtan":99}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"class ParserTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    void getDescription() {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"        Task t \u003d new ToDo(\"description\");","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"            assertEquals(\"description\", Parser.getDescription(\"todo description\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"    void getTask() {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"        String saved \u003d \"E#false#party #2022-01-22\";","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"            assertEquals((new Event(\"party \", LocalDate.of(2022, 1, 22))).toString(), Parser.getTask(saved).toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"            System.out.println(e);","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"geetengtan":30}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"package seedu.duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"geetengtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"geetengtan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"geetengtan"},"content":"class TaskListTest {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"geetengtan"},"content":"    void list() {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"geetengtan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"geetengtan"},"content":"        tasks.add(new Event(\"party \", LocalDate.of(2022, 12, 12)));","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"geetengtan"},"content":"        tasks.add(new ToDo(\"borrow book\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"geetengtan"},"content":"        TaskList t \u003d new TaskList(tasks);","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"geetengtan"},"content":"        assertEquals(\"Here are the tasks in your list:\\n    1. [E][ ] party (Dec 12 2022)\\n    2. [T][ ] borrow book\", t.list());","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"geetengtan"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"geetengtan"},"content":"    void mark() {","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"geetengtan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"geetengtan"},"content":"        tasks.add(new Event(\"party \", LocalDate.of(2022, 12, 12)));","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"geetengtan"},"content":"        tasks.add(new ToDo(\"borrow book\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"geetengtan"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"geetengtan"},"content":"        TaskList t \u003d new TaskList(tasks);","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"geetengtan"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"geetengtan"},"content":"            tasks.get(0).mark();","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"geetengtan"},"content":"            assertEquals(\"Nice! I\u0027ve marked this task as done:\\n      \" + tasks.get(0), t.mark(1));","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"geetengtan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"geetengtan"},"content":"            System.out.println(\"mark failure\");","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"geetengtan"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"geetengtan"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"geetengtan"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"geetengtan":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"geetengtan"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"geetengtan"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"geetengtan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"geetengtan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"geetengtan"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"geetengtan":5}}]
