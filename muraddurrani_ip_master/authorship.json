[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"    private final String time;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"    public Deadline(String taskName, String time) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"        super(taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.time + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"muraddurrani":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":" * Duke Class contains a scanner to read user input and a TaskList that contains all tasks.","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":" * Duke only handles the processing of user input and responding to the user. Task list logic is","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":" * handled by the TaskList class.","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"                \"    ___   ____________\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"                \"   /   | / ____/ ____/\\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"                \"  / /| |/ /   / __/   \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"                \" / ___ / /___/ /___   \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"                \"/_/  |_\\\\____/_____/   \\n\" +","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"                \"                      \\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"        Scanner reader \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"        printAce(logo);","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"        printAce(\"Hey, I\u0027m Ace. What can I help you with?\");","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"        String userInput \u003d reader.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"        while(!userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"            String[] splitInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"            String command \u003d splitInput[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"            switch (command) {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"                case \"list\":","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"                    String list \u003d taskList.getTaskList();","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"                    printAce(list.length() \u003e 0 ? \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"                            list : \"There are no tasks in your list currently.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"                        Todo newTodo \u003d taskList.addTodo(splitInput[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Added this item to your list:\\n\" + newTodo + \"\\nYou now have \" +","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"                                taskList.getNumberOfTasks() + \" task(s).\");","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"                    } catch (ArrayIndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Please provide a name for the todo item you\u0027d like to create in the form \u0027todo {name}\u0027.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"                case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"                        String[] eventInfo \u003d splitInput[1].split(\" /at \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"                        Event newEvent \u003d taskList.addEvent(eventInfo[0], eventInfo[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Added this item to your list:\\n\" + newEvent + \"\\nYou now have \" +","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"                                taskList.getNumberOfTasks() + \" task(s).\");","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Please provide a name and time for the event you\u0027d like\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"                                \" to create in the form \u0027event {name} /at {time}\u0027.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"                        printAce(e.getMessage() + \"\\nPlease provide a name and time for the event you\u0027d like to\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"                                \" create in the form \u0027event {name} /at {time}\u0027.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"                        String[] deadlineInfo \u003d splitInput[1].split(\" /by \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"                        Deadline newDeadline \u003d taskList.addDeadline(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Added this item to your list.\\n\" + newDeadline + \"\\nYou now have \" +","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"                                taskList.getNumberOfTasks() + \" task(s).\");","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Please provide a name and time for the deadline item you\u0027d like\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"                                \" to create in the form \u0027event {name} /at {time}\u0027.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"                        printAce(e.getMessage() + \"\\nPlease provide a name and time for the deadline item you\u0027d like to\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"                                \" create in the form \u0027event {name} /at {time}\u0027.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"muraddurrani"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"muraddurrani"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"muraddurrani"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"muraddurrani"},"content":"                        int taskNum \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"                        Task selectedTask \u003d taskList.getTaskByNum(taskNum);","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"                        selectedTask.markAsComplete();","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"I\u0027ve marked the following task as complete:\\n\" + selectedTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"                    } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Please provide the number of the task you\u0027d like to mark.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"muraddurrani"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"                        printAce(e.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"muraddurrani"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"muraddurrani"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"muraddurrani"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"muraddurrani"},"content":"                        int taskNum \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"muraddurrani"},"content":"                        Task selectedTask \u003d taskList.getTaskByNum(taskNum);","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"                        selectedTask.markAsIncomplete();","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"I\u0027ve marked the following task as incomplete:\\n\" + selectedTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"                    } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Please provide the number of the task you\u0027d like to mark.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"muraddurrani"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"                        printAce(e.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"muraddurrani"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"muraddurrani"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"muraddurrani"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"muraddurrani"},"content":"                        int taskNum \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"muraddurrani"},"content":"                        Task deletedTask \u003d taskList.deleteTask(taskNum);","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"I\u0027ve deleted the following task from your list:\\n\" + deletedTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"                    } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"muraddurrani"},"content":"                        printAce(\"Please provide the number of the task you\u0027d like to delete.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"muraddurrani"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"muraddurrani"},"content":"                        printAce(e.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"muraddurrani"},"content":"                    break;","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"muraddurrani"},"content":"                default:","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"muraddurrani"},"content":"                    printAce(\"Sorry I couldn\u0027t understand that. Here are a list of valid commands.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"muraddurrani"},"content":"                            \"list: Displays all tasks in your list.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"muraddurrani"},"content":"                            \"todo {name}: Adds a todo item to your list.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"muraddurrani"},"content":"                            \"event {name} /at {time}: Adds an event to your list.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"muraddurrani"},"content":"                            \"deadline {name} /by {time}: Adds a task with a deadline to your list.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"muraddurrani"},"content":"                            \"mark {task_number}: Marks a task as complete.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"muraddurrani"},"content":"                            \"unmark {task_number}: Marks a task as incomplete.\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"muraddurrani"},"content":"                            \"bye: Ends our current session.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":125,"author":{"gitId":"muraddurrani"},"content":"            userInput \u003d reader.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"muraddurrani"},"content":"        printAce(\"See you later!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"muraddurrani"},"content":"        reader.close();","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":130,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":132,"author":{"gitId":"muraddurrani"},"content":"     * Stylises, indents, and prints the given string.","lastModifiedDate":"2022-01-20"},{"lineNumber":133,"author":{"gitId":"muraddurrani"},"content":"     * @param str The String object to be stylised.","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"muraddurrani"},"content":"    private static void printAce(String str) {","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"muraddurrani"},"content":"        System.out.println(\"________\\n\" + str.indent(4));","lastModifiedDate":"2022-01-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"muraddurrani":133,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"muraddurrani":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"    private final String eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"    public Event(String taskName, String eventTime) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"        super(taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.eventTime + \")\";","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"muraddurrani":16}},{"path":"src/main/java/IncorrectUserFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"public class IncorrectUserFormatException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"    public IncorrectUserFormatException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"muraddurrani":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"    protected final String taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"    protected boolean taskComplete;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"        this.taskComplete \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"     * Returns the icon that identifies whether the task has been completed or not.","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"     * @return \u0027[X]\u0027 if completed ant \u0027[ ]\u0027 if not.","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"        return (taskComplete ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    public void markAsComplete() {","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"        this.taskComplete \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"        this.taskComplete \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"        return getStatusIcon() + \" \" + this.taskName;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"muraddurrani":36}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":" * Responsible for adding, removing, and performing operations on tasks in taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"public class TaskList {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"     * Returns all tasks in taskList in the form of a number list.","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"     * @return Number list of tasks in taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"    public String getTaskList() {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"            return \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"            StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"                String task \u003d (i + 1 + \". \" + taskList.get(i) + \"\\n\");","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"                strBuilder.append(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"            return strBuilder.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"     * Adds the given Task object to taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"     * @param task Task to be added to taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"     * If user input is formatted correctly, adds a Todo object to taskList and returns it.","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"     * @param name Name of the todo item to be added.","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"     * @return The task added to taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"     * @throws IncorrectUserFormatException If the user did not provide a name for the task.","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"    public Todo addTodo(String name) throws IncorrectUserFormatException {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"        if (name.length() \u003d\u003d 0 || name.isBlank()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"            throw new IncorrectUserFormatException(\"No name was provided for the todo item.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"            Todo newTodo \u003d new Todo(name);","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"            addTask(newTodo);","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"            return newTodo;","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"     * If user input is formatted correctly, adds an Event object to taskList and returns it.","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"     * @param name Name of the event item to be added.","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"     * @param time Time at which the event is taking place.","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"     * @return The task added to taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"     * @throws IncorrectUserFormatException If the user did not provide a name or time for the task.","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"    public Event addEvent(String name, String time) throws IncorrectUserFormatException {","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"        if (name.length() \u003d\u003d 0 || name.isBlank()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"            throw new IncorrectUserFormatException(\"No name was provided for the event.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"        } else if (time.length() \u003d\u003d 0 || time.isBlank()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"            throw new IncorrectUserFormatException(\"No time was provided for the event.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"            Event newEvent \u003d new Event(name, time);","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"            addTask(newEvent);","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"            return newEvent;","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"     * If user input is formatted correctly, adds an Deadline object to taskList and returns it.","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"     * @param name Name of the deadline item to be added.","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"     * @param time Time of the deadline for the item.","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"     * @return The task added to taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"muraddurrani"},"content":"     * @throws IncorrectUserFormatException If the user did not provide a name or time for the task.","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"muraddurrani"},"content":"    public Deadline addDeadline(String name, String time) throws IncorrectUserFormatException {","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"muraddurrani"},"content":"        if (name.length() \u003d\u003d 0 || name.isBlank()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"muraddurrani"},"content":"            throw new IncorrectUserFormatException(\"No name was provided for the deadline item.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"        } else if ( time.length() \u003d\u003d 0 || time.isBlank()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"            throw new IncorrectUserFormatException(\"No time was provided for the deadline item.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"            Deadline newDeadline \u003d new Deadline(name, time);","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"            addTask(newDeadline);","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"muraddurrani"},"content":"            return newDeadline;","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"muraddurrani"},"content":"     * Returns the task corresponding to the given number in numbered list form if it exists.","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"muraddurrani"},"content":"     * @param i The number of the task to be returned.","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"muraddurrani"},"content":"     * @return The task corresponding to the parameter \u0027i\u0027.","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"muraddurrani"},"content":"     * @throws TaskOutOfBoundsException If there is no task in taskList with the given number.","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"    public Task getTaskByNum(int i) throws TaskOutOfBoundsException {","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"        if (i \u003e 0 \u0026 i \u003c\u003d this.taskList.size()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"muraddurrani"},"content":"            return this.taskList.get(i - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"muraddurrani"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"            throw new TaskOutOfBoundsException(\"There is no task \" + i + \" in the list. Type \u0027list\u0027 to view your tasks.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"muraddurrani"},"content":"    public Task deleteTask(int i) throws TaskOutOfBoundsException {","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"muraddurrani"},"content":"        if (i \u003e 0 \u0026 i \u003c\u003d this.taskList.size()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"muraddurrani"},"content":"            return this.taskList.remove(i - 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"muraddurrani"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"            throw new TaskOutOfBoundsException(\"There is no task \" + i + \" in the list. Type \u0027list\u0027 to view your tasks.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"muraddurrani"},"content":"     * Returns the number of tasks in taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"muraddurrani"},"content":"     * @return Number of tasks in taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"muraddurrani"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"muraddurrani"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"muraddurrani":117}},{"path":"src/main/java/TaskOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"public class TaskOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"    public TaskOutOfBoundsException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"muraddurrani":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"        super(taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"muraddurrani":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"deadline finish level-6 /by midnight tonight","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"event the weekend /at this Saturday","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"todo","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"todo eat dinner","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"unmark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"deadline /by 4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"delete 3","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"muraddurrani":15}}]
