[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hsiaojietng":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"application {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hsiaojietng":4,"-":42}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"T - 1 - Running","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"D - 1 - Project - 2020/May/19","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"D - 0 - Meeting - 2020/January/19","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"hsiaojietng":3}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hsiaojietng":1,"-":103}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"rootProject.name \u003d \u0027iP\u0027","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"hsiaojietng":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":" * This is a child class of duke.Task, duke.Deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" * duke.Deadline accepts another variable, \u0027by\u0027 that","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" * stores the time this duke.Deadline has to be completed","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-15","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"     * Creates duke.Deadline object with provided LocalDate variable","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"    public Deadline(String name, int done, LocalDate by) {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"        super(name, done);","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"        super.type \u003d \u0027D\u0027;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"     * Creates duke.Deadline object without provided LocalDate variable","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"     * Used when there is the need to parse text into date first","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"    public Deadline(String name, int done) {","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"        super(name, done);","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"        super.type \u003d \u0027D\u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"hsiaojietng"},"content":"    public void setBy(LocalDate by) {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"hsiaojietng"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"hsiaojietng"},"content":"     * Setting duke.Deadline object\u0027s date it should end by","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"hsiaojietng"},"content":"    public void setLocalDate(String date) {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"hsiaojietng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MMMM/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"hsiaojietng"},"content":"        LocalDate localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"hsiaojietng"},"content":"        setBy(localDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"hsiaojietng"},"content":"     * Converting LocalDate variable to String","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"hsiaojietng"},"content":"    public String convertLocalDateToString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"hsiaojietng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MMMM/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"hsiaojietng"},"content":"        return by.format(formatter);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"hsiaojietng"},"content":"     * Producing a user-friendly view of a duke.Deadline task","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"hsiaojietng"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"hsiaojietng"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"hsiaojietng"},"content":"        result.append(getTaskIcon()).append(\" - \");","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"hsiaojietng"},"content":"        result.append(done).append(\" - \");","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"hsiaojietng"},"content":"        result.append(name).append(\" - \");","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"hsiaojietng"},"content":"        result.append(convertLocalDateToString()).append(\"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"hsiaojietng"},"content":"        return result.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"hsiaojietng":71}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":" * This is a Duke class that orchestrates the running of the Duke","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" * task application.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-30","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":"public class Duke {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"     * Constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"     * @param filePath (required) Filepath of a text file which retrieves or saves Tasks","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"     * generated from this application.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"        storage \u003d new Storage(filePath, tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"            storage.tasksThatHaveBeenRead();","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"            storage.closeReadFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"            System.out.println(\"Unable to read provided file!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"            System.out.println(\"Unable to close file that is read!\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"hsiaojietng"},"content":"    /** Starts up the simple display of Duke application.  */","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"hsiaojietng"},"content":"    public void run() throws DukeException, IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"hsiaojietng"},"content":"        boolean isTerminated \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"hsiaojietng"},"content":"        while (!isTerminated) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"hsiaojietng"},"content":"            ui.displayCommandMessage(tasks, storage);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"hsiaojietng"},"content":"    /** Obtains Tasks from provided text file */","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"hsiaojietng"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"hsiaojietng"},"content":"        //\"C:\\\\NUS\\\\CS2103\\\\iP\\\\data\\\\duke.txt\"","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"hsiaojietng"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"hsiaojietng":51}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":" * This is a custom duke.Duke Exception class","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-15","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":"    protected String message;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"        message \u003d msg;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"        return message;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"hsiaojietng":22}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":" * This is a child class of duke.Task, duke.Event.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" * duke.Event accepts another variable, \u0027at\u0027 that","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" * stores the time this duke.Event is taking place","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-15","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"     * Creates duke.Event object with provided LocalDate variable","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"    public Event(String name, int done, LocalDate at) {","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"        super(name, done);","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"        super.type \u003d \u0027E\u0027;","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"     * Creates duke.Event object without provided LocalDate variable","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"     * Used when there is the need to parse text into date first","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"    public Event(String name, int done) {","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"        super(name, done);","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"        super.type \u003d \u0027E\u0027;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"hsiaojietng"},"content":"    public void setAt(LocalDate at) {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"hsiaojietng"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"hsiaojietng"},"content":"     * Setting duke.Event object\u0027s date it is held on","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"hsiaojietng"},"content":"    public void setLocalDate(String date) {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"hsiaojietng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MMMM/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"hsiaojietng"},"content":"        LocalDate localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"hsiaojietng"},"content":"        setAt(localDate);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"hsiaojietng"},"content":"     * Converting LocalDate variable to String","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"hsiaojietng"},"content":"    public String convertLocalDateToString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"hsiaojietng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MMMM/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"hsiaojietng"},"content":"        return at.format(formatter);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"hsiaojietng"},"content":"     * Producing a user-friendly view of an duke.Event task","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"hsiaojietng"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"hsiaojietng"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"hsiaojietng"},"content":"        result.append(getTaskIcon()).append(\" - \");","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"hsiaojietng"},"content":"        result.append(done).append(\" - \");","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"hsiaojietng"},"content":"        result.append(name).append(\" - \");;","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"hsiaojietng"},"content":"        result.append(convertLocalDateToString()).append(\"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"hsiaojietng"},"content":"        return result.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":70,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"hsiaojietng":70}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":"import java.util.Locale;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" * This is an Action class that obtains a sentence as input that","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" * can be deciphered to create tasks in the duke.Duke system","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-15","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    protected String userInput;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"    protected String[] listOfUserInputs;","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"    protected Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"    String line \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"    //Must be in SNAKE_CASE","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"    enum Commands {","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"        TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, FIND, BYE","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"    public Parser(String input, TaskList list, Storage storage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"        userInput \u003d input;","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"        tasks \u003d list;","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"hsiaojietng"},"content":"     * First split of user input to obtain Action word from other user input words","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"hsiaojietng"},"content":"    public void splitUserInput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"hsiaojietng"},"content":"        listOfUserInputs \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"hsiaojietng"},"content":"     * Obtains the Action word from user input","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"hsiaojietng"},"content":"    public String obtainCommandWord() {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"hsiaojietng"},"content":"        return listOfUserInputs[0];","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"hsiaojietng"},"content":"     * Obtains description of Tasks. Applicable for creating Todo, duke.Deadline and duke.Event","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"hsiaojietng"},"content":"    public String obtainTitleOfTask() throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder errorMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"hsiaojietng"},"content":"        String firstWordInTitle;","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"hsiaojietng"},"content":"            firstWordInTitle \u003d listOfUserInputs[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"hsiaojietng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"hsiaojietng"},"content":"            errorMessage.append(line).append(\"☹ OOPS!!! The description of a Todo/Deadline/Event cannot be empty.\");","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"hsiaojietng"},"content":"            errorMessage.append(line);","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"hsiaojietng"},"content":"            throw new DukeException(errorMessage.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder title \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"hsiaojietng"},"content":"        for (int i \u003d 1; i \u003c listOfUserInputs.length; i ++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"hsiaojietng"},"content":"            String currentWord \u003d listOfUserInputs[i];","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"hsiaojietng"},"content":"            if (currentWord.equals(\"/by\") || currentWord.equals(\"/at\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"hsiaojietng"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"hsiaojietng"},"content":"                title.append(listOfUserInputs[i]).append(\" \");","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"hsiaojietng"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"hsiaojietng"},"content":"        if (title.toString().equals(\"\")) { //when there is no description provided to a Task","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"hsiaojietng"},"content":"            errorMessage.append(line).append(\"☹ OOPS!!! The description cannot be empty.\").append(line);","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"hsiaojietng"},"content":"            throw new DukeException(errorMessage.toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"hsiaojietng"},"content":"        return title.toString().trim();","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"hsiaojietng"},"content":"     * Obtains date. Applicable for duke.Deadline, duke.Event","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"hsiaojietng"},"content":"    public LocalDate obtainDate() {","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"hsiaojietng"},"content":"        boolean hasClue \u003d false; //such as \u0027/by\u0027 or \u0027/at\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder stringDate \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"hsiaojietng"},"content":"        for (int i \u003d 1; i \u003c listOfUserInputs.length; i ++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"hsiaojietng"},"content":"            String currentWord \u003d listOfUserInputs[i];","lastModifiedDate":"2022-02-01"},{"lineNumber":87,"author":{"gitId":"hsiaojietng"},"content":"            if (hasClue) {","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"hsiaojietng"},"content":"                stringDate.append(listOfUserInputs[i]);","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"hsiaojietng"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"hsiaojietng"},"content":"            if (currentWord.equals(\"/by\") || currentWord.equals(\"/at\")) {","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"hsiaojietng"},"content":"                hasClue \u003d true;","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"hsiaojietng"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"hsiaojietng"},"content":"        if (!hasClue) {","lastModifiedDate":"2022-01-31"},{"lineNumber":95,"author":{"gitId":"hsiaojietng"},"content":"            throw new IllegalArgumentException(\"\\nPlease provide a \u0027/by\u0027 or \u0027/at\u0027 seperator in between the title and date\" +","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"hsiaojietng"},"content":"                    \"\\nof your Deadline/Event task respectively! Please try running the command again!\\n\");","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":98,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"hsiaojietng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MMMM/dd\");","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"hsiaojietng"},"content":"            return LocalDate.parse(stringDate, formatter);","lastModifiedDate":"2022-01-31"},{"lineNumber":101,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"hsiaojietng"},"content":"            throw new DateTimeParseException(\"The date input provided does not comply to any correct standards\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"hsiaojietng"},"content":"                    \"Please follow this format instead: yyyy/MMMM/dd (eg. 2022/May/19)\\n\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"hsiaojietng"},"content":"                    \"Please try running the command again!\\n\", userInput, 0);","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"hsiaojietng"},"content":"     * Obtains integer. Applicable for mark, unmark and delete","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"hsiaojietng"},"content":"    public int obtainTaskNumber() throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":112,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder errorMessage \u003d new StringBuilder();","lastModifiedDate":"2022-02-01"},{"lineNumber":113,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":114,"author":{"gitId":"hsiaojietng"},"content":"            return Integer.valueOf(listOfUserInputs[1]);","lastModifiedDate":"2022-02-01"},{"lineNumber":115,"author":{"gitId":"hsiaojietng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":116,"author":{"gitId":"hsiaojietng"},"content":"            errorMessage.append(line).append(\"Please provide the Task number to mark/unmark/delete!\").append(line);","lastModifiedDate":"2022-02-01"},{"lineNumber":117,"author":{"gitId":"hsiaojietng"},"content":"            throw new DukeException(errorMessage.toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":118,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":119,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":120,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":122,"author":{"gitId":"hsiaojietng"},"content":"     * Based on supplied Action word, run the action","lastModifiedDate":"2022-01-19"},{"lineNumber":123,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"hsiaojietng"},"content":"    public void parseInput() throws DukeException, IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"hsiaojietng"},"content":"        splitUserInput();","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"hsiaojietng"},"content":"        Commands action;","lastModifiedDate":"2022-01-31"},{"lineNumber":127,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":128,"author":{"gitId":"hsiaojietng"},"content":"            action \u003d Commands.valueOf(obtainCommandWord().toUpperCase());","lastModifiedDate":"2022-02-01"},{"lineNumber":129,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":130,"author":{"gitId":"hsiaojietng"},"content":"            StringBuilder errorMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-31"},{"lineNumber":131,"author":{"gitId":"hsiaojietng"},"content":"            errorMessage.append(line).append(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\")","lastModifiedDate":"2022-02-01"},{"lineNumber":132,"author":{"gitId":"hsiaojietng"},"content":"                    .append(\"\\nTry another command!\\n\").append(line);","lastModifiedDate":"2022-02-01"},{"lineNumber":133,"author":{"gitId":"hsiaojietng"},"content":"            throw new IllegalArgumentException(errorMessage.toString());","lastModifiedDate":"2022-01-31"},{"lineNumber":134,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":135,"author":{"gitId":"hsiaojietng"},"content":"        switch (action) {","lastModifiedDate":"2022-01-28"},{"lineNumber":136,"author":{"gitId":"hsiaojietng"},"content":"            case TODO:","lastModifiedDate":"2022-02-01"},{"lineNumber":137,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(createToDoTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":139,"author":{"gitId":"hsiaojietng"},"content":"            case DEADLINE:","lastModifiedDate":"2022-02-01"},{"lineNumber":140,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(createDeadlineTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"hsiaojietng"},"content":"            case EVENT:","lastModifiedDate":"2022-02-01"},{"lineNumber":143,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(createEventTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"hsiaojietng"},"content":"            case LIST:","lastModifiedDate":"2022-02-01"},{"lineNumber":146,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(listOutTasks());","lastModifiedDate":"2022-01-28"},{"lineNumber":147,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"hsiaojietng"},"content":"            case MARK:","lastModifiedDate":"2022-02-01"},{"lineNumber":149,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(markTaskAsDone());","lastModifiedDate":"2022-01-28"},{"lineNumber":150,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"hsiaojietng"},"content":"            case UNMARK:","lastModifiedDate":"2022-02-01"},{"lineNumber":152,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(unmarkTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":153,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"hsiaojietng"},"content":"            case DELETE:","lastModifiedDate":"2022-02-01"},{"lineNumber":155,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(deleteTask());","lastModifiedDate":"2022-01-28"},{"lineNumber":156,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":157,"author":{"gitId":"hsiaojietng"},"content":"            case FIND:","lastModifiedDate":"2022-02-01"},{"lineNumber":158,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(findTask());","lastModifiedDate":"2022-01-30"},{"lineNumber":159,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":160,"author":{"gitId":"hsiaojietng"},"content":"            case BYE:","lastModifiedDate":"2022-02-01"},{"lineNumber":161,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(terminateAndSaveProgram(storage));","lastModifiedDate":"2022-01-31"},{"lineNumber":162,"author":{"gitId":"hsiaojietng"},"content":"                System.exit(0);","lastModifiedDate":"2022-01-30"},{"lineNumber":163,"author":{"gitId":"hsiaojietng"},"content":"            default:","lastModifiedDate":"2022-01-18"},{"lineNumber":164,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":165,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":166,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":167,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"hsiaojietng"},"content":"     * Makes a call to TaskList\u0027s printTasks()","lastModifiedDate":"2022-01-30"},{"lineNumber":169,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":170,"author":{"gitId":"hsiaojietng"},"content":"    public String listOutTasks() {","lastModifiedDate":"2022-01-28"},{"lineNumber":171,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":172,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(line).append(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":173,"author":{"gitId":"hsiaojietng"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskListSize(); i ++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":174,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(String.format(\"%o. \", i + 1));","lastModifiedDate":"2022-01-30"},{"lineNumber":175,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(tasks.getParticularTask(i).toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":176,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":177,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":178,"author":{"gitId":"hsiaojietng"},"content":"        return successMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":179,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":180,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":181,"author":{"gitId":"hsiaojietng"},"content":"    public void checkTaskNumber() throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":182,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder errorMessage \u003d new StringBuilder();","lastModifiedDate":"2022-02-01"},{"lineNumber":183,"author":{"gitId":"hsiaojietng"},"content":"        int taskNumber \u003d obtainTaskNumber();","lastModifiedDate":"2022-01-30"},{"lineNumber":184,"author":{"gitId":"hsiaojietng"},"content":"        if (taskNumber \u003e\u003d tasks.getTaskListSize() || taskNumber \u003c 1) {","lastModifiedDate":"2022-01-30"},{"lineNumber":185,"author":{"gitId":"hsiaojietng"},"content":"            errorMessage.append(line).append(\"Please provide the correct Task number!\");","lastModifiedDate":"2022-02-01"},{"lineNumber":186,"author":{"gitId":"hsiaojietng"},"content":"            errorMessage.append(\"Maybe review the list of tasks first,\\nAnd then execute the command for mark/unmark/delete!\").append(line);","lastModifiedDate":"2022-02-01"},{"lineNumber":187,"author":{"gitId":"hsiaojietng"},"content":"            throw new DukeException(errorMessage.toString());","lastModifiedDate":"2022-02-01"},{"lineNumber":188,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":189,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":190,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":191,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":192,"author":{"gitId":"hsiaojietng"},"content":"     * Makes a call on TaskList\u0027s mark()","lastModifiedDate":"2022-01-30"},{"lineNumber":193,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":194,"author":{"gitId":"hsiaojietng"},"content":"    public String markTaskAsDone() {","lastModifiedDate":"2022-01-28"},{"lineNumber":195,"author":{"gitId":"hsiaojietng"},"content":"        Task task;","lastModifiedDate":"2022-01-30"},{"lineNumber":196,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":197,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(line).append(\"Nice! I\u0027ve marked this task as done: \\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":198,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":199,"author":{"gitId":"hsiaojietng"},"content":"            checkTaskNumber();","lastModifiedDate":"2022-01-30"},{"lineNumber":200,"author":{"gitId":"hsiaojietng"},"content":"            task \u003d tasks.markTask(obtainTaskNumber());","lastModifiedDate":"2022-01-30"},{"lineNumber":201,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(task.toString()).append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":202,"author":{"gitId":"hsiaojietng"},"content":"            return successMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":203,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":204,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":205,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":206,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":207,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":208,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":209,"author":{"gitId":"hsiaojietng"},"content":"     * Makes a call on duke.TaskList\u0027s unmark()","lastModifiedDate":"2022-01-30"},{"lineNumber":210,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":211,"author":{"gitId":"hsiaojietng"},"content":"    public String unmarkTask() {","lastModifiedDate":"2022-01-28"},{"lineNumber":212,"author":{"gitId":"hsiaojietng"},"content":"        Task task;","lastModifiedDate":"2022-01-30"},{"lineNumber":213,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":214,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(line).append(\"Nice! I\u0027ve unmarked this task: \\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":215,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":216,"author":{"gitId":"hsiaojietng"},"content":"            checkTaskNumber();","lastModifiedDate":"2022-01-30"},{"lineNumber":217,"author":{"gitId":"hsiaojietng"},"content":"            task \u003d tasks.unmarkTask(obtainTaskNumber());","lastModifiedDate":"2022-01-30"},{"lineNumber":218,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(task.toString()).append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":219,"author":{"gitId":"hsiaojietng"},"content":"            return successMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":220,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":221,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":222,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":223,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":224,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":225,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":226,"author":{"gitId":"hsiaojietng"},"content":"     * Makes a call on duke.TaskList\u0027s delete()","lastModifiedDate":"2022-01-30"},{"lineNumber":227,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":228,"author":{"gitId":"hsiaojietng"},"content":"    public String deleteTask() {","lastModifiedDate":"2022-01-31"},{"lineNumber":229,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":230,"author":{"gitId":"hsiaojietng"},"content":"            checkTaskNumber();","lastModifiedDate":"2022-01-30"},{"lineNumber":231,"author":{"gitId":"hsiaojietng"},"content":"            StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":232,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(line).append(\"Noted. I\u0027ve removed this task: \\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":233,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(tasks.deleteTask(obtainTaskNumber()).toString()).append(\"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":234,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(\"Now you have \").append(tasks.getTaskListSize());","lastModifiedDate":"2022-01-30"},{"lineNumber":235,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(\" tasks in the list.\\n\").append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":236,"author":{"gitId":"hsiaojietng"},"content":"            return successMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":237,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":238,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":239,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":240,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":241,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":242,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":243,"author":{"gitId":"hsiaojietng"},"content":"     * Checks if user input is valid, then","lastModifiedDate":"2022-01-19"},{"lineNumber":244,"author":{"gitId":"hsiaojietng"},"content":"     * creates a Todo duke.Task and adds into the list","lastModifiedDate":"2022-01-30"},{"lineNumber":245,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":246,"author":{"gitId":"hsiaojietng"},"content":"    public String createToDoTask() {","lastModifiedDate":"2022-01-31"},{"lineNumber":247,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":248,"author":{"gitId":"hsiaojietng"},"content":"        String title;","lastModifiedDate":"2022-01-31"},{"lineNumber":249,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":250,"author":{"gitId":"hsiaojietng"},"content":"            title \u003d obtainTitleOfTask();","lastModifiedDate":"2022-02-01"},{"lineNumber":251,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":252,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":253,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":254,"author":{"gitId":"hsiaojietng"},"content":"        Task task \u003d new ToDo(title, 0);","lastModifiedDate":"2022-01-28"},{"lineNumber":255,"author":{"gitId":"hsiaojietng"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":256,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(line).append(\"Added Todo: \").append(task.toString()).append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":257,"author":{"gitId":"hsiaojietng"},"content":"        return successMessage.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":258,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":259,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":260,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":261,"author":{"gitId":"hsiaojietng"},"content":"     * Checks if user input is valid, then","lastModifiedDate":"2022-01-19"},{"lineNumber":262,"author":{"gitId":"hsiaojietng"},"content":"     * creates a Deadline Task and adds to the list","lastModifiedDate":"2022-01-31"},{"lineNumber":263,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":264,"author":{"gitId":"hsiaojietng"},"content":"    public String createDeadlineTask() {","lastModifiedDate":"2022-01-31"},{"lineNumber":265,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":266,"author":{"gitId":"hsiaojietng"},"content":"        String title \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":267,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":268,"author":{"gitId":"hsiaojietng"},"content":"            title \u003d obtainTitleOfTask();","lastModifiedDate":"2022-02-01"},{"lineNumber":269,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":270,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":271,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":272,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":273,"author":{"gitId":"hsiaojietng"},"content":"            Task task \u003d new Deadline(title, 0, obtainDate());","lastModifiedDate":"2022-01-28"},{"lineNumber":274,"author":{"gitId":"hsiaojietng"},"content":"            tasks.addTask(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":275,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(line).append(\"Added Deadline: \\n\").append(task.toString()).append(line);","lastModifiedDate":"2022-02-01"},{"lineNumber":276,"author":{"gitId":"hsiaojietng"},"content":"            return successMessage.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":277,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IllegalArgumentException i) {","lastModifiedDate":"2022-01-31"},{"lineNumber":278,"author":{"gitId":"hsiaojietng"},"content":"            return i.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":279,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":280,"author":{"gitId":"hsiaojietng"},"content":"        catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":281,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":282,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":283,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":284,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":285,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":286,"author":{"gitId":"hsiaojietng"},"content":"     * Checks if user input is valid, then","lastModifiedDate":"2022-01-19"},{"lineNumber":287,"author":{"gitId":"hsiaojietng"},"content":"     * creates a duke.Event duke.Task and adds to the list","lastModifiedDate":"2022-01-30"},{"lineNumber":288,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":289,"author":{"gitId":"hsiaojietng"},"content":"    public String createEventTask() {","lastModifiedDate":"2022-01-31"},{"lineNumber":290,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":291,"author":{"gitId":"hsiaojietng"},"content":"        String title \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":292,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":293,"author":{"gitId":"hsiaojietng"},"content":"            title \u003d obtainTitleOfTask();","lastModifiedDate":"2022-02-01"},{"lineNumber":294,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":295,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":296,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":297,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":298,"author":{"gitId":"hsiaojietng"},"content":"            Task task \u003d new Event(title, 0, obtainDate());","lastModifiedDate":"2022-01-28"},{"lineNumber":299,"author":{"gitId":"hsiaojietng"},"content":"            tasks.addTask(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":300,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(line).append(\"Added Event: \").append(task.toString()).append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":301,"author":{"gitId":"hsiaojietng"},"content":"            return successMessage.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":302,"author":{"gitId":"hsiaojietng"},"content":"        }  catch (IllegalArgumentException i) {","lastModifiedDate":"2022-01-31"},{"lineNumber":303,"author":{"gitId":"hsiaojietng"},"content":"            return i.getMessage();","lastModifiedDate":"2022-01-31"},{"lineNumber":304,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":305,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":306,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":307,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":308,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":309,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":310,"author":{"gitId":"hsiaojietng"},"content":"     * Finds task with given clue word","lastModifiedDate":"2022-01-30"},{"lineNumber":311,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":312,"author":{"gitId":"hsiaojietng"},"content":"    public String findTask() {","lastModifiedDate":"2022-01-31"},{"lineNumber":313,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":314,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder noMatchMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":315,"author":{"gitId":"hsiaojietng"},"content":"        String wordsProvided;","lastModifiedDate":"2022-01-30"},{"lineNumber":316,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":317,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(line).append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":318,"author":{"gitId":"hsiaojietng"},"content":"            wordsProvided \u003d obtainTitleOfTask();","lastModifiedDate":"2022-02-01"},{"lineNumber":319,"author":{"gitId":"hsiaojietng"},"content":"            boolean hasMatch \u003d false;","lastModifiedDate":"2022-01-30"},{"lineNumber":320,"author":{"gitId":"hsiaojietng"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskListSize(); i ++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":321,"author":{"gitId":"hsiaojietng"},"content":"                Task task \u003d tasks.getParticularTask(i);","lastModifiedDate":"2022-01-30"},{"lineNumber":322,"author":{"gitId":"hsiaojietng"},"content":"                if (task.getName().toLowerCase().contains(wordsProvided)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":323,"author":{"gitId":"hsiaojietng"},"content":"                    hasMatch \u003d true;","lastModifiedDate":"2022-01-30"},{"lineNumber":324,"author":{"gitId":"hsiaojietng"},"content":"                    successMessage.append(task.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":325,"author":{"gitId":"hsiaojietng"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":326,"author":{"gitId":"hsiaojietng"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":327,"author":{"gitId":"hsiaojietng"},"content":"            if (hasMatch) {","lastModifiedDate":"2022-01-30"},{"lineNumber":328,"author":{"gitId":"hsiaojietng"},"content":"                successMessage.append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":329,"author":{"gitId":"hsiaojietng"},"content":"                return successMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":330,"author":{"gitId":"hsiaojietng"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":331,"author":{"gitId":"hsiaojietng"},"content":"                noMatchMessage.append(line).append(\"There are no Tasks that match the string inputted!\").append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":332,"author":{"gitId":"hsiaojietng"},"content":"                return noMatchMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":333,"author":{"gitId":"hsiaojietng"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":334,"author":{"gitId":"hsiaojietng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":335,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":336,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":337,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":338,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":339,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":340,"author":{"gitId":"hsiaojietng"},"content":"     * Saves all content into file and stops the program","lastModifiedDate":"2022-01-28"},{"lineNumber":341,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":342,"author":{"gitId":"hsiaojietng"},"content":"    public String terminateAndSaveProgram(Storage storage) {","lastModifiedDate":"2022-01-31"},{"lineNumber":343,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":344,"author":{"gitId":"hsiaojietng"},"content":"        String byeMessage \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":345,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(line).append(byeMessage).append(line);","lastModifiedDate":"2022-01-28"},{"lineNumber":346,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":347,"author":{"gitId":"hsiaojietng"},"content":"            storage.saveAllTasks(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":348,"author":{"gitId":"hsiaojietng"},"content":"            storage.closeWriteFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":349,"author":{"gitId":"hsiaojietng"},"content":"            return successMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":350,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":351,"author":{"gitId":"hsiaojietng"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":352,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":353,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":354,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"hsiaojietng":354}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import java.io.*;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" * This is an FileAction class that allows the saving of","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" * contents into a pre-specified file","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-25","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"    protected String filepath;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"    protected FileWriter fileWriter;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    protected FileReader fileReader;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"    protected BufferedWriter buffWriter;","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"    protected BufferedReader buffReader;","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"    public Storage(String path, TaskList tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"        filepath \u003d path;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"     * Saves content of Tasks into given file","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"    public void saveTask(String cont) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"            buffWriter.write(cont);","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"hsiaojietng"},"content":"            throw new IOException(\"\\nUnexpected error occurred where Tasks cannot be saved in file!\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"hsiaojietng"},"content":"     * Starts the process of file writing","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"    public void startWriter() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"hsiaojietng"},"content":"        fileWriter \u003d new FileWriter(filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"hsiaojietng"},"content":"        buffWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"hsiaojietng"},"content":"     * Asks for user input to change file read/to be written to what user inputted","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"hsiaojietng"},"content":"    public void requestChangeFile(String fileName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"hsiaojietng"},"content":"        filepath \u003d fileName;","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"hsiaojietng"},"content":"     * Closes file after writing into the given file","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"hsiaojietng"},"content":"    public void closeWriteFile() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"hsiaojietng"},"content":"            buffWriter.close();","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"hsiaojietng"},"content":"            throw new IOException(\"\\nUnexpected error occurred where file writer cannot be closed!\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"hsiaojietng"},"content":"     * Closes file after reading the given file","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"hsiaojietng"},"content":"    public void closeReadFile() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"hsiaojietng"},"content":"            buffReader.close();","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"hsiaojietng"},"content":"            throw new IOException(\"\\nUnexpected error occurred where file reader cannot be closed!\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"hsiaojietng"},"content":"     * Saves the current instances of duke.Task items in Tasks list into","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"hsiaojietng"},"content":"     * provided text file","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"hsiaojietng"},"content":"    public void saveAllTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"hsiaojietng"},"content":"        startWriter();","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"hsiaojietng"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"hsiaojietng"},"content":"            saveTask(task.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"hsiaojietng"},"content":"     * Reads tasks saved in the hard drive file provided by the user and","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"hsiaojietng"},"content":"     * places duke.Task objects into the current DukeList","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"hsiaojietng"},"content":"    public void tasksThatHaveBeenRead() throws FileNotFoundException {","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"hsiaojietng"},"content":"        ArrayList\u003cTask\u003e readTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"hsiaojietng"},"content":"        String line \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"hsiaojietng"},"content":"        fileReader \u003d new FileReader(filepath);","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"hsiaojietng"},"content":"        buffReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"hsiaojietng"},"content":"            while ((line \u003d buffReader.readLine()) !\u003d null) {","lastModifiedDate":"2022-02-01"},{"lineNumber":100,"author":{"gitId":"hsiaojietng"},"content":"                String[] arrOfString \u003d line.split(\" - \");","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"hsiaojietng"},"content":"                readTasks.add(createTaskFromText(arrOfString));","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"hsiaojietng"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"hsiaojietng"},"content":"            tasks.setTasks(readTasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"hsiaojietng"},"content":"            System.out.println(\"Error in reading tasks from file!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"hsiaojietng"},"content":"     * Creates Task based on the text provided in the given text file","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"hsiaojietng"},"content":"    public Task createTaskFromText(String[] line) {","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"hsiaojietng"},"content":"        String type \u003d line[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"hsiaojietng"},"content":"        String done \u003d line[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"hsiaojietng"},"content":"        String title \u003d line[2];","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"hsiaojietng"},"content":"        String date \u003d \"\";","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"hsiaojietng"},"content":"        Task newT \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"hsiaojietng"},"content":"        switch (type) {","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"hsiaojietng"},"content":"            case \"T\":","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"hsiaojietng"},"content":"                newT \u003d new ToDo(title, Integer.valueOf(done));","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"hsiaojietng"},"content":"            case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"hsiaojietng"},"content":"                 date \u003d line[3];","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"hsiaojietng"},"content":"                newT \u003d new Deadline(title, Integer.valueOf(done));","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"hsiaojietng"},"content":"                ((Deadline) newT).setLocalDate(date);","lastModifiedDate":"2022-02-01"},{"lineNumber":126,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"hsiaojietng"},"content":"            case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"hsiaojietng"},"content":"                date \u003d line[3];","lastModifiedDate":"2022-01-28"},{"lineNumber":129,"author":{"gitId":"hsiaojietng"},"content":"                newT \u003d new Event(title, Integer.valueOf(done));","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"hsiaojietng"},"content":"                ((Event) newT).setLocalDate(date);","lastModifiedDate":"2022-02-01"},{"lineNumber":131,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"hsiaojietng"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"hsiaojietng"},"content":"                System.out.println(\"Invalid Task type found in file!\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"hsiaojietng"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"hsiaojietng"},"content":"        return newT;","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"hsiaojietng":138}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" * This is an abstract duke.Task class that creates task instances with a title,","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" * whether task is completed and the type of task.","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-15","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"    protected String name;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    protected int done;","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"    protected Character type;","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"    public Task(String n, int d) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"        name \u003d n;","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"        done \u003d d;","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"    public String getName() {","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"        return name;","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"    public int getDone() {","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"        return done;","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"    public Character getType() {","lastModifiedDate":"2022-01-18"},{"lineNumber":36,"author":{"gitId":"hsiaojietng"},"content":"        return type;","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"hsiaojietng"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"hsiaojietng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"    public void setDone(int done) {","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"hsiaojietng"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"hsiaojietng"},"content":"    public void setType(Character type) {","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"hsiaojietng"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"hsiaojietng"},"content":"     * Sets the duke.Task\u0027s type of: Todo, duke.Deadline, duke.Event","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"hsiaojietng"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"hsiaojietng"},"content":"        return String.format(\"%c\", type);","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":57,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"hsiaojietng":57}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":" * This is a DukeList class that handles the operations to the","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":" * tasks in the list in the duke.Duke system","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-15","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":"public class TaskList {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"    String line \u003d \"____________________________________________________________ \\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"        return tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"     * Returns the particular task","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"    public Task getParticularTask(int i) {","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"        return tasks.get(i);","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"     * Returns the size of the current tasklist","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"hsiaojietng"},"content":"        return tasks.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"hsiaojietng"},"content":"     * Adds Tasks into the list","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"hsiaojietng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"hsiaojietng"},"content":"     * Deletes Tasks from the list","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"hsiaojietng"},"content":"    public Task deleteTask(int i) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"hsiaojietng"},"content":"        Task task;","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"hsiaojietng"},"content":"            task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"hsiaojietng"},"content":"            tasks.remove(i - 1);","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"hsiaojietng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"hsiaojietng"},"content":"            StringBuilder error \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"hsiaojietng"},"content":"            error.append(line ).append(\"☹ OOPS!!! Fam, you do not even have this numbered duke.Task in your list.\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"hsiaojietng"},"content":"            error.append(line);","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"hsiaojietng"},"content":"            throw new DukeException(error.toString());","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"hsiaojietng"},"content":"        return task;","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"hsiaojietng"},"content":"     * Displays all Tasks in the list","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"hsiaojietng"},"content":"    public String printTasks() {","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"hsiaojietng"},"content":"        String line \u003d \"____________________________________________________________ \\n\";","lastModifiedDate":"2022-01-16"},{"lineNumber":69,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"hsiaojietng"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i ++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(String.format(\"%o.\", i + 1));","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"hsiaojietng"},"content":"            successMessage.append(tasks.get(i).toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(line);","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"hsiaojietng"},"content":"        return successMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":78,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":79,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"hsiaojietng"},"content":"     * Marks the duke.Task as done by given index input.","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"hsiaojietng"},"content":"     * Index is based on the position the duke.Task is in, in the list","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"hsiaojietng"},"content":"    public Task markTask(int i) {","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"hsiaojietng"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"hsiaojietng"},"content":"        task.setDone(1);","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"hsiaojietng"},"content":"        return task;","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":88,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"hsiaojietng"},"content":"     * Unmarks the duke.Task as done by given index input.","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"hsiaojietng"},"content":"     * Index is based on the position the duke.Task is in, in the list","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"hsiaojietng"},"content":"    public Task unmarkTask(int i) {","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"hsiaojietng"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"hsiaojietng"},"content":"        task.setDone(0);","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"hsiaojietng"},"content":"        return task;","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"hsiaojietng":98}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":" * This is a child class of duke.Task, Todo.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":" * Todo class accepts only a title and if it is complete as parameter","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-15","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"    public ToDo(String name, int done) {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"        super(name, done);","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"        super.type \u003d \u0027T\u0027;","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(getTaskIcon()).append(\" - \");","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(done).append(\" - \");","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"        successMessage.append(name).append(\"\\n\");;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"        return successMessage.toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"hsiaojietng":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":" * Ui class that handles the display and obtaining of user input","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":" * of Duke application","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":" * @author  Hsiao Jiet","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":" * @version 1.0","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":" * @since   2022-1-15","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":"public class Ui {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"    Parser parser;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"    String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"    Scanner scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"     * Constructor.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"     * Initialises a scanner for user input and starts up application welcome message.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"    public Ui() {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"        System.out.println(createWelcomeMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"    /** Returns a pre-made Welcome message to users  */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"    public String createWelcomeMessage() {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder welcomeMessage \u003d new StringBuilder();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"        String welcome \u003d \"Welcome to Duke, your personal Task assistant!\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"        welcomeMessage.append(line).append(welcome).append(line);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"        return welcomeMessage.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"hsiaojietng"},"content":"    /** Takes in TaskList and Storage objects so that they can be updated with user\u0027s commands  */","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"hsiaojietng"},"content":"    public void displayCommandMessage(TaskList tasks, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"hsiaojietng"},"content":"        System.out.println(askForCommand());","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"hsiaojietng"},"content":"        parseUserInput(tasks, storage);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"hsiaojietng"},"content":"    /** Returns a pre-made command message to users  */","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"hsiaojietng"},"content":"    public String askForCommand() {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"hsiaojietng"},"content":"        StringBuilder commandMessage \u003d new StringBuilder();","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"hsiaojietng"},"content":"        String command \u003d \"What is your command: \\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"hsiaojietng"},"content":"        commandMessage.append(command);","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"hsiaojietng"},"content":"        return commandMessage.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"hsiaojietng"},"content":"    /** Takes in TaskList and Storage objects to parse the user input  */","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"hsiaojietng"},"content":"    public void parseUserInput(TaskList tasks, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"hsiaojietng"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"hsiaojietng"},"content":"        parser \u003d new Parser(userInput, tasks, storage);//Calls Parser to parse information of userInput","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"hsiaojietng"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"hsiaojietng"},"content":"            parser.parseInput();//and do the respective action from duke.TaskList","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"hsiaojietng"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"hsiaojietng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"hsiaojietng"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hsiaojietng":59,"-":2}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import org.junit.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":"    Storage storage \u003d new Storage(\"data/duke.txt\", tasks);","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":"    public void parserToDoTest_createToDoTask_success() throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":"        String expected \u003d \"Added Todo: T - 0 - Join Club\";","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"        Parser parser \u003d new Parser(\"todo Join Club\", tasks, storage);","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"        String output \u003d parser.createToDoTask();","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"hsiaojietng"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"hsiaojietng"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"hsiaojietng"},"content":"    public void parserDeadlineTest_createDeadlineTask_success() throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"hsiaojietng"},"content":"        String expected \u003d \"Added Deadline: D - 0 - Assignment - 2022/May/14\";","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"hsiaojietng"},"content":"        Parser parser \u003d new Parser(\"deadline Assignment /by 2022/May/14\", tasks, storage);","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"hsiaojietng"},"content":"        String output \u003d parser.createDeadlineTask();","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"hsiaojietng"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"hsiaojietng"},"content":"    @Test","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"hsiaojietng"},"content":"    public void parserEventTest_createEventTask_success() throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"hsiaojietng"},"content":"        String expected \u003d \"Added Event: E - 0 - Project Meeting - 2022/January/30\";","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"hsiaojietng"},"content":"        Parser parser \u003d new Parser(\"event Project Meeting /at 2022/January/30\", tasks, storage);","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"hsiaojietng"},"content":"        String output \u003d parser.createEventTask();","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"hsiaojietng"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"hsiaojietng":35}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"package duke;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"import org.junit.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":"public class UiTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":"    public void validWelcomeMessage() {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":"        String expected \u003d \"Welcome to Duke, your personal Task assistant!\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"hsiaojietng"},"content":"        String output \u003d ui.createWelcomeMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"hsiaojietng"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"hsiaojietng"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"hsiaojietng"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"hsiaojietng":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hsiaojietng"},"content":"todo borrow book","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"hsiaojietng"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"hsiaojietng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"hsiaojietng"},"content":"event project meeting /at Monday 4-5pm","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"hsiaojietng"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"hsiaojietng"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"hsiaojietng"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"hsiaojietng"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"hsiaojietng"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"hsiaojietng"},"content":"unmark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"hsiaojietng"},"content":"he","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"hsiaojietng"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"hsiaojietng":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"hsiaojietng"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hsiaojietng":1,"-":20}}]
