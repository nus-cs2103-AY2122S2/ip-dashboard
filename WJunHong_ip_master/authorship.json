[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    ","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    mainClassName \u003d \"duke.chi.Chi\"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    archiveBaseName \u003d \"chi\"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WJunHong":5,"-":44}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":" T | 0 | soemthing","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":" D | 0 | something | 2022-10-10 | 23:59","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" E | 0 | something | 2022-04-04 | 00:00 | 23:59","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":4}},{"path":"src/main/java/duke/chi/Chi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.chi;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import duke.exception.ChiException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" * Main class for ChatBot.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"public class Chi {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /** Contains the task data stored in the hard-drive */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    /** Contains the task data stored in the program */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    /** Handles interactions with the user */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    private UI ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    /** Interprets messages sent by the user */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     * Instantiates the necessary components to run the application.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * @param filepath The filepath of task data saved in hard-disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public Chi(String filepath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            // print error for file not found","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"            ui.printErrorMsg(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"            // print error for IO problems","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"            ui.printErrorMsg(\"There\u0027s something wrong with the IO nyan!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     * Runs the UI component of Chat bot to start accepting and printing user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    public void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        ui.printWelcome();","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        ui.requestInput(this.taskList, this.storage, this.parser);","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        ui.printGoodbye();","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     * Creates new Chi instance and starts running Chat bot.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     * @param args The command line arguments supplied when program runs.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"        Chi myBot \u003d new Chi(\"data/tasks.txt\");","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        myBot.run();","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WJunHong":65,"-":1}},{"path":"src/main/java/duke/exception/ChiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * Unique exceptions pertaining to Chi Chat bot.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class ChiException extends Exception {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /** Body of exception message */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    private String msg;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     * Constructor for ChiException.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"     * @param exn The exception message when ChiException is thrown.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    public ChiException(String exn) {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"        super(exn);","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        this.msg \u003d exn;","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * Returns an error message based on the exception body passed in.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     * @return String of an error message.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"        // Error messages based on message sent","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        if (msg.equals(\"todo\") || msg.equals(\"deadline\") || msg.equals(\"event\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"            return \"Hey! This \" + msg + \" can\u0027t be empty nyaan~!\";","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        } else if (msg.equals(\"mark\") || msg.equals(\"unmark\") || msg.equals(\"delete\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"            return \"Hey! Please choose something to \" + msg + \" nyaan~!\";","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            return msg;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    // TBD - More errors will be added to handle other potential invalid inputs by the user","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":37}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import duke.exception.ChiException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":" * Interprets messages sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * Processes a Task index based on message sent by user.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * @param size The current size of the TaskList.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @return An integer of the index.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If invalid messages are sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    private int processNumberMsg(String msg, int size) throws ChiException {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        String refine \u003d msg.trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        if (refine.split(\" \").length \u003e 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Too many words nyan!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"                int index \u003d Integer.parseInt(refine);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"                if (index \u003e size) {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"                    throw new ChiException(\"Too big index nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"                } else if (index \u003c 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"                    throw new ChiException(\"No negative indexes nyan!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"                return index - 1;","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"This is not a number nyan!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     * Adds a new Deadline task if message sent by user is given in the correct format.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     * @param msg The body of the message sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList where the Deadline will be stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which will write the new Deadline onto the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"     * @return A String representing a successful Deadline addition.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If an invalid message is read.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If problem occurs when writing the new Deadline onto the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    private String processDeadlineMsg(String msg, TaskList tl, Storage sge) throws ChiException, IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"        String[] refineMore \u003d msg.split(\"/by\");","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        System.out.println(refineMore[0]);","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        if (refineMore[0].equals(msg)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Please include /by separator nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"        if (refineMore[0].trim().equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"deadline\");","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"        if (refineMore.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Please include a date time nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        if (refineMore.length \u003e 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Too many /by-s nyannn!!!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        Task newTask1;","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"            LocalDate d \u003d LocalDate.parse(refineMore[1].trim().split(\" \")[0].trim(),","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"            if (refineMore[1].trim().split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"                LocalTime t \u003d LocalTime.parse(refineMore[1].trim().split(\" \")[1].trim(),","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"                        DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"                newTask1 \u003d new Deadline(refineMore[0].trim(), d, t, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"            } else if (refineMore[1].trim().split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"                newTask1 \u003d new Deadline(refineMore[0].trim(), d, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Too many date times nyan!!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"            tl.addTask(newTask1);","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"            sge.updateFile(newTask1, tl, \"deadline\");","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"This date time format is not recognized nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        return String.format(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"                newTask1, tl.getSize());","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"     * Adds a new Event task if message sent by user is given in the correct format.","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"     * @param msg The body of the message sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList where the Event will be stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which will write the new Event onto the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"     * @return A String representing a successful Event addition.","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If an invalid message is read.","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If problem occurs when writing the new Event onto the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"    private String processEventMsg(String msg, TaskList tl, Storage sge) throws ChiException, IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"        String[] refineMore \u003d msg.split(\"/at\");","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        if (refineMore[0].equals(msg)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Please include /at separator nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"        if (refineMore[0].trim().equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"        if (refineMore.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Please write a timing nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"        if (refineMore.length \u003e 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Too many /at-s nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"        Task newTask;","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"            LocalDate d \u003d LocalDate.parse(refineMore[1].trim().split(\" \")[0].trim(),","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"            if (refineMore[1].trim().split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"                if (refineMore[1].trim().split(\" \")[1].trim().split(\"-\").length \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"                    throw new ChiException(\"No timing found nyan1\");","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"                } else if (refineMore[1].trim().split(\" \")[1].trim().split(\"-\").length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"                    throw new ChiException(\"1 time is missing!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"                } else if (refineMore[1].trim().split(\" \")[1].trim().split(\"-\").length \u003e 2) {","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"                    throw new ChiException(\"Too many timings!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"                LocalTime t1 \u003d LocalTime.parse(refineMore[1].trim().split(\" \")[1].trim().split(\"-\")[0],","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"                        DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"                LocalTime t2 \u003d LocalTime.parse(refineMore[1].trim().split(\" \")[1].trim().split(\"-\")[1],","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"                        DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"                if (t1.isAfter(t2)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"                    throw new ChiException(\"The end time cannot come before start time nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"                newTask \u003d new Event(refineMore[0].trim(), d, t1, t2, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"            } else if (refineMore[1].trim().split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"                newTask \u003d new Event(refineMore[0].trim(), d, false);","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Too many date time things nyan!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"            tl.addTask(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"            sge.updateFile(newTask, tl, \"event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"This date time format is not recognized nyan!!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"        return String.format(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"                newTask, tl.getSize());","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"     * Finds tasks in the task list which match keywords in the message body.","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message body.","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList containing tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"WJunHong"},"content":"     * @return A String response of matching tasks found.","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"    public String processFindMsg(String msg, TaskList tl) {","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"WJunHong"},"content":"        // Assume that at this point there are some text","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"WJunHong"},"content":"        String[] findWords \u003d msg.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"WJunHong"},"content":"        return \"Here\u0027s what I could find!\\n\" + tl.checkWordsInTask(findWords);","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"WJunHong"},"content":"     * Carries out various operations if valid message is sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"WJunHong"},"content":"     * @param msg The raw message sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList storing the user\u0027s Tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"WJunHong"},"content":"     * @param sge Storage of the tasks in the hard-disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"     * @return A string of the expected response to the user\u0027s message.","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the message cannot be interpreted.","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are problems accessing the data file in Storage.","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"WJunHong"},"content":"    public String processMessage(String msg, TaskList tl, Storage sge) throws ChiException, IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":180,"author":{"gitId":"WJunHong"},"content":"        // Obtain 1st word","lastModifiedDate":"2022-01-24"},{"lineNumber":181,"author":{"gitId":"WJunHong"},"content":"        String[] command \u003d msg.trim().split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":182,"author":{"gitId":"WJunHong"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":183,"author":{"gitId":"WJunHong"},"content":"            if (command[0].equals(\"list\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":184,"author":{"gitId":"WJunHong"},"content":"                return tl.getTasksMsg();","lastModifiedDate":"2022-01-24"},{"lineNumber":185,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":186,"author":{"gitId":"WJunHong"},"content":"            // Stretch goals command class storing commands HashMap to search and return them","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"WJunHong"},"content":"            if (command[0].toLowerCase().equals(\"deadline\") || command[0].toLowerCase().equals(\"event\") ||","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"WJunHong"},"content":"                    command[0].toLowerCase().equals(\"todo\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(command[0].toLowerCase());","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":191,"author":{"gitId":"WJunHong"},"content":"            // Unknown message, or command lacks task","lastModifiedDate":"2022-01-24"},{"lineNumber":192,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"The following command \" + msg.trim().toLowerCase() + \" cannot be understood\");","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":194,"author":{"gitId":"WJunHong"},"content":"            // Check for keywords","lastModifiedDate":"2022-01-24"},{"lineNumber":195,"author":{"gitId":"WJunHong"},"content":"            int processed;","lastModifiedDate":"2022-01-26"},{"lineNumber":196,"author":{"gitId":"WJunHong"},"content":"            switch (command[0].toLowerCase()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":197,"author":{"gitId":"WJunHong"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":198,"author":{"gitId":"WJunHong"},"content":"                // Retrieve the task from the list","lastModifiedDate":"2022-01-24"},{"lineNumber":199,"author":{"gitId":"WJunHong"},"content":"                processed \u003d processNumberMsg(msg.substring(4), tl.getSize());","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"WJunHong"},"content":"                Task doneTask \u003d tl.getTask(processed);","lastModifiedDate":"2022-01-24"},{"lineNumber":201,"author":{"gitId":"WJunHong"},"content":"                // Mark as done","lastModifiedDate":"2022-01-24"},{"lineNumber":202,"author":{"gitId":"WJunHong"},"content":"                doneTask.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":203,"author":{"gitId":"WJunHong"},"content":"                sge.updateFile(doneTask, tl, \"mark\");","lastModifiedDate":"2022-01-24"},{"lineNumber":204,"author":{"gitId":"WJunHong"},"content":"                return String.format(\"Great job nyan~!\\n%s\\n\", doneTask);","lastModifiedDate":"2022-01-24"},{"lineNumber":205,"author":{"gitId":"WJunHong"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"WJunHong"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":207,"author":{"gitId":"WJunHong"},"content":"                processed \u003d processNumberMsg(msg.substring(6), tl.getSize());","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"WJunHong"},"content":"                Task doneTask1 \u003d tl.getTask(processed);","lastModifiedDate":"2022-01-24"},{"lineNumber":209,"author":{"gitId":"WJunHong"},"content":"                doneTask1.markAsUndone();","lastModifiedDate":"2022-01-24"},{"lineNumber":210,"author":{"gitId":"WJunHong"},"content":"                sge.updateFile(doneTask1, tl, \"unmark\");","lastModifiedDate":"2022-01-24"},{"lineNumber":211,"author":{"gitId":"WJunHong"},"content":"                return String.format(\"Let\u0027s get it done next time nyan~!\\n%s\\n\", doneTask1);","lastModifiedDate":"2022-01-24"},{"lineNumber":212,"author":{"gitId":"WJunHong"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"WJunHong"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-24"},{"lineNumber":214,"author":{"gitId":"WJunHong"},"content":"                // Obtain the ToDo","lastModifiedDate":"2022-01-24"},{"lineNumber":215,"author":{"gitId":"WJunHong"},"content":"                Task newTask \u003d new Todo(msg.substring(4).trim(), false);","lastModifiedDate":"2022-01-24"},{"lineNumber":216,"author":{"gitId":"WJunHong"},"content":"                // Add task to list","lastModifiedDate":"2022-01-24"},{"lineNumber":217,"author":{"gitId":"WJunHong"},"content":"                tl.addTask(newTask);","lastModifiedDate":"2022-01-24"},{"lineNumber":218,"author":{"gitId":"WJunHong"},"content":"                sge.updateFile(newTask, tl, \"todo\");","lastModifiedDate":"2022-01-24"},{"lineNumber":219,"author":{"gitId":"WJunHong"},"content":"                return String.format(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-24"},{"lineNumber":220,"author":{"gitId":"WJunHong"},"content":"                        newTask, tl.getSize());","lastModifiedDate":"2022-01-24"},{"lineNumber":221,"author":{"gitId":"WJunHong"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":222,"author":{"gitId":"WJunHong"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-24"},{"lineNumber":223,"author":{"gitId":"WJunHong"},"content":"                return processDeadlineMsg(msg.substring(8), tl, sge);","lastModifiedDate":"2022-01-26"},{"lineNumber":224,"author":{"gitId":"WJunHong"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":225,"author":{"gitId":"WJunHong"},"content":"            case \"event\":","lastModifiedDate":"2022-01-24"},{"lineNumber":226,"author":{"gitId":"WJunHong"},"content":"                return processEventMsg(msg.substring(5), tl, sge);","lastModifiedDate":"2022-01-26"},{"lineNumber":227,"author":{"gitId":"WJunHong"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":228,"author":{"gitId":"WJunHong"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-24"},{"lineNumber":229,"author":{"gitId":"WJunHong"},"content":"                processed \u003d processNumberMsg(msg.substring(6), tl.getSize());","lastModifiedDate":"2022-01-26"},{"lineNumber":230,"author":{"gitId":"WJunHong"},"content":"                Task toDelete \u003d tl.getTask(processed);","lastModifiedDate":"2022-01-24"},{"lineNumber":231,"author":{"gitId":"WJunHong"},"content":"                tl.deleteTask(toDelete);","lastModifiedDate":"2022-01-24"},{"lineNumber":232,"author":{"gitId":"WJunHong"},"content":"                sge.updateFile(toDelete, tl, \"delete\");","lastModifiedDate":"2022-01-24"},{"lineNumber":233,"author":{"gitId":"WJunHong"},"content":"                return String.format(\"Chi-san has removed task:\\n %s\\nYou now have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-24"},{"lineNumber":234,"author":{"gitId":"WJunHong"},"content":"                        toDelete, tl.getSize());","lastModifiedDate":"2022-01-24"},{"lineNumber":235,"author":{"gitId":"WJunHong"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":236,"author":{"gitId":"WJunHong"},"content":"            case \"find\":","lastModifiedDate":"2022-01-27"},{"lineNumber":237,"author":{"gitId":"WJunHong"},"content":"                return processFindMsg(msg.substring(4), tl);","lastModifiedDate":"2022-01-27"},{"lineNumber":238,"author":{"gitId":"WJunHong"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":239,"author":{"gitId":"WJunHong"},"content":"            default:","lastModifiedDate":"2022-01-24"},{"lineNumber":240,"author":{"gitId":"WJunHong"},"content":"                // Some message which does not start with a keyword","lastModifiedDate":"2022-01-24"},{"lineNumber":241,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(msg);","lastModifiedDate":"2022-01-24"},{"lineNumber":242,"author":{"gitId":"WJunHong"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":243,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":244,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":245,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":246,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"WJunHong":246}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import duke.exception.ChiException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":" * Loads and stores tasks from given data file to and from application.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    /** The relative file path of the data file */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private String dataFilePath;","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    /** The relative path of the directory containing the data file */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    private String dataFolderPath;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    /** The File object representing the data file */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    private File dataFile;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     * @param path The relative path of the data file to use for storage of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        this.dataFilePath \u003d path;","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        String[] rPath \u003d path.split(\"/\");","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        StringBuilder s \u003d new StringBuilder(\"./\");","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        for (int i \u003d 0; i \u003c rPath.length - 1; i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"            s.append(rPath[i]);","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        this.dataFolderPath \u003d s.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     * Deciphers a task in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     * @param task A single task stored in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @return A Task instance of the task read from the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    private Task manageFileData(String task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        // We assume the task stored inside is correct","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        String[] splitTask \u003d task.split(\"\\\\|\");","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        for (int i \u003d 0; i \u003c splitTask.length; i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"            splitTask[i] \u003d splitTask[i].trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        if (splitTask[0].equals(\"T\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"            if (splitTask[1].equals(\"1\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"                return new Todo(splitTask[2], true);","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"            return new Todo(splitTask[2], false);","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        } else if (splitTask[0].equals(\"D\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"            if (splitTask.length \u003d\u003d 5) {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"                return new Deadline(splitTask[2], LocalDate.parse(splitTask[3],","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"                        LocalTime.parse(splitTask[4], DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"                        splitTask[1].equals(\"1\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"                return new Deadline(splitTask[2], LocalDate.parse(splitTask[3],","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")), splitTask[1].equals(\"1\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"            if (splitTask.length \u003d\u003d 6) {","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"                return new Event(splitTask[2], LocalDate.parse(splitTask[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"                        LocalTime.parse(splitTask[4], DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"                        LocalTime.parse(splitTask[5], DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"                        splitTask[1].equals(\"1\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"                return new Event(splitTask[2], LocalDate.parse(splitTask[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"                        splitTask[1].equals(\"1\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"     * Extracts the tasks stored in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"     * @return An ArrayList of Task instances interpreted from data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are interruptions while accessing the file.","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the file or its directory are not found.","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, ChiException {","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"            this.dataFile \u003d new File(dataFilePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"            Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"                Task t \u003d manageFileData(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"                loadedTasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"            return loadedTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"            File dataFolder \u003d new File(dataFolderPath);","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"            if (!dataFolder.isDirectory()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"            File newDataFile \u003d new File(dataFilePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"            newDataFile.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"File not found, restart program nyan!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"     * Updates tasks on the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"     * @param task The Task instance to be updated.","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList storing all Task instances.","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"     * @param type The command used.","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are interruptions while accessing the file.","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"    public void updateFile(Task task, TaskList tl, String type) throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"        FileWriter fw;","lastModifiedDate":"2022-01-24"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"        switch(type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"            fw \u003d new FileWriter(dataFilePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"            fw.write(tl.getTaskStore());","lastModifiedDate":"2022-01-24"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"            fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"        case \"event\":","lastModifiedDate":"2022-01-24"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"            fw \u003d new FileWriter(dataFilePath, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"            fw.write(task.writeToFile());","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"            fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"WJunHong":150}},{"path":"src/main/java/duke/storage/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.storage;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * A STUB for testing classes with Storage class dependencies.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"     * @param s Filler String to be passed into parent class.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public StorageStub(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        super(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" * Represents a task which has a deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    /** The date of the deadline */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /** The time of day of the deadline */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * Constructor for Deadline Class.","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * @param by The date of the deadline as a LocalDate object.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     * @param isDone The completion status of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"        this.deadlineDate \u003d by;","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        this.deadlineTime \u003d LocalTime.parse(\"23:59\", DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"            this.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     * Constructor for Deadline Class.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     * @param by The date of the deadline as a LocalDate object.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     * @param byTime The time of day of the deadline as a LocalTime object.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"     * @param isDone The completion status of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    public Deadline(String description, LocalDate by, LocalTime byTime, boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        this.deadlineDate \u003d by;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        this.deadlineTime \u003d byTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"            this.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * Returns a standardized format for storing the deadline into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @return String of deadline in data file storage format.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        return \" D \" + super.writeToFile() + \" | \" + this.deadlineDate + \" | \" + this.deadlineTime + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     * Adds extra custom formatting for user view specific to deadlines.","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     * @return A custom String display of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"                + this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"                + this.deadlineTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \" )\";","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":71}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" * Represents a task which is an event.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    /** The date of the event */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /** The starting time of the event */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    private LocalTime eventStartTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /** The ending time of the event */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    private LocalTime eventEndTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Event class.","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * @param date The date of the event as a LocalDate object.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public Event(String description, LocalDate date, boolean isDone ) {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"        this.eventDate \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        this.eventStartTime \u003d LocalTime.parse(\"00:00\", DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        this.eventEndTime \u003d LocalTime.parse(\"23:59\", DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            this.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Event class.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     * @param date The date of the event as a LocalDate object.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"     * @param t1 The start time of the event as a LocalTime object.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * @param t2 The end time of the event as a LocalTime object.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    public Event(String description, LocalDate date, LocalTime t1, LocalTime t2, boolean isDone ) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        this.eventDate \u003d  date;","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"        this.eventStartTime \u003d t1;","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        this.eventEndTime \u003d t2;","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"            this.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     * Returns a standardized format for storing the event into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"     * @return String of event in data file storage format.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        return \" E \" + super.writeToFile() + \" | \" + this.eventDate + \" | \" + this.eventStartTime + \" | \"","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"                + this.eventEndTime + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"     * Adds extra custom formatting for user view specific to events.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"     * @return A custom String display of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"                + \" from \" + eventStartTime.format(DateTimeFormatter.ofPattern(\"hh: mm a\")) + \" to \"","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"                + eventEndTime.format(DateTimeFormatter.ofPattern(\"hh: mm a\")) + \" \" + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":77}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * Represents a task input from the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /** The description of the task */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    private String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /** The completion status of a task */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Task.","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * Verifies if a task description contains all keywords supplied.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @param wordsToCheck Array of keywords.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @return Boolean of whether task matches all keywords.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public boolean checkDescription(String[] wordsToCheck) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        boolean isIn \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        for (String s: wordsToCheck) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"            if (!this.description.contains(s.trim())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"                isIn \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        return isIn;","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * Returns a cross if task has been completed.","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * @return String of completion status.","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * Sets the completion status of the task to true.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"     * Sets the completion status of task to false.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"     * Returns a standardized format for storing the task into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"     * @return String of task in data file storage format.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        return this.isDone ? \"| 1 | \" + this.description : \"| 0 | \" + this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"     * Adds extra custom formatting for user view.","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"     * @return A custom String display of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-15"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":82}},{"path":"src/main/java/duke/task/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.task;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * A STUB of a Task instance for testing.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * Constructor for the class","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"     * @param s Filler String for super class constructor.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public TaskStub(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        super(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * Returns a fixed task description.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     * @return String representation of the task description.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        return \"forT1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":26}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * Represents a task which is a simple Todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Todo Class","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"            this.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * Returns a standardized format for storing the todo into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * @return String of todo in data file storage format.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public String writeToFile() {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        return \" T \" + super.writeToFile() + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * Adds extra custom formatting for user view specific to todos.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * @return A custom String display of the Todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":39}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.tasklist;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":" * Stores the tasks within the program while running.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    /** Stores the tasks */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * Instantiates the instance when no data file is found.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     * Instantiates the instance when taking in a data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * @param savedTasks ArrayList of saved tasks in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        this.tasks \u003d savedTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     * @param t The task to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * Delete a task from the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * @param t The task to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    public void deleteTask(Task t) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        this.tasks.remove(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * Returns the contents of the task list for display to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @return String of all tasks in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    public String getTasksMsg() {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        for (Task t: this.tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"            s.append(t.toString()).append(\"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"        return s.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     * Returns the contents of the task list for storage into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"     * @return String of all tasks in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"    public String getTaskStore() {","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"        for (Task t: this.tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"            s.append(t.writeToFile()).append(\"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        return s.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"     * @return Size of task ArrayList.","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"     * @param index The index of the task in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"     * Returns tasks which match the given keywords in proper format.","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"     * @param wordsToCheck The array of keywords that the task must contain.","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"     * @return A String of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"    public String checkWordsInTask(String[] wordsToCheck) {","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"        for (Task t: this.tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"            if (t.checkDescription(wordsToCheck)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"                s.append(t).append(\"\\n\");","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        return s.length() \u003d\u003d 0 ? \"Could not find anything related to that!\" : s.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"WJunHong":110}},{"path":"src/main/java/duke/tasklist/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.tasklist;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":" * Represents a STUB of a TaskList for testing purposes.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /** Stores the tasks */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private List\u003cString\u003e testTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"     * Instantiates the new instance with 2 fixed tasks added in.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    public TaskListStub() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"        this.testTasks.add(\"list item 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"        this.testTasks.add(\"list item 2\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * Returns a concatenation of the two tasks stored in the Stub.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * @return A String of tasks for testing.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public String getTasksMsg() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        return testTasks.get(0) + \"\\n\" + testTasks.get(1);","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":31}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package duke.ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import duke.exception.ChiException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" * Displays messages for the user and takes in their input.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"public class UI {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * Prints the welcome message when the Chat Bot runs.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    public void printWelcome() {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        System.out.println(\"Welcome to Chi task bot nyan!!!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     * Takes in consecutive user inputs and prints a response to each one.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList instance storing tasks locally in the program.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage instance storing tasks on the hard-disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @param prs The Parser instance interpreting the message sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public void requestInput(TaskList tl, Storage sge, Parser prs) {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        Scanner sn \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        String msg \u003d sn.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        while (!msg.equals(\"bye\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"                System.out.println(prs.processMessage(msg,tl,sge));","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            } catch (ChiException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"                this.printErrorMsg(e.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"                this.printErrorMsg(\"Something went wrong while storing task to file nyaan!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"            msg \u003d sn.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        sn.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     * Prints the goodbye message to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    public void printGoodbye() {","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        System.out.println(\"Leaving already? Alright... see you soon nyan!!!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     * Customizes and prints the error message back to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"     * @param errMsg The error message from an invalid user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    public void printErrorMsg(String errMsg) {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        System.out.println(\"\u003dV.V\u003d \" + errMsg + \" \u003dV.V\u003d\");","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"WJunHong":64}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import duke.exception.ChiException;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import duke.storage.StorageStub;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import duke.tasklist.TaskListStub;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    void textPrinted_listStatement_ListOfTasks() throws ChiException, IOException{","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"        TaskListStub tls \u003d new TaskListStub();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        StorageStub ss \u003d new StorageStub(\"/somePath.txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"        try{","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"            assertEquals(\"list item 1\\nlist item 2\", p.processMessage(\"list\", tls, ss));","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Not supposed to happen\");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"            throw new IOException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    void outputMessage_incorrectCommand_ChiExceptionThrown() throws ChiException, IOException{","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        TaskListStub tls \u003d new TaskListStub();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        StorageStub ss \u003d new StorageStub(\"/somePath.txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        try{","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"            String s \u003d p.processMessage(\"allahu\", tls, ss);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"            assertEquals(\"The following command allahu cannot be understood\", e.toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            throw new IOException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":40}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import duke.task.TaskStub;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"class TaskListTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    void taskCanBeAdded_newTask_newTaskExistsInList() {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"        t.addTask(new TaskStub(\"\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        assertEquals(\"forT1\", t.getTask(0).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    void taskCanBeDeleted_newTask_taskListIsEmpty() {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        TaskStub ts \u003d new TaskStub(\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        t.addTask(ts);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        t.deleteTask(ts);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"        assertEquals(0, t.getSize());","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"echo after me ah","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"todo erase whiteboard","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"todo wash dishes","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"todo buy textbooks","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"deadline submit modreg /by friday night","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"deadline apply internship /by May 2022","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"deadline /by idk","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"event /at","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"event birthday part /at sat 2-3pm","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"event 2103 lec /at fri 2pm","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"event career fair /at march 2020","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"mark 3","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"mark 5","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"mark 7","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"mark","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"unmark","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"unmark 5","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"todo","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"event","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"deadline","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"delete 2","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"delete","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":28}}]
