[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"    /** Deadline timing. */","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"    private String by;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"     * Constructor for Deadline Class.","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * @param by The timing of the deadline.","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * Returns the task in proper format.","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * @return String of the deadline.","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"    /** Stores the messages sent by the user. */","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"    private static List\u003cTask\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     * Displays a message based on the user input.","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message inputted by the user.","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     * @throws DukeException if messages are invalid.","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    public static void respondToMsg(String msg) throws DukeException {","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"        // Obtain 1st word","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"        String[] command \u003d msg.trim().split(\" \");","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"            if (command[0].equals(\"list\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"                System.out.println(\"Here are your list items nyan~:\");","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"                int i \u003d 1;","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"                for (Task t: messages) {","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"                    // Print task and its status","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"                    System.out.printf(\"%d. %s\\n\",i , t);","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"                    ++i;","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"                return;","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"            // Unknown message, or command lacks task","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"            throw new DukeException(msg.trim().toLowerCase());","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"            // Check for keywords","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            switch(command[0].toLowerCase()) {","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"                case \"mark\":","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"                    // Retrieve the task from the list","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"                    Task doneTask \u003d messages.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"                    // Mark as done","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"                    doneTask.markAsDone();","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"                    // Print completion message","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"                    System.out.printf(\"Great job nyan~!\\n%s\\n\",doneTask);","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"                    break;","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"                case \"unmark\":","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"                    Task doneTask1 \u003d messages.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"                    doneTask1.markAsUndone();","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"                    // Print undo message","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"                    System.out.printf(\"Let\u0027s get it done next time nyan~!\\n%s\\n\",doneTask1);","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"                    break;","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"                case \"todo\":","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"                    // Obtain the ToDo","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"                    Task newTask \u003d new Todo(msg.substring(4).trim());","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"                    // Add task to list","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"                    messages.add(newTask);","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"                    System.out.printf(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"                            newTask,messages.size());","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"                    break;","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"                case \"deadline\":","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"                    // Separate task and deadline","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"                    String[] content \u003d msg.substring(8).split(\"/by\");","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"                    // Create new Deadline object","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"                    if (content[0].trim().equals(\"\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"                        throw new DukeException(\"deadline\");","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"                    }","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"                    // Create new Deadline object","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"                    Task newTask1 \u003d new Deadline(content[0].trim(), content[1].trim());","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"                    messages.add(newTask1);","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"                    System.out.printf(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"                            newTask1,messages.size());","lastModifiedDate":"2022-01-15"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"                    break;","lastModifiedDate":"2022-01-15"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"                case \"event\":","lastModifiedDate":"2022-01-15"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"                    // Separate task and timing","lastModifiedDate":"2022-01-15"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"                    String[] content1 \u003d msg.substring(5).split(\"/at\");","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"                    if (content1[0].trim().equals(\"\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"                        throw new DukeException(\"event\");","lastModifiedDate":"2022-01-15"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"                    }","lastModifiedDate":"2022-01-15"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"                    // Create new Event object","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"                    Task newTask2 \u003d new Event(content1[0].trim(), content1[1].trim());","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"                    messages.add(newTask2);","lastModifiedDate":"2022-01-15"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"                    System.out.printf(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-15"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"                            newTask2,messages.size());","lastModifiedDate":"2022-01-15"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"                    break;","lastModifiedDate":"2022-01-15"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"                case \"delete\":","lastModifiedDate":"2022-01-15"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"                    Task toDelete \u003d messages.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"                    messages.remove(toDelete);","lastModifiedDate":"2022-01-15"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"                    System.out.printf(\"Chi-san has removed task:\\n %s\\nYou now have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-15"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"                            toDelete, messages.size());","lastModifiedDate":"2022-01-15"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"                    break;","lastModifiedDate":"2022-01-15"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"                default:","lastModifiedDate":"2022-01-15"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"                    // Some message which does not start with a keyword","lastModifiedDate":"2022-01-15"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"                    throw new DukeException(msg);","lastModifiedDate":"2022-01-15"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"        // Initialize a scanner object","lastModifiedDate":"2022-01-15"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-15"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"        System.out.println(\"Hello master I am Chi\\nHow may I serve you today nyan~?\");","lastModifiedDate":"2022-01-15"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"        // Stores the text input of user","lastModifiedDate":"2022-01-15"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"        String echo;","lastModifiedDate":"2022-01-15"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"        // Request for user input","lastModifiedDate":"2022-01-15"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"        echo \u003d userInput.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"        // Check if bye has been said","lastModifiedDate":"2022-01-15"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"        while (!echo.equals(\"bye\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"            try {","lastModifiedDate":"2022-01-15"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"                respondToMsg(echo);","lastModifiedDate":"2022-01-15"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"                echo \u003d userInput.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"                // Output error message","lastModifiedDate":"2022-01-15"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"                System.out.println(e);","lastModifiedDate":"2022-01-15"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"                echo \u003d userInput.nextLine();","lastModifiedDate":"2022-01-15"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"        // Ending statement and close scanner","lastModifiedDate":"2022-01-15"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"        System.out.println(\"Sayonara, see you next time nyan~\");","lastModifiedDate":"2022-01-15"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"        userInput.close();","lastModifiedDate":"2022-01-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WJunHong":114,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"    /** The original message sent. */","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"    private String msg;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"    public DukeException(String exn) {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"        super(exn);","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"        this.msg \u003d exn;","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     * Returns an error message based on the message sent.","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"     * @return String of error message.","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        // Error messages based on message sent","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"        if (msg.equals(\"todo\") || msg.equals(\"deadline\") || msg.equals(\"event\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"            return \"Hey! This \" + msg + \" can\u0027t be empty nyaan~!\";","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        } else if (msg.equals(\"mark\") || msg.equals(\"unmark\") || msg.equals(\"delete\")) {","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"            return \"Hey! Please choose something to \" + msg + \" nyaan~!\";","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"            return \"Chi-san doesn\u0027t understand that nyaan~!\";","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    // TBD - More errors will be added to handle other potential invalid inputs by the user","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":28}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"    /** Stores the time span of the event. */","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"    private String duration;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Event class.","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * @param duration The time span of the event.","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    public Event(String description, String duration) {","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * Returns the task in proper format.","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * @return String of the Event.","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.duration + \")\";","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"    /** The description of the task. */","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"    private String description;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"    /** The completion status of a task. */","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Task.","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     * Returns a cross if task has been completed.","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     * @return String of completion status.","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * Sets the isDone to true.","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     * Sets the isDone to false.","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"     * Returns task in proper format.","lastModifiedDate":"2022-01-15"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * @return String of the Task.","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":48}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Todo Class","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     * Returns the task in proper format.","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"     * @return String of the todo.","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"echo after me ah","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"todo erase whiteboard","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"todo wash dishes","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"todo buy textbooks","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"deadline submit modreg /by friday night","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"deadline apply internship /by May 2022","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"deadline /by idk","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"event /at","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"event birthday part /at sat 2-3pm","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"event 2103 lec /at fri 2pm","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"event career fair /at march 2020","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"mark 3","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"mark 5","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"mark 7","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"mark","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"unmark","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"unmark 5","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"todo","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"event","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"deadline","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"delete 2","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"delete","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":28}}]
