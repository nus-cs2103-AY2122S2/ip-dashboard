[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"# Welcome to ChiBot","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"Tired of losing track of your tasks?","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"Need a cute girl in your life?","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"Well look no further as Chi is here to serve you!","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"## Table of contents","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"- [Screenshots](#screenshots)","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"- [Features](#features)","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"- [Download](#download)","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"- [User Guide](#user-guide)","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"- [Developer Guide](#developer-guide)","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"## Screenshots","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"Here is how ChiBot looks like:","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"\u003cimg width\u003d\"398\" alt\u003d\"chiSC\" src\u003d\"https://user-images.githubusercontent.com/77218910/153759128-66bac523-f96d-4d22-b43b-c8f530c90c6a.png\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"## Features","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"ChiBot comes with an array of features to help you keep to the task at hand.","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"### Differentiate tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"Use different tasks types to keep track of different occasions:","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"1. Todo: For keeping track of generic things you need to get done","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"2. Deadline: For keeping track on when to get important things done by","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"3. Event: For remembering where you have to be and when","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"### Manage your tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"ChiBot also comes with features like:","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"1. Marking a task as done","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"2. Unmarking a marked task","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"3. Deleting a task","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"### Searching","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"ChiBot allows users to:","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"1. View all their tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"2. Find tasks using specific keywords","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"## Download","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"To start using ChiBot, download it [here](https://github.com/WJunHong/ip/releases)","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"## User Guide","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"If you are ever stuck, use our [User Guide](https://wjunhong.github.io/ip/)","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"## Developer Guide","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"Chi is always welcome to having more friends! Follow these steps to start ChiBot development on your local machine:","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"üóíÔ∏è We are using IntelliJ for this project, which I highly recommend you use as well!","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"1. **Set up project JDK**: We are using **JDK 11**, hence follow [this guide](https://se-education.org/guides/tutorials/intellijJdk.html) to learn how to use it for","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"the project.","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"2. **Set up gradle for your project**: To automate the build process, test cases and jar file generation, we are using gradle. Follow [this guide](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) on how to start using gradle on your project.","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"3. Navigate to the `src` file and begin your development!","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"WJunHong":59}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    mainClassName \u003d \"chibot.Launcher\"","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    archiveBaseName \u003d \"chibot\"","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WJunHong":17,"-":38}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":" T | 1 | a","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"WJunHong":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"# ChiBot User Guide","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"## Getting Started","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"To start using ChiBot, download the `jar` from this [link](https://github.com/WJunHong/ip).","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"Make sure you have JDK 11 (Java) installed before proceeding. If not, proceed ","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"[here](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html)","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"before carrying on.","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"ChiBot comes with the following features:","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"1. Add a `todo`","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"2. Add a `deadline`","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"3. Add an `event`","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"4. `list` all your tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"5. `find` tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"6. `mark` tasks as done","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"7. `unmark` done tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"8. `delete` unwanted tasks","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"9. Get `help`","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"10. Say `bye` to Chi","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"### 1. `todo` command","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"To add a new todo using ChiBot, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"\u003e**todo** _description_","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"\u003etodo make pancakes","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"Creates a new todo.","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"### 2. `deadline` command","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"To add a new deadline using ChiBot, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"\u003e**deadline** _description_ **/by** _yyyy-mm-dd_ _hh:mm_","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"\u003edeadline finish iP /by 2022-02-18 23:59","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"Creates a new deadline.","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"Do take note of the **spacing** between the _date_ and _time_ fields.","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"### 3. `event` command","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"To add a new event using ChiBot, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"\u003e**event** _description_ **/at** _yyyy-mm-dd_ _hh:mm_-_hh:mm_","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"\u003eevent attend brother\u0027s wedding /at 2022-02-19 12:00-15:00","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"Creates a new event.","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"Do take note of the **spacing** between the _date_ and _time_ fields. Also, ensure that","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"the 1st timing comes **before** to 2nd.","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"### 4. `list` command","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"To view all your tasks using ChiBot, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"\u003e**list**","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"\u003elist","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"Displays all your saved tasks.","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"### 5. `find` command","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"To find tasks which match **all** keywords specified, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"\u003e**find** _keyword1_ _keyword2_ ...","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"\u003efind homework english exam","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"Tasks which have all **3** keywords in them are shown.","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"Please ensure you type at least 1 keyword.","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"### 6. `mark` command","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"To mark a task as complete using ChiBot, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"\u003e**mark** _index_","lastModifiedDate":"2022-02-13"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"\u003emark 1","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"The 1st task in your list is marked as complete.","lastModifiedDate":"2022-02-13"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"### 7. `unmark` command","lastModifiedDate":"2022-02-13"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"To \"unmark\" a marked task using ChiBot, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"\u003e**unmark** _index_","lastModifiedDate":"2022-02-13"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"\u003eunmark 1","lastModifiedDate":"2022-02-13"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"The 1st task is no longer marked as complete.","lastModifiedDate":"2022-02-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"### 8. `delete` command","lastModifiedDate":"2022-02-13"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"To delete a task using ChiBot, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"\u003e**delete** _index_","lastModifiedDate":"2022-02-13"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"\u003edelete 1","lastModifiedDate":"2022-02-13"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"The 1st task is removed.","lastModifiedDate":"2022-02-13"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"### 9. `help` command","lastModifiedDate":"2022-02-13"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"To get help from Chi when using the application, simply type in:","lastModifiedDate":"2022-02-13"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"\u003e**help** _command_","lastModifiedDate":"2022-02-13"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"\u003ehelp todo","lastModifiedDate":"2022-02-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"Chi will show you how to properly type a `todo` command.","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"### 10. `bye` command","lastModifiedDate":"2022-02-13"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"To exit the program, type","lastModifiedDate":"2022-02-13"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"\u003e**bye**","lastModifiedDate":"2022-02-13"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"Example:","lastModifiedDate":"2022-02-13"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"\u003ebye","lastModifiedDate":"2022-02-13"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"Expected outcome:","lastModifiedDate":"2022-02-13"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"The program will close after a few seconds.","lastModifiedDate":"2022-02-13"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"WJunHong":127,"-":28}},{"path":"src/main/java/chibot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"public class Launcher {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"WJunHong":12}},{"path":"src/main/java/chibot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.chi.Chi;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.controllers.MainWindow;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-16"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    private final Chi chi \u003d new Chi(\"data/tasks.txt\");","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"        MainWindow app \u003d new MainWindow(chi);","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        Scene scene \u003d new Scene(app);","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        stage.setTitle(\"ChiBot\");","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"        stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/icon.png\")));","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        stage.show();","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"WJunHong":26}},{"path":"src/main/java/chibot/chi/Chi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.chi;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.parser.Parser;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import chibot.ui.UI;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" * Main class for ChatBot.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"public class Chi {","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /** Contains the task data stored in the hard-drive */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    /** Contains the task data stored in the program */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    /** Handles interactions with the user */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    private final UI ui;","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    /** Interprets messages sent by the user */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     * Instantiates the necessary components to run the application.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * @param filepath The filepath of task data saved in hard-disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public Chi(String filepath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"            ui.printErrorMsg(\"There\u0027s something wrong with the IO nyan~!!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     * Returns a response to the message sent by the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message sent by the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     * @return A String of the response.","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If there are problems with the format or content of the message sent.","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are problems with the I/O during message processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    public String getResponse(String msg) throws ChiException, IOException {","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        return parser.processMessage(msg, taskList, storage);","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     * Prints the welcome message.","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     * @return The String of welcome message.","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        return this.ui.printWelcome();","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"     * @return The String of goodbye message.","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        return this.ui.printGoodbye();","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WJunHong":74,"-":1}},{"path":"src/main/java/chibot/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Deadline;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Event;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Todo;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":" * Command for adding a task.","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    private static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    /** The type of add command */","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    private final String command;","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    /** The message body */","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    private final String description;","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     * @param s The message sent by the user in array format.","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    public AddCommand(String[] s) {","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        this.command \u003d s[0].toLowerCase();","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        this.description \u003d String.join(\" \", Arrays.copyOfRange(s, 1, s.length)).trim();","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * Adds a task to the TaskList and Storage based on the type of task it is.","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"     * @return A confirmation String of the task added.","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the command somehow does not equate to any of the given ones.","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    public String execute(TaskList tl, Storage sge) throws ChiException {","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"            switch(command) {","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"                return handleTodoCommand(tl, sge);","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"                // FallThrough","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"            case \"deadline\":","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"                return handleDeadlineCommand(tl, sge);","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"                // FallThrough","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"            case \"event\":","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"                return handleEventCommand(tl, sge);","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"                // FallThrough","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"            default:","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Oopsies something went wrong while parsing!\");","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Hey something went wrong with the IO nyan!\");","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"     * Deals with the adding of a new Todo task.","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"     * @return A confirmation String of the task added.","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If there are problems in the task description or date formatting.","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are problems adding the file to hard-disk.","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    public String handleTodoCommand(TaskList tl, Storage sge) throws ChiException, IOException {","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"        if (validateMessageBody(this.description, command)) {","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"This todo has some problems nyan! Make sure:\\n1.Description is not empty or has |\");","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"            Task newTask \u003d new Todo(this.description, false);","lastModifiedDate":"2022-02-12"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"            // Add task to list","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"            tl.addTask(newTask);","lastModifiedDate":"2022-01-31"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"            sge.updateFile(newTask, tl, \"todo\");","lastModifiedDate":"2022-01-31"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"            return String.format(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-31"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"                    newTask, tl.getSize());","lastModifiedDate":"2022-01-31"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"     * Deals with the adding of a new Deadline task.","lastModifiedDate":"2022-02-12"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-12"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"     * @return A confirmation String of the task added.","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If there are problems in the task description or date formatting.","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are problems adding the file to hard-disk.","lastModifiedDate":"2022-02-12"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"    public String handleDeadlineCommand(TaskList tl, Storage sge) throws ChiException, IOException {","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"        if (validateMessageBody(this.description, command)) {","lastModifiedDate":"2022-01-31"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"This deadline has some problems nyan! Make sure:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"                    + \"1.Description is not empty or has |\"","lastModifiedDate":"2022-02-16"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"                    + \"\\n2.Datetime is not missing\\n3.Datetime is formatted properly\");","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"            Task newTask;","lastModifiedDate":"2022-01-31"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"            String s \u003d getDescription(this.description, \"deadline\");","lastModifiedDate":"2022-01-31"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"            LocalDate ld \u003d getDeadlineDate(this.description);","lastModifiedDate":"2022-01-31"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"            LocalTime lt \u003d getDeadlineTiming(this.description);","lastModifiedDate":"2022-01-31"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"            newTask \u003d new Deadline(s, ld, lt, false);","lastModifiedDate":"2022-01-31"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"            tl.addTask(newTask);","lastModifiedDate":"2022-01-31"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"            sge.updateFile(newTask, tl, \"deadline\");","lastModifiedDate":"2022-01-31"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"            assert tl.getSize() \u003e 0 : \"After adding, there should not be 0 tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"            return String.format(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-31"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"                    newTask, tl.getSize());","lastModifiedDate":"2022-01-31"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"     * Deals with the adding of a new Event task.","lastModifiedDate":"2022-02-12"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-12"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-12"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"     * @return A confirmation String of the task added.","lastModifiedDate":"2022-02-12"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If there are problems in the task description or date formatting.","lastModifiedDate":"2022-02-12"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are problems adding the file to hard-disk.","lastModifiedDate":"2022-02-12"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"    public String handleEventCommand(TaskList tl, Storage sge) throws ChiException, IOException {","lastModifiedDate":"2022-02-12"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"        if (validateMessageBody(this.description, command)) {","lastModifiedDate":"2022-01-31"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"This event has some problems nyan! Make sure:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"                    + \"1.Description is not empty or has |\"","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"                    + \"\\n2.Datetime is not missing\\n3.Datetime is formatted properly\");","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"            Task newTask;","lastModifiedDate":"2022-01-31"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"            String s \u003d getDescription(this.description, \"event\");","lastModifiedDate":"2022-01-31"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"            LocalDate ld \u003d getEventDate(this.description);","lastModifiedDate":"2022-01-31"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"            LocalTime lt \u003d getEventTimingStart(this.description);","lastModifiedDate":"2022-01-31"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"            LocalTime lt1 \u003d getEventTimingEnd(this.description);","lastModifiedDate":"2022-01-31"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"            newTask \u003d new Event(s, ld, lt, lt1, false);","lastModifiedDate":"2022-01-31"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"            tl.addTask(newTask);","lastModifiedDate":"2022-01-31"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"            sge.updateFile(newTask, tl, \"deadline\");","lastModifiedDate":"2022-01-31"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"            assert tl.getSize() \u003e 0 : \"After adding, there should not be 0 tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"            return String.format(\"Ok! Chi-san has added:\\n%s\\nYou have %d tasks nyan~!\\n\",","lastModifiedDate":"2022-01-31"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"                    newTask, tl.getSize());","lastModifiedDate":"2022-01-31"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"     * Checks if the message body conforms to valid syntax.","lastModifiedDate":"2022-02-03"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message sent by user.","lastModifiedDate":"2022-02-03"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"     * @param type The type of add command used.","lastModifiedDate":"2022-02-03"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether the message is valid format.","lastModifiedDate":"2022-02-03"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"    public boolean validateMessageBody(String msg, String type) {","lastModifiedDate":"2022-01-31"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"        switch(type) {","lastModifiedDate":"2022-01-31"},{"lineNumber":160,"author":{"gitId":"WJunHong"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-31"},{"lineNumber":161,"author":{"gitId":"WJunHong"},"content":"            return validateTodoMessage(msg);","lastModifiedDate":"2022-02-15"},{"lineNumber":162,"author":{"gitId":"WJunHong"},"content":"            // FallThrough","lastModifiedDate":"2022-02-03"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-31"},{"lineNumber":164,"author":{"gitId":"WJunHong"},"content":"            return validateDeadlineMessage(msg);","lastModifiedDate":"2022-02-12"},{"lineNumber":165,"author":{"gitId":"WJunHong"},"content":"            // FallThrough","lastModifiedDate":"2022-02-12"},{"lineNumber":166,"author":{"gitId":"WJunHong"},"content":"        case \"event\":","lastModifiedDate":"2022-02-12"},{"lineNumber":167,"author":{"gitId":"WJunHong"},"content":"            return validateEventMessage(msg);","lastModifiedDate":"2022-02-12"},{"lineNumber":168,"author":{"gitId":"WJunHong"},"content":"            // FallThrough","lastModifiedDate":"2022-02-12"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"        default:","lastModifiedDate":"2022-02-12"},{"lineNumber":170,"author":{"gitId":"WJunHong"},"content":"            return true;","lastModifiedDate":"2022-02-12"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":172,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":174,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"     * Checks if the todo message is of a proper format.","lastModifiedDate":"2022-02-15"},{"lineNumber":176,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"WJunHong"},"content":"     * @param msg The todo message sent.","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether it was properly formatted.","lastModifiedDate":"2022-02-15"},{"lineNumber":179,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":180,"author":{"gitId":"WJunHong"},"content":"    public boolean validateTodoMessage(String msg) {","lastModifiedDate":"2022-02-15"},{"lineNumber":181,"author":{"gitId":"WJunHong"},"content":"        return msg.contains(\"|\");","lastModifiedDate":"2022-02-16"},{"lineNumber":182,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":183,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":184,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":185,"author":{"gitId":"WJunHong"},"content":"     * Checks if the deadline message is of a proper format.","lastModifiedDate":"2022-02-12"},{"lineNumber":186,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":187,"author":{"gitId":"WJunHong"},"content":"     * @param msg The deadline message sent.","lastModifiedDate":"2022-02-12"},{"lineNumber":188,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether it was properly formatted.","lastModifiedDate":"2022-02-12"},{"lineNumber":189,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":190,"author":{"gitId":"WJunHong"},"content":"    public boolean validateDeadlineMessage(String msg) {","lastModifiedDate":"2022-02-12"},{"lineNumber":191,"author":{"gitId":"WJunHong"},"content":"        String[] separateBys \u003d msg.split(\"/by\");","lastModifiedDate":"2022-01-31"},{"lineNumber":192,"author":{"gitId":"WJunHong"},"content":"        if (separateBys.length !\u003d 2 || separateBys[0].equals(\"\") || separateBys[0].contains(\"|\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":193,"author":{"gitId":"WJunHong"},"content":"            return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":194,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":195,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":196,"author":{"gitId":"WJunHong"},"content":"            String datetime \u003d msg.split(\"/by\")[1].trim();","lastModifiedDate":"2022-01-31"},{"lineNumber":197,"author":{"gitId":"WJunHong"},"content":"            LocalDateTime.parse(datetime, DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":198,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":199,"author":{"gitId":"WJunHong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":200,"author":{"gitId":"WJunHong"},"content":"            return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":201,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":202,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":203,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":204,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-12"},{"lineNumber":205,"author":{"gitId":"WJunHong"},"content":"     * Checks if the event message is of a proper format.","lastModifiedDate":"2022-02-12"},{"lineNumber":206,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-12"},{"lineNumber":207,"author":{"gitId":"WJunHong"},"content":"     * @param msg The event message sent.","lastModifiedDate":"2022-02-12"},{"lineNumber":208,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether it was properly formatted.","lastModifiedDate":"2022-02-12"},{"lineNumber":209,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-12"},{"lineNumber":210,"author":{"gitId":"WJunHong"},"content":"    public boolean validateEventMessage(String msg) {","lastModifiedDate":"2022-02-12"},{"lineNumber":211,"author":{"gitId":"WJunHong"},"content":"        String[] separateAts \u003d msg.split(\"/at\");","lastModifiedDate":"2022-01-31"},{"lineNumber":212,"author":{"gitId":"WJunHong"},"content":"        if (separateAts.length !\u003d 2 || separateAts[0].equals(\"\") || separateAts[0].contains(\"|\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":213,"author":{"gitId":"WJunHong"},"content":"            return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":214,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":215,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":216,"author":{"gitId":"WJunHong"},"content":"            String dateTime \u003d msg.split(\"/at\")[1].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":217,"author":{"gitId":"WJunHong"},"content":"            int numberOfDateTimeTokens \u003d dateTime.split(\" \").length;","lastModifiedDate":"2022-02-06"},{"lineNumber":218,"author":{"gitId":"WJunHong"},"content":"            int numberOfTimingsSpecified \u003d dateTime.split(\" \")[1].split(\"-\").length;","lastModifiedDate":"2022-02-06"},{"lineNumber":219,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":220,"author":{"gitId":"WJunHong"},"content":"            if (numberOfDateTimeTokens !\u003d 2 || numberOfTimingsSpecified !\u003d 2) {","lastModifiedDate":"2022-02-06"},{"lineNumber":221,"author":{"gitId":"WJunHong"},"content":"                return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":222,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":223,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":224,"author":{"gitId":"WJunHong"},"content":"            String datePortion \u003d dateTime.split(\" \")[0].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":225,"author":{"gitId":"WJunHong"},"content":"            String startTiming \u003d dateTime.split(\" \")[1].split(\"-\")[0].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":226,"author":{"gitId":"WJunHong"},"content":"            String endTiming \u003d dateTime.split(\" \")[1].split(\"-\")[1].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":227,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":228,"author":{"gitId":"WJunHong"},"content":"            LocalDate.parse(datePortion, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":229,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":230,"author":{"gitId":"WJunHong"},"content":"            LocalTime t1 \u003d LocalTime.parse(startTiming, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":231,"author":{"gitId":"WJunHong"},"content":"            LocalTime t2 \u003d LocalTime.parse(endTiming, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":232,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":233,"author":{"gitId":"WJunHong"},"content":"            return t1.isAfter(t2);","lastModifiedDate":"2022-02-03"},{"lineNumber":234,"author":{"gitId":"WJunHong"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":235,"author":{"gitId":"WJunHong"},"content":"            return true;","lastModifiedDate":"2022-01-31"},{"lineNumber":236,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":237,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":238,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":239,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":240,"author":{"gitId":"WJunHong"},"content":"     * Obtains the task description in the message.","lastModifiedDate":"2022-02-03"},{"lineNumber":241,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":242,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message sent.","lastModifiedDate":"2022-02-03"},{"lineNumber":243,"author":{"gitId":"WJunHong"},"content":"     * @param type The type of command used.","lastModifiedDate":"2022-02-03"},{"lineNumber":244,"author":{"gitId":"WJunHong"},"content":"     * @return A String of task description.","lastModifiedDate":"2022-02-03"},{"lineNumber":245,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":246,"author":{"gitId":"WJunHong"},"content":"    public String getDescription(String msg, String type) {","lastModifiedDate":"2022-01-31"},{"lineNumber":247,"author":{"gitId":"WJunHong"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-01-31"},{"lineNumber":248,"author":{"gitId":"WJunHong"},"content":"            return msg.split(\"/by\")[0].trim();","lastModifiedDate":"2022-01-31"},{"lineNumber":249,"author":{"gitId":"WJunHong"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":250,"author":{"gitId":"WJunHong"},"content":"            return msg.split(\"/at\")[0].trim();","lastModifiedDate":"2022-01-31"},{"lineNumber":251,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":252,"author":{"gitId":"WJunHong"},"content":"            return \"\";","lastModifiedDate":"2022-02-13"},{"lineNumber":253,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":254,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":255,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":256,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":257,"author":{"gitId":"WJunHong"},"content":"     * Gets the date component of deadline tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":258,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":259,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message from user.","lastModifiedDate":"2022-02-03"},{"lineNumber":260,"author":{"gitId":"WJunHong"},"content":"     * @return A LocalDate of date specified.","lastModifiedDate":"2022-02-03"},{"lineNumber":261,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":262,"author":{"gitId":"WJunHong"},"content":"    public LocalDate getDeadlineDate(String msg) {","lastModifiedDate":"2022-01-31"},{"lineNumber":263,"author":{"gitId":"WJunHong"},"content":"        String datetime \u003d msg.split(\"/by\")[1].trim();","lastModifiedDate":"2022-01-31"},{"lineNumber":264,"author":{"gitId":"WJunHong"},"content":"        String date \u003d datetime.split(\" \")[0].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":265,"author":{"gitId":"WJunHong"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":266,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":267,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":268,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":269,"author":{"gitId":"WJunHong"},"content":"     * Gets the time component of deadline tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":270,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":271,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message from user.","lastModifiedDate":"2022-02-03"},{"lineNumber":272,"author":{"gitId":"WJunHong"},"content":"     * @return A LocalTime of time specified.","lastModifiedDate":"2022-02-03"},{"lineNumber":273,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":274,"author":{"gitId":"WJunHong"},"content":"    public LocalTime getDeadlineTiming(String msg) {","lastModifiedDate":"2022-01-31"},{"lineNumber":275,"author":{"gitId":"WJunHong"},"content":"        String datetime \u003d msg.split(\"/by\")[1].trim();","lastModifiedDate":"2022-01-31"},{"lineNumber":276,"author":{"gitId":"WJunHong"},"content":"        String time \u003d datetime.split(\" \")[1].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":277,"author":{"gitId":"WJunHong"},"content":"        return LocalTime.parse(time, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":278,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":279,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":280,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":281,"author":{"gitId":"WJunHong"},"content":"     * Gets the date component of event tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":282,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":283,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message from user.","lastModifiedDate":"2022-02-03"},{"lineNumber":284,"author":{"gitId":"WJunHong"},"content":"     * @return A LocalDate of date specified.","lastModifiedDate":"2022-02-03"},{"lineNumber":285,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":286,"author":{"gitId":"WJunHong"},"content":"    public LocalDate getEventDate(String msg) {","lastModifiedDate":"2022-01-31"},{"lineNumber":287,"author":{"gitId":"WJunHong"},"content":"        String datetime \u003d msg.split(\"/at\")[1].trim();","lastModifiedDate":"2022-01-31"},{"lineNumber":288,"author":{"gitId":"WJunHong"},"content":"        String date \u003d datetime.split(\" \")[0].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":289,"author":{"gitId":"WJunHong"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":290,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":291,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":292,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":293,"author":{"gitId":"WJunHong"},"content":"     * Gets the starting time component of event tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":294,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":295,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message from user.","lastModifiedDate":"2022-02-03"},{"lineNumber":296,"author":{"gitId":"WJunHong"},"content":"     * @return A LocalTime of time specified.","lastModifiedDate":"2022-02-03"},{"lineNumber":297,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":298,"author":{"gitId":"WJunHong"},"content":"    public LocalTime getEventTimingStart(String msg) {","lastModifiedDate":"2022-01-31"},{"lineNumber":299,"author":{"gitId":"WJunHong"},"content":"        String dateTime \u003d msg.split(\"/at\")[1].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":300,"author":{"gitId":"WJunHong"},"content":"        String timings \u003d dateTime.split(\" \")[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":301,"author":{"gitId":"WJunHong"},"content":"        String startTime \u003d timings.split(\"-\")[0].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":302,"author":{"gitId":"WJunHong"},"content":"        return LocalTime.parse(startTime, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":303,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":304,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":305,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":306,"author":{"gitId":"WJunHong"},"content":"     * Gets the ending time component of event tasks.","lastModifiedDate":"2022-02-12"},{"lineNumber":307,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":308,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message from user.","lastModifiedDate":"2022-02-03"},{"lineNumber":309,"author":{"gitId":"WJunHong"},"content":"     * @return A LocalTime of time specified.","lastModifiedDate":"2022-02-03"},{"lineNumber":310,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":311,"author":{"gitId":"WJunHong"},"content":"    public LocalTime getEventTimingEnd(String msg) {","lastModifiedDate":"2022-01-31"},{"lineNumber":312,"author":{"gitId":"WJunHong"},"content":"        String dateTime \u003d msg.split(\"/at\")[1].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":313,"author":{"gitId":"WJunHong"},"content":"        String timings \u003d dateTime.split(\" \")[1];","lastModifiedDate":"2022-02-06"},{"lineNumber":314,"author":{"gitId":"WJunHong"},"content":"        String startTime \u003d timings.split(\"-\")[1].trim();","lastModifiedDate":"2022-02-06"},{"lineNumber":315,"author":{"gitId":"WJunHong"},"content":"        return LocalTime.parse(startTime, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2022-02-06"},{"lineNumber":316,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":317,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"WJunHong":317}},{"path":"src/main/java/chibot/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":" * An abstract class representing a command in Chi Bot.","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"     * Returns a new command of some type based on the keyword supplied.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"     * @param keyword The keyword used to match the command.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * @param tokens The entire content of the user message.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * @return A new command of the keyword type.","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If are some problems in creating the command.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    public static Command of(Keywords keyword, String[] tokens) throws ChiException {","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        switch(keyword.toString()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"        case \"ADD\":","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"            return new AddCommand(tokens);","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"        case \"DELETE\":","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"            return new DeleteCommand(Arrays.copyOfRange(tokens, 1, tokens.length));","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        case \"MARK\":","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"            return new MarkCommand(Arrays.copyOfRange(tokens, 1, tokens.length));","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        case \"UNMARK\":","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"            return new UnmarkCommand(Arrays.copyOfRange(tokens, 1, tokens.length));","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        case \"FIND\":","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            return new FindCommand(Arrays.copyOfRange(tokens, 1, tokens.length));","lastModifiedDate":"2022-01-31"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        case \"LIST\":","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        case \"HELP\":","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            return new HelpCommand(tokens);","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        default:","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Could not create command nyan!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     * Executes an appropriate action to generate the response to a user\u0027s message.","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     * @return A string response for respective command.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If there is something wrong with format or content of message.","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    public abstract String execute(TaskList tl, Storage sge) throws ChiException;","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"WJunHong":53}},{"path":"src/main/java/chibot/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":" * Command for deleting a specified task.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    /** Message sent by user in array format */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    private final String[] tokens;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * @param tokens The message sent by the user in array format.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    public DeleteCommand(String[] tokens) {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * Deletes a task and prints the task deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     * @return A String response of task deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the user typed an invalid index or used words instead of indexes.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public String execute(TaskList tl, Storage sge) throws ChiException {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            String msg \u003d String.join(\" \", tokens);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            // Checks if it is a valid message","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            boolean isValidMarkCommand \u003d validateMessageBody(msg, tl);","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"            if (!isValidMarkCommand) {","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Hey there is something wrong with this delete command nyan! Make sure:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"                        + \"1.You only insert 1 integer value\\n2.Insert valid task number to delete\"","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"                        + \"\\n3.List is not empty\");","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"            int index \u003d getIndexInMessage(msg);","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"            assert index !\u003d tl.getSize() : \"The index should never equal size\";","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"            Task toDelete \u003d tl.getTask(index);","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"            tl.deleteTask(toDelete);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"            sge.updateFile(toDelete, tl, \"delete\");","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"            return String.format(\"Chi-san has removed the task~!\\n%s\\n You now have %d tasks!\\n\",","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"                    toDelete, tl.getSize());","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Hey something went wrong with the IO nyan!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     * Checks if the body of the message has a valid syntax.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message sent by the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether the message conforms to proper syntax.","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    public boolean validateMessageBody(String msg, TaskList tl) {","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"            String[] words \u003d msg.split(\" \");","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"            if (words.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"                return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"            int s \u003d Integer.parseInt(words[0]);","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            return s \u003e 0 \u0026\u0026 s \u003c\u003d tl.getSize();","lastModifiedDate":"2022-02-16"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"     * Gets the index of the task to access in the TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message body.","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"     * @return The index of the task.","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    public int getIndexInMessage(String msg) {","lastModifiedDate":"2022-02-03"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"        return Integer.parseInt(msg) - 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"WJunHong":87}},{"path":"src/main/java/chibot/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":" * Command for finding a Task that matches specified keywords.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /** The message of the user in array format */","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private final String[] tokens;","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * @param tokens The message of the user in array format.","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    public FindCommand(String[] tokens) {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     * Executes the finding function to retrieve tasks which match the given keywords.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @return A String of the tasks found.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    public String execute(TaskList tl, Storage sge) {","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        return tl.checkWordsInTask(this.tokens).length() \u003d\u003d 0 ? \"Chi couldn\u0027t find anything nyan!\"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"                : \"H..H..Here\u0027s what I could find!\\n\" + tl.checkWordsInTask(this.tokens);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"WJunHong":35}},{"path":"src/main/java/chibot/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" * Command for helping user navigate the bot.","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    /** Array containing words sent in the command */","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    private final String[] tokens;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * @param tokens Message sent by user in array format.","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    public HelpCommand(String[] tokens) {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * Returns a tailored help message to the user.","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     * @return A String of help message.","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the user wants help on an invalid command.","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public String execute(TaskList tl, Storage sge) throws ChiException {","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"            return printGenericHelpMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            return printSpecificHelpMessage(tokens[1]);","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * Prints help message to begin using the chat bot.","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * @return A String of help message.","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    public String printGenericHelpMessage() {","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        return \"Chi is happy you are asking for help!\\nDo go to the following link on how to get started!\";","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * Prints help message for a specific command.","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @param command The command specified.","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     * @return A String of help message.","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the user inputs an invalid command.","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    public String printSpecificHelpMessage(String command) throws ChiException {","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        switch(command) {","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        case \"list\":","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"            return \"Type \\\"list\\\" to get a list of all your tasks!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        case \"mark\":","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"            return \"Type \\\"mark index\\\" to mark the task at index as complete!\\n E.g. mark 1\";","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"        case \"unmark\":","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"            return \"Type \\\"unmark index\\\" to unmark the task at index as incomplete!\\n E.g. unmark 1\";","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"            return \"Type \\\"delete index\\\" to remove a task at the index!\\n E.g. delete 1\";","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        case \"find\":","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            return \"Type \\\"find word1 word2 ...\\\" to find tasks which match ALL specified words! \"","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"                    + \"\\nE.g. find new beach\";","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"            return \"Type \\\"todo task\\\" to create new todo task!\\nE.g. todo write essay tonight\";","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"            return \"Type \\\"deadline description /by Y-M-D H:M\\\" to create new deadline!\"","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"                    + \"\\nE.g.deadline finish report /by 2022-03-10 14:55\";","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"        case \"event\":","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"            return \"Type \\\"event \u003cdescription\u003e /at Y-M-D H:M-H:M\\\" to \"","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"                    + \"create new event!\\nE.g. event visit girlfriend /at 2022-10-10 12:00-18:00\"","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"                    + \"\\nMake sure the timings are progressive!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"        case \"exit\":","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"            return \"To exit ChiBot, simply type \\\"bye\\\"! Don\u0027t worry, Chi will be waiting for you to return!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"        case \"help\":","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"            return \"To seek help, type \\\"help \u003ccommand\u003e\\\"!\\nE.g. help list\\nAlternatively, just type \\\"help\\\"!\";","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        default:","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"            break;","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"        throw new ChiException(\"Chi can\u0027t help you with that weird command nyan!\\nPlease enter one of these commands:\"","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"                + Keywords.listOfCommands);","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"WJunHong":99}},{"path":"src/main/java/chibot/commands/Keywords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" * Enum of command keywords.","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":" *","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":" * @author WJunHong-reused","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":" * Reused from https://github.com/mslevis/ip/blob/master/src/main/java/aoi/commands/Keyword.java","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" * with some modifications","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"public enum Keywords {","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    ADD(\"todo\", \"deadline\", \"event\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    LIST(\"list\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    FIND(\"find\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    HELP(\"help\");","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    /** A String containing all commands supported by ChiBot */","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    public static final String listOfCommands \u003d \"\\n1.list\\n2.todo\\n3.deadline\\n4.event\\n5.mark\\n6.unmark\\n7.delete\"","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"            + \"\\n8.find\\n9.help\\n10.bye\";","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    /** mapping of keywords to their respective enum instances */","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    private final HashMap\u003cString, Keywords\u003e keywordMappings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * Constructor of an enum instance.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * @param args The possible commands a user can use to map to the specific enum.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    Keywords(String ... args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        for (String s: args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            keywordMappings.put(s, this);","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * Searches the keyword hashmap and returns the appropriate Keyword if the token matches the possible command.","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * @param token The command word the user used in their message.","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     * @return A Keyword corresponding to the command.","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the user uses a keyword not defined in the enum.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    public static Keywords getKeyword(String token) throws ChiException {","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        for (Keywords k: Keywords.values()) {","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"            Keywords userKeyword \u003d k.keywordMappings.get(token.toLowerCase());","lastModifiedDate":"2022-02-07"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"            if (userKeyword !\u003d null) {","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"                return userKeyword;","lastModifiedDate":"2022-02-07"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        throw new ChiException(\"Command not found nyan! Please enter one of the following commands:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"                + listOfCommands + \"\\n\\nIf you need help, type: help \u003ccommand\u003e to find out how to use it!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"WJunHong":59}},{"path":"src/main/java/chibot/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":" * Command for listing all task in the Tasklist.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     * Returns all tasks in String format.","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"     * @return A string of all tasks, each starting on new line.","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    public String execute(TaskList tl, Storage sge) {","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        return tl.getTasksMsg();","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"WJunHong":22}},{"path":"src/main/java/chibot/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":" * Command for marking a task as complete.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    /** Message of user in array format */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    private final String[] tokens;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * @param tokens The message of user in array format.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    public MarkCommand(String[] tokens) {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * Sets the task to complete and returns a string of the completed task.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     * @return A String of the completed task.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the user provides an invalid index or uses words instead of natural numbers.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public String execute(TaskList tl, Storage sge) throws ChiException {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            String msg \u003d String.join(\" \", tokens);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            boolean isValidMarkCommand \u003d validateMessageBody(msg, tl);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            if (!isValidMarkCommand) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Hey there is something wrong with this mark command nyan! Make sure:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"                        + \"1.You only insert 1 integer value\\n2.Insert valid task number\\n3.List is not empty\");","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"            int index \u003d getIndexInMessage(msg);","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"            Task doneTask \u003d tl.getTask(index);","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"            doneTask.markAsDone();","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"            sge.updateFile(doneTask, tl, \"mark\");","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"            return String.format(\"Great job nyan~!\\n%s\\n\", doneTask);","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Hey something went wrong with the IO nyan!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"     * Checks if the message body conforms to valid syntax.","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message body.","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether the message body is valid.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"    public boolean validateMessageBody(String msg, TaskList tl) {","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"            String[] words \u003d msg.split(\" \");","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"            if (words.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"                return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"            int s \u003d Integer.parseInt(words[0]);","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"            return s \u003e 0 \u0026\u0026 s \u003c\u003d tl.getSize();","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"     * Gets the index of the task to access in the TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message body.","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"     * @return The index of the task.","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"    public int getIndexInMessage(String msg) {","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"        return Integer.parseInt(msg) - 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"WJunHong":83}},{"path":"src/main/java/chibot/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.commands;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":" * Command for marking a task as not complete.","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-31"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    /** Message of user in array format */","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    private final String[] tokens;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * @param tokens The message of user in array format.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    public UnmarkCommand(String[] tokens) {","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * Sets the task to not completed and returns a string of the task.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList from each task will be added/deleted.","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage which stores/removes tasks from the hard-disk.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     * @return A String of the task.","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the user provides an invalid index or uses words instead of natural numbers.","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-31"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public String execute(TaskList tl, Storage sge) throws ChiException {","lastModifiedDate":"2022-01-31"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            String msg \u003d String.join(\" \", tokens);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            boolean isValidMarkCommand \u003d validateMessageBody(msg, tl);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            if (!isValidMarkCommand) {","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Hey there is something wrong with this unmark command nyan! Make sure:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"                        + \"1.You only insert 1 integer value\\n2.Insert valid task number to unmark\"","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"                        + \"\\n3.List is not empty\");","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"            int index \u003d getIndexInMessage(msg);","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"            Task doneTask \u003d tl.getTask(index);","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"            // Mark as done","lastModifiedDate":"2022-01-31"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"            doneTask.markAsUndone();","lastModifiedDate":"2022-01-31"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"            sge.updateFile(doneTask, tl, \"mark\");","lastModifiedDate":"2022-01-31"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"            return String.format(\"We will get them next time~!\\n%s\\n\", doneTask);","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Hey something went wrong with the IO nyan!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     * Checks if the message body conforms to valid syntax.","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message body.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether the message body is valid.","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"    public boolean validateMessageBody(String msg, TaskList tl) {","lastModifiedDate":"2022-01-31"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"            String[] words \u003d msg.split(\" \");","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"            if (words.length \u003e 1) {","lastModifiedDate":"2022-01-31"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"                return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"            int s \u003d Integer.parseInt(words[0]);","lastModifiedDate":"2022-01-31"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"            return s \u003e 0 \u0026\u0026 s \u003c\u003d tl.getSize();","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"     * Gets the index of the task to access in the TaskList.","lastModifiedDate":"2022-02-03"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message body.","lastModifiedDate":"2022-02-03"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"     * @return The index of the task.","lastModifiedDate":"2022-02-03"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"    public int getIndexInMessage(String msg) {","lastModifiedDate":"2022-02-03"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"        return Integer.parseInt(msg) - 1;","lastModifiedDate":"2022-01-31"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-31"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"WJunHong":87}},{"path":"src/main/java/chibot/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.controllers;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     * Constructor for the class.","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * @param text The text to be placed into the DialogBox.","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     * @param img The image to be set in the DialogBox","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    private void flip() {","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"     * Creates a DialogBox for the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     * @param text Text typed by user.","lastModifiedDate":"2022-02-03"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     * @param img Image for representing the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     * @return A new DialogBox.","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"     * Creates a DialogBox for Chi.","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"     * @param text Text response of Chi.","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"     * @param img Image for representing Chi.","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"     * @return A new DialogBox.","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    public static DialogBox getChiDialog(String text, Image img) {","lastModifiedDate":"2022-02-03"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"        db.getStyleClass().add(\"chiMsg\");","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"        db.flip();","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"        return db;","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"     * Creates an Error DialogBox for Chi.","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"     * @param text Text error response of Chi.","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"     * @param img Image for representing Chi.","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"     * @return A new Error DialogBox.","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"    public static DialogBox getChiErrorDialog(String text, Image img) {","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"        db.getStyleClass().add(\"chiMsgError\");","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        db.flip();","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"        return db;","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"WJunHong":96}},{"path":"src/main/java/chibot/controllers/HelpDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.controllers;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.Main;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"public class HelpDialogBox extends HBox {","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    private Hyperlink hyperlink;","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     * Constructor for the class.","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     * @param img The image to be set in the DialogBox","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    private HelpDialogBox(Image img) {","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/HelpDialogBox.fxml\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        hyperlink.setText(\"https://wjunhong.github.io/ip/\");","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        hyperlink.setOnAction(t -\u003e new Main().getHostServices().showDocument(hyperlink.getText()));","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"    private void flip() {","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     * Creates a HelpDialogBox for Chi.","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     * @param img Image for representing Chi.","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     * @return A new HelpDialogBox.","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"    public static HelpDialogBox getChiHelpDialog(Image img) {","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        var db \u003d new HelpDialogBox(img);","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"        db.getStyleClass().add(\"chiMsg\");","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"        db.flip();","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"        return db;","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"WJunHong":72}},{"path":"src/main/java/chibot/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.controllers;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.Main;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.chi.Chi;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    private Chi chi;","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userImg.png\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    private final Image chiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chisan.png\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"     * @param chi The new Chi instance.","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    public MainWindow(Chi chi) {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"            this.chi \u003d chi;","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     * Places introduction message when window opens.","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        dialogContainer.getChildren().add(DialogBox.getChiDialog(chi.getWelcomeMessage(), chiImage));","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    public void setDuke(Chi d) {","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"        chi \u003d d;","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"    @FXML","lastModifiedDate":"2022-01-30"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-30"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        String input \u003d userInput.getText();;","lastModifiedDate":"2022-01-30"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        String response;","lastModifiedDate":"2022-01-30"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"            input \u003d userInput.getText();","lastModifiedDate":"2022-01-30"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-02-03"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"                dialogContainer.getChildren().add(DialogBox.getChiDialog(chi.getGoodbyeMessage(), chiImage));","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"                PauseTransition pt \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"                pt.setOnFinished(e -\u003e Platform.exit());","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"                pt.play();","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"            } else if (input.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"                response \u003d chi.getResponse(\"help\");","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"                        DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"                        DialogBox.getChiDialog(response, chiImage),","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"                        HelpDialogBox.getChiHelpDialog(chiImage)","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"                );","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"            } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"                response \u003d chi.getResponse(input);","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"                        DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"                        DialogBox.getChiDialog(response, chiImage)","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"                );","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"            userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"                    DialogBox.getChiErrorDialog(e.getMessage(), chiImage)","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"            );","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"            userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-30"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"                    DialogBox.getChiDialog(\"The IO is faulty nyan~!\", chiImage)","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"            );","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"            userInput.clear();","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"WJunHong":112}},{"path":"src/main/java/chibot/exception/ChiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.exception;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * Unique exceptions pertaining to Chi Chat bot.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class ChiException extends Exception {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /** Body of exception message */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    private String msg;","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     * Constructor for ChiException.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"     * @param exn The exception message when ChiException is thrown.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    public ChiException(String exn) {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"        super(exn);","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        this.msg \u003d exn;","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * Returns an error message based on the exception body passed in.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     * @return String of an error message.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"        // Error messages based on message sent","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        return this.msg;","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":29}},{"path":"src/main/java/chibot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.parser;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.commands.Command;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.commands.Keywords;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" * Interprets messages sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    private static final int LIST_COMMAND_LENGTH \u003d 1;","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    private static final int MIN_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    private static final int MAX_HELP_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * Processes the message sent by the user into an appropriate response.","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * @param msg The message sent by the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList which tasks will be added/deleted from.","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage component managing task data in hard-disk.","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * @return A String response to the message typed by the user.","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If there is something wrong with the format or content of the message.","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there is something wrong with the I/O during message processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public String processMessage(String msg, TaskList tl, Storage sge) throws ChiException, IOException {","lastModifiedDate":"2022-01-31"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        String[] messageFragments \u003d msg.trim().split(\" \");","lastModifiedDate":"2022-01-31"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        if (msg.trim().equals(\"\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Hey it\u0027s not like I want you to...but can you type something nyan!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-31"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"            // Check if message is valid command","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            Keywords s \u003d inspectMessage(messageFragments);","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"            // Create a new command instance for the user command","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"            Command r \u003d Command.of(s, messageFragments);","lastModifiedDate":"2022-01-31"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"            return r.execute(tl, sge);","lastModifiedDate":"2022-01-31"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * Checks if the message is an appropriate command.","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"     * @param tokens An array of words in the message.","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     * @return A Keyword enum of the command to be executed.","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the command sent by the user is not in correct format.","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    public Keywords inspectMessage(String[] tokens) throws ChiException {","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"            /* Check if the 1st word is a valid command","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"               @author WJunHong-reused","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"               Reused from https://github.com/mslevis/ip/tree/master/src/main/java/aoi/parser","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"               with modification","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"             */","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"            assert tokens.length \u003e 0 : \"There should at least be a word here\";","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"            Keywords res \u003d Keywords.getKeyword(tokens[0].toUpperCase());","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"            // Check if it is an add task or find command that has at least 1 word defined","lastModifiedDate":"2022-02-03"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"            boolean isMultiWordCommand \u003d res.equals(Keywords.ADD) || res.equals(Keywords.FIND);","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"            boolean isNumericCommand \u003d res.equals(Keywords.MARK) || res.equals(Keywords.UNMARK)","lastModifiedDate":"2022-02-07"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"                    || res.equals(Keywords.DELETE);","lastModifiedDate":"2022-02-07"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"            if (isMultiWordCommand \u0026\u0026 tokens.length \u003c MIN_COMMAND_LENGTH) {","lastModifiedDate":"2022-02-07"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Hey this command is too short nyan!\");","lastModifiedDate":"2022-01-31"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"            } else if (isNumericCommand \u0026\u0026 tokens.length \u003c MIN_COMMAND_LENGTH) {","lastModifiedDate":"2022-02-07"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Hey can you specify a number nyan!\");","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"            } else if (res.equals(Keywords.LIST) \u0026\u0026 tokens.length \u003e LIST_COMMAND_LENGTH) {","lastModifiedDate":"2022-02-07"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Hey this command doesn\u0027t take in so many keywords nyan!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"            } else if (res.equals(Keywords.HELP) \u0026\u0026 tokens.length \u003e MAX_HELP_COMMAND_LENGTH) {","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"                throw new ChiException(\"Hey Chi-san can only help you with one thing at a time nyan!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"            return res;","lastModifiedDate":"2022-01-31"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-01-31"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(e.getMessage());","lastModifiedDate":"2022-01-31"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-31"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"WJunHong":78}},{"path":"src/main/java/chibot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Deadline;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Event;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Todo;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":" * Loads and stores tasks from given data file to and from application.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    private static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    private static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    /** The relative file path of the data file */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    private final String dataFilePath;","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    /** The relative path of the directory containing the data file */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    private final String dataFolderPath;","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     * @param path The relative path of the data file to use for storage of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        this.dataFilePath \u003d path;","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"        String[] rPaths \u003d path.split(\"/\");","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"        StringBuilder s \u003d new StringBuilder(\"./\");","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"        for (int i \u003d 0; i \u003c rPaths.length - 1; i++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"            s.append(rPaths[i]);","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        this.dataFolderPath \u003d s.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * Deciphers a task in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @param task A single task stored in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     * @return A Task instance of the task read from the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    public Task convertFileDataToTask(String task) {","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        String[] splitTask \u003d task.split(\"\\\\|\");","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        assert splitTask.length \u003e 2 : \"There is something wrong with this stored task\";","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        for (int i \u003d 0; i \u003c splitTask.length; i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"            splitTask[i] \u003d splitTask[i].trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        if (splitTask[0].equals(\"T\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"            if (validateDataFileTodo(splitTask)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"                return new Todo(splitTask[2], splitTask[1].equals(\"1\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"        } else if (splitTask[0].equals(\"D\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"            if (validateDataFileDeadline(splitTask)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"                return new Deadline(splitTask[2], LocalDate.parse(splitTask[3],","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"                        DateTimeFormatter.ofPattern(DATE_FORMAT)),","lastModifiedDate":"2022-02-07"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"                        LocalTime.parse(splitTask[4], DateTimeFormatter.ofPattern(TIME_FORMAT)),","lastModifiedDate":"2022-02-07"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"                        splitTask[1].equals(\"1\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"            if (validateDataFileEvent(splitTask)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"                return new Event(splitTask[2], LocalDate.parse(splitTask[3], DateTimeFormatter.ofPattern(DATE_FORMAT)),","lastModifiedDate":"2022-02-07"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"                        LocalTime.parse(splitTask[4], DateTimeFormatter.ofPattern(TIME_FORMAT)),","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"                        LocalTime.parse(splitTask[5], DateTimeFormatter.ofPattern(TIME_FORMAT)),","lastModifiedDate":"2022-02-07"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"                        splitTask[1].equals(\"1\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-31"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"        return null;","lastModifiedDate":"2022-01-31"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"     * Checks if the todo was corrupted in the data file.","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"     * @param tokens Array of words separated by | delimiter in the data file entry.","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether the todo was corrupted.","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"    public boolean validateDataFileTodo(String[] tokens) {","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"        if (tokens.length !\u003d 3) {","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"        } else if (!(tokens[1].equals(\"0\") || tokens[1].equals(\"1\"))) {","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"        } else return !tokens[2].trim().equals(\"\");","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"     * Checks if the deadline was corrupted in the data file.","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"     * @param tokens Array of words separated by | delimiter in the data file entry.","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether the deadline was corrupted.","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"    public boolean validateDataFileDeadline(String[] tokens) {","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"        if (tokens.length !\u003d 5) {","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"        } else if (!(tokens[1].equals(\"0\") || tokens[1].equals(\"1\"))) {","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"        } else if (tokens[2].trim().equals(\"\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"            try {","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"                LocalDate.parse(tokens[3], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"WJunHong"},"content":"                LocalTime.parse(tokens[4], DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"WJunHong"},"content":"                return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"WJunHong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"WJunHong"},"content":"                return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"WJunHong"},"content":"     * Checks if the event was corrupted in the data file.","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"WJunHong"},"content":"     * @param tokens Array of words separated by | delimiter in the data file entry.","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"WJunHong"},"content":"     * @return A boolean of whether the event was corrupted.","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"WJunHong"},"content":"    public boolean validateDataFileEvent(String[] tokens) {","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"WJunHong"},"content":"        if (tokens.length !\u003d 6) {","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":132,"author":{"gitId":"WJunHong"},"content":"        } else if (!(tokens[1].equals(\"0\") || tokens[1].equals(\"1\"))) {","lastModifiedDate":"2022-02-15"},{"lineNumber":133,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":134,"author":{"gitId":"WJunHong"},"content":"        } else if (tokens[2].trim().equals(\"\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":135,"author":{"gitId":"WJunHong"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":136,"author":{"gitId":"WJunHong"},"content":"        } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":137,"author":{"gitId":"WJunHong"},"content":"            try {","lastModifiedDate":"2022-02-15"},{"lineNumber":138,"author":{"gitId":"WJunHong"},"content":"                LocalDate.parse(tokens[3], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-02-15"},{"lineNumber":139,"author":{"gitId":"WJunHong"},"content":"                LocalTime.parse(tokens[4], DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2022-02-15"},{"lineNumber":140,"author":{"gitId":"WJunHong"},"content":"                LocalTime.parse(tokens[5], DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2022-02-15"},{"lineNumber":141,"author":{"gitId":"WJunHong"},"content":"                return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":142,"author":{"gitId":"WJunHong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":143,"author":{"gitId":"WJunHong"},"content":"                return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":144,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":145,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":146,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":147,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"WJunHong"},"content":"     * Extracts the tasks stored in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":151,"author":{"gitId":"WJunHong"},"content":"     * @return An ArrayList of Task instances interpreted from data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are interruptions while accessing the file.","lastModifiedDate":"2022-01-27"},{"lineNumber":153,"author":{"gitId":"WJunHong"},"content":"     * @throws ChiException If the file or its directory are not found.","lastModifiedDate":"2022-01-27"},{"lineNumber":154,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":155,"author":{"gitId":"WJunHong"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, ChiException {","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":157,"author":{"gitId":"WJunHong"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":158,"author":{"gitId":"WJunHong"},"content":"            File dataFile \u003d new File(dataFilePath);","lastModifiedDate":"2022-02-07"},{"lineNumber":159,"author":{"gitId":"WJunHong"},"content":"            Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-01-24"},{"lineNumber":160,"author":{"gitId":"WJunHong"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":161,"author":{"gitId":"WJunHong"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":162,"author":{"gitId":"WJunHong"},"content":"                Task t \u003d convertFileDataToTask(task);","lastModifiedDate":"2022-02-03"},{"lineNumber":163,"author":{"gitId":"WJunHong"},"content":"                if (t \u003d\u003d null) {","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"WJunHong"},"content":"                    continue;","lastModifiedDate":"2022-02-15"},{"lineNumber":165,"author":{"gitId":"WJunHong"},"content":"                }","lastModifiedDate":"2022-02-15"},{"lineNumber":166,"author":{"gitId":"WJunHong"},"content":"                loadedTasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":167,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":168,"author":{"gitId":"WJunHong"},"content":"            return loadedTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":169,"author":{"gitId":"WJunHong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":170,"author":{"gitId":"WJunHong"},"content":"            File dataFolder \u003d new File(dataFolderPath);","lastModifiedDate":"2022-01-24"},{"lineNumber":171,"author":{"gitId":"WJunHong"},"content":"            if (!dataFolder.isDirectory()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":172,"author":{"gitId":"WJunHong"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2022-01-24"},{"lineNumber":173,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":174,"author":{"gitId":"WJunHong"},"content":"            File newDataFile \u003d new File(dataFilePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":175,"author":{"gitId":"WJunHong"},"content":"            newDataFile.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":176,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"File not found\");","lastModifiedDate":"2022-01-31"},{"lineNumber":177,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":178,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":179,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":180,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"WJunHong"},"content":"     * Updates tasks on the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"WJunHong"},"content":"     * @param task The Task instance to be updated.","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList storing all Task instances.","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"WJunHong"},"content":"     * @param type The command used.","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"WJunHong"},"content":"     * @throws IOException If there are interruptions while accessing the file.","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"WJunHong"},"content":"    public void updateFile(Task task, TaskList tl, String type) throws IOException, ChiException {","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"WJunHong"},"content":"        FileWriter fw;","lastModifiedDate":"2022-01-24"},{"lineNumber":190,"author":{"gitId":"WJunHong"},"content":"        switch(type) {","lastModifiedDate":"2022-01-24"},{"lineNumber":191,"author":{"gitId":"WJunHong"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":192,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"WJunHong"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-24"},{"lineNumber":194,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"WJunHong"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-24"},{"lineNumber":196,"author":{"gitId":"WJunHong"},"content":"            fw \u003d new FileWriter(dataFilePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":197,"author":{"gitId":"WJunHong"},"content":"            fw.write(tl.getTaskStore());","lastModifiedDate":"2022-01-24"},{"lineNumber":198,"author":{"gitId":"WJunHong"},"content":"            fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":199,"author":{"gitId":"WJunHong"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":200,"author":{"gitId":"WJunHong"},"content":"        case \"event\":","lastModifiedDate":"2022-01-24"},{"lineNumber":201,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"WJunHong"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-24"},{"lineNumber":203,"author":{"gitId":"WJunHong"},"content":"            // Fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"WJunHong"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-24"},{"lineNumber":205,"author":{"gitId":"WJunHong"},"content":"            fw \u003d new FileWriter(dataFilePath, true);","lastModifiedDate":"2022-01-24"},{"lineNumber":206,"author":{"gitId":"WJunHong"},"content":"            fw.write(task.convertToFileFormat() + \"\\n\");","lastModifiedDate":"2022-02-13"},{"lineNumber":207,"author":{"gitId":"WJunHong"},"content":"            fw.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":208,"author":{"gitId":"WJunHong"},"content":"            break;","lastModifiedDate":"2022-01-24"},{"lineNumber":209,"author":{"gitId":"WJunHong"},"content":"        default:","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Something went wrong while writing to file nyan!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":212,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":213,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":214,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"WJunHong":214}},{"path":"src/main/java/chibot/storage/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.storage;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * A STUB for testing classes with Storage class dependencies.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * Constructor of the class.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"     * @param s Filler String to be passed into parent class.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public StorageStub(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        super(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":16}},{"path":"src/main/java/chibot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" * Represents a task which has a deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    /** The date of the deadline */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    private final LocalDate deadlineDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /** The time of day of the deadline */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    private final LocalTime deadlineTime;","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * Constructor for Deadline Class.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * @param by The date of the deadline as a LocalDate object.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     * @param byTime The time of day of the deadline as a LocalTime object.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * @param isDone The completion status of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    public Deadline(String description, LocalDate by, LocalTime byTime, boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        this.deadlineDate \u003d by;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"        this.deadlineTime \u003d byTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"            this.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     * Returns a standardized format for storing the deadline into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"     * @return String of deadline in data file storage format.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        return \" D \" + super.convertToFileFormat() + \" | \" + this.deadlineDate + \" | \" + this.deadlineTime;","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     * Adds extra custom formatting for user view specific to deadlines.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"     * @return A custom String display of the deadline.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"                + this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"                + this.deadlineTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":55}},{"path":"src/main/java/chibot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" * Represents a task which is an event.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    /** The date of the event */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    private final LocalDate eventDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /** The starting time of the event */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    private final LocalTime eventStartTime;","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /** The ending time of the event */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    private final LocalTime eventEndTime;","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Event class.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     * @param date The date of the event as a LocalDate object.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * @param t1 The start time of the event as a LocalTime object.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * @param t2 The end time of the event as a LocalTime object.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    public Event(String description, LocalDate date, LocalTime t1, LocalTime t2, boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        this.eventDate \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        this.eventStartTime \u003d t1;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        this.eventEndTime \u003d t2;","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"            this.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     * Returns a standardized format for storing the event into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * @return String of event in data file storage format.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2022-02-07"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        return \" E \" + super.convertToFileFormat() + \" | \" + this.eventDate + \" | \" + this.eventStartTime + \" | \"","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"                + this.eventEndTime;","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * Adds extra custom formatting for user view specific to events.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @return A custom String display of the event.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"                + \" from \" + eventStartTime.format(DateTimeFormatter.ofPattern(\"hh: mm a\")) + \" to \"","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"                + eventEndTime.format(DateTimeFormatter.ofPattern(\"hh: mm a\")) + \")\";","lastModifiedDate":"2022-02-07"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":61}},{"path":"src/main/java/chibot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * Represents a task input from the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /** The description of the task */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    private final String description;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /** The completion status of a task */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Task.","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * Verifies if a task description contains all keywords supplied.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     * @param wordsToCheck Array of keywords.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @return Boolean of whether task matches all keywords.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    public boolean checkDescriptionForWords(String[] wordsToCheck) {","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        for (String s: wordsToCheck) {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"            if (!this.description.contains(s.trim())) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"                return false;","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        return true;","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"     * Returns a cross if task has been completed.","lastModifiedDate":"2022-01-15"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * @return String of completion status.","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-15"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2022-01-15"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"     * Sets the completion status of the task to true.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"     * Sets the completion status of task to false.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     * Returns a standardized format for storing the task into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"     * @return String of task in data file storage format.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2022-02-07"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"        return this.isDone ? \"| 1 | \" + this.description : \"| 0 | \" + this.description;","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"     * Adds extra custom formatting for user view.","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"     * @return A custom String display of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-15"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":80}},{"path":"src/main/java/chibot/task/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * A STUB of a Task instance for testing.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * Constructor for the class","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"     * @param s Filler String for super class constructor.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public TaskStub(String s) {","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        super(s);","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     * Returns a fixed boolean for testing purposes.","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     * @param wordsToCheck Array of keywords.","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * @return True.","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    public boolean checkDescriptionForWords(String[] wordsToCheck) {","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        return true;","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * Returns a fixed task description.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     * @return String representation of the task description.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        return \"forT1\";","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":36}},{"path":"src/main/java/chibot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.task;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":" * Represents a task which is a simple Todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"     * Constructor of Todo Class","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"            this.markAsDone();","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"     * Returns a standardized format for storing the todo into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * @return String of todo in data file storage format.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        return \" T \" + super.convertToFileFormat();","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     * Adds extra custom formatting for user view specific to todos.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * @return A custom String display of the Todo.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":39}},{"path":"src/main/java/chibot/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.tasklist;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":" * Stores the tasks within the program while running.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    /** Stores the tasks */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * Instantiates the instance when no data file is found.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     * Instantiates the instance when taking in a data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * @param savedTasks ArrayList of saved tasks in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        this.tasks \u003d savedTasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"     * @param t The task to be added.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"        this.tasks.add(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"     * Delete a task from the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"     * @param t The task to be deleted.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"    public void deleteTask(Task t) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        this.tasks.remove(t);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * Returns the contents of the task list for display to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @return String of all tasks in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    public String getTasksMsg() {","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2022-02-07"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        for (Task t: this.tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"            allTasks.append(taskIndex).append(\". \").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"            taskIndex++;","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"        return allTasks.length() \u003d\u003d 0 ? \"Chi could not find any tasks, add one to get started nyan!\"","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"                : allTasks.toString();","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"     * Returns the contents of the task list for storage into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"     * @return String of all tasks in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"    public String getTaskStore() {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2022-02-07"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"        for (Task t: this.tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"            allTasks.append(t.convertToFileFormat()).append(\"\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"        return allTasks.toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":77,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"WJunHong"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"WJunHong"},"content":"     * @return Size of task ArrayList.","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"WJunHong"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"WJunHong"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"WJunHong"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"WJunHong"},"content":"     * @param index The index of the task in the task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"WJunHong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"WJunHong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"WJunHong"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"WJunHong"},"content":"     * Returns tasks which match the given keywords in proper format.","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"WJunHong"},"content":"     * @param wordsToCheck The array of keywords that the task must contain.","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"WJunHong"},"content":"     * @return A String of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"WJunHong"},"content":"    public String checkWordsInTask(String[] wordsToCheck) {","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"WJunHong"},"content":"        StringBuilder tasksWithMatchingWords \u003d new StringBuilder();","lastModifiedDate":"2022-02-07"},{"lineNumber":106,"author":{"gitId":"WJunHong"},"content":"        for (Task t: this.tasks) {","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"WJunHong"},"content":"            if (t.checkDescriptionForWords(wordsToCheck)) {","lastModifiedDate":"2022-02-03"},{"lineNumber":108,"author":{"gitId":"WJunHong"},"content":"                tasksWithMatchingWords.append(t).append(\"\\n\");","lastModifiedDate":"2022-02-07"},{"lineNumber":109,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"WJunHong"},"content":"        return tasksWithMatchingWords.toString();","lastModifiedDate":"2022-02-07"},{"lineNumber":112,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"WJunHong":113}},{"path":"src/main/java/chibot/tasklist/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.tasklist;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":" * Represents a STUB of a TaskList for testing purposes.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    /** Stores the tasks */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    private List\u003cString\u003e testTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"     * Instantiates the new instance with 2 fixed tasks added in.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    public TaskListStub() {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"        this.testTasks.add(\"list item 1\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"        this.testTasks.add(\"list item 2\");","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"     * Returns a concatenation of the two tasks stored in the Stub.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"     * @return A String of tasks for testing.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    public String getTasksMsg() {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        return \"1. \" + testTasks.get(0) + \"\\n\" + \"2. \" + testTasks.get(1);","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    public int getSize() {","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        return 2;","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":36}},{"path":"src/main/java/chibot/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"package chibot.ui;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.parser.Parser;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":" * Displays messages for the user and takes in their input.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"public class UI {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"     * Prints the welcome message when the Chat Bot runs.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"     * @return Welcome message for Chi Bot.","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"    public String printWelcome() {","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        return \"Welcome nyan!! Chi-san is ready to serve you \u003d^.^\u003d\";","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"     * Takes in consecutive user inputs and prints a response to each one.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"     * @param tl The TaskList instance storing tasks locally in the program.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"     * @param sge The Storage instance storing tasks on the hard-disk.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"     * @param prs The Parser instance interpreting the message sent by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    public void requestInput(TaskList tl, Storage sge, Parser prs) {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        Scanner sn \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        String msg \u003d sn.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        while (!msg.equals(\"bye\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"                System.out.println(prs.processMessage(msg, tl, sge));","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            } catch (ChiException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"                this.printErrorMsg(e.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"                this.printErrorMsg(\"Something went wrong while storing task to file nyaan!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"            msg \u003d sn.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        sn.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"     * Prints the goodbye message to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"     * @return The goodbye message.","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    public String printGoodbye() {","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"        return \"Leaving already? Alright... see you soon nyan!!!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"     * Customizes and prints the error message back to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"     * @param errMsg The error message from an invalid user input.","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    public void printErrorMsg(String errMsg) {","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"        System.out.println(\"\u003dV.V\u003d \" + errMsg + \" \u003dV.V\u003d\");","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"WJunHong":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"        \u003cLabel id\u003d\"dialogLabel\" fx:id\u003d\"dialog\" stylesheets\u003d\"@styles.css\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"            \u003cFont name\u003d\"Helvetica\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"            \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"WJunHong":26}},{"path":"src/main/resources/view/HelpDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"        \u003cHyperlink id\u003d\"link\" fx:id\u003d\"hyperlink\" alignment\u003d\"BOTTOM_LEFT\" contentDisplay\u003d\"TOP\" prefHeight\u003d\"23.0\" prefWidth\u003d\"300\" stylesheets\u003d\"@styles.css\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"         \u003c/padding\u003e\u003c/Hyperlink\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"WJunHong":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" stylesheets\u003d\"@styles.css\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"            \u003cFont name\u003d\"Helvetica\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"        \u003cButton id\u003d\"mainButton\" fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" stylesheets\u003d\"@styles.css\" text\u003d\"ENTER\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"            \u003cFont name\u003d\"Helvetica Neue\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        \u003cScrollPane id\u003d\"scrollPane\" fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@styles.css\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"                \u003cVBox id\u003d\"mainPage\" fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" stylesheets\u003d\"@styles.css\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"WJunHong":26}},{"path":"src/test/java/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import chibot.commands.AddCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import chibot.commands.MarkCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.commands.UnmarkCommand;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskListStub;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"public class CommandsTest {","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"    void outputString_getDescriptionOfDeadline_correctStringReturned() {","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        String[] tokens \u003d {\"place\", \"holder\"};","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"        AddCommand toTest \u003d new AddCommand(tokens);","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"        assertEquals(\"correct\", toTest.getDescription(\"correct /by 2022-01-01 12:00\", \"deadline\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    void boolean_invalidMarkCommandBody_falseReturned() {","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        String[] tokens \u003d {\"12\"};","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        MarkCommand toTest \u003d new MarkCommand(tokens);","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"        TaskListStub tl \u003d new TaskListStub();","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        assertFalse(toTest.validateMessageBody(\"12\", tl));","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    void boolean_nanPassedIntoUnmarkCommand_falseReturned() {","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"        String[] tokens \u003d {\"Non-number\"};","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        UnmarkCommand toTest \u003d new UnmarkCommand(tokens);","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        TaskListStub tl \u003d new TaskListStub();","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        assertFalse(toTest.validateMessageBody(\"Non-number\", tl));","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"WJunHong":34}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Event;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"class EventTest {","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    void stringStored_eventToBeStoredIntoFile_properlyFormatted() {","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"        Event toTest \u003d new Event(\"some event\", LocalDate.parse(\"2022-10-10\"), LocalTime.parse(\"12:00\"),","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"                LocalTime.parse(\"13:00\"), false);","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"        assertEquals(\" E | 0 | some event | 2022-10-10 | 12:00 | 13:00\", toTest.convertToFileFormat());","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"WJunHong":17}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import chibot.commands.Keywords;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.parser.Parser;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.StorageStub;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskListStub;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"class ParserTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"    void textPrinted_listStatement_ListOfTasks() throws ChiException, IOException{","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        TaskListStub tls \u003d new TaskListStub();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"        StorageStub ss \u003d new StorageStub(\"/somePath.txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"            assertEquals(\"1. list item 1\\n2. list item 2\", p.processMessage(\"list\", tls, ss));","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Not supposed to happen\");","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"            throw new IOException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    void outputMessage_incorrectCommand_ChiExceptionThrown() throws IOException {","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"        TaskListStub tls \u003d new TaskListStub();","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"        StorageStub ss \u003d new StorageStub(\"/somePath.txt\");","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"            String s \u003d p.processMessage(\"allahu\", tls, ss);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"            assertEquals(\"Command not found nyan! Please enter one of the following commands:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"                    + Keywords.listOfCommands","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"                    + \"\\n\\nIf you need help, type: help \u003ccommand\u003e to find out how to use it!\", e.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"WJunHong"},"content":"            throw new IOException(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"WJunHong"},"content":"    void outputMessage_properlyDefinedCommand_KeywordEnumReturned() throws ChiException {","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"WJunHong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"WJunHong"},"content":"            String[] tokensToTest \u003d {\"todo\", \"teeth\"};","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"WJunHong"},"content":"            assertEquals(Keywords.ADD, p.inspectMessage(tokensToTest));","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"Not supposed to happen\");","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"WJunHong"},"content":"    void outputMessage_tooShortTodoCommand_ChiExceptionThrown() throws ChiException {","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"WJunHong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"WJunHong"},"content":"            String[] tokensToTest \u003d {\"todo\"};","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"WJunHong"},"content":"            Keywords k \u003d p.inspectMessage(tokensToTest);","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"WJunHong"},"content":"            assertEquals(\"Hey this command is too short nyan!\", e.toString());","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"WJunHong"},"content":"    void outputMessage_helpTooMuchDescription_ChiExceptionThrown() throws ChiException {","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"WJunHong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"WJunHong"},"content":"            String[] tokensToTest \u003d {\"help\", \"list\", \"bad\", \"format\"};","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"WJunHong"},"content":"            Keywords k \u003d p.inspectMessage(tokensToTest);","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"WJunHong"},"content":"            assertEquals(\"Hey Chi-san can only help you with one thing at a time nyan!\", e.toString());","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":76}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import chibot.storage.Storage;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Todo;","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"class StorageTest {","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    void todoCanBeRetrievedFromStorageString_testTodoString_newTodoCreated() {","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"        String simulateTaskInStorage \u003d \" T | 0 | teeth\";","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"        Storage toTest \u003d new Storage(\"/dummy/someFile.txt\");","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"        assertEquals(new Todo(\"teeth\", false).toString(),","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"                toTest.convertFileDataToTask(simulateTaskInStorage).toString());","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"    void someProblemWithTheStoredTask_badFormatStoredTask_nullReturned() {","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"        String simulateTaskInStorage \u003d \" T | 4 | very bad\";","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"        Storage toTest \u003d new Storage(\"/dummy/someFile.txt\");","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"        assertNull(toTest.convertFileDataToTask(simulateTaskInStorage));","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"WJunHong":25}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import chibot.exception.ChiException;","lastModifiedDate":"2022-02-16"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import chibot.task.TaskStub;","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"import chibot.tasklist.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"class TaskListTest {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    void taskCanBeAdded_newTask_newTaskExistsInList() throws ChiException {","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"            TaskList t \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"            t.addTask(new TaskStub(\"\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"            assertEquals(\"forT1\", t.getTask(0).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"        } catch (ChiException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"            throw new ChiException(\"This should not happen\");","lastModifiedDate":"2022-02-16"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"    void taskCanBeDeleted_newTask_taskListIsEmpty() {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"        TaskStub ts \u003d new TaskStub(\"\");","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"        t.addTask(ts);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"        t.deleteTask(ts);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"        assertEquals(0, t.getSize());","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"WJunHong"},"content":"    void returnedString_searchReturnsTasks_tasksWithMatchingWordsAreReturned() {","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"WJunHong"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"WJunHong"},"content":"        TaskStub ts \u003d new TaskStub(\"\");","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"WJunHong"},"content":"        t.addTask(ts);","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"WJunHong"},"content":"        String[] wordsToCheck \u003d {\"some\", \"words\"};","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"WJunHong"},"content":"        assertEquals(\"forT1\\n\", t.checkWordsInTask(wordsToCheck));","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"WJunHong":39}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"import chibot.task.Todo;","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"class TodoTest {","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"    @Test","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"    void storageString_todoToBePlacedIntoStorageFile_correctlyFormatted() {","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"        Todo toTest \u003d new Todo(\"some description\", true);","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"        assertEquals(\" T | 1 | some description\", toTest.convertToFileFormat());","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"WJunHong":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WJunHong"},"content":"echo after me ah","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"WJunHong"},"content":"todo erase whiteboard","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"WJunHong"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"WJunHong"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"WJunHong"},"content":"todo wash dishes","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"WJunHong"},"content":"todo buy textbooks","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"WJunHong"},"content":"deadline submit modreg /by friday night","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"WJunHong"},"content":"deadline apply internship /by May 2022","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"WJunHong"},"content":"deadline /by idk","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"WJunHong"},"content":"event /at","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"WJunHong"},"content":"event birthday part /at sat 2-3pm","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"WJunHong"},"content":"event 2103 lec /at fri 2pm","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"WJunHong"},"content":"event career fair /at march 2020","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"WJunHong"},"content":"mark 3","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"WJunHong"},"content":"mark 5","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"WJunHong"},"content":"mark 7","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"WJunHong"},"content":"mark","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"WJunHong"},"content":"unmark","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"WJunHong"},"content":"unmark 5","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"WJunHong"},"content":"todo","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"WJunHong"},"content":"event","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"WJunHong"},"content":"deadline","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"WJunHong"},"content":"delete 2","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"WJunHong"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"WJunHong"},"content":"delete","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"WJunHong":28}}]
