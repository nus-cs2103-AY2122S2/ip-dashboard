[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":" * Encapsulate information of task with deadline.","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"     * Normal constructor.","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"        super(description, by);","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"     * Returns the representative string for saving in data file.","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        int status \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        return \"D\" + \" | \" + status + \" | \" + super.description + \" | \" + dtf.format(super.dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dtf.format(super.dateTime) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"yunbinmo":31}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":" * Encapsulate information of event task.","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"     * Normal constructor.","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"        super(description, at);","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"     * Returns the representative string for saving in data file.","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        int status \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        return \"E\" + \" | \" + status + \" | \" + super.description + \" | \" + dtf.format(super.dateTime);","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dtf.format(super.dateTime) + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"yunbinmo":31}},{"path":"src/main/java/Spike.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"import java.io.File;","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"public class Spike {","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    enum Command {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"        LIST(\"list\"),","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"        MARK(\"mark\"),","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        UNMARK(\"unmark\"),","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        EVENT(\"event\");","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        String command;","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"        private Command (String command) {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"            this.command \u003d command;","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"        public String getCommand() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"            return this.command;","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"        public static void processCommand(Command c, String command, String[] commandWords) {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"            switch (c) {","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"            case LIST:","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"                try {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"                    if (commandWords.length \u003e\u003d 2) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"                        printListByDate(command);","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"                    } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"                        printList();","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"                    }","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"                } catch (SpikeException d) {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"                    printMsg(d.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"                break;","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"            case MARK:","lastModifiedDate":"2022-01-21"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"                try {","lastModifiedDate":"2022-01-15"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"                    mark(commandWords);","lastModifiedDate":"2022-01-15"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"                } catch (SpikeException d) {","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"                    printMsg(d.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"                break;","lastModifiedDate":"2022-01-14"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"                try {","lastModifiedDate":"2022-01-15"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"                    unmark(commandWords);","lastModifiedDate":"2022-01-15"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"                } catch (SpikeException d) {","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"                    printMsg(d.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"                break;","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"            case DELETE:","lastModifiedDate":"2022-01-21"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"                try {","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"                    delete(commandWords);","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"                } catch (SpikeException d) {","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"                    printMsg(d.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"                break;","lastModifiedDate":"2022-01-16"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"            case TODO:","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"                // Fallthrough","lastModifiedDate":"2022-01-21"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"yunbinmo"},"content":"            case EVENT:","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"yunbinmo"},"content":"                try {","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"yunbinmo"},"content":"                    addTask(c, command, commandWords);","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"yunbinmo"},"content":"                } catch (SpikeException d) {","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"yunbinmo"},"content":"                    printMsg(d.toString());","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"yunbinmo"},"content":"                break;","lastModifiedDate":"2022-01-14"},{"lineNumber":77,"author":{"gitId":"yunbinmo"},"content":"            default:","lastModifiedDate":"2022-01-21"},{"lineNumber":78,"author":{"gitId":"yunbinmo"},"content":"                break;","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"yunbinmo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"yunbinmo"},"content":"        // Check first whether the data folder exists, if not, create it","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"yunbinmo"},"content":"        File dataDir \u003d new File(\"data/\");","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"yunbinmo"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"yunbinmo"},"content":"            dataDir.mkdir();","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":89,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"yunbinmo"},"content":"        // Check whether the data file exists, if not, create it","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"yunbinmo"},"content":"        File dataFile \u003d new File(\"data/Spike.txt\");","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"yunbinmo"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"yunbinmo"},"content":"            try {","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"yunbinmo"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"yunbinmo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"yunbinmo"},"content":"                printMsg(\"Sorry, I couldn\u0027t create the task list file for you.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"yunbinmo"},"content":"        // Load data from the file if it is not empty","lastModifiedDate":"2022-01-22"},{"lineNumber":101,"author":{"gitId":"yunbinmo"},"content":"        if (!(dataFile.length() \u003d\u003d 0)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":102,"author":{"gitId":"yunbinmo"},"content":"            try {","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"yunbinmo"},"content":"                Scanner fileRead \u003d new Scanner(dataFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"yunbinmo"},"content":"                while (fileRead.hasNextLine()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"yunbinmo"},"content":"                    String currLine \u003d fileRead.nextLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":106,"author":{"gitId":"yunbinmo"},"content":"                    String[] info \u003d currLine.split(\" \\\\| \");","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"yunbinmo"},"content":"                    Task task \u003d null;","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"yunbinmo"},"content":"                    DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"yunbinmo"},"content":"                    switch (info[0]) {","lastModifiedDate":"2022-01-22"},{"lineNumber":110,"author":{"gitId":"yunbinmo"},"content":"                    case \"T\":","lastModifiedDate":"2022-01-22"},{"lineNumber":111,"author":{"gitId":"yunbinmo"},"content":"                        task \u003d new ToDo(info[2]);","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"yunbinmo"},"content":"                        break;","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"yunbinmo"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"yunbinmo"},"content":"                        task \u003d new Event(info[2], LocalDateTime.parse(info[3], dtf));","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"yunbinmo"},"content":"                        break;","lastModifiedDate":"2022-01-22"},{"lineNumber":116,"author":{"gitId":"yunbinmo"},"content":"                    case \"D\":","lastModifiedDate":"2022-01-22"},{"lineNumber":117,"author":{"gitId":"yunbinmo"},"content":"                        task \u003d new Deadline(info[2], LocalDateTime.parse(info[3], dtf));","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"yunbinmo"},"content":"                        break;","lastModifiedDate":"2022-01-22"},{"lineNumber":119,"author":{"gitId":"yunbinmo"},"content":"                    default:","lastModifiedDate":"2022-01-22"},{"lineNumber":120,"author":{"gitId":"yunbinmo"},"content":"                        break;","lastModifiedDate":"2022-01-22"},{"lineNumber":121,"author":{"gitId":"yunbinmo"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":122,"author":{"gitId":"yunbinmo"},"content":"                    taskList.add(task);","lastModifiedDate":"2022-01-22"},{"lineNumber":123,"author":{"gitId":"yunbinmo"},"content":"                    if (info[1].equals(\"1\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"yunbinmo"},"content":"                        task.markAsDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"yunbinmo"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":126,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":127,"author":{"gitId":"yunbinmo"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":128,"author":{"gitId":"yunbinmo"},"content":"                printMsg(\"I couldn\u0027t find your task list file :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":129,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":130,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":131,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":132,"author":{"gitId":"yunbinmo"},"content":"        if (dataFile.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-22"},{"lineNumber":133,"author":{"gitId":"yunbinmo"},"content":"            printMsg(\"Hello! I am Spike ⊂( ・ ̫・)⊃ Nice to meet you!\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"yunbinmo"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"yunbinmo"},"content":"            printMsg(\"Welcome back! Enter \u0027list\u0027 to see your saved task(s).\");","lastModifiedDate":"2022-01-22"},{"lineNumber":136,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":137,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":138,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":139,"author":{"gitId":"yunbinmo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-21"},{"lineNumber":140,"author":{"gitId":"yunbinmo"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":141,"author":{"gitId":"yunbinmo"},"content":"            // Get the command as one line","lastModifiedDate":"2022-01-21"},{"lineNumber":142,"author":{"gitId":"yunbinmo"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2022-01-21"},{"lineNumber":143,"author":{"gitId":"yunbinmo"},"content":"            // Also split the command into words for easy processing","lastModifiedDate":"2022-01-21"},{"lineNumber":144,"author":{"gitId":"yunbinmo"},"content":"            String[] commandWords \u003d  command.split(\" \");","lastModifiedDate":"2022-01-21"},{"lineNumber":145,"author":{"gitId":"yunbinmo"},"content":"            if (commandWords.length \u003e 0) {","lastModifiedDate":"2022-01-21"},{"lineNumber":146,"author":{"gitId":"yunbinmo"},"content":"                // If user want to exit the program","lastModifiedDate":"2022-01-21"},{"lineNumber":147,"author":{"gitId":"yunbinmo"},"content":"                if (commandWords[0].equals(\"bye\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":148,"author":{"gitId":"yunbinmo"},"content":"                    // If user want to exit the program","lastModifiedDate":"2022-01-21"},{"lineNumber":149,"author":{"gitId":"yunbinmo"},"content":"                    saveChanges();","lastModifiedDate":"2022-01-22"},{"lineNumber":150,"author":{"gitId":"yunbinmo"},"content":"                    printMsg(\"See you soon! ﾍ(\u003d￣∇￣)ﾉ\");","lastModifiedDate":"2022-01-21"},{"lineNumber":151,"author":{"gitId":"yunbinmo"},"content":"                    break;","lastModifiedDate":"2022-01-21"},{"lineNumber":152,"author":{"gitId":"yunbinmo"},"content":"                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":153,"author":{"gitId":"yunbinmo"},"content":"                    // else we check if it is a valid command to decide how to process it","lastModifiedDate":"2022-01-21"},{"lineNumber":154,"author":{"gitId":"yunbinmo"},"content":"                    Command c \u003d isValidCommand(commandWords[0]);","lastModifiedDate":"2022-01-21"},{"lineNumber":155,"author":{"gitId":"yunbinmo"},"content":"                    if (c !\u003d null) {","lastModifiedDate":"2022-01-21"},{"lineNumber":156,"author":{"gitId":"yunbinmo"},"content":"                        Command.processCommand(c, command, commandWords);","lastModifiedDate":"2022-01-22"},{"lineNumber":157,"author":{"gitId":"yunbinmo"},"content":"                    } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":158,"author":{"gitId":"yunbinmo"},"content":"                        printMsg(\"Sorry, I am not programmed to do this yet :(\");","lastModifiedDate":"2022-01-15"},{"lineNumber":159,"author":{"gitId":"yunbinmo"},"content":"                    }","lastModifiedDate":"2022-01-15"},{"lineNumber":160,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-01-15"},{"lineNumber":161,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":162,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":163,"author":{"gitId":"yunbinmo"},"content":"        sc.close();","lastModifiedDate":"2022-01-21"},{"lineNumber":164,"author":{"gitId":"yunbinmo"},"content":"        return;","lastModifiedDate":"2022-01-21"},{"lineNumber":165,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":166,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":167,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":168,"author":{"gitId":"yunbinmo"},"content":"     * Checks whether it is a valid command.","lastModifiedDate":"2022-01-21"},{"lineNumber":169,"author":{"gitId":"yunbinmo"},"content":"     * If valid, return that command enum number, else return null.","lastModifiedDate":"2022-01-21"},{"lineNumber":170,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":171,"author":{"gitId":"yunbinmo"},"content":"    public static Command isValidCommand(String command) {","lastModifiedDate":"2022-01-21"},{"lineNumber":172,"author":{"gitId":"yunbinmo"},"content":"        for (Command c : Command.values()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":173,"author":{"gitId":"yunbinmo"},"content":"            if (c.getCommand().equals(command)) {","lastModifiedDate":"2022-01-21"},{"lineNumber":174,"author":{"gitId":"yunbinmo"},"content":"                return c;","lastModifiedDate":"2022-01-21"},{"lineNumber":175,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":176,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":177,"author":{"gitId":"yunbinmo"},"content":"        return null;","lastModifiedDate":"2022-01-21"},{"lineNumber":178,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":179,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":180,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":181,"author":{"gitId":"yunbinmo"},"content":"     * Saves the latest task list into hard disk when user exits.","lastModifiedDate":"2022-01-22"},{"lineNumber":182,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":183,"author":{"gitId":"yunbinmo"},"content":"    public static void saveChanges() {","lastModifiedDate":"2022-01-22"},{"lineNumber":184,"author":{"gitId":"yunbinmo"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":185,"author":{"gitId":"yunbinmo"},"content":"            FileWriter fw \u003d new FileWriter(\"data/Spike.txt\");","lastModifiedDate":"2022-01-22"},{"lineNumber":186,"author":{"gitId":"yunbinmo"},"content":"            String latestList \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":187,"author":{"gitId":"yunbinmo"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-01-22"},{"lineNumber":188,"author":{"gitId":"yunbinmo"},"content":"                latestList \u003d latestList + task.toFileFormat() + \"\\n\";","lastModifiedDate":"2022-01-22"},{"lineNumber":189,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":190,"author":{"gitId":"yunbinmo"},"content":"            fw.write(latestList);","lastModifiedDate":"2022-01-22"},{"lineNumber":191,"author":{"gitId":"yunbinmo"},"content":"            fw.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":192,"author":{"gitId":"yunbinmo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":193,"author":{"gitId":"yunbinmo"},"content":"            printMsg(\"Oops, something went wrong with saving your file :(\");","lastModifiedDate":"2022-01-22"},{"lineNumber":194,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":195,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":196,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":197,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":198,"author":{"gitId":"yunbinmo"},"content":"     * Adds task into the list and prints.","lastModifiedDate":"2022-01-21"},{"lineNumber":199,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":200,"author":{"gitId":"yunbinmo"},"content":"    public static void addTask(Command c, String command, String[] commandWords) throws SpikeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":201,"author":{"gitId":"yunbinmo"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":202,"author":{"gitId":"yunbinmo"},"content":"        switch (c) {","lastModifiedDate":"2022-01-22"},{"lineNumber":203,"author":{"gitId":"yunbinmo"},"content":"        case TODO:","lastModifiedDate":"2022-01-22"},{"lineNumber":204,"author":{"gitId":"yunbinmo"},"content":"            if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2022-01-15"},{"lineNumber":205,"author":{"gitId":"yunbinmo"},"content":"                throw new SpikeException(\"Hmmmm what to do? Think again?\");","lastModifiedDate":"2022-01-22"},{"lineNumber":206,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":207,"author":{"gitId":"yunbinmo"},"content":"            ToDo newTD \u003d new ToDo(command.substring(command.indexOf(\"todo\") + 5));","lastModifiedDate":"2022-01-15"},{"lineNumber":208,"author":{"gitId":"yunbinmo"},"content":"            taskList.add(newTD);","lastModifiedDate":"2022-01-15"},{"lineNumber":209,"author":{"gitId":"yunbinmo"},"content":"            printAddedTask(newTD);","lastModifiedDate":"2022-01-15"},{"lineNumber":210,"author":{"gitId":"yunbinmo"},"content":"            break;","lastModifiedDate":"2022-01-15"},{"lineNumber":211,"author":{"gitId":"yunbinmo"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-22"},{"lineNumber":212,"author":{"gitId":"yunbinmo"},"content":"            // Extract description and deadline and pass to constructor","lastModifiedDate":"2022-01-15"},{"lineNumber":213,"author":{"gitId":"yunbinmo"},"content":"            if (commandWords.length \u003c\u003d 2 || command.indexOf(\"/by\") \u003d\u003d -1","lastModifiedDate":"2022-01-15"},{"lineNumber":214,"author":{"gitId":"yunbinmo"},"content":"                    || commandWords[1].equals(\"/by\") || command.indexOf(\"/by\") + 3 \u003d\u003d command.length()) {","lastModifiedDate":"2022-01-15"},{"lineNumber":215,"author":{"gitId":"yunbinmo"},"content":"                throw new SpikeException(\"Deadline or task description missing.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":216,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":217,"author":{"gitId":"yunbinmo"},"content":"            LocalDateTime deadlineT \u003d parseDateTime(command.substring(command.indexOf(\"/by\") + 4), dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":218,"author":{"gitId":"yunbinmo"},"content":"            if (!(deadlineT \u003d\u003d null)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":219,"author":{"gitId":"yunbinmo"},"content":"                Deadline newD \u003d new Deadline(command.substring(command.indexOf(\"deadline\") + 9,","lastModifiedDate":"2022-01-21"},{"lineNumber":220,"author":{"gitId":"yunbinmo"},"content":"                        command.indexOf(\"/by\") - 1), deadlineT);","lastModifiedDate":"2022-01-23"},{"lineNumber":221,"author":{"gitId":"yunbinmo"},"content":"                taskList.add(newD);","lastModifiedDate":"2022-01-15"},{"lineNumber":222,"author":{"gitId":"yunbinmo"},"content":"                printAddedTask(newD);","lastModifiedDate":"2022-01-15"},{"lineNumber":223,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":224,"author":{"gitId":"yunbinmo"},"content":"            break;","lastModifiedDate":"2022-01-15"},{"lineNumber":225,"author":{"gitId":"yunbinmo"},"content":"        case EVENT:","lastModifiedDate":"2022-01-22"},{"lineNumber":226,"author":{"gitId":"yunbinmo"},"content":"            if (commandWords.length \u003c\u003d 2 || command.indexOf(\"/at\") \u003d\u003d -1","lastModifiedDate":"2022-01-15"},{"lineNumber":227,"author":{"gitId":"yunbinmo"},"content":"                    || commandWords[1].equals(\"/at\") || command.indexOf(\"/at\") + 3 \u003d\u003d command.length()) {","lastModifiedDate":"2022-01-15"},{"lineNumber":228,"author":{"gitId":"yunbinmo"},"content":"                throw new SpikeException(\"Event time or event description missing.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":229,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-15"},{"lineNumber":230,"author":{"gitId":"yunbinmo"},"content":"            LocalDateTime eventT \u003d parseDateTime(command.substring(command.indexOf(\"/at\") + 4), dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":231,"author":{"gitId":"yunbinmo"},"content":"            if (!(eventT \u003d\u003d null)) {","lastModifiedDate":"2022-01-23"},{"lineNumber":232,"author":{"gitId":"yunbinmo"},"content":"                Event newE \u003d new Event(command.substring(command.indexOf(\"event\") + 6,","lastModifiedDate":"2022-01-21"},{"lineNumber":233,"author":{"gitId":"yunbinmo"},"content":"                        command.indexOf(\"/at\") - 1), eventT);","lastModifiedDate":"2022-01-23"},{"lineNumber":234,"author":{"gitId":"yunbinmo"},"content":"                taskList.add(newE);","lastModifiedDate":"2022-01-15"},{"lineNumber":235,"author":{"gitId":"yunbinmo"},"content":"                printAddedTask(newE);","lastModifiedDate":"2022-01-15"},{"lineNumber":236,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":237,"author":{"gitId":"yunbinmo"},"content":"            break;","lastModifiedDate":"2022-01-15"},{"lineNumber":238,"author":{"gitId":"yunbinmo"},"content":"        default:","lastModifiedDate":"2022-01-21"},{"lineNumber":239,"author":{"gitId":"yunbinmo"},"content":"            break;","lastModifiedDate":"2022-01-21"},{"lineNumber":240,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":241,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":242,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":243,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":244,"author":{"gitId":"yunbinmo"},"content":"     * Parses date and time input by user and returns valid LocalDateTime object","lastModifiedDate":"2022-01-23"},{"lineNumber":245,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":246,"author":{"gitId":"yunbinmo"},"content":"    public static LocalDateTime parseDateTime(String s, DateTimeFormatter dtf) {","lastModifiedDate":"2022-01-23"},{"lineNumber":247,"author":{"gitId":"yunbinmo"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":248,"author":{"gitId":"yunbinmo"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(s, dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":249,"author":{"gitId":"yunbinmo"},"content":"            return dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":250,"author":{"gitId":"yunbinmo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":251,"author":{"gitId":"yunbinmo"},"content":"            printMsg(\"Please enter a valid date in the format yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":252,"author":{"gitId":"yunbinmo"},"content":"            return null;","lastModifiedDate":"2022-01-23"},{"lineNumber":253,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":254,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":255,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":256,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":257,"author":{"gitId":"yunbinmo"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-01-21"},{"lineNumber":258,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":259,"author":{"gitId":"yunbinmo"},"content":"    public static void mark(String[] commandWords) throws SpikeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":260,"author":{"gitId":"yunbinmo"},"content":"        if (commandWords.length !\u003d 2 || isInt(commandWords[1]) \u003d\u003d -1","lastModifiedDate":"2022-01-21"},{"lineNumber":261,"author":{"gitId":"yunbinmo"},"content":"                || isInt(commandWords[1]) \u003e taskList.size()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":262,"author":{"gitId":"yunbinmo"},"content":"            throw new SpikeException(\"Invalid arguments for marking. Please check again!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":263,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":264,"author":{"gitId":"yunbinmo"},"content":"        Task toMark \u003d taskList.get(Integer.parseInt(commandWords[1]) - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":265,"author":{"gitId":"yunbinmo"},"content":"        toMark.markAsDone();","lastModifiedDate":"2022-01-15"},{"lineNumber":266,"author":{"gitId":"yunbinmo"},"content":"        printMsg(\"Great! One more task done:\\n\" + toMark);","lastModifiedDate":"2022-01-15"},{"lineNumber":267,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":268,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":269,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":270,"author":{"gitId":"yunbinmo"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-01-21"},{"lineNumber":271,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":272,"author":{"gitId":"yunbinmo"},"content":"    public static void unmark(String[] commandWords) throws SpikeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":273,"author":{"gitId":"yunbinmo"},"content":"        if (commandWords.length !\u003d 2 || isInt(commandWords[1]) \u003d\u003d -1","lastModifiedDate":"2022-01-21"},{"lineNumber":274,"author":{"gitId":"yunbinmo"},"content":"                || isInt(commandWords[1]) \u003e taskList.size()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":275,"author":{"gitId":"yunbinmo"},"content":"            throw new SpikeException(\"Invalid arguments for unmarking. Please check again!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":276,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":277,"author":{"gitId":"yunbinmo"},"content":"        Task toUnmark \u003d taskList.get(Integer.parseInt(commandWords[1]) - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":278,"author":{"gitId":"yunbinmo"},"content":"        toUnmark.markAsNotDone();","lastModifiedDate":"2022-01-15"},{"lineNumber":279,"author":{"gitId":"yunbinmo"},"content":"        printMsg(\"Oops, I\u0027ve marked this task as not done yet:\\n\" + toUnmark);","lastModifiedDate":"2022-01-15"},{"lineNumber":280,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":281,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":282,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":283,"author":{"gitId":"yunbinmo"},"content":"     * Deletes task from the list.","lastModifiedDate":"2022-01-21"},{"lineNumber":284,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":285,"author":{"gitId":"yunbinmo"},"content":"    public static void delete(String[] commandWords) throws SpikeException {","lastModifiedDate":"2022-01-22"},{"lineNumber":286,"author":{"gitId":"yunbinmo"},"content":"        if (commandWords.length !\u003d 2 || isInt(commandWords[1]) \u003d\u003d -1","lastModifiedDate":"2022-01-21"},{"lineNumber":287,"author":{"gitId":"yunbinmo"},"content":"                || isInt(commandWords[1]) \u003e taskList.size()) {","lastModifiedDate":"2022-01-21"},{"lineNumber":288,"author":{"gitId":"yunbinmo"},"content":"            throw new SpikeException(\"Invalid arguments for deletion. Please check again!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":289,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":290,"author":{"gitId":"yunbinmo"},"content":"        Task toDelete \u003d taskList.get(Integer.parseInt(commandWords[1]) - 1);","lastModifiedDate":"2022-01-15"},{"lineNumber":291,"author":{"gitId":"yunbinmo"},"content":"        taskList.remove(toDelete);","lastModifiedDate":"2022-01-15"},{"lineNumber":292,"author":{"gitId":"yunbinmo"},"content":"        printMsg(\" Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2022-01-15"},{"lineNumber":293,"author":{"gitId":"yunbinmo"},"content":"                + String.format(\"    %s\\n\", toDelete)","lastModifiedDate":"2022-01-15"},{"lineNumber":294,"author":{"gitId":"yunbinmo"},"content":"                + String.format(\"Now you have %s task(s) in the list.\", taskList.size()));","lastModifiedDate":"2022-01-15"},{"lineNumber":295,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":296,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":297,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":298,"author":{"gitId":"yunbinmo"},"content":"     * Checks whether the input string is integer.","lastModifiedDate":"2022-01-21"},{"lineNumber":299,"author":{"gitId":"yunbinmo"},"content":"     * If yes, return it, else return -1.","lastModifiedDate":"2022-01-21"},{"lineNumber":300,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":301,"author":{"gitId":"yunbinmo"},"content":"    public static int isInt(String str) {","lastModifiedDate":"2022-01-15"},{"lineNumber":302,"author":{"gitId":"yunbinmo"},"content":"        try {","lastModifiedDate":"2022-01-15"},{"lineNumber":303,"author":{"gitId":"yunbinmo"},"content":"            int x \u003d Integer.parseInt(str);","lastModifiedDate":"2022-01-15"},{"lineNumber":304,"author":{"gitId":"yunbinmo"},"content":"            return x; // it is an integer","lastModifiedDate":"2022-01-15"},{"lineNumber":305,"author":{"gitId":"yunbinmo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":306,"author":{"gitId":"yunbinmo"},"content":"            return -1; // not an integer","lastModifiedDate":"2022-01-15"},{"lineNumber":307,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":308,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":309,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":310,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":311,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":312,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-14"},{"lineNumber":313,"author":{"gitId":"yunbinmo"},"content":"     * Formats and prints general response.","lastModifiedDate":"2022-01-21"},{"lineNumber":314,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-14"},{"lineNumber":315,"author":{"gitId":"yunbinmo"},"content":"    public static void printMsg(String msg) {","lastModifiedDate":"2022-01-14"},{"lineNumber":316,"author":{"gitId":"yunbinmo"},"content":"        System.out.println(\"-------------------------------------------------\\n\"","lastModifiedDate":"2022-01-14"},{"lineNumber":317,"author":{"gitId":"yunbinmo"},"content":"                + msg + \"\\n\"","lastModifiedDate":"2022-01-14"},{"lineNumber":318,"author":{"gitId":"yunbinmo"},"content":"                + \"-------------------------------------------------\");","lastModifiedDate":"2022-01-14"},{"lineNumber":319,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":320,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":321,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":322,"author":{"gitId":"yunbinmo"},"content":"     * Formats response to request to add task.","lastModifiedDate":"2022-01-21"},{"lineNumber":323,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":324,"author":{"gitId":"yunbinmo"},"content":"    public static void printAddedTask(Task task) {","lastModifiedDate":"2022-01-15"},{"lineNumber":325,"author":{"gitId":"yunbinmo"},"content":"        System.out.println(\"-------------------------------------------------\\n\"","lastModifiedDate":"2022-01-15"},{"lineNumber":326,"author":{"gitId":"yunbinmo"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-01-15"},{"lineNumber":327,"author":{"gitId":"yunbinmo"},"content":"                + String.format(\"    %s\\n\", task.toString())","lastModifiedDate":"2022-01-15"},{"lineNumber":328,"author":{"gitId":"yunbinmo"},"content":"                + String.format(\"Now you have %s task(s) in the list.\\n\", taskList.size())","lastModifiedDate":"2022-01-15"},{"lineNumber":329,"author":{"gitId":"yunbinmo"},"content":"                + \"-------------------------------------------------\");","lastModifiedDate":"2022-01-15"},{"lineNumber":330,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":331,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":332,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-14"},{"lineNumber":333,"author":{"gitId":"yunbinmo"},"content":"     * Prints all items in the list.","lastModifiedDate":"2022-01-21"},{"lineNumber":334,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-14"},{"lineNumber":335,"author":{"gitId":"yunbinmo"},"content":"    public static void printList() {","lastModifiedDate":"2022-01-14"},{"lineNumber":336,"author":{"gitId":"yunbinmo"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-14"},{"lineNumber":337,"author":{"gitId":"yunbinmo"},"content":"        String result \u003d \"Here are the task(s) in your list:\\n\";","lastModifiedDate":"2022-01-15"},{"lineNumber":338,"author":{"gitId":"yunbinmo"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-14"},{"lineNumber":339,"author":{"gitId":"yunbinmo"},"content":"            result +\u003d i + \".\" + task;","lastModifiedDate":"2022-01-23"},{"lineNumber":340,"author":{"gitId":"yunbinmo"},"content":"            if (i !\u003d taskList.size()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":341,"author":{"gitId":"yunbinmo"},"content":"                result +\u003d \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":342,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":343,"author":{"gitId":"yunbinmo"},"content":"            i++;","lastModifiedDate":"2022-01-23"},{"lineNumber":344,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":345,"author":{"gitId":"yunbinmo"},"content":"        printMsg(result);","lastModifiedDate":"2022-01-23"},{"lineNumber":346,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":347,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":348,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":349,"author":{"gitId":"yunbinmo"},"content":"     * Prints deadlines/events occurring on the given date.","lastModifiedDate":"2022-01-23"},{"lineNumber":350,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":351,"author":{"gitId":"yunbinmo"},"content":"    public static void printListByDate(String command) throws SpikeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":352,"author":{"gitId":"yunbinmo"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2022-01-23"},{"lineNumber":353,"author":{"gitId":"yunbinmo"},"content":"        LocalDateTime ldt \u003d parseDateTime(command.substring(5), dtf);","lastModifiedDate":"2022-01-23"},{"lineNumber":354,"author":{"gitId":"yunbinmo"},"content":"        if (ldt \u003d\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":355,"author":{"gitId":"yunbinmo"},"content":"            throw new SpikeException(\"Kindly enter the date in the format yyyy-MM-dd 0000 to filter by date\");","lastModifiedDate":"2022-01-23"},{"lineNumber":356,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":357,"author":{"gitId":"yunbinmo"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-01-23"},{"lineNumber":358,"author":{"gitId":"yunbinmo"},"content":"        String result \u003d \"Here are the task(s) in your list filtered by date:\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":359,"author":{"gitId":"yunbinmo"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":360,"author":{"gitId":"yunbinmo"},"content":"            if (task.getDateTime().toLocalDate().equals(ldt.toLocalDate())) {","lastModifiedDate":"2022-01-23"},{"lineNumber":361,"author":{"gitId":"yunbinmo"},"content":"                result \u003d result + i + \".\" + task;","lastModifiedDate":"2022-01-14"},{"lineNumber":362,"author":{"gitId":"yunbinmo"},"content":"                if (i !\u003d taskList.size()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":363,"author":{"gitId":"yunbinmo"},"content":"                    result +\u003d \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":364,"author":{"gitId":"yunbinmo"},"content":"                }","lastModifiedDate":"2022-01-23"},{"lineNumber":365,"author":{"gitId":"yunbinmo"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":366,"author":{"gitId":"yunbinmo"},"content":"            i++;","lastModifiedDate":"2022-01-14"},{"lineNumber":367,"author":{"gitId":"yunbinmo"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":368,"author":{"gitId":"yunbinmo"},"content":"        printMsg(result);","lastModifiedDate":"2022-01-14"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yunbinmo":368,"-":2}},{"path":"src/main/java/SpikeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":" * Class for all Spike specific exceptions","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"public class SpikeException extends Exception {","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"    public SpikeException(String str){","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"        super(str);","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"yunbinmo":8}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":" * Encapsulate information of a user task.","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-01-14"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"public class Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"    protected String description;","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"     * Constructor for Task objects.","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        this.dateTime \u003d LocalDateTime.parse(\"1700-01-01T00:00:00\");","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"    public Task(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"yunbinmo"},"content":"     * Retrieve the task status icon.","lastModifiedDate":"2022-01-14"},{"lineNumber":28,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"yunbinmo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-14"},{"lineNumber":30,"author":{"gitId":"yunbinmo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-14"},{"lineNumber":31,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":32,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":33,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-14"},{"lineNumber":34,"author":{"gitId":"yunbinmo"},"content":"     * Changes status of task to be \u0027Done\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-14"},{"lineNumber":36,"author":{"gitId":"yunbinmo"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"yunbinmo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-14"},{"lineNumber":38,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":39,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":40,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"yunbinmo"},"content":"     * Changes status of task to be \u0027Not done\u0027.","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-14"},{"lineNumber":43,"author":{"gitId":"yunbinmo"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-14"},{"lineNumber":44,"author":{"gitId":"yunbinmo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-14"},{"lineNumber":45,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"yunbinmo"},"content":"     * Returns the representative string for saving in data file.","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"yunbinmo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"yunbinmo"},"content":"        return \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-14"},{"lineNumber":55,"author":{"gitId":"yunbinmo"},"content":"     * Format the string representation of Task objects.","lastModifiedDate":"2022-01-14"},{"lineNumber":56,"author":{"gitId":"yunbinmo"},"content":"     * Gets the date and time for tasks with such information.","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"yunbinmo"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"yunbinmo"},"content":"        return this.dateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"yunbinmo"},"content":"     * Formats the string representation of Task objects.","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-14"},{"lineNumber":65,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":66,"author":{"gitId":"yunbinmo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-14"},{"lineNumber":67,"author":{"gitId":"yunbinmo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-01-14"},{"lineNumber":68,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":69,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"yunbinmo":69}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"/**","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":" * Encapsulate information of pure to-do task.","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"     * Normal constructor.","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"        super(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"yunbinmo"},"content":"     * Returns the representative string for saving in data file.","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"yunbinmo"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"yunbinmo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"yunbinmo"},"content":"        int status \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"        return \"T\" + \" | \" + status + \" | \" + super.description;","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"yunbinmo"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"yunbinmo"},"content":"    @Override","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"yunbinmo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"yunbinmo"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"yunbinmo"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"yunbinmo":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yunbinmo"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"yunbinmo"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"yunbinmo"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"yunbinmo"},"content":"todo sports club","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"yunbinmo"},"content":"todo borrow book","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"yunbinmo"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"yunbinmo"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"yunbinmo"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"yunbinmo"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"yunbinmo"},"content":"unmark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"yunbinmo"},"content":"unmark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"yunbinmo"},"content":"bye","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"yunbinmo":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yunbinmo"},"content":"java -classpath ..\\bin Spike \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yunbinmo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"yunbinmo"},"content":"java -classpath ../bin Spike \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yunbinmo":1,"-":37}}]
