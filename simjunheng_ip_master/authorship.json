[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":" * @author Sim Jun Heng","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":" * @version CS2103T AY21/22 Sem 2","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"  private String date;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"   * Method Constructor","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"   *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"   * @param desc the task description","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"   * @param date the deadline of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"  public Deadline(String desc, String date) {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    super(desc);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    this.date \u003d date;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"   * This method is used to get the current status + deadline of the Task","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"   * Status can be defined as Done/Not Done","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"   * Task Type is denoted as [D]","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"   *","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"   * @return a string denoting the task status, type and date.","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"  @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"  public String getTask() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    String str \u003d \"[D]\";","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    if (super.done) {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"      str +\u003d \"[X] \" + super.desc;","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"      str +\u003d \"[ ] \" + super.desc;","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    if (date !\u003d null) {","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"      String[] adjDate \u003d date.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"      str \u003d str + \" (\" + adjDate[0] + \": \";","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"      String[] newAdjDate \u003d new String[adjDate.length - 1];","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"      for (int i \u003d 1; i \u003c adjDate.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        newAdjDate[i - 1] \u003d adjDate[i];","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"      }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"      String adjStr \u003d String.join(\" \", newAdjDate);","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"      str \u003d str + adjStr + \")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"    return str;","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"simjunheng":49}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"import java.util.*;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"import java.io.*;","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":" * This program is used to add, list \u0026 mark the status of your current tasks.","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":" * @author Sim Jun Heng","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":" * @version CS2103T AY21/22 Sem 2","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"    // ArrayList to store all your tasks","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"     * The main method of this program","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"        // Greet","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"        // Scanner Object","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"        try {","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"            // Add different types of Task, List, Mark","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"                String[] temp \u003d input.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"                if (temp[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"                    int index \u003d Integer.parseInt(temp[1]) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"                    Duke.markTask(index);","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"                } else if (temp[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"                    int index \u003d Integer.parseInt(temp[1]) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"                    Duke.unMarkTask(index);","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"                } else if (temp[0].equals(\"list\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"                    Duke.list();","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"                } else if (temp[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"                    Duke.addToDo(input);","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"                } else if (temp[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"                    Duke.addDeadline(input);","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"                } else if (temp[0].equals(\"event\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"                    Duke.addEvent(input);","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"                } else if (temp[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"                    int index \u003d Integer.parseInt(temp[1]) - 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"                    Duke.deleteTask(index);","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"                } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"                    Duke.notSpecified();","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"            //Exit","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"            System.out.println(ex.getMessage());","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"     * This method changes the status of a particular task to Done","lastModifiedDate":"2022-01-19"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"     * in the list.","lastModifiedDate":"2022-01-19"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"     * @param index position of the task in the list","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException if position of the task exceeds what we have on the list","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"    public static void markTask(int index) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"        if (index \u003e\u003d list.size()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, can\u0027t find task :-(\");","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"            task.setAsDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"            System.out.println(task.getTask());","lastModifiedDate":"2022-01-19"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"     * This method changes the status of a particular task to Not Done","lastModifiedDate":"2022-01-19"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"     * in the list.","lastModifiedDate":"2022-01-19"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"     * @param index position of the task in the list","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException if position of the task exceeds what we have on the list","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"    public static void unMarkTask(int index) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"        if (index \u003e\u003d list.size()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, can\u0027t find task :-(\");","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2022-01-19"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"            task.setAsNotDone();","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"            System.out.println(task.getTask());","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"     * This method lists down all the classes.","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"    public static void list() {","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"        int num \u003d 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"        for (Task task : list) {","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"            System.out.println(num + \".\" + task.getTask());","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"            num++;","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"     * This method creates to do (subclass of Task) and adds it into our list","lastModifiedDate":"2022-01-19"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"     * @param input string given by the user","lastModifiedDate":"2022-01-19"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException originating from rmType method back to main method","lastModifiedDate":"2022-01-19"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"    public static void addToDo(String input) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"        Task newTask \u003d new ToDo(Duke.rmType(input));","lastModifiedDate":"2022-01-19"},{"lineNumber":112,"author":{"gitId":"simjunheng"},"content":"        list.add(newTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":113,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"        System.out.println(newTask.getTask());","lastModifiedDate":"2022-01-19"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"Now you have \"+ list.size() +\" tasks in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"     * This method creates Deadline (subclass of Task) and adds it into our list","lastModifiedDate":"2022-01-19"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"     * @param input string given by the user","lastModifiedDate":"2022-01-19"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException originating from rmType and extractDateORTask method","lastModifiedDate":"2022-01-19"},{"lineNumber":123,"author":{"gitId":"simjunheng"},"content":"     * back to main method","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":125,"author":{"gitId":"simjunheng"},"content":"    public static void addDeadline(String input) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"simjunheng"},"content":"        String adjInput \u003d Duke.rmType(input);","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"simjunheng"},"content":"        Task newTask \u003d new Deadline(Duke.extractDateORTask(adjInput, 2),","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"simjunheng"},"content":"                Duke.extractDateORTask(adjInput, 1));","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"simjunheng"},"content":"        list.add(newTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":130,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"simjunheng"},"content":"        System.out.println(newTask.getTask());","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"Now you have \"+ list.size() +\" tasks in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":134,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"simjunheng"},"content":"     * This method creates Event (subclass of Task) and adds it into our list","lastModifiedDate":"2022-01-19"},{"lineNumber":137,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":138,"author":{"gitId":"simjunheng"},"content":"     * @param input string given by the user","lastModifiedDate":"2022-01-19"},{"lineNumber":139,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException originating from rmType and extractDateORTask method","lastModifiedDate":"2022-01-19"},{"lineNumber":140,"author":{"gitId":"simjunheng"},"content":"     * back to main method","lastModifiedDate":"2022-01-19"},{"lineNumber":141,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":142,"author":{"gitId":"simjunheng"},"content":"    public static void addEvent(String input) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"simjunheng"},"content":"        String adjInput \u003d Duke.rmType(input);","lastModifiedDate":"2022-01-19"},{"lineNumber":144,"author":{"gitId":"simjunheng"},"content":"        Task newTask \u003d new Event(Duke.extractDateORTask(adjInput, 2),","lastModifiedDate":"2022-01-19"},{"lineNumber":145,"author":{"gitId":"simjunheng"},"content":"                Duke.extractDateORTask(adjInput, 1));","lastModifiedDate":"2022-01-19"},{"lineNumber":146,"author":{"gitId":"simjunheng"},"content":"        list.add(newTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":147,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":148,"author":{"gitId":"simjunheng"},"content":"        System.out.println(newTask.getTask());","lastModifiedDate":"2022-01-19"},{"lineNumber":149,"author":{"gitId":"simjunheng"},"content":"        System.out.println(\"Now you have \"+ list.size() +\" tasks in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":150,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":151,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":152,"author":{"gitId":"simjunheng"},"content":"     * This method deletes Task from our list","lastModifiedDate":"2022-01-19"},{"lineNumber":153,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":154,"author":{"gitId":"simjunheng"},"content":"     * @param index the position of the task","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException if position of the task exceeds what we have on the list","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":157,"author":{"gitId":"simjunheng"},"content":"    public static void deleteTask(int index) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"simjunheng"},"content":"        if (index \u003e\u003d list.size()) {","lastModifiedDate":"2022-01-19"},{"lineNumber":159,"author":{"gitId":"simjunheng"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, can\u0027t find task :-(\");","lastModifiedDate":"2022-01-19"},{"lineNumber":160,"author":{"gitId":"simjunheng"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":161,"author":{"gitId":"simjunheng"},"content":"            Task task \u003d list.remove(index);","lastModifiedDate":"2022-01-19"},{"lineNumber":162,"author":{"gitId":"simjunheng"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-01-19"},{"lineNumber":163,"author":{"gitId":"simjunheng"},"content":"            System.out.println(task.getTask());","lastModifiedDate":"2022-01-19"},{"lineNumber":164,"author":{"gitId":"simjunheng"},"content":"            System.out.println(\"Now you have \"+ list.size() +\" tasks in the list.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":166,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":167,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":169,"author":{"gitId":"simjunheng"},"content":"     * This method handles the case where a random input is supplied by the user","lastModifiedDate":"2022-01-19"},{"lineNumber":170,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":171,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException if add type description is empty","lastModifiedDate":"2022-01-19"},{"lineNumber":172,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":173,"author":{"gitId":"simjunheng"},"content":"    public static void notSpecified() throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":174,"author":{"gitId":"simjunheng"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":177,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":178,"author":{"gitId":"simjunheng"},"content":"     * This method is used to remove the task type from input","lastModifiedDate":"2022-01-19"},{"lineNumber":179,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":180,"author":{"gitId":"simjunheng"},"content":"     * @param input string given by the user","lastModifiedDate":"2022-01-19"},{"lineNumber":181,"author":{"gitId":"simjunheng"},"content":"     * @return remaining string after task type is removed.","lastModifiedDate":"2022-01-19"},{"lineNumber":182,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException if add type description is empty","lastModifiedDate":"2022-01-19"},{"lineNumber":183,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":184,"author":{"gitId":"simjunheng"},"content":"    public static String rmType(String input) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":185,"author":{"gitId":"simjunheng"},"content":"        String[] temp \u003d input.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":186,"author":{"gitId":"simjunheng"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-19"},{"lineNumber":187,"author":{"gitId":"simjunheng"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a \" +  temp[0] +  \" cannot be empty.\");","lastModifiedDate":"2022-01-19"},{"lineNumber":188,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":189,"author":{"gitId":"simjunheng"},"content":"        String[] newTemp \u003d new String[temp.length - 1];","lastModifiedDate":"2022-01-19"},{"lineNumber":190,"author":{"gitId":"simjunheng"},"content":"        for (int i \u003d 1; i \u003c temp.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":191,"author":{"gitId":"simjunheng"},"content":"            newTemp[i - 1] \u003d temp[i];","lastModifiedDate":"2022-01-19"},{"lineNumber":192,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":193,"author":{"gitId":"simjunheng"},"content":"        String adjInput \u003d String.join(\" \", newTemp);","lastModifiedDate":"2022-01-19"},{"lineNumber":194,"author":{"gitId":"simjunheng"},"content":"        return adjInput;","lastModifiedDate":"2022-01-19"},{"lineNumber":195,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":196,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":197,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":198,"author":{"gitId":"simjunheng"},"content":"     * This method is used to extract date or task depending on the integer","lastModifiedDate":"2022-01-19"},{"lineNumber":199,"author":{"gitId":"simjunheng"},"content":"     * passed into the method. Do note that the input string passed in should","lastModifiedDate":"2022-01-19"},{"lineNumber":200,"author":{"gitId":"simjunheng"},"content":"     * be the result from rmType method.","lastModifiedDate":"2022-01-19"},{"lineNumber":201,"author":{"gitId":"simjunheng"},"content":"     * 1 denotes date, 2 denotes task name","lastModifiedDate":"2022-01-19"},{"lineNumber":202,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-01-19"},{"lineNumber":203,"author":{"gitId":"simjunheng"},"content":"     * @param input string given by the user","lastModifiedDate":"2022-01-19"},{"lineNumber":204,"author":{"gitId":"simjunheng"},"content":"     * @return remaining string after task type is removed.","lastModifiedDate":"2022-01-19"},{"lineNumber":205,"author":{"gitId":"simjunheng"},"content":"     * @throws DukeException if no date is included","lastModifiedDate":"2022-01-19"},{"lineNumber":206,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":207,"author":{"gitId":"simjunheng"},"content":"    public static String extractDateORTask(String input, int integer) throws DukeException {","lastModifiedDate":"2022-01-19"},{"lineNumber":208,"author":{"gitId":"simjunheng"},"content":"        String[] temp \u003d input.split(\" /\");","lastModifiedDate":"2022-01-19"},{"lineNumber":209,"author":{"gitId":"simjunheng"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-19"},{"lineNumber":210,"author":{"gitId":"simjunheng"},"content":"            throw new DukeException(\"☹ OOPS!!! Remember to specify your date\");","lastModifiedDate":"2022-01-19"},{"lineNumber":211,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":212,"author":{"gitId":"simjunheng"},"content":"        if (integer \u003d\u003d 1) {","lastModifiedDate":"2022-01-19"},{"lineNumber":213,"author":{"gitId":"simjunheng"},"content":"            return temp[1];","lastModifiedDate":"2022-01-19"},{"lineNumber":214,"author":{"gitId":"simjunheng"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":215,"author":{"gitId":"simjunheng"},"content":"            return temp[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":216,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"simjunheng":213,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":" * This class supports exception belonging to the Duke program.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":" * @author Sim Jun Heng","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":" * @version CS2103T AY21/22 Sem 2","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"  public DukeException(String message) {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"    super(message);","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"simjunheng":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":" * @author Sim Jun Heng","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":" * @version CS2103T AY21/22 Sem 2","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"  private String date;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"   * Method Constructor","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"   *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"   * @param desc the task description","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"   * @param the date of the event","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"  public Event(String desc, String date) {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    super(desc);","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    this.date \u003d date;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"   * This method is used to get the current status + date of the Task","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"   * Status can be defined as Done/Not Done","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"   * Task Type is denoted as [E]","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"   *","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"   * @return a string denoting the task status, type and date.","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"  @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"  public String getTask() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    String str \u003d \"[E]\";","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    if (super.done) {","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"      str +\u003d \"[X] \" + super.desc;","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"      str +\u003d \"[ ] \" + super.desc;","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    if (date !\u003d null) {","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"      String[] adjDate \u003d date.split(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"      str \u003d str + \" (\" + adjDate[0] + \": \";","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"      String[] newAdjDate \u003d new String[adjDate.length - 1];","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"      for (int i \u003d 1; i \u003c adjDate.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        newAdjDate[i - 1] \u003d adjDate[i];","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"      }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"      String adjStr \u003d String.join(\" \", newAdjDate);","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"      str \u003d str + adjStr + \")\";","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"    return str;","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"simjunheng":49}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":" * This class specifies all the methods and variables of a task.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":" * @author Sim Jun Heng","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":" * @version CS2103T AY21/22 Sem 2","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"  // Class variables","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"  protected boolean done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"  protected String desc;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"   * Method Constructor","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"   *","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"   * @param desc the task description","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"  public Task(String desc) {","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    this.desc \u003d desc;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"   * This abstract method is used to get the current status of the Task","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"   * Status can be defined as Done/Not Done","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"   *","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"   * @return a string denoting the task status.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"  public abstract String getTask();","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"   * This method is used to change the status of the Task to done.","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"  public void setAsDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    this.done \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"   * This method is used to change the status of the Task to not done.","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"  public void setAsNotDone() {","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    this.done \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"simjunheng":42}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":" * @author Sim Jun Heng","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":" * @version CS2103T AY21/22 Sem 2","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"   * Method Constructor","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"   *","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"   * @param desc the task description","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"  public ToDo(String desc) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"    super(desc);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"  /**","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"   * This method is used to get the current status of the Task","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"   * Status can be defined as Done/Not Done","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"   * Task Type is denoted as [T]","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"   *","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"   * @return a string denoting the task status and type.","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"   */","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"  @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"  public String getTask() {","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    String str \u003d \"[T]\";","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    if (super.done) {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"      str +\u003d \"[X] \" + super.desc;","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"      str +\u003d \"[ ] \" + super.desc;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    return str;","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"  }","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"simjunheng":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"simjunheng":5}}]
