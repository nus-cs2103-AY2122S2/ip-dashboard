[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"plugins {","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"repositories {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"    mavenCentral()","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"checkstyle {","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"application {","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"    mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"test {","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"dependencies {","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"run{","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"lchokhoe":45}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"@rem","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"@rem","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"@rem","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"@rem","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"@rem","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"@rem","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"@rem","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"echo.","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"echo.","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"goto fail","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"echo.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"echo.","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"lchokhoe"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"lchokhoe"},"content":"goto fail","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"lchokhoe"},"content":":execute","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"lchokhoe"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"lchokhoe"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"lchokhoe"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"lchokhoe"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"lchokhoe"},"content":":end","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"lchokhoe"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"lchokhoe"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"lchokhoe"},"content":":fail","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"lchokhoe"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"lchokhoe"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"lchokhoe"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"lchokhoe"},"content":"exit /b 1","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"lchokhoe"},"content":":mainEnd","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"lchokhoe"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"lchokhoe"},"content":":omega","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"lchokhoe":89}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"import java.time.ZoneId;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":" * Represents a class that contains the logic for all keywords that Duke recognizes.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"public class Commands {","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"    public Commands() { // Empty Constructor","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"     *  Prints a response to \"bye\" command to indicate that the command was accepted.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"     * @return Bye response.","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"    public String bye() { // Get DukeLCH to Exit","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"        String bye \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"                + \"Goodbye. I hope to be of service to you again soon!\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"        return bye;","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"     * A method that takes in a String, checks it against 2 accepted date formats and converts it into","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"     * a default date format for output. If the String satisfies neither format, it is simply outputted as is.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String input that represents a date.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"     * @return Either a default formatted date or the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"    public String convertToDukeDate(String date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"        SimpleDateFormat df1 \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"        df1.setLenient(false);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"        SimpleDateFormat df2 \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"        df2.setLenient(false);","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"            Date dummyDate1 \u003d df1.parse(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"            LocalDate dukeDate1 \u003d dummyDate1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"            return dukeDate1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"        } catch (ParseException e1) {","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"                Date dummyDate2 \u003d df2.parse(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"                LocalDate dukeDate2 \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"                return dukeDate2.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"            } catch (ParseException e2) {","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"                return date;","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"     * A method that takes in a String representing a time period and checks if it\u0027s told in a 12-hour clock.","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"     * If not, the method attempts to convert it into a 12-hour clock.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String input that represents a time period.","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"     * @return Either a default 12-hour clock format or the user input.","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"lchokhoe"},"content":"    public String convertToDukeTime(String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"lchokhoe"},"content":"        if (time.contains(\"am\") || time.contains(\"pm\")","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"lchokhoe"},"content":"                || time.contains(\"AM\") || time.contains(\"PM\")","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"lchokhoe"},"content":"                || time.contains(\"Am\") || time.contains(\"Pm\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"lchokhoe"},"content":"            return time;","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"lchokhoe"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"lchokhoe"},"content":"            String splicedTime \u003d time.substring(0, 4);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"lchokhoe"},"content":"            DateFormat inputFormat \u003d new SimpleDateFormat(\"HHmm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"lchokhoe"},"content":"            DateFormat outputFormat \u003d new SimpleDateFormat(\"hh:mmaa\");","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"lchokhoe"},"content":"                Date dukeTime \u003d inputFormat.parse(splicedTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"lchokhoe"},"content":"                return outputFormat.format(dukeTime);","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"lchokhoe"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"lchokhoe"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"lchokhoe"},"content":"                return time;","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, gets the inputted instance of DukeHistory","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"lchokhoe"},"content":"     * to print a list of all tasks in its records.","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"lchokhoe"},"content":"     * @param history An instance of DukeHistory.","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"lchokhoe"},"content":"     * @return List response.","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"lchokhoe"},"content":"    public String list(DukeHistory history) { // Get DukeLCH to List cmdHistory","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"lchokhoe"},"content":"        String border \u003d \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"lchokhoe"},"content":"        String response \u003d border","lastModifiedDate":"2022-02-05"},{"lineNumber":94,"author":{"gitId":"lchokhoe"},"content":"                + \"These are your tasks that we have in our records:\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"lchokhoe"},"content":"                + history.printAll() + border;","lastModifiedDate":"2022-02-05"},{"lineNumber":96,"author":{"gitId":"lchokhoe"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":97,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, checks the validity of a given entry index before getting the inputted instance","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"lchokhoe"},"content":"     * of DukeHistory to mark that entry in its records as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"lchokhoe"},"content":"     *  @param index An integer indicating the desired entry to mark.","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"lchokhoe"},"content":"     * @param history An instance of DukeHistory.","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"lchokhoe"},"content":"     * @return Mark response.","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"lchokhoe"},"content":"    public String mark(int index, DukeHistory history) {","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"lchokhoe"},"content":"        if (index \u003c 0 || index \u003e history.getSize() - 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"lchokhoe"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"lchokhoe"},"content":"        history.getTask(index).isMarked();","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"lchokhoe"},"content":"        Task currTask \u003d history.getTask(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"lchokhoe"},"content":"        String tasking \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":113,"author":{"gitId":"lchokhoe"},"content":"        if (currTask instanceof ToDos) {","lastModifiedDate":"2022-01-19"},{"lineNumber":114,"author":{"gitId":"lchokhoe"},"content":"            ToDos temp \u003d (ToDos) currTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":115,"author":{"gitId":"lchokhoe"},"content":"            tasking \u003d tasking.concat(temp.getToDo());","lastModifiedDate":"2022-01-19"},{"lineNumber":116,"author":{"gitId":"lchokhoe"},"content":"        } else if (currTask instanceof Deadlines) {","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"lchokhoe"},"content":"            Deadlines temp \u003d (Deadlines) currTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":118,"author":{"gitId":"lchokhoe"},"content":"            tasking \u003d tasking.concat(temp.getDeadline());","lastModifiedDate":"2022-01-19"},{"lineNumber":119,"author":{"gitId":"lchokhoe"},"content":"        } else if (currTask instanceof Event) {","lastModifiedDate":"2022-01-19"},{"lineNumber":120,"author":{"gitId":"lchokhoe"},"content":"            Event temp \u003d (Event) currTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":121,"author":{"gitId":"lchokhoe"},"content":"            tasking \u003d tasking.concat(temp.getEvent());","lastModifiedDate":"2022-01-19"},{"lineNumber":122,"author":{"gitId":"lchokhoe"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":123,"author":{"gitId":"lchokhoe"},"content":"            System.out.println(\"Error occurred while processing \" + currTask.getTask()); // Temporary error handler","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":125,"author":{"gitId":"lchokhoe"},"content":"        String msg \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":126,"author":{"gitId":"lchokhoe"},"content":"                + \"Well done! You have completed the task:\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":127,"author":{"gitId":"lchokhoe"},"content":"                + \"    \" + tasking","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"lchokhoe"},"content":"        return msg;","lastModifiedDate":"2022-02-05"},{"lineNumber":130,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, checks the validity of a given entry index before getting the inputted instance","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"lchokhoe"},"content":"     * of DukeHistory to unmark that entry in its records.","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"lchokhoe"},"content":"     *  @param index An integer indicating the desired entry to unmark.","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"lchokhoe"},"content":"     * @param history An instance of DukeHistory.","lastModifiedDate":"2022-01-29"},{"lineNumber":137,"author":{"gitId":"lchokhoe"},"content":"     * @return Unmark response.","lastModifiedDate":"2022-02-05"},{"lineNumber":138,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":139,"author":{"gitId":"lchokhoe"},"content":"    public String unmark(int index, DukeHistory history) {","lastModifiedDate":"2022-02-05"},{"lineNumber":140,"author":{"gitId":"lchokhoe"},"content":"        if (index \u003c 0 || index \u003e history.getSize() - 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":141,"author":{"gitId":"lchokhoe"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"lchokhoe"},"content":"        history.getTask(index).isUnmarked();","lastModifiedDate":"2022-01-29"},{"lineNumber":144,"author":{"gitId":"lchokhoe"},"content":"        Task currTask \u003d history.getTask(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":145,"author":{"gitId":"lchokhoe"},"content":"        String tasking \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":146,"author":{"gitId":"lchokhoe"},"content":"        if (currTask instanceof ToDos) {","lastModifiedDate":"2022-01-19"},{"lineNumber":147,"author":{"gitId":"lchokhoe"},"content":"            ToDos temp \u003d (ToDos) currTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":148,"author":{"gitId":"lchokhoe"},"content":"            tasking \u003d tasking.concat(temp.getToDo());","lastModifiedDate":"2022-01-19"},{"lineNumber":149,"author":{"gitId":"lchokhoe"},"content":"        } else if (currTask instanceof Deadlines) {","lastModifiedDate":"2022-01-19"},{"lineNumber":150,"author":{"gitId":"lchokhoe"},"content":"            Deadlines temp \u003d (Deadlines) currTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":151,"author":{"gitId":"lchokhoe"},"content":"            tasking \u003d tasking.concat(temp.getDeadline());","lastModifiedDate":"2022-01-19"},{"lineNumber":152,"author":{"gitId":"lchokhoe"},"content":"        } else if (currTask instanceof Event) {","lastModifiedDate":"2022-01-19"},{"lineNumber":153,"author":{"gitId":"lchokhoe"},"content":"            Event temp \u003d (Event) currTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":154,"author":{"gitId":"lchokhoe"},"content":"            tasking \u003d tasking.concat(temp.getEvent());","lastModifiedDate":"2022-01-19"},{"lineNumber":155,"author":{"gitId":"lchokhoe"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":156,"author":{"gitId":"lchokhoe"},"content":"            System.out.println(\"Error occurred while processing \" + currTask.getTask()); // Temporary error handler","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":158,"author":{"gitId":"lchokhoe"},"content":"        String msg \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":159,"author":{"gitId":"lchokhoe"},"content":"                + \"A reminder that the following task has not been done:\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":160,"author":{"gitId":"lchokhoe"},"content":"                + \"    \" + tasking","lastModifiedDate":"2022-01-19"},{"lineNumber":161,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":162,"author":{"gitId":"lchokhoe"},"content":"        return msg;","lastModifiedDate":"2022-02-05"},{"lineNumber":163,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":164,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":165,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":166,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, uses the provided String[] tokens to build a description for a ToDos Task.","lastModifiedDate":"2022-01-29"},{"lineNumber":167,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":168,"author":{"gitId":"lchokhoe"},"content":"     * It then gets the inputted instance of DukeHistory to add a ToDos task entry into it\u0027s record","lastModifiedDate":"2022-01-29"},{"lineNumber":169,"author":{"gitId":"lchokhoe"},"content":"     * using the generated description.","lastModifiedDate":"2022-01-29"},{"lineNumber":170,"author":{"gitId":"lchokhoe"},"content":"     *  @param tokens A String[] of tokens inputted by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":171,"author":{"gitId":"lchokhoe"},"content":"     * @param history An instance of DukeHistory.","lastModifiedDate":"2022-01-29"},{"lineNumber":172,"author":{"gitId":"lchokhoe"},"content":"     * @return Todo_task response.","lastModifiedDate":"2022-02-05"},{"lineNumber":173,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":174,"author":{"gitId":"lchokhoe"},"content":"    public String todo(String[] tokens, DukeHistory history) {","lastModifiedDate":"2022-02-05"},{"lineNumber":175,"author":{"gitId":"lchokhoe"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":176,"author":{"gitId":"lchokhoe"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":177,"author":{"gitId":"lchokhoe"},"content":"            description \u003d description.concat(tokens[i]);","lastModifiedDate":"2022-01-19"},{"lineNumber":178,"author":{"gitId":"lchokhoe"},"content":"            if (i !\u003d (tokens.length - 1)) {","lastModifiedDate":"2022-01-19"},{"lineNumber":179,"author":{"gitId":"lchokhoe"},"content":"                description \u003d description.concat(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":180,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":181,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":182,"author":{"gitId":"lchokhoe"},"content":"        return history.addToDo(description);","lastModifiedDate":"2022-02-05"},{"lineNumber":183,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":184,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":185,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":186,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, uses the provided String[] tokens to build a description, date and time","lastModifiedDate":"2022-01-29"},{"lineNumber":187,"author":{"gitId":"lchokhoe"},"content":"     * for a Deadline Task.","lastModifiedDate":"2022-01-29"},{"lineNumber":188,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":189,"author":{"gitId":"lchokhoe"},"content":"     * It then gets the inputted instance of DukeHistory to add a Deadline task entry into it\u0027s records","lastModifiedDate":"2022-01-29"},{"lineNumber":190,"author":{"gitId":"lchokhoe"},"content":"     * using the generated description, date and time.","lastModifiedDate":"2022-01-29"},{"lineNumber":191,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":192,"author":{"gitId":"lchokhoe"},"content":"     * @param tokens A String[] of tokens inputted by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":193,"author":{"gitId":"lchokhoe"},"content":"     * @param history An instance of DukeHistory.","lastModifiedDate":"2022-01-29"},{"lineNumber":194,"author":{"gitId":"lchokhoe"},"content":"     * @throws DukeException If the \u0027/by\u0027 phrase is not detected in the String[] of tokens.","lastModifiedDate":"2022-01-29"},{"lineNumber":195,"author":{"gitId":"lchokhoe"},"content":"     * @return Deadline_task response.","lastModifiedDate":"2022-02-05"},{"lineNumber":196,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":197,"author":{"gitId":"lchokhoe"},"content":"    public String deadline(String[] tokens, DukeHistory history) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":198,"author":{"gitId":"lchokhoe"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":199,"author":{"gitId":"lchokhoe"},"content":"        String date \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"lchokhoe"},"content":"        String time \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"lchokhoe"},"content":"        int timeStart \u003d -1; // -1 is a placeholder to indicate /by has not been found","lastModifiedDate":"2022-01-19"},{"lineNumber":202,"author":{"gitId":"lchokhoe"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":203,"author":{"gitId":"lchokhoe"},"content":"            if (tokens[i].equals(\"/by\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":204,"author":{"gitId":"lchokhoe"},"content":"                timeStart \u003d i;","lastModifiedDate":"2022-01-19"},{"lineNumber":205,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":206,"author":{"gitId":"lchokhoe"},"content":"            } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":207,"author":{"gitId":"lchokhoe"},"content":"                description \u003d description.concat(tokens[i]);","lastModifiedDate":"2022-01-19"},{"lineNumber":208,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":209,"author":{"gitId":"lchokhoe"},"content":"            description \u003d description.concat(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":210,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":211,"author":{"gitId":"lchokhoe"},"content":"        // Check for Date and Time","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"lchokhoe"},"content":"        if (timeStart \u003d\u003d -1 || tokens.length - timeStart \u003c 3) {","lastModifiedDate":"2022-01-28"},{"lineNumber":213,"author":{"gitId":"lchokhoe"},"content":"            throw new DukeException(\"\u0027/by\u0027 not detected\");","lastModifiedDate":"2022-01-20"},{"lineNumber":214,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":215,"author":{"gitId":"lchokhoe"},"content":"        // Handle Date","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"lchokhoe"},"content":"        date \u003d date.concat(convertToDukeDate(tokens[timeStart + 1]));","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"lchokhoe"},"content":"        // Handle Time","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"lchokhoe"},"content":"        time \u003d time.concat(convertToDukeTime(tokens[timeStart + 2]));","lastModifiedDate":"2022-01-27"},{"lineNumber":219,"author":{"gitId":"lchokhoe"},"content":"        return history.addDeadline(description, date, time);","lastModifiedDate":"2022-02-05"},{"lineNumber":220,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":221,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":222,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":223,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, attempts to initialize an Event task using the provided String[] tokens","lastModifiedDate":"2022-01-29"},{"lineNumber":224,"author":{"gitId":"lchokhoe"},"content":"     * to build a description, date and time.","lastModifiedDate":"2022-01-29"},{"lineNumber":225,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":226,"author":{"gitId":"lchokhoe"},"content":"     * It then gets the inputted instance of DukeHistory to add an Event task entry into it\u0027s records","lastModifiedDate":"2022-01-29"},{"lineNumber":227,"author":{"gitId":"lchokhoe"},"content":"     * using the generated description, date and time.","lastModifiedDate":"2022-01-29"},{"lineNumber":228,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":229,"author":{"gitId":"lchokhoe"},"content":"     * @param tokens A String[] of tokens inputted by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":230,"author":{"gitId":"lchokhoe"},"content":"     * @param history An instance of DukeHistory.","lastModifiedDate":"2022-01-29"},{"lineNumber":231,"author":{"gitId":"lchokhoe"},"content":"     * @throws DukeException If the \u0027/at\u0027 phrase is not detected in the String[] of tokens.","lastModifiedDate":"2022-01-29"},{"lineNumber":232,"author":{"gitId":"lchokhoe"},"content":"     * @return Event_task response.","lastModifiedDate":"2022-02-05"},{"lineNumber":233,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":234,"author":{"gitId":"lchokhoe"},"content":"    public String event(String[] tokens, DukeHistory history) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":235,"author":{"gitId":"lchokhoe"},"content":"        String description \u003d \"\";","lastModifiedDate":"2022-01-19"},{"lineNumber":236,"author":{"gitId":"lchokhoe"},"content":"        String date \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":237,"author":{"gitId":"lchokhoe"},"content":"        String time \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":238,"author":{"gitId":"lchokhoe"},"content":"        int timeStart \u003d -1; // -1 is a placeholder to indicate /at has not been found","lastModifiedDate":"2022-01-19"},{"lineNumber":239,"author":{"gitId":"lchokhoe"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":240,"author":{"gitId":"lchokhoe"},"content":"            if (tokens[i].startsWith(\"/\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":241,"author":{"gitId":"lchokhoe"},"content":"                timeStart \u003d i;","lastModifiedDate":"2022-01-19"},{"lineNumber":242,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":243,"author":{"gitId":"lchokhoe"},"content":"            } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":244,"author":{"gitId":"lchokhoe"},"content":"                description \u003d description.concat(tokens[i]);","lastModifiedDate":"2022-01-19"},{"lineNumber":245,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":246,"author":{"gitId":"lchokhoe"},"content":"            description \u003d description.concat(\" \");","lastModifiedDate":"2022-01-19"},{"lineNumber":247,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":248,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":249,"author":{"gitId":"lchokhoe"},"content":"        // Check for timeFrame","lastModifiedDate":"2022-01-20"},{"lineNumber":250,"author":{"gitId":"lchokhoe"},"content":"        if (timeStart \u003d\u003d -1 || tokens.length - timeStart \u003c 3) {","lastModifiedDate":"2022-01-28"},{"lineNumber":251,"author":{"gitId":"lchokhoe"},"content":"            throw new DukeException(\"\u0027/at\u0027 not detected\");","lastModifiedDate":"2022-01-20"},{"lineNumber":252,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":253,"author":{"gitId":"lchokhoe"},"content":"        // Handle Date","lastModifiedDate":"2022-01-27"},{"lineNumber":254,"author":{"gitId":"lchokhoe"},"content":"        date \u003d date.concat(convertToDukeDate(tokens[timeStart + 1]));","lastModifiedDate":"2022-01-27"},{"lineNumber":255,"author":{"gitId":"lchokhoe"},"content":"        // Handle Time","lastModifiedDate":"2022-01-27"},{"lineNumber":256,"author":{"gitId":"lchokhoe"},"content":"        String[] arr \u003d tokens[timeStart + 2].split(\"-\");","lastModifiedDate":"2022-01-27"},{"lineNumber":257,"author":{"gitId":"lchokhoe"},"content":"        time \u003d time.concat(convertToDukeTime(arr[0])","lastModifiedDate":"2022-01-27"},{"lineNumber":258,"author":{"gitId":"lchokhoe"},"content":"                .concat(\"-\")","lastModifiedDate":"2022-01-27"},{"lineNumber":259,"author":{"gitId":"lchokhoe"},"content":"                .concat(convertToDukeTime(arr[1])));","lastModifiedDate":"2022-01-27"},{"lineNumber":260,"author":{"gitId":"lchokhoe"},"content":"        return history.addEvent(description, date, time);","lastModifiedDate":"2022-02-05"},{"lineNumber":261,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":262,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":263,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":264,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, checks the validity of a given entry index before getting the inputted instance","lastModifiedDate":"2022-01-29"},{"lineNumber":265,"author":{"gitId":"lchokhoe"},"content":"     * of DukeHistory to delete that entry in its records.","lastModifiedDate":"2022-01-29"},{"lineNumber":266,"author":{"gitId":"lchokhoe"},"content":"     *  @param index An integer indicating the desired entry to delete.","lastModifiedDate":"2022-01-29"},{"lineNumber":267,"author":{"gitId":"lchokhoe"},"content":"     * @param history An instance of DukeHistory","lastModifiedDate":"2022-01-29"},{"lineNumber":268,"author":{"gitId":"lchokhoe"},"content":"     * @return Delete response.","lastModifiedDate":"2022-02-05"},{"lineNumber":269,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":270,"author":{"gitId":"lchokhoe"},"content":"    public String delete(int index, DukeHistory history) {","lastModifiedDate":"2022-02-05"},{"lineNumber":271,"author":{"gitId":"lchokhoe"},"content":"        if (index \u003c 0 || index \u003e history.getSize() - 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":272,"author":{"gitId":"lchokhoe"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-01-29"},{"lineNumber":273,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":274,"author":{"gitId":"lchokhoe"},"content":"        return history.deleteTask(index);","lastModifiedDate":"2022-02-05"},{"lineNumber":275,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":276,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":277,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":278,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, builds a String phrase with the inputted String[] tokens before getting the","lastModifiedDate":"2022-01-29"},{"lineNumber":279,"author":{"gitId":"lchokhoe"},"content":"     * inputted instance of DukeHistory to call findPhrase().","lastModifiedDate":"2022-01-29"},{"lineNumber":280,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":281,"author":{"gitId":"lchokhoe"},"content":"     * It then prints the returned String for the user to see.","lastModifiedDate":"2022-01-29"},{"lineNumber":282,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":283,"author":{"gitId":"lchokhoe"},"content":"     * @param tokens A String[] of tokens inputted by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":284,"author":{"gitId":"lchokhoe"},"content":"     * @param history An instance of DukeHistory.","lastModifiedDate":"2022-01-29"},{"lineNumber":285,"author":{"gitId":"lchokhoe"},"content":"     * @throws DukeException If no task is found matching the inputted phrase.","lastModifiedDate":"2022-01-29"},{"lineNumber":286,"author":{"gitId":"lchokhoe"},"content":"     * @return Find response.","lastModifiedDate":"2022-02-05"},{"lineNumber":287,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":288,"author":{"gitId":"lchokhoe"},"content":"    public String find(String[] tokens, DukeHistory history) throws DukeException {","lastModifiedDate":"2022-02-05"},{"lineNumber":289,"author":{"gitId":"lchokhoe"},"content":"        StringBuilder phrase \u003d new StringBuilder();","lastModifiedDate":"2022-01-29"},{"lineNumber":290,"author":{"gitId":"lchokhoe"},"content":"        for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":291,"author":{"gitId":"lchokhoe"},"content":"            phrase.append(tokens[i]);","lastModifiedDate":"2022-01-29"},{"lineNumber":292,"author":{"gitId":"lchokhoe"},"content":"            if (i !\u003d (tokens.length - 1)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":293,"author":{"gitId":"lchokhoe"},"content":"                phrase.append(\" \");","lastModifiedDate":"2022-01-29"},{"lineNumber":294,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":295,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":296,"author":{"gitId":"lchokhoe"},"content":"        String border \u003d \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":297,"author":{"gitId":"lchokhoe"},"content":"        return border","lastModifiedDate":"2022-02-05"},{"lineNumber":298,"author":{"gitId":"lchokhoe"},"content":"                + \"Here is what we found:\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":299,"author":{"gitId":"lchokhoe"},"content":"                + history.findPhrase(phrase.toString()) + border;","lastModifiedDate":"2022-02-05"},{"lineNumber":300,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":301,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lchokhoe":301}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":" * Represents Deadlines class that inherits from Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"    private final String time;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"    private final String date;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"     * Constructor used to instantiate a Deadlines class normally.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String representing the date of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String representing the time of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"    public Deadlines(String description, String date, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"     * An alternative constructor used to instantiate a Deadlines class when loading data from a pre-existing","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"     * duke.txt file at the start of a new Duke session.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"     * @param mark An integer indicating if the task was done or not.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String representing the date of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String representing the time of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"    public Deadlines(int mark, String description, String date, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"        super(description, mark);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"     * Returns the String representation of the Deadline class for user to read.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the Deadline class for the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"        return \"[D]\" + this.getTask() + \"(by: \" + this.date + \", \" + this.time + \")\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"     * Returns the String presentation of the Deadline class for writing into the duke.txt file.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the Deadline class for the duke.txt file.","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"    public String getFormattedText() {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"        return \"D\u003e\" + this.getMark() + \"\u003e\" + this.getDescription() + \"\u003e\" + this.date + \"\u003e\" + this.time;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lchokhoe":55}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"    private Circle displayInCircle;","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"        displayInCircle.setFill(new ImagePattern(img));","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"    private void flip() {","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"        db.flip();","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"        return db;","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"lchokhoe":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"import java.util.MissingFormatArgumentException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":" * Represents the Duke class that serves as the Main program for DukeLCH.","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"    private Commands cmd;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"    private DukeUi ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"    private DukeStorage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"    private DukeHistory history;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"    private String response;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"     * Constructor for Duke class that takes in a filePath to load data from the users local hard disk.","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"     * @param filePath A String representing a given filePath.","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"        cmd \u003d new Commands();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"        ui \u003d new DukeUi();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"        storage \u003d new DukeStorage();","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"        history \u003d new DukeHistory();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"        String[] arr \u003d filePath.split(\"\\\\\\\\\");","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"            storage.startup(arr[0], arr[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"            storage.restore(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"            ui.printLoadError();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"     * Method that starts the Duke Main Program.","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"     * @return DukeLCH\u0027s response.","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"    public String run(String input) {","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"        //ui.printGreeting();","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"        String[] tokens \u003d input.split(\"\\\\s\");","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"        String keyword \u003d tokens[0];","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"        switch (keyword) {","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"                if (tokens.length !\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"                    throw new DukeException(\"argument for bye detected\");","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.bye();","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"                storage.update(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printFoundArgumentError();","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printWriteError();","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"        case \"list\":","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"lchokhoe"},"content":"                if (tokens.length !\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"lchokhoe"},"content":"                    throw new DukeException(\"argument for list detected\");","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.list(history);","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":68,"author":{"gitId":"lchokhoe"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printFoundArgumentError();","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"lchokhoe"},"content":"        case \"mark\": {","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"lchokhoe"},"content":"                int index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.mark(index - 1, history);","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"lchokhoe"},"content":"                storage.update(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"lchokhoe"},"content":"            } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printInvalidArgumentError();","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"lchokhoe"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printWriteError();","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":85,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"lchokhoe"},"content":"        case \"unmark\": {","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"lchokhoe"},"content":"                int index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.unmark(index - 1, history);","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"lchokhoe"},"content":"                storage.update(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"lchokhoe"},"content":"            } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printInvalidArgumentError();","lastModifiedDate":"2022-02-05"},{"lineNumber":94,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":95,"author":{"gitId":"lchokhoe"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printWriteError();","lastModifiedDate":"2022-02-05"},{"lineNumber":97,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":99,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"lchokhoe"},"content":"        case \"todo\": {","lastModifiedDate":"2022-01-19"},{"lineNumber":101,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"lchokhoe"},"content":"                if (tokens.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"lchokhoe"},"content":"                    throw new MissingFormatArgumentException(\"no argument detected\");","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.todo(tokens, history);","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"lchokhoe"},"content":"                storage.update(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":108,"author":{"gitId":"lchokhoe"},"content":"            } catch (MissingFormatArgumentException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printMissingArgumentError(keyword);","lastModifiedDate":"2022-02-05"},{"lineNumber":110,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"lchokhoe"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printWriteError();","lastModifiedDate":"2022-02-05"},{"lineNumber":113,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":116,"author":{"gitId":"lchokhoe"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-01-19"},{"lineNumber":117,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"lchokhoe"},"content":"                if (tokens.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"lchokhoe"},"content":"                    throw new MissingFormatArgumentException(\"no argument detected\");","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.deadline(tokens, history);","lastModifiedDate":"2022-02-05"},{"lineNumber":122,"author":{"gitId":"lchokhoe"},"content":"                storage.update(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":123,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":124,"author":{"gitId":"lchokhoe"},"content":"            } catch (MissingFormatArgumentException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printMissingArgumentError(keyword);","lastModifiedDate":"2022-02-05"},{"lineNumber":126,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"lchokhoe"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printMissingDateTimeArgumentError(keyword);","lastModifiedDate":"2022-02-05"},{"lineNumber":129,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"lchokhoe"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printWriteError();","lastModifiedDate":"2022-02-05"},{"lineNumber":132,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"lchokhoe"},"content":"        case \"event\": {","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":137,"author":{"gitId":"lchokhoe"},"content":"                if (tokens.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"lchokhoe"},"content":"                    throw new MissingFormatArgumentException(\"no argument detected\");","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.event(tokens, history);","lastModifiedDate":"2022-02-05"},{"lineNumber":141,"author":{"gitId":"lchokhoe"},"content":"                storage.update(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"lchokhoe"},"content":"            } catch (MissingFormatArgumentException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printMissingArgumentError(keyword);","lastModifiedDate":"2022-02-05"},{"lineNumber":145,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"lchokhoe"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printMissingDateTimeArgumentError(keyword);","lastModifiedDate":"2022-02-05"},{"lineNumber":148,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"lchokhoe"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":150,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printWriteError();","lastModifiedDate":"2022-02-05"},{"lineNumber":151,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":153,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"lchokhoe"},"content":"        case \"delete\": {","lastModifiedDate":"2022-01-20"},{"lineNumber":155,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"lchokhoe"},"content":"                int index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.delete(index - 1, history);","lastModifiedDate":"2022-02-05"},{"lineNumber":158,"author":{"gitId":"lchokhoe"},"content":"                storage.update(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"lchokhoe"},"content":"            } catch (NumberFormatException | NullPointerException | IndexOutOfBoundsException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printInvalidArgumentError();","lastModifiedDate":"2022-02-05"},{"lineNumber":162,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"lchokhoe"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printWriteError();","lastModifiedDate":"2022-02-05"},{"lineNumber":165,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":166,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":168,"author":{"gitId":"lchokhoe"},"content":"        case \"update\": {","lastModifiedDate":"2022-01-26"},{"lineNumber":169,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":170,"author":{"gitId":"lchokhoe"},"content":"                storage.update(history);","lastModifiedDate":"2022-01-28"},{"lineNumber":171,"author":{"gitId":"lchokhoe"},"content":"                response \u003d \"\";","lastModifiedDate":"2022-02-05"},{"lineNumber":172,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"lchokhoe"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printWriteError();","lastModifiedDate":"2022-02-05"},{"lineNumber":175,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":176,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":177,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":178,"author":{"gitId":"lchokhoe"},"content":"        case \"find\": {","lastModifiedDate":"2022-01-29"},{"lineNumber":179,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-29"},{"lineNumber":180,"author":{"gitId":"lchokhoe"},"content":"                if (tokens.length \u003c\u003d 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":181,"author":{"gitId":"lchokhoe"},"content":"                    throw new MissingFormatArgumentException(\"no argument detected\");","lastModifiedDate":"2022-01-29"},{"lineNumber":182,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":183,"author":{"gitId":"lchokhoe"},"content":"                response \u003d cmd.find(tokens, history);","lastModifiedDate":"2022-02-05"},{"lineNumber":184,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":185,"author":{"gitId":"lchokhoe"},"content":"            } catch (MissingFormatArgumentException ex) {","lastModifiedDate":"2022-01-29"},{"lineNumber":186,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printMissingArgumentError(keyword);","lastModifiedDate":"2022-02-05"},{"lineNumber":187,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":188,"author":{"gitId":"lchokhoe"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":189,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printFoundNothing();","lastModifiedDate":"2022-02-05"},{"lineNumber":190,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":191,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"lchokhoe"},"content":"        default:","lastModifiedDate":"2022-01-19"},{"lineNumber":194,"author":{"gitId":"lchokhoe"},"content":"            try {","lastModifiedDate":"2022-01-20"},{"lineNumber":195,"author":{"gitId":"lchokhoe"},"content":"                throw new MissingFormatArgumentException(\"invalid keywords\");","lastModifiedDate":"2022-01-20"},{"lineNumber":196,"author":{"gitId":"lchokhoe"},"content":"            } catch (MissingFormatArgumentException ex) {","lastModifiedDate":"2022-01-20"},{"lineNumber":197,"author":{"gitId":"lchokhoe"},"content":"                response \u003d ui.printListOfCommands();","lastModifiedDate":"2022-02-05"},{"lineNumber":198,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":199,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":200,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":201,"author":{"gitId":"lchokhoe"},"content":"        return getResponse();","lastModifiedDate":"2022-02-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":204,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":205,"author":{"gitId":"lchokhoe"},"content":"     * Method that gets DukeLCH\u0027s response to the user\u0027s input.","lastModifiedDate":"2022-02-05"},{"lineNumber":206,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":207,"author":{"gitId":"lchokhoe"},"content":"     * @return DukeLCH\u0027s response.","lastModifiedDate":"2022-02-05"},{"lineNumber":208,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":209,"author":{"gitId":"lchokhoe"},"content":"    public String getResponse() {","lastModifiedDate":"2022-02-05"},{"lineNumber":210,"author":{"gitId":"lchokhoe"},"content":"        return response;","lastModifiedDate":"2022-02-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":212,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"-":3,"lchokhoe":209}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":" * Represents a custom exception that can be caught by Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lchokhoe":10}},{"path":"src/main/java/duke/DukeHistory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":" * Represents a class that maintains an ArrayList records using a variety of methods, that is created","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":" * at the beginning of each session of Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"public class DukeHistory {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"    private final ArrayList\u003cTask\u003e records \u003d new ArrayList\u003c\u003e(100); // ArrayList of size 100 by default","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"    public DukeHistory() { //Empty Constructor","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, attempts to initialize a ToDos task using the inputted description and adds it to the","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"     * ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String description interpreted by Commands.todo().","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"     * @return Todo_task response.","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"    public String addToDo(String description) {","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"        ToDos tempToDo \u003d new ToDos(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"        records.add(tempToDo);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"        String msg \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"                + \"Understood, adding this task now:\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"                + \"    \" + tempToDo.getToDo()","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"                + \"Currently you have \" + records.size() + \" tasks in our records.\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"        return msg;","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"     * A method that is called only when Duke attempts to load data from a pre-existing duke.txt file in the user\u0027s","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"     * hard drive.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"     * It initializes a ToDos task using the mark and description found and adds it to","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"     * the current instance of ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"     * @param mark An integer indicating whether the task is done or not.","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"    public void addToDo(int mark, String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"        ToDos tempToDo \u003d new ToDos(mark, description);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"        records.add(tempToDo);","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, attempts to initialize a Deadline task using","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"     * the inputted description, date and time and adds it to the ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"     *  @param description A String description interpreted by Commands.deadline().","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String date interpreted by Commands.convertToDukeDate().","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String time interpreted by Commands.convertToDukeTime().","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"     * @return Deadline_task response.","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"    public String addDeadline(String description, String date, String time) {","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"        Deadlines tempDeadline \u003d new Deadlines(description, date, time);","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"        records.add(tempDeadline);","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"        String msg \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"                + \"Understood, adding this task now:\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"                + \"    \" + tempDeadline.getDeadline()","lastModifiedDate":"2022-01-19"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"                + \"Currently you have \" + records.size() + \" tasks in our records.\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"lchokhoe"},"content":"        return msg;","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":66,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":67,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"lchokhoe"},"content":"     * A method that is called only when Duke attempts to load data from a pre-existing duke.txt file in the user\u0027s","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"lchokhoe"},"content":"     * hard drive.","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"lchokhoe"},"content":"     * It initializes a Deadline task using the mark, description, date and time found and","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"lchokhoe"},"content":"     * adds it to the current instance of ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"lchokhoe"},"content":"     * @param mark An integer indicating whether the task is done or not","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String representing the date of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String representing the time of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"lchokhoe"},"content":"    public void addDeadline(int mark, String description, String date, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"lchokhoe"},"content":"        Deadlines tempDeadline \u003d new Deadlines(mark, description, date, time);","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"lchokhoe"},"content":"        records.add(tempDeadline);","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, attempts to initialize an Event task using","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"lchokhoe"},"content":"     * the inputted description, date and time and adds it to the ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"lchokhoe"},"content":"     *  @param description A String description interpreted by Commands.event().","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String date interpreted by Commands.convertToDukeDate().","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String time interpreted by Commands.convertToDukeTime().","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"lchokhoe"},"content":"     * @return Event_task response.","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"lchokhoe"},"content":"    public String addEvent(String description, String date, String time) {","lastModifiedDate":"2022-02-05"},{"lineNumber":93,"author":{"gitId":"lchokhoe"},"content":"        Event tempEvent \u003d new Event(description, date, time);","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"lchokhoe"},"content":"        records.add(tempEvent);","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"lchokhoe"},"content":"        String msg \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":96,"author":{"gitId":"lchokhoe"},"content":"                + \"Understood, adding this task now:\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":97,"author":{"gitId":"lchokhoe"},"content":"                + \"    \" + tempEvent.getEvent()","lastModifiedDate":"2022-01-19"},{"lineNumber":98,"author":{"gitId":"lchokhoe"},"content":"                + \"Currently you have \" + records.size() + \" tasks in our records.\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":100,"author":{"gitId":"lchokhoe"},"content":"        return msg;","lastModifiedDate":"2022-02-05"},{"lineNumber":101,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":102,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":103,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"lchokhoe"},"content":"     * A method that is called only when Duke attempts to load data from a pre-existing duke.txt file in the user\u0027s","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"lchokhoe"},"content":"     * hard drive.","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"lchokhoe"},"content":"     * It initializes an Event task using the mark, description, date and time found","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"lchokhoe"},"content":"     * and adds it to the current instance of ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":109,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"lchokhoe"},"content":"     * @param mark An integer indicating whether the task is done or not.","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String representing the date of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String representing the time of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"lchokhoe"},"content":"    public void addEvent(int mark, String description, String date, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"lchokhoe"},"content":"        Event tempEvent \u003d new Event(mark, description, date, time);","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"lchokhoe"},"content":"        records.add(tempEvent);","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, builds a String containing all the tasks stored","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"lchokhoe"},"content":"     * in the current instance of ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":123,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"lchokhoe"},"content":"     * @return A String containing all the tasks stored in the current instance of ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":125,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"lchokhoe"},"content":"    public String printAll() {","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"lchokhoe"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-01-19"},{"lineNumber":128,"author":{"gitId":"lchokhoe"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-01-19"},{"lineNumber":129,"author":{"gitId":"lchokhoe"},"content":"        for (Task nextTask : records) {","lastModifiedDate":"2022-01-28"},{"lineNumber":130,"author":{"gitId":"lchokhoe"},"content":"            if (nextTask instanceof ToDos) {","lastModifiedDate":"2022-01-19"},{"lineNumber":131,"author":{"gitId":"lchokhoe"},"content":"                ToDos temp \u003d (ToDos) nextTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":132,"author":{"gitId":"lchokhoe"},"content":"                result.append(count).append(\".\").append(temp.getToDo());","lastModifiedDate":"2022-01-19"},{"lineNumber":133,"author":{"gitId":"lchokhoe"},"content":"            } else if (nextTask instanceof Deadlines) {","lastModifiedDate":"2022-01-19"},{"lineNumber":134,"author":{"gitId":"lchokhoe"},"content":"                Deadlines temp \u003d (Deadlines) nextTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":135,"author":{"gitId":"lchokhoe"},"content":"                result.append(count).append(\".\").append(temp.getDeadline());","lastModifiedDate":"2022-01-19"},{"lineNumber":136,"author":{"gitId":"lchokhoe"},"content":"            } else if (nextTask instanceof Event) {","lastModifiedDate":"2022-01-19"},{"lineNumber":137,"author":{"gitId":"lchokhoe"},"content":"                Event temp \u003d (Event) nextTask;","lastModifiedDate":"2022-01-19"},{"lineNumber":138,"author":{"gitId":"lchokhoe"},"content":"                result.append(count).append(\".\").append(temp.getEvent());","lastModifiedDate":"2022-01-19"},{"lineNumber":139,"author":{"gitId":"lchokhoe"},"content":"            } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":140,"author":{"gitId":"lchokhoe"},"content":"                System.out.println(\"Error occurred while processing \" + nextTask.getTask());","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":142,"author":{"gitId":"lchokhoe"},"content":"            count++;","lastModifiedDate":"2022-01-19"},{"lineNumber":143,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":144,"author":{"gitId":"lchokhoe"},"content":"        if (result.length() \u003d\u003d 0) {","lastModifiedDate":"2022-01-19"},{"lineNumber":145,"author":{"gitId":"lchokhoe"},"content":"            return \"There has been no recorded user input!\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":146,"author":{"gitId":"lchokhoe"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":147,"author":{"gitId":"lchokhoe"},"content":"            return result.toString();","lastModifiedDate":"2022-01-19"},{"lineNumber":148,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":149,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":150,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":151,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"lchokhoe"},"content":"     * Returns the task corresponding to the inputted entry index.","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":154,"author":{"gitId":"lchokhoe"},"content":"     * @param index An integer indicating the desired entry to return.","lastModifiedDate":"2022-01-29"},{"lineNumber":155,"author":{"gitId":"lchokhoe"},"content":"     * @return A Task stored in the current instance of ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":156,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":157,"author":{"gitId":"lchokhoe"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"lchokhoe"},"content":"        return records.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":159,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":160,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":162,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, deletes the corresponding entry index in ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":163,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":164,"author":{"gitId":"lchokhoe"},"content":"     * @param index An integer indicating the desired entry to delete.","lastModifiedDate":"2022-01-29"},{"lineNumber":165,"author":{"gitId":"lchokhoe"},"content":"     * @return Delete response.","lastModifiedDate":"2022-02-05"},{"lineNumber":166,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":167,"author":{"gitId":"lchokhoe"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2022-02-05"},{"lineNumber":168,"author":{"gitId":"lchokhoe"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":169,"author":{"gitId":"lchokhoe"},"content":"        Task temp \u003d records.remove(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":170,"author":{"gitId":"lchokhoe"},"content":"        if (temp instanceof ToDos) {","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"lchokhoe"},"content":"            ToDos tempToDos \u003d (ToDos) temp;","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"lchokhoe"},"content":"            description.append(tempToDos.getToDo());","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"lchokhoe"},"content":"        } else if (temp instanceof Deadlines) {","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"lchokhoe"},"content":"            Deadlines tempDeadlines \u003d (Deadlines) temp;","lastModifiedDate":"2022-01-20"},{"lineNumber":175,"author":{"gitId":"lchokhoe"},"content":"            description.append(tempDeadlines.getDeadline());","lastModifiedDate":"2022-01-20"},{"lineNumber":176,"author":{"gitId":"lchokhoe"},"content":"        } else if (temp instanceof Event) {","lastModifiedDate":"2022-01-20"},{"lineNumber":177,"author":{"gitId":"lchokhoe"},"content":"            Event tempEvent \u003d (Event) temp;","lastModifiedDate":"2022-01-20"},{"lineNumber":178,"author":{"gitId":"lchokhoe"},"content":"            description.append(tempEvent.getEvent());","lastModifiedDate":"2022-01-20"},{"lineNumber":179,"author":{"gitId":"lchokhoe"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":180,"author":{"gitId":"lchokhoe"},"content":"            System.out.println(\"Error occurred while deleting \" + temp.getTask());","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":182,"author":{"gitId":"lchokhoe"},"content":"        String msg \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"lchokhoe"},"content":"                + \"Understood, removing this task now:\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":184,"author":{"gitId":"lchokhoe"},"content":"                + \"    \" + description","lastModifiedDate":"2022-01-20"},{"lineNumber":185,"author":{"gitId":"lchokhoe"},"content":"                + \"Now you have \" + records.size() + \" tasks in our records.\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":186,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":187,"author":{"gitId":"lchokhoe"},"content":"        return msg;","lastModifiedDate":"2022-02-05"},{"lineNumber":188,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":189,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":191,"author":{"gitId":"lchokhoe"},"content":"     * A method called when an update request is made for Duke to","lastModifiedDate":"2022-01-29"},{"lineNumber":192,"author":{"gitId":"lchokhoe"},"content":"     * update the local duke.txt file with the latest records.","lastModifiedDate":"2022-01-29"},{"lineNumber":193,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":194,"author":{"gitId":"lchokhoe"},"content":"     * It will construct a String containing all the tasks in records, appropriately formatted by the getFormattedText()","lastModifiedDate":"2022-01-29"},{"lineNumber":195,"author":{"gitId":"lchokhoe"},"content":"     * methods of their respective class.","lastModifiedDate":"2022-01-29"},{"lineNumber":196,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":197,"author":{"gitId":"lchokhoe"},"content":"     * @return A String containing all the properly formatted tasks found in ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":198,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":199,"author":{"gitId":"lchokhoe"},"content":"    String formatRecords() {","lastModifiedDate":"2022-01-29"},{"lineNumber":200,"author":{"gitId":"lchokhoe"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"lchokhoe"},"content":"        for (Task temp : records) {","lastModifiedDate":"2022-01-28"},{"lineNumber":202,"author":{"gitId":"lchokhoe"},"content":"            if (temp instanceof ToDos) {","lastModifiedDate":"2022-01-26"},{"lineNumber":203,"author":{"gitId":"lchokhoe"},"content":"                ToDos tempToDos \u003d (ToDos) temp;","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"lchokhoe"},"content":"                s.append(tempToDos.getFormattedText()).append(\"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"lchokhoe"},"content":"            } else if (temp instanceof Deadlines) {","lastModifiedDate":"2022-01-26"},{"lineNumber":206,"author":{"gitId":"lchokhoe"},"content":"                Deadlines tempDeadlines \u003d (Deadlines) temp;","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"lchokhoe"},"content":"                s.append(tempDeadlines.getFormattedText()).append(\"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"lchokhoe"},"content":"            } else if (temp instanceof Event) {","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"lchokhoe"},"content":"                Event tempEvent \u003d (Event) temp;","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"lchokhoe"},"content":"                s.append(tempEvent.getFormattedText()).append(\"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"lchokhoe"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":212,"author":{"gitId":"lchokhoe"},"content":"                System.out.println(\"Error occurred while deleting \" + temp.getTask());","lastModifiedDate":"2022-01-26"},{"lineNumber":213,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":214,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":215,"author":{"gitId":"lchokhoe"},"content":"        return s.toString();","lastModifiedDate":"2022-01-28"},{"lineNumber":216,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":217,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":218,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":219,"author":{"gitId":"lchokhoe"},"content":"     * Returns the size of the current instance of ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":220,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":221,"author":{"gitId":"lchokhoe"},"content":"     * @return An integer representing the size of ArrayList records.","lastModifiedDate":"2022-02-05"},{"lineNumber":222,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":223,"author":{"gitId":"lchokhoe"},"content":"    public int getSize() {","lastModifiedDate":"2022-01-29"},{"lineNumber":224,"author":{"gitId":"lchokhoe"},"content":"        return records.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":225,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":226,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":227,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":228,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, looks through all the tasks in the current instance of ArrayList records","lastModifiedDate":"2022-02-05"},{"lineNumber":229,"author":{"gitId":"lchokhoe"},"content":"     * and find all the tasks whose description contains the inputted phrase.","lastModifiedDate":"2022-01-29"},{"lineNumber":230,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":231,"author":{"gitId":"lchokhoe"},"content":"     * It then returns a constructed String containing a list of all the identified tasks.","lastModifiedDate":"2022-01-29"},{"lineNumber":232,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":233,"author":{"gitId":"lchokhoe"},"content":"     * @param phrase A String representing the inputted phrase.","lastModifiedDate":"2022-01-29"},{"lineNumber":234,"author":{"gitId":"lchokhoe"},"content":"     * @return A String that contains a list of all tasks with the inputted phrase in their description.","lastModifiedDate":"2022-01-29"},{"lineNumber":235,"author":{"gitId":"lchokhoe"},"content":"     * @throws DukeException If no tasks is found matching the inputted phrase.","lastModifiedDate":"2022-01-29"},{"lineNumber":236,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":237,"author":{"gitId":"lchokhoe"},"content":"    public String findPhrase(String phrase) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":238,"author":{"gitId":"lchokhoe"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":239,"author":{"gitId":"lchokhoe"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-01-29"},{"lineNumber":240,"author":{"gitId":"lchokhoe"},"content":"        for (Task nextTask : records) {","lastModifiedDate":"2022-01-29"},{"lineNumber":241,"author":{"gitId":"lchokhoe"},"content":"            if (nextTask instanceof ToDos) {","lastModifiedDate":"2022-01-29"},{"lineNumber":242,"author":{"gitId":"lchokhoe"},"content":"                ToDos temp \u003d (ToDos) nextTask;","lastModifiedDate":"2022-01-29"},{"lineNumber":243,"author":{"gitId":"lchokhoe"},"content":"                if (temp.getDescription().contains(phrase)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":244,"author":{"gitId":"lchokhoe"},"content":"                    s.append(count).append(\".\").append(temp.getToDo());","lastModifiedDate":"2022-01-29"},{"lineNumber":245,"author":{"gitId":"lchokhoe"},"content":"                    count++;","lastModifiedDate":"2022-01-29"},{"lineNumber":246,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":247,"author":{"gitId":"lchokhoe"},"content":"            } else if (nextTask instanceof Deadlines) {","lastModifiedDate":"2022-01-29"},{"lineNumber":248,"author":{"gitId":"lchokhoe"},"content":"                Deadlines temp \u003d (Deadlines) nextTask;","lastModifiedDate":"2022-01-29"},{"lineNumber":249,"author":{"gitId":"lchokhoe"},"content":"                if (temp.getDescription().contains(phrase)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":250,"author":{"gitId":"lchokhoe"},"content":"                    s.append(count).append(\".\").append(temp.getDeadline());","lastModifiedDate":"2022-01-29"},{"lineNumber":251,"author":{"gitId":"lchokhoe"},"content":"                    count++;","lastModifiedDate":"2022-01-29"},{"lineNumber":252,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":253,"author":{"gitId":"lchokhoe"},"content":"            } else if (nextTask instanceof Event) {","lastModifiedDate":"2022-01-29"},{"lineNumber":254,"author":{"gitId":"lchokhoe"},"content":"                Event temp \u003d (Event) nextTask;","lastModifiedDate":"2022-01-29"},{"lineNumber":255,"author":{"gitId":"lchokhoe"},"content":"                if (temp.getDescription().contains(phrase)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":256,"author":{"gitId":"lchokhoe"},"content":"                    s.append(count).append(\".\").append(temp.getEvent());","lastModifiedDate":"2022-01-29"},{"lineNumber":257,"author":{"gitId":"lchokhoe"},"content":"                    count++;","lastModifiedDate":"2022-01-29"},{"lineNumber":258,"author":{"gitId":"lchokhoe"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":259,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":260,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":261,"author":{"gitId":"lchokhoe"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":262,"author":{"gitId":"lchokhoe"},"content":"            throw new DukeException(\"could not find anything matching the phrase\");","lastModifiedDate":"2022-01-29"},{"lineNumber":263,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":264,"author":{"gitId":"lchokhoe"},"content":"        return s.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":265,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":266,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lchokhoe":266}},{"path":"src/main/java/duke/DukeStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":" * Represents a class that handles the detection, creation, restoration and updating of local duke.txt files","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"public class DukeStorage {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"    private File filePath;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"    public DukeStorage() {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"     * Takes a given directory and fileName and detects the existence of the file in the given directory.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"     * If it does not exist, creates the directory and file on the user\u0027s behalf.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"     * Updates the filePath field in this class using the inputs provided.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"     * @param directory The desired directory.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"     * @param fileName The name of the text file.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"     * @throws IOException If there is an error in creating the filePath due to incorrect directory or fileName input.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"    public void startup(String directory, String fileName) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"        Path path \u003d Paths.get(home, \"Duke\");","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"        String filePath \u003d String.valueOf(path);","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"        // Check if parent and child directory exists else create them","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"        File f1 \u003d new File(filePath + \"\\\\\" + directory);","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"        f1.mkdirs();","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"        // Check if duke.txt exits else create it","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"        File f2 \u003d new File(filePath + \"\\\\\" + directory + \"\\\\\" + fileName);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"        f2.createNewFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"        this.filePath \u003d f2;","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"     * Attempts to load the data of a local duke.txt file into the given history.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"     * @param history The DukeHistory instance that is being used in the current running instance of Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"     * @throws FileNotFoundException If there is an error in detecting the file at the stored filePath","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"     *                               within this class.","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"    public void restore(DukeHistory history) throws FileNotFoundException {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"        Scanner s \u003d new Scanner(this.filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"            String temp \u003d s.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"            String[] arr \u003d temp.split(\"\u003e\");","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"            int mark \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"            switch (arr[0]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"            case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"                history.addToDo(mark, arr[2]);","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"lchokhoe"},"content":"            case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"lchokhoe"},"content":"                history.addDeadline(mark, arr[2], arr[3], arr[4]);","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"lchokhoe"},"content":"            case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"lchokhoe"},"content":"                history.addEvent(mark, arr[2], arr[3], arr[4]);","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"lchokhoe"},"content":"            default:","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"lchokhoe"},"content":"                System.out.println(\"load unsuccessful\");","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"lchokhoe"},"content":"                break;","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"lchokhoe"},"content":"     * Updates the data of a local duke.txt file with the latest changes made to it found in the provided history.","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"lchokhoe"},"content":"     * @param history The DukeHistory instance that is being used in the current running instance of Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"lchokhoe"},"content":"     * @throws IOException If there is an error in detecting the file at the stored filePath within this class.","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"lchokhoe"},"content":"    void update(DukeHistory history) throws IOException {","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"lchokhoe"},"content":"        String content \u003d history.formatRecords();","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"lchokhoe"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"lchokhoe"},"content":"        fw.append(content);","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"lchokhoe"},"content":"        fw.flush();","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"lchokhoe"},"content":"        fw.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"lchokhoe"},"content":"     * Returns the stored filePath in this class.","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"lchokhoe"},"content":"     * @return The stored filePath in this class.","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"lchokhoe"},"content":"    String getFilePath() {","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"lchokhoe"},"content":"        return this.filePath.getPath();","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"lchokhoe":100}},{"path":"src/main/java/duke/DukeUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":" * Represents a class that handles the responses that Duke gives in response to certain commands.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"public class DukeUi {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"    public DukeUi() {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints a load error message.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"    public void printLoadError() {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"        String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"                + \"* Load to duke.txt failed *\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"                + \"Please try again!\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"                + \"If the problem persists, please contact the administrator!\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints a write error message.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"     * @return Error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"    public String printWriteError() {","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"        String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"                + \"* Write to duke.txt failed *\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"                + \"Please try again!\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"                + \"If the problem persists, please contact the administrator!\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"        return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints Duke\u0027s default greeting.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"    public void printGreeting() {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"        String logo \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"                + \" ____        _         _    ____ _   _ \\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"                + \"|  _ \\\\ _   _| | _____ | | /  ___| | | |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"                + \"| | | | | | | |/ / _ \\\\| | | |   | |_| |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"                + \"| |_| | |_| |   \u003c  __/| |_| |___|  _  |\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___||___|\\\\____|_| |_|\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"                + \"Hello! I\u0027m DukeLCH\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"                + \"How can I be of service?\\n\" //Simple Greet","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints an error message when arguments are passed to command that do not require them.","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"     * @return Error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"    public String printFoundArgumentError() {","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"        String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"                + \"* Arguments detected *\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"                + \"This command does not require any arguments.\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"                + \"Are you sure this command is what you mean? If so, please try again!\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"        return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints an error message when arguments passed to a command is invalid.","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"lchokhoe"},"content":"     * @return Error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"lchokhoe"},"content":"    public String printInvalidArgumentError() {","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"lchokhoe"},"content":"        String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"lchokhoe"},"content":"                + \"* Invalid entry detected *\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"lchokhoe"},"content":"                + \"Please provide a valid entry!\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"lchokhoe"},"content":"        return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints an error message when there is no argument detected for a command that requires arguments.","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"lchokhoe"},"content":"     * @param keyword A String representing the specific command used.","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"lchokhoe"},"content":"     * @return Error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"lchokhoe"},"content":"    public String printMissingArgumentError(String keyword) {","lastModifiedDate":"2022-02-05"},{"lineNumber":83,"author":{"gitId":"lchokhoe"},"content":"        String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"lchokhoe"},"content":"                + \"* No arguments detected *\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"lchokhoe"},"content":"                + \"Please provide a description for your \" + keyword + \"!\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"lchokhoe"},"content":"        return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints an error message when there is no DateTime argument detected or","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"lchokhoe"},"content":"     * key phrases used to detect DateTime is inputted by the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"lchokhoe"},"content":"     * @param keyword A String representing the specific command used.","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"lchokhoe"},"content":"     * @return Error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":96,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"lchokhoe"},"content":"    public String printMissingDateTimeArgumentError(String keyword) {","lastModifiedDate":"2022-02-05"},{"lineNumber":98,"author":{"gitId":"lchokhoe"},"content":"        switch (keyword) {","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"lchokhoe"},"content":"        case \"deadline\": {","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"lchokhoe"},"content":"            String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":101,"author":{"gitId":"lchokhoe"},"content":"                    + \"* Time frame not detected *\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":102,"author":{"gitId":"lchokhoe"},"content":"                    + \"Please provide a time frame for your \" + keyword + \"!\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":103,"author":{"gitId":"lchokhoe"},"content":"                    + \"Check if you have typed \u0027/by\u0027 to indicate the time frame!\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":104,"author":{"gitId":"lchokhoe"},"content":"                    + \"e.g. deadline return book /by Sunday 7pm\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"lchokhoe"},"content":"                    + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":106,"author":{"gitId":"lchokhoe"},"content":"            return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":107,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":108,"author":{"gitId":"lchokhoe"},"content":"        case \"event\": {","lastModifiedDate":"2022-02-05"},{"lineNumber":109,"author":{"gitId":"lchokhoe"},"content":"            String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":110,"author":{"gitId":"lchokhoe"},"content":"                    + \"* Time frame not detected *\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":111,"author":{"gitId":"lchokhoe"},"content":"                    + \"Please provide a time frame for your \" + keyword + \"!\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":112,"author":{"gitId":"lchokhoe"},"content":"                    + \"Check if you have typed \u0027/at\u0027 to indicate the time frame!\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":113,"author":{"gitId":"lchokhoe"},"content":"                    + \"e.g. event project meeting /at 20/2/2022 1000H-1200H\\n\"","lastModifiedDate":"2022-02-05"},{"lineNumber":114,"author":{"gitId":"lchokhoe"},"content":"                    + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-02-05"},{"lineNumber":115,"author":{"gitId":"lchokhoe"},"content":"            return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":116,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"lchokhoe"},"content":"        default:","lastModifiedDate":"2022-02-05"},{"lineNumber":118,"author":{"gitId":"lchokhoe"},"content":"            String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"lchokhoe"},"content":"                    + \"* Time frame not detected *\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"lchokhoe"},"content":"                    + \"Please provide a time frame for your \" + keyword + \"!\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"lchokhoe"},"content":"                    + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"lchokhoe"},"content":"            return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":123,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":124,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":125,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints a list of recognized commands if the user inputs an unrecognized command.","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"lchokhoe"},"content":"     * @return Error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":129,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"lchokhoe"},"content":"    public String printListOfCommands() {","lastModifiedDate":"2022-02-05"},{"lineNumber":131,"author":{"gitId":"lchokhoe"},"content":"        String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"lchokhoe"},"content":"                + \"* Unrecognised keyword used *\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"lchokhoe"},"content":"                + \"Please try the keywords provided below:\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":134,"author":{"gitId":"lchokhoe"},"content":"                + \"    1. list\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":135,"author":{"gitId":"lchokhoe"},"content":"                + \"    2. todo [description]\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":136,"author":{"gitId":"lchokhoe"},"content":"                + \"    3. deadline [description] /by [date] [time]\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"lchokhoe"},"content":"                + \"    4. event [description] /at [date] [time]\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":138,"author":{"gitId":"lchokhoe"},"content":"                + \"    5. mark [#entry]\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":139,"author":{"gitId":"lchokhoe"},"content":"                + \"    6. unmark [#entry]\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":140,"author":{"gitId":"lchokhoe"},"content":"                + \"    7. delete [#entry]\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":141,"author":{"gitId":"lchokhoe"},"content":"                + \"    8. update\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":142,"author":{"gitId":"lchokhoe"},"content":"                + \"    9. bye\\n\"","lastModifiedDate":"2022-01-28"},{"lineNumber":143,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-28"},{"lineNumber":144,"author":{"gitId":"lchokhoe"},"content":"        return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":145,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":146,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":147,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":148,"author":{"gitId":"lchokhoe"},"content":"     * A method that prints a response if Duke cannot find any tasks matching a users inputted phrase.","lastModifiedDate":"2022-01-29"},{"lineNumber":149,"author":{"gitId":"lchokhoe"},"content":"     * @return Error message.","lastModifiedDate":"2022-02-05"},{"lineNumber":150,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"lchokhoe"},"content":"    public String printFoundNothing() {","lastModifiedDate":"2022-02-05"},{"lineNumber":152,"author":{"gitId":"lchokhoe"},"content":"        String err \u003d \"_______________________________________________________\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"lchokhoe"},"content":"                + \"It appears we could not find anything matching the phrase.\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":154,"author":{"gitId":"lchokhoe"},"content":"                + \"Please try adding the task to Duke!\\n\"","lastModifiedDate":"2022-01-29"},{"lineNumber":155,"author":{"gitId":"lchokhoe"},"content":"                + \"_______________________________________________________\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":156,"author":{"gitId":"lchokhoe"},"content":"        return err;","lastModifiedDate":"2022-02-05"},{"lineNumber":157,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":158,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"lchokhoe":158}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":" * Represents the Event class that inherits from Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"    private final String date;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"    private final String time;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"     * Constructor used to instantiate an Event class normally.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String representing the date of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String representing the time of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"    public Event(String description, String date, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"     * An alternative constructor used to instantiate an Event class when loading data from a pre-existing\\","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"     * duke.txt file at the start of a new Duke session.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"     * @param mark An integer indicating if the task was done or not.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"     * @param date A String representing the date of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"     * @param time A String representing the time of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"    public Event(int mark, String description, String date, String time) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"        super(description, mark);","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"     * Returns the String representation of the Event class for user to read.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the Event class for the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"    public String getEvent() {","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"        return \"[E]\" + this.getTask() + \"(at: \" + this.date + \", \" + this.time + \")\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"     * Returns the String presentation of the Event class for writing into the duke.txt file.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the Event class for the duke.txt file.","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"    public String getFormattedText() {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"        return \"E\u003e\" + this.getMark() + \"\u003e\" + this.getDescription() + \"\u003e\" + this.date + \"\u003e\" + this.time;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lchokhoe":55}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"public class Launcher {","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"lchokhoe":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"    private Duke duke \u003d new Duke(\"data\\\\duke.txt\");","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"            stage.show();","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"lchokhoe":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"        String response \u003d duke.run(input);","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"        );","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"lchokhoe":51}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":" * Represents the Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"public class Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"    private final String description;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"     * Constructor used to instantiate a Task class normally.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"     * An alternative constructor used to instantiate a Task class when loading from a pre-existing duke.txt file","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"     * at the start of a new duke session.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"     * @param mark An integer indicating if the task was done or not.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"    public Task(String description, int mark) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"        this.isDone \u003d mark \u003d\u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"     * Returns the String representation of the Task class for users to read.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the Task class for the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"    public String getTask() {","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"            return \"[ ] \" + this.description;","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"     * Returns the description of the Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the description of the Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"        return this.description;","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"     * Returns the String representation of the mark status of the Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the mark status of the Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"    public String getMark() {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"            return \"1\";","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"lchokhoe"},"content":"            return \"0\";","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, updates the mark status of the Task class to be true.","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"lchokhoe"},"content":"    public void isMarked() {","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"lchokhoe"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-19"},{"lineNumber":72,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":73,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":74,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"lchokhoe"},"content":"     * A method that, when called, updates the mark status of the Task class to be false.","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"lchokhoe"},"content":"    public void isUnmarked() {","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"lchokhoe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":80,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":81,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"lchokhoe"},"content":"     * Overrides the default toString() method of the Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the description of the Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"lchokhoe"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":87,"author":{"gitId":"lchokhoe"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":88,"author":{"gitId":"lchokhoe"},"content":"        return description;","lastModifiedDate":"2022-01-19"},{"lineNumber":89,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lchokhoe":90}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":" * Represents the ToDos class that inherits from Task class.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"     * Constructor used to instantiate a ToDos class normally.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"    public ToDos(String description) {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"        super(description);","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"     * An alternative constructor used to instantiate a ToDos class when loading from a pre-existing duke.txt file","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"     * at the start of a new duke session.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"     * @param mark An integer indicating if the task was done or not.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"     * @param description A String representing the description of the task.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"    public ToDos(int mark, String description) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"        super(description, mark);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"     * Returns the String representation of the ToDos class for user to read.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the ToDos class for the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"    public String getToDo() {","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"        return \"[T]\" + this.getTask() + \"\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"     * Returns the String presentation of the ToDos class for writing into the duke.txt file.","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"     * @return A String representing the ToDos class for the duke.txt file.","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"    public String getFormattedText() {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"        return \"T\u003e\" + this.getMark() + \"\u003e\" + this.getDescription();","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lchokhoe":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"      \u003cCircle fx:id\u003d\"displayInCircle\" fill\u003d\"DODGERBLUE\" pickOnBounds\u003d\"true\" radius\u003d\"48.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"lchokhoe":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"900.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"48.0\" prefWidth\u003d\"485.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"486.0\" layoutY\u003d\"851.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"48.0\" prefWidth\u003d\"114.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-1.0\" prefHeight\u003d\"852.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"852.0\" prefWidth\u003d\"600.0\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"         \u003c/content\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"lchokhoe":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"import java.io.File;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"lchokhoe"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"lchokhoe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"lchokhoe"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"lchokhoe"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"lchokhoe"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"lchokhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"lchokhoe"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"lchokhoe"},"content":" * Represents a class meant for Unit Testing Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"lchokhoe"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"lchokhoe"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"lchokhoe"},"content":"    private static DukeStorage dummyStorage \u003d new DukeStorage();","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"lchokhoe"},"content":"    private DukeHistory dummyHistory \u003d new DukeHistory();","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"lchokhoe"},"content":"    private Commands dummyCmd \u003d new Commands();","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"lchokhoe"},"content":"    @BeforeAll","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"lchokhoe"},"content":"    public static void setUp() {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"lchokhoe"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"lchokhoe"},"content":"            dummyStorage.startup(\"test\", \"dummyDuke.txt\");","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"lchokhoe"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"lchokhoe"},"content":"            fail(\"startup failed, dummyDuke.txt was not created\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"lchokhoe"},"content":"        } catch (NullPointerException e2) {","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"lchokhoe"},"content":"            fail(\"filePath was not stored in dummyStorage\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"lchokhoe"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"lchokhoe"},"content":"    public void startup_createNewFile_exists() {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"lchokhoe"},"content":"        File dummyFile \u003d new File(dummyStorage.getFilePath());","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"lchokhoe"},"content":"        if (dummyFile.exists()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"lchokhoe"},"content":"            System.out.println(\"startup SUCCEEDED in creating dummyDuke.txt\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"lchokhoe"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"lchokhoe"},"content":"            fail(\"startup FAILED in creating dummyDuke.txt\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"lchokhoe"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"lchokhoe"},"content":"    public void restore_editCreatedFile_dataRestored() {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"lchokhoe"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"lchokhoe"},"content":"            File dummyFilePath \u003d new File(dummyStorage.getFilePath());","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"lchokhoe"},"content":"            FileWriter fw \u003d new FileWriter(dummyFilePath);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"lchokhoe"},"content":"            fw.append(\"T\u003e0\u003eduke test\\n\")","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"lchokhoe"},"content":"                    .append(\"D\u003e1\u003eCA1\u003eSunday\u003e7pm\\n\")","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"lchokhoe"},"content":"                    .append(\"E\u003e0\u003eTeam Meeting\u003eSunday\u003e10am-12pm\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"lchokhoe"},"content":"            fw.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"lchokhoe"},"content":"            dummyStorage.restore(dummyHistory);","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"lchokhoe"},"content":"            assertEquals(3,","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"lchokhoe"},"content":"                    dummyHistory.getSize(),","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"lchokhoe"},"content":"                    \"restore SUCCEEDED in loading data into dummyHistory\\n\");","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"lchokhoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"lchokhoe"},"content":"            fail(\"restore FAILED to locate, edit and read from dummyTest.txt\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"lchokhoe"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"lchokhoe"},"content":"    public void markAndUnMark_editCreatedFile_dataChanged() {","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"lchokhoe"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"lchokhoe"},"content":"            dummyStorage.restore(dummyHistory);","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"lchokhoe"},"content":"            dummyCmd.mark(0, dummyHistory);","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"lchokhoe"},"content":"            dummyCmd.unmark(1, dummyHistory);","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"lchokhoe"},"content":"            dummyStorage.update(dummyHistory);","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"lchokhoe"},"content":"            Path dummyFilePath \u003d Paths.get(dummyStorage.getFilePath());","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"lchokhoe"},"content":"            String entry1 \u003d Files.readAllLines(dummyFilePath).get(0);","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"lchokhoe"},"content":"            String entry2 \u003d Files.readAllLines(dummyFilePath).get(1);","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"lchokhoe"},"content":"            if (entry1.equals(\"T\u003e1\u003eduke test\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"lchokhoe"},"content":"                System.out.println(\"mark SUCCEEDED in marking entry 1\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"lchokhoe"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"lchokhoe"},"content":"                fail(\"mark FAILED in marking entry 1\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"lchokhoe"},"content":"            if (entry2.equals(\"D\u003e0\u003eCA1\u003eSunday\u003e7pm\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"lchokhoe"},"content":"                System.out.println(\"unmark SUCCEEDED in un-marking entry 2\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"lchokhoe"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"lchokhoe"},"content":"                fail(\"unmark FAILED in un-marking entry 2\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"lchokhoe"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"lchokhoe"},"content":"            fail(\"restore FAILED to locate dummyText.txt\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"lchokhoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"lchokhoe"},"content":"            fail(\"test FAILED to read from dummyTest.txt\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"lchokhoe"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"lchokhoe"},"content":"    @AfterAll","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"lchokhoe"},"content":"    public static void tearDown() {","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"lchokhoe"},"content":"        File dummyFile \u003d new File(dummyStorage.getFilePath());","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"lchokhoe"},"content":"        if (dummyFile.exists()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"lchokhoe"},"content":"            if (dummyFile.delete()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"lchokhoe"},"content":"                System.out.println(\"this is the end of the test\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"lchokhoe"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"lchokhoe"},"content":"                System.out.println(\"automatic deletion of dummyTest.txt FAILED\\n\");","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"lchokhoe"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"lchokhoe"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"lchokhoe"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"lchokhoe"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"lchokhoe":104}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lchokhoe"},"content":"todo borrow book","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"lchokhoe"},"content":"mark 1","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"lchokhoe"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lchokhoe"},"content":"deadline destroy book /by Sunday","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lchokhoe"},"content":"event project meeting /at ASAP","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lchokhoe"},"content":"mark 3","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lchokhoe"},"content":"unmark 3","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"lchokhoe"},"content":"list","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"lchokhoe"},"content":"bye","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"lchokhoe":9}}]
