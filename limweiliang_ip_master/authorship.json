[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"    mainClassName \u003d \"athena.Main\"","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"    archiveBaseName \u003d \"athena\"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"limweiliang":17}},{"path":"src/main/java/athena/Athena.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import athena.commands.Command;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import athena.commands.ShutdownCommand;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputException;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"import athena.parser.Parser;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"import athena.storage.Storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"import athena.ui.MainWindow;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":" * Provides the point of entry into the Athena program. Initializes the program and handles","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":" * the main program logic.","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"public class Athena extends Application {","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    private static final String SAVE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    private static final String SAVE_FILENAME \u003d \"athena.txt\";","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    private boolean isActive;","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"     * Initializes the program by loading task data from disk if any and initializing all","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"     * requisite objects and data structures.","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"    public Athena() {","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"        storage \u003d new Storage(SAVE_DIRECTORY, SAVE_FILENAME);","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"        initTaskList(); // Load save data if present","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"        isActive \u003d true;","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"    private void initTaskList() {","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"        if (storage.hasExistingSave()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"            try {","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"                taskList \u003d storage.loadFromDisk();","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"                System.out.println(\"I couldn\u0027t load from disk. Opening new task list instead.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"                taskList \u003d new TaskList();","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"        String response \u003d \"\";","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"            Command command \u003d Parser.getCommand(input);","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"            response \u003d command.execute(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"            if (command instanceof ShutdownCommand) {","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"                isActive \u003d false;","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"limweiliang"},"content":"        } catch (InputException e) { // return error message instead.","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"limweiliang"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"limweiliang"},"content":"        try {","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"limweiliang"},"content":"            saveIfTaskListModified();","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"limweiliang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"limweiliang"},"content":"            response +\u003d \"\\nI encountered a problem saving to disk: \" + e.getMessage();","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"limweiliang"},"content":"        return response;","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"limweiliang"},"content":"    private void saveIfTaskListModified() throws IOException {","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"limweiliang"},"content":"        if (taskList.wasModified()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":72,"author":{"gitId":"limweiliang"},"content":"            storage.saveToDisk(taskList);","lastModifiedDate":"2022-02-09"},{"lineNumber":73,"author":{"gitId":"limweiliang"},"content":"            taskList.setNotModified();","lastModifiedDate":"2022-02-09"},{"lineNumber":74,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":75,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":76,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"limweiliang"},"content":"    public boolean isActive() {","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"limweiliang"},"content":"        return isActive;","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":80,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":81,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-02-09"},{"lineNumber":82,"author":{"gitId":"limweiliang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-09"},{"lineNumber":83,"author":{"gitId":"limweiliang"},"content":"        stage \u003d new MainWindow(new Athena());","lastModifiedDate":"2022-02-09"},{"lineNumber":84,"author":{"gitId":"limweiliang"},"content":"        stage.show();","lastModifiedDate":"2022-02-09"},{"lineNumber":85,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"limweiliang":86}},{"path":"src/main/java/athena/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"public class Launcher {","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"        Application.launch(Athena.class, args);","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"limweiliang":12}},{"path":"src/main/java/athena/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputException;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":" * Represents a single command provided to Athena by the user. This is","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":" * an umbrella class for all types of commands.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"     * Executes the command through the given ui and taskList.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"     * @param tasklist taskList instance to run command with respect to.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"     * @throws InputException If command is invalid.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    public abstract String execute(TaskList tasklist) throws InputException;","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"limweiliang":20}},{"path":"src/main/java/athena/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":" * Represents a deadline command given to Athena by the user. When executed, sets a new","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":" * deadline according to the given task name and due date.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    private final String taskName;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    private final LocalDateTime dueDateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"     * Constructs a new DeadlineCommand instance according to the given parameters.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"     * @param taskName The name of the deadline task.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"     * @param dueDateTime The due date and time of the deadline task.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    public DeadlineCommand(String taskName, LocalDateTime dueDateTime) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"        this.dueDateTime \u003d dueDateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"     * Creates a new deadline task in the given TaskList and outputs the results to the","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"     * given Ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     * @param taskList taskList instance to create the deadline task in.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        int taskNumber \u003d taskList.addDeadline(taskName, dueDateTime);","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"        return Messages.getTaskAddingDialog(taskList, taskNumber);","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":39}},{"path":"src/main/java/athena/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputErrorCode;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputException;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":" * Represents a delete command given to Athena by the user. When executed, deletes","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":" * the task with the given task number.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    private final int taskNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"     * Constructs a new DeleteCommand instance according to the given parameters.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"     * @param taskNumber The number of the task to be deleted.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"     * Deletes the specified task from the given taskList and displays the results on the ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"     * @param taskList TaskList instance to delete task from.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     * @throws InputException If the task number is out of range/invalid.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) throws InputException {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"        if (taskList.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"            ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"            outputs.add(\"Alright, I will delete the following task from the list:\");","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"            outputs.add(taskList.getTaskString(taskNumber));","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"            taskList.deleteTask(taskNumber);","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"            outputs.add(Messages.getCurrentNumberOfTasksDialog(taskList));","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"            return Messages.getMultiLineString(outputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"            throw new InputException(InputErrorCode.INVALID_TASK_NUMBER);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":48}},{"path":"src/main/java/athena/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":" * Represents an event command given to Athena by the user. When executed, creates a new","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":" * event task according to the given task name and datetime.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    private final String taskName;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    private final LocalDateTime eventDateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"     * Constructs a new EventCommand instance according to the given parameters.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"     * @param taskName Name of the event to be created.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"     * @param eventDateTime Time and date of the event.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    public EventCommand(String taskName, LocalDateTime eventDateTime) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"        this.eventDateTime \u003d eventDateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"     * Creates a new event task in the given taskList and displays the results through the ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"     * @param taskList The TaskList instance to add the event to.","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"        int taskNumber \u003d taskList.addEvent(taskName, eventDateTime);","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        return Messages.getTaskAddingDialog(taskList, taskNumber);","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":38}},{"path":"src/main/java/athena/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.util.List;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":" * Represents a find command given to Athena by the user. When executed, displays","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":" * the tasks containing the given search phrase.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    private final String searchPhrase;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"     * Constructs a new FindCommand instance using the given search phrase.","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"     * @param searchPhrase Search phrase to use when looking for matching tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    public FindCommand(String searchPhrase) {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"        this.searchPhrase \u003d searchPhrase;","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"     * Searches for tasks in the given task list containing the search phrase,","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"     * and displays them through the given ui. If no matching tasks are found, apology","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"     * text is displayed instead.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"     * @param taskList TaskList instance to search for matching tasks in.","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"        List\u003cInteger\u003e taskNumbers \u003d taskList.getTaskNumbersContainingPhrase(searchPhrase);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        if (taskNumbers.size() \u003e 0) {","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"            ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"            outputs.add(String.format(\"Here are the tasks containing the phrase \u0027%s\u0027\", searchPhrase));","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"            outputs.add(Messages.getSpecificTasksDialog(taskList, taskNumbers));","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"            return Messages.getMultiLineString(outputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"            return String.format(\"Sorry, no tasks were found containing the phrase \u0027%s\u0027\", searchPhrase);","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"limweiliang":45}},{"path":"src/main/java/athena/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":" * Represents a list command given to Athena by the user. When executed, displays the","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":" * current task list to the ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"     * Displays the given task list to the ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"     * @param taskList TaskList instance to be displayed.","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"        return Messages.getTaskListDialog(taskList);","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":22}},{"path":"src/main/java/athena/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputErrorCode;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputException;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":" * Represents a mark command given to Athena by the user. When executed, marks","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":" * the task corresponding to the given task number as done.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    private final int taskNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"     * Constructs a new MarkCommand instance with the given task number.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"     * @param taskNumber The number of the task to be marked as complete.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"     * Marks the task corresponding to the given task number as done.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"     * @param taskList The taskList instance to mark the task as complete in.","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"     * @throws InputException If the given task number is invalid/out of range.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) throws InputException {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        if (taskList.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"            taskList.setTaskAsDone(taskNumber);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"            ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"            outputs.add(\"Alright, I\u0027ve marked the following task as done:\");","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"            outputs.add(taskList.getTaskString(taskNumber));","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"            return Messages.getMultiLineString(outputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"            throw new InputException(InputErrorCode.INVALID_TASK_NUMBER);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":46}},{"path":"src/main/java/athena/commands/ShutdownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":" *  Represents a shutdown command given to Athena by the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"public class ShutdownCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"     * Terminates the program.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"     * @param taskList Current taskList instance.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"        return \"Farewell!\";","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"        // main loop needs to check that this is an exit command","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":20}},{"path":"src/main/java/athena/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":" * Represents a todo command given to Athena by the user. When executed, creates","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":" * a new todo task in the given task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"    private final String taskName;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"     * Constructs a new TodoCommand instance with the given task name.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"     * @param taskName Name of the todo task to be created.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    public TodoCommand(String taskName) {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"     * Creates a new todo task in the given taskList and displays the outputs","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"     * on the given ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"     * @param taskList TaskList instance to create the todo task on.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"        int taskNumber \u003d taskList.addTodo(taskName);","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"        return Messages.getTaskAddingDialog(taskList, taskNumber);","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"     * Returns true if given object is also a TodoCommand and name of","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"     * todo task to be created matches that of the given TodoCommand.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"     * @param other Object to compare current instance to.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"     * @return True if \u0027other\u0027 is also a TodoCommand and will create a todo task with the same name.","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"        if (other instanceof TodoCommand) {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"            TodoCommand otherCommand \u003d (TodoCommand) other;","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"            return this.taskName.equals(otherCommand.taskName);","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"            return false;","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":52}},{"path":"src/main/java/athena/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.commands;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputErrorCode;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputException;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"import athena.ui.Messages;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":" * Represents an unmark command given to Athena by the user. When executed, marks","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":" * the task corresponding to the given task number as not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    private final int taskNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"     * Constructs a new UnmarkCommand instance with the given task number.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"     * @param taskNumber Number of the task to be marked as not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"     * Marks the task corresponding to the given task number as not done on the given","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"     * TaskList and display outputs to the given Ui.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"     * @param taskList TaskList instance to mark the task as not done on.","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     * @return Command output.","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"     * @throws InputException If given task number is invalid/out of range.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"    public String execute(TaskList taskList) throws InputException {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        if (taskList.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"            taskList.setTaskAsNotDone(taskNumber);","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"            ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"            outputs.add(\"Alright, I\u0027ve marked the following task as not done:\");","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"            outputs.add(taskList.getTaskString(taskNumber));","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"            return Messages.getMultiLineString(outputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"            throw new InputException(InputErrorCode.INVALID_TASK_NUMBER);","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":46}},{"path":"src/main/java/athena/exceptions/InputErrorCode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.exceptions;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":" * Represents a possible type of user input error when giving commands to Athena.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"public enum InputErrorCode {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"    INVALID_COMMAND,","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    MISSING_TASK_NUMBER,","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    INVALID_TASK_NUMBER,","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"    MISSING_TASK_NAME,","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"    MISSING_TASK_DATETIME,","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"    INVALID_TASK_DATETIME,","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    MISSING_SEARCH_PHRASE","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"limweiliang":14}},{"path":"src/main/java/athena/exceptions/InputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.exceptions;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":" * Represents a specific error arising from incorrect or invalid user input given to Athena.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"public class InputException extends Exception {","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"    private final InputErrorCode inputErrorCode;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"     * Constructs an InputException with the given InputErrorCode.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"     * @param inputErrorCode The type of input error made by the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    public InputException(InputErrorCode inputErrorCode) {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"        this.inputErrorCode \u003d inputErrorCode;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"     * Returns the String response made by Athena corresponding to the user\u0027s input error,","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"     * to be displayed to the user.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"     * @return Specific response String to user input error.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"        switch (inputErrorCode) {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"        case INVALID_COMMAND:","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"            return \"That\u0027s an invalid command. Please try again.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"        case MISSING_TASK_NUMBER:","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"            return \"Error. Please provide a valid task number.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"        case INVALID_TASK_NUMBER:","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"            return \"Error. There is no such task. Please try again.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        case MISSING_TASK_NAME:","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"            return \"Error. Please provide a task name.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"        case MISSING_TASK_DATETIME:","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"            return \"Error. Please provide a date and time.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"        case INVALID_TASK_DATETIME:","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"            return \"Error. Please enter the date and time in the following format: dd/mm/yyyy hhmm\";","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"        case MISSING_SEARCH_PHRASE:","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"            return \"Error. Please provide a search phrase.\";","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"        default:","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"            return \"\"; // Should not get here.","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"limweiliang":53}},{"path":"src/main/java/athena/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import athena.commands.Command;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"import athena.commands.DeadlineCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"import athena.commands.DeleteCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"import athena.commands.EventCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"import athena.commands.FindCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"import athena.commands.ListCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"import athena.commands.MarkCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"import athena.commands.ShutdownCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"import athena.commands.TodoCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"import athena.commands.UnmarkCommand;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputErrorCode;","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputException;","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":" * Encapsulates helper methods to parse user input given to Athena.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"public class Parser {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy Hmm\");","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"     * Returns a Command object based on the given input, which encapsulates the user","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"     * command in an object that can later be executed.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     * @param input Raw user input given to Athena.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"     * @return Command object encapsulating the user command.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"     * @throws InputException If user input is invalid, such as when providing a non-existent command.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"    public static Command getCommand(String input) throws InputException {","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        // Separate out the command keyword from the other arguments given","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"        String remainingInput \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"        if (splitInput.length \u003e 1) {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"            remainingInput \u003d splitInput[1];","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"        // Generate command object to return","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"        switch (command) {","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"            return new TodoCommand(getTaskNameFromInput(remainingInput));","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"            return new DeadlineCommand(getTaskNameFromInput(remainingInput),","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"                    getDateTimeFromInput(remainingInput, \"/by\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"        case \"event\":","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"            return new EventCommand(getTaskNameFromInput(remainingInput),","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"                    getDateTimeFromInput(remainingInput, \"/at\"));","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"            return new MarkCommand(getTaskNumberFromInput(remainingInput));","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"limweiliang"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"limweiliang"},"content":"            return new UnmarkCommand(getTaskNumberFromInput(remainingInput));","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"limweiliang"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"limweiliang"},"content":"            return new DeleteCommand(getTaskNumberFromInput(remainingInput));","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"limweiliang"},"content":"        case \"find\":","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"limweiliang"},"content":"            return new FindCommand(getSearchPhraseFromInput(remainingInput));","lastModifiedDate":"2022-01-30"},{"lineNumber":68,"author":{"gitId":"limweiliang"},"content":"        case \"list\":","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"limweiliang"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"limweiliang"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"limweiliang"},"content":"            return new ShutdownCommand();","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"limweiliang"},"content":"        default:","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"limweiliang"},"content":"            throw new InputException(InputErrorCode.INVALID_COMMAND);","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough necessary","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"limweiliang"},"content":"    private static int getTaskNumberFromInput(String input) throws InputException {","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"limweiliang"},"content":"        int taskNumber \u003d -1;","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"limweiliang"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"limweiliang"},"content":"            taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"limweiliang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"limweiliang"},"content":"            throw new InputException(InputErrorCode.MISSING_TASK_NUMBER);","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"limweiliang"},"content":"        return taskNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"limweiliang"},"content":"    private static String getTaskNameFromInput(String input) throws InputException {","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"limweiliang"},"content":"        // Remove excess input arising from extra fields like /by and /at","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"limweiliang"},"content":"        input \u003d input.split(\"/\")[0].strip();","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"limweiliang"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":94,"author":{"gitId":"limweiliang"},"content":"            throw new InputException(InputErrorCode.MISSING_TASK_NAME);","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"limweiliang"},"content":"        return input;","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"limweiliang"},"content":"    private static String getSearchPhraseFromInput(String input) throws InputException {","lastModifiedDate":"2022-01-30"},{"lineNumber":100,"author":{"gitId":"limweiliang"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":101,"author":{"gitId":"limweiliang"},"content":"            throw new InputException(InputErrorCode.MISSING_SEARCH_PHRASE);","lastModifiedDate":"2022-01-30"},{"lineNumber":102,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"limweiliang"},"content":"        return input;","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"limweiliang"},"content":"    private static LocalDateTime getDateTimeFromInput(String input, String keyword)","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"limweiliang"},"content":"            throws InputException {","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"limweiliang"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"limweiliang"},"content":"        if (!input.contains(keyword)) {","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"limweiliang"},"content":"            throw new InputException(InputErrorCode.MISSING_TASK_DATETIME);","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"limweiliang"},"content":"            // Split by keyword, take the latter part.","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"limweiliang"},"content":"            String dateTimeString \u003d input.split(keyword, 2)[1].strip();","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"limweiliang"},"content":"            if (dateTimeString.isEmpty()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"limweiliang"},"content":"                throw new InputException(InputErrorCode.MISSING_TASK_DATETIME);","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"limweiliang"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"limweiliang"},"content":"                try {","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"limweiliang"},"content":"                    dateTime \u003d LocalDateTime.parse(dateTimeString, INPUT_FORMATTER);","lastModifiedDate":"2022-02-03"},{"lineNumber":119,"author":{"gitId":"limweiliang"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"limweiliang"},"content":"                    throw new InputException(InputErrorCode.INVALID_TASK_DATETIME);","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"limweiliang"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":124,"author":{"gitId":"limweiliang"},"content":"        return dateTime;","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"limweiliang":126}},{"path":"src/main/java/athena/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":" * Contains methods for saving and loading the current state of the","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":" * task list onto the disk.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"public class Storage {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    private Path directoryPath;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"    private Path savePath;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"     * Constructs a new Storage instance with the given save location information.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"     * @param saveDirectory Relative location of directory for saving/loading.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"     * @param saveFileName Name of the file for saving/loading data. (e.g. Athena.txt)","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    public Storage(String saveDirectory, String saveFileName) {","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"        directoryPath \u003d Paths.get(saveDirectory);","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"        savePath \u003d directoryPath.resolve(saveFileName);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"     * Saves the given TaskList instance to disk.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"     * @param taskList The TaskList instance to save to disk.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"     * @throws IOException If unable to save to disk successfully.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"    public void saveToDisk(TaskList taskList) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"        // Create the data directory if necessary","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"        if (!Files.exists(directoryPath)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"            Files.createDirectory(directoryPath);","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"        // Save the file, overriding any existing save","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"        List\u003cString\u003e taskListSaveFormat \u003d taskList.getSaveFormat();","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"        Files.write(savePath, taskListSaveFormat);","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"     * Returns true if an existing save file can be located at the save directory.","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"     * @return True if an existing save file exists at the save directory.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"    public boolean hasExistingSave() {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"        return Files.exists(savePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"     * Returns a TaskList instance that has been loaded from disk.","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"limweiliang"},"content":"     * @return TaskList instance loaded from disk.","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"limweiliang"},"content":"     * @throws IOException If unable to load from disk successfully.","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"limweiliang"},"content":"    public TaskList loadFromDisk() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"limweiliang"},"content":"        List\u003cString\u003e taskListSaveFormat \u003d Files.readAllLines(savePath);","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"limweiliang"},"content":"        return new TaskList(taskListSaveFormat);","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"limweiliang":66}},{"path":"src/main/java/athena/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\");","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDate, OUTPUT_FORMATTER);","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        return super.getSaveFormat() + SAVE_SEPARATOR + dueDate.format(OUTPUT_FORMATTER);","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    public String getIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"        return \"D\";","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"        return super.toString() + String.format(\" (by: %s)\", dueDate.format(OUTPUT_FORMATTER));","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":35}},{"path":"src/main/java/athena/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"// STRETCH GOAL: Add a duration for event?","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\");","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"    private final LocalDateTime eventDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"    public Event(String description, LocalDateTime eventDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"    public Event(String description, String eventDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"        this.eventDate \u003d LocalDateTime.parse(eventDate, OUTPUT_FORMATTER);","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"        return super.getSaveFormat() + SAVE_SEPARATOR + eventDate.format(OUTPUT_FORMATTER);","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    public String getIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"        return \"E\";","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"        return super.toString() + String.format(\" (at: %s)\", eventDate.format(OUTPUT_FORMATTER));","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":36}},{"path":"src/main/java/athena/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"    public static final char SAVE_SEPARATOR \u003d \u0027|\u0027;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"    private final String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    public void setDone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"    public void setNotDone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    // Returns the icon of the type of task","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"    public abstract String getIcon();","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"        return getIcon() + SAVE_SEPARATOR + (isDone ? 1 : 0) + SAVE_SEPARATOR + description;","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"        String completionMark \u003d (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"        return String.format(\"[%s][%s] %s\", getIcon(), completionMark, this.description);","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":33}},{"path":"src/main/java/athena/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"public class TaskList {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    private boolean wasModified;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    // Known bug - code will break if user input includes |","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"    public TaskList(List\u003cString\u003e taskListSaveFormat) {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"        this();","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"        // Create the appropriate task based on each line of the save file and add to taskList","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"        for (int i \u003d 0; i \u003c taskListSaveFormat.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"            // Extract parameters of tasks from the save format","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"            String taskSaveFormat \u003d taskListSaveFormat.get(i);","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"            String[] taskParams \u003d taskSaveFormat.split(\"\\\\|\");","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"            String taskIcon \u003d taskParams[0];","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"            boolean isTaskDone \u003d taskParams[1].equals(\"1\");","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"            String taskName \u003d taskParams[2];","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"            String taskDateTime \u003d \"\";","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"            if (taskParams.length \u003e\u003d 4) {","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"                taskDateTime \u003d taskParams[3];","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"            // Add the task with corresponding parameters to the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"            switch (taskIcon) {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"            case \"T\":","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"                taskList.add(new Todo(taskName));","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"            case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"                taskList.add(new Event(taskName, taskDateTime));","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"            case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"                taskList.add(new Deadline(taskName, taskDateTime));","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"            if (isTaskDone) {","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"                setTaskAsDone(i + 1);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"    public void setNotModified() {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"    public boolean wasModified() {","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"        return wasModified;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"limweiliang"},"content":"    // Returns the task number of the added task","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"limweiliang"},"content":"    public int addTodo(String description) {","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"limweiliang"},"content":"        taskList.add(new Todo(description));","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"limweiliang"},"content":"        return getNumberOfTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"limweiliang"},"content":"    public int addEvent(String description, LocalDateTime eventDate) {","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"limweiliang"},"content":"        taskList.add(new Event(description, eventDate));","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"limweiliang"},"content":"        return getNumberOfTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"limweiliang"},"content":"    public boolean isValidTaskNumber(int taskNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"limweiliang"},"content":"        return (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d getNumberOfTasks());","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"limweiliang"},"content":"    public int addDeadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"limweiliang"},"content":"        taskList.add(new Deadline(description, dueDate));","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"limweiliang"},"content":"        return getNumberOfTasks();","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"limweiliang"},"content":"    public void setTaskAsDone(int taskNumber) {","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"limweiliang"},"content":"        Task task \u003d taskList.get(taskNumber - 1); // assume valid taskNumber","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"limweiliang"},"content":"        task.setDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":87,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"limweiliang"},"content":"    public void setTaskAsNotDone(int taskNumber) {","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"limweiliang"},"content":"        Task task \u003d taskList.get(taskNumber - 1); // assume valid taskNumber","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"limweiliang"},"content":"        task.setNotDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"limweiliang"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"limweiliang"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"limweiliang"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"limweiliang"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"limweiliang"},"content":"    // Assume valid taskNumber","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"limweiliang"},"content":"    public String getTaskString(int taskNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"limweiliang"},"content":"        return taskList.get(taskNumber - 1).toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"limweiliang"},"content":"    public List\u003cInteger\u003e getTaskNumbersContainingPhrase(String searchPhrase) {","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"limweiliang"},"content":"        ArrayList\u003cInteger\u003e taskNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":112,"author":{"gitId":"limweiliang"},"content":"        for (int i \u003d 1; i \u003c\u003d getNumberOfTasks(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":113,"author":{"gitId":"limweiliang"},"content":"            Task task \u003d taskList.get(i - 1);","lastModifiedDate":"2022-01-30"},{"lineNumber":114,"author":{"gitId":"limweiliang"},"content":"            if (task.toString().contains(searchPhrase)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":115,"author":{"gitId":"limweiliang"},"content":"                taskNumbers.add(i);","lastModifiedDate":"2022-01-30"},{"lineNumber":116,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":117,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":118,"author":{"gitId":"limweiliang"},"content":"        return taskNumbers;","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"limweiliang"},"content":"    public ArrayList\u003cString\u003e getSaveFormat() {","lastModifiedDate":"2022-01-29"},{"lineNumber":122,"author":{"gitId":"limweiliang"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"limweiliang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"limweiliang"},"content":"            output.add(task.getSaveFormat());","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"limweiliang"},"content":"        return output;","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"limweiliang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"limweiliang"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"limweiliang"},"content":"            return \"Empty list!\";","lastModifiedDate":"2022-01-20"},{"lineNumber":133,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"limweiliang"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"limweiliang"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"limweiliang"},"content":"            output.append(String.format(\"%d. %s\\n\", i, taskList.get(i - 1)));","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"limweiliang"},"content":"        return output.toString().strip();","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":140}},{"path":"src/main/java/athena/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    public String getIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"        return \"T\";","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":12}},{"path":"src/main/java/athena/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-09"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"    private void flip() {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-09"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"        tmp.get(0).setStyle(\"-fx-background-color: #dae8ff\");","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"        dialog.setBackground((new Background(new BackgroundFill(Color.GREY,","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"                CornerRadii.EMPTY,","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"                Insets.EMPTY))));","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"limweiliang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"limweiliang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"limweiliang"},"content":"    public static DialogBox getAthenaDialog(String text, Image img) {","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"limweiliang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"limweiliang"},"content":"        db.flip();","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"limweiliang"},"content":"        return db;","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"limweiliang":70}},{"path":"src/main/java/athena/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.ui;","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import athena.Athena;","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-09"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"public class MainWindow extends Stage {","lastModifiedDate":"2022-02-09"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-09"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    private AnchorPane ap;","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-09"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-09"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"    private Athena athena;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"    private Image athenaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/athena.jpg\"));","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"    public MainWindow(Athena athena) {","lastModifiedDate":"2022-02-09"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"        this.athena \u003d athena;","lastModifiedDate":"2022-02-09"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"        try {","lastModifiedDate":"2022-02-09"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-09"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-09"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-09"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"        displayAthenaDialog(\"Greetings! My name is Athena. What can I help you with?\");","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":59,"author":{"gitId":"limweiliang"},"content":"    /**","lastModifiedDate":"2022-02-09"},{"lineNumber":60,"author":{"gitId":"limweiliang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Athena\u0027s reply and then appends them to","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"limweiliang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-09"},{"lineNumber":62,"author":{"gitId":"limweiliang"},"content":"     */","lastModifiedDate":"2022-02-09"},{"lineNumber":63,"author":{"gitId":"limweiliang"},"content":"    @FXML","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"limweiliang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-09"},{"lineNumber":65,"author":{"gitId":"limweiliang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"limweiliang"},"content":"        String response \u003d athena.getResponse(input);","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"limweiliang"},"content":"        displayUserDialog(input);","lastModifiedDate":"2022-02-10"},{"lineNumber":68,"author":{"gitId":"limweiliang"},"content":"        displayAthenaDialog(response);","lastModifiedDate":"2022-02-10"},{"lineNumber":69,"author":{"gitId":"limweiliang"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-09"},{"lineNumber":70,"author":{"gitId":"limweiliang"},"content":"        if (!athena.isActive()) {","lastModifiedDate":"2022-02-10"},{"lineNumber":71,"author":{"gitId":"limweiliang"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-02-10"},{"lineNumber":72,"author":{"gitId":"limweiliang"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-02-10"},{"lineNumber":73,"author":{"gitId":"limweiliang"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-02-10"},{"lineNumber":74,"author":{"gitId":"limweiliang"},"content":"            delay.setOnFinished(event -\u003e close());","lastModifiedDate":"2022-02-10"},{"lineNumber":75,"author":{"gitId":"limweiliang"},"content":"            delay.play();","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"limweiliang"},"content":"    private void displayAthenaDialog(String dialog) {","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"limweiliang"},"content":"        dialogContainer.getChildren().add(DialogBox.getAthenaDialog(dialog, athenaImage));","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"limweiliang"},"content":"    private void displayUserDialog(String dialog) {","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"limweiliang"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(dialog, userImage));","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":86,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"limweiliang":86}},{"path":"src/main/java/athena/ui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"// Stretch goal: abstract out the messages","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"package athena.ui;","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import java.util.List;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import athena.tasks.TaskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"/**","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":" * Provides helper methods for generating Athena\u0027s dialogue output.","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":" */","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"public class Messages {","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    public static String getMultiLineString(List\u003cString\u003e inputs) {","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"        return String.join(\"\\n\", inputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"    public static String getSpecificTasksDialog(TaskList taskList, List\u003cInteger\u003e taskNumbers) {","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"        ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"        for (int taskNumber : taskNumbers) {","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"            outputs.add(String.format(\"%d. %s\", taskNumber, taskList.getTaskString(taskNumber)));","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"        return getMultiLineString(outputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    public static String getTaskAddingDialog(TaskList taskList, int taskNumber) {","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"        ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"        outputs.add(\"Okay, I\u0027ve added this task to your list.\");","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"        outputs.add(taskList.getTaskString(taskNumber));","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"        outputs.add(getCurrentNumberOfTasksDialog(taskList));","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"        return getMultiLineString(outputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    public static String getTaskListDialog(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"        ArrayList\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"        outputs.add(\"Here\u0027s the current list of tasks:\");","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        outputs.add(taskList.toString());","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"        return getMultiLineString(outputs);","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"    public static String getCurrentNumberOfTasksDialog(TaskList taskList) {","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"        if (taskList.getNumberOfTasks() \u003d\u003d 1) {","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"            return \"Now you have 1 task in your list.\";","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"            return String.format(\"Now you have %d tasks in your list.\", taskList.getNumberOfTasks());","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"limweiliang":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog-box\" stylesheets\u003d\"@style.css\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"limweiliang":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Athena\" type\u003d\"Stage\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"        \u003cScene fx:id\u003d\"scene\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"            \u003cAnchorPane fx:id\u003d\"ap\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"ap\" stylesheets\u003d\"@style.css\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"               \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type your command here!\" AnchorPane.bottomAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"               \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"                  \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"               \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@style.css\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"                     \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"v-box\" stylesheets\u003d\"@style.css\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"               \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-02-09"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"limweiliang":31}},{"path":"src/test/java/athena/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.parser;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"import athena.commands.TodoCommand;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"import athena.exceptions.InputException;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"class ParserTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    void getCommand_todoCommand_success() throws InputException {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"        assertEquals(new TodoCommand(\"groceries\"), Parser.getCommand(\"todo groceries \"));","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"        assertEquals(new TodoCommand(\"go shop\"), Parser.getCommand(\"todo go shop \"));","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    void getCommand_todoWithoutTaskName_inputExceptionThrown() {","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"        String todoWithoutTaskName \u003d \"todo   \";","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        // Make sure the right exception is thrown","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"        assertThrows(InputException.class, () -\u003e Parser.getCommand(todoWithoutTaskName));","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"        // Make sure the message is correct","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"        try {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"            Parser.getCommand(todoWithoutTaskName);","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"            fail();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"        } catch (InputException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"            assertEquals(\"Error. Please provide a task name.\", e.getMessage());","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"limweiliang":35}},{"path":"src/test/java/athena/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"package athena.tasks;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"class TodoTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    private static Todo markedTodo;","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"    private static Todo unmarkedTodo;","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"    @BeforeAll","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    static void init() {","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"        unmarkedTodo \u003d new Todo(\"grocery shopping\");","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"        markedTodo \u003d new Todo(\"birthday\");","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"        markedTodo.setDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"    void markAsDone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"        Todo todo \u003d new Todo(\"a\");","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"        todo.setDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        assertEquals(\"[T][X] a\", todo.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"    void markAsNotDone() {","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"        Todo todo \u003d new Todo(\"a\");","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"        todo.setDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"        todo.setNotDone();","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"        assertEquals(\"[T][ ] a\", todo.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"    void getSaveFormat_markedTodo() {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"        assertEquals(\"T|1|birthday\", markedTodo.getSaveFormat());","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"    void getSaveFormat_unmarkedTodo() {","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"        assertEquals(\"T|0|grocery shopping\", unmarkedTodo.getSaveFormat());","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"    void testToString_markedTodo() {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"        assertEquals(\"[T][X] birthday\", markedTodo.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"    void testToString_unmarkedTodo() {","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"        assertEquals(\"[T][ ] grocery shopping\", unmarkedTodo.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"    void getIcon() {","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"        assertEquals(\"T\", markedTodo.getIcon());","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"limweiliang":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"deadline return book /by 29/1/2022 1300","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"event project meeting /at 21/2/1945 0505","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"deadline do homework /by 3/4/2020 2359","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"find [D][ ]","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"find do homework","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"find 1.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"invalidcommand","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"todo","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"event","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"deadline noby","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"event noat","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"deadline /by noTaskName","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"event /at noTaskName","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"deadline name /by","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"event name /at","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"event name /at 12312313/2323/233 rubbishdate","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"mark -15","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"mark","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"unmark 23","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"delete 2323233","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"find","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"java -classpath ..\\bin Athena \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"limweiliang":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"# delete save file from previous run","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"rm data/athena.txt","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/athena/Main.java","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"java -classpath ../bin athena.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"limweiliang":5}}]
