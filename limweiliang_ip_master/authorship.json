[{"path":"src/main/java/Athena.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"public class Athena {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"    private static final String SAVE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"    private static final String SAVE_FILE_NAME \u003d \"athena.txt\";","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    private boolean isActive;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    private static final DateTimeFormatter inputFormatter \u003d","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    public Athena() {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"        // Load save data if present","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"        java.nio.file.Path savePath \u003d Paths.get(SAVE_DIRECTORY, SAVE_FILE_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"        // Assume that if file exists, it must contain the right data.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        if (Files.exists(savePath)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"                loadFromDisk(savePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"                sayText(\"I couldn\u0027t load from disk. Opening new task list instead.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"                taskList \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"        isActive \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"        sayText(\"Greetings! My name is Athena. What can I help you with?\");","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"    public void execute(String input) {","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"        if (!this.isActive()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"            return;","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"        // Separate out the command keyword from the other arguments given","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"        if (splitInput.length \u003e 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"            arguments \u003d splitInput[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"        // Run the given command","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"        taskList.resetLastModified();","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"            switch (command) {","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"                String taskName \u003d readTaskNameForTodo(arguments);","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"                String taskString \u003d taskList.addTodo(taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"                sayTaskAddingLines(taskString);","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"limweiliang"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"limweiliang"},"content":"                String[] taskNameAndDate \u003d readTaskNameAndDateTime(arguments, \"/by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"limweiliang"},"content":"                LocalDateTime dueDate \u003d LocalDateTime.parse(taskNameAndDate[1], inputFormatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"limweiliang"},"content":"                taskString \u003d taskList.addDeadline(taskNameAndDate[0], dueDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"limweiliang"},"content":"                sayTaskAddingLines(taskString);","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"limweiliang"},"content":"            case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"limweiliang"},"content":"                taskNameAndDate \u003d readTaskNameAndDateTime(arguments, \"/at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"limweiliang"},"content":"                LocalDateTime eventDate \u003d LocalDateTime.parse(taskNameAndDate[1], inputFormatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"limweiliang"},"content":"                taskString \u003d taskList.addEvent(taskNameAndDate[0], eventDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"limweiliang"},"content":"                sayTaskAddingLines(taskString);","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"limweiliang"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"limweiliang"},"content":"                int taskNumber \u003d readTaskNumberFromInput(arguments);","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"limweiliang"},"content":"                sayText(\"Alright, I\u0027ve marked the following task as done:\");","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"limweiliang"},"content":"                System.out.println(taskList.markTaskAsDone(taskNumber));","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"limweiliang"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"limweiliang"},"content":"                taskNumber \u003d readTaskNumberFromInput(arguments);","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"limweiliang"},"content":"                sayText(\"Alright, I\u0027ve marked the following task as not done:\");","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"limweiliang"},"content":"                System.out.println(taskList.markTaskAsNotDone(taskNumber));","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"limweiliang"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"limweiliang"},"content":"                taskNumber \u003d readTaskNumberFromInput(arguments);","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"limweiliang"},"content":"                sayText(\"Alright, I\u0027ve deleted the following task from the list.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"limweiliang"},"content":"                System.out.println(taskList.deleteTask(taskNumber));","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"limweiliang"},"content":"                sayNumberOfTasksInList();","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"limweiliang"},"content":"            case \"list\":","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"limweiliang"},"content":"                sayText(\"Here\u0027s the current list of tasks:\");","lastModifiedDate":"2022-01-20"},{"lineNumber":89,"author":{"gitId":"limweiliang"},"content":"                System.out.println(taskList);","lastModifiedDate":"2022-01-20"},{"lineNumber":90,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"limweiliang"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"limweiliang"},"content":"                shutdown();","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"limweiliang"},"content":"            default:","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"limweiliang"},"content":"                sayText(\"That\u0027s an invalid command. Please try again.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":97,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"limweiliang"},"content":"        } catch (AthenaInputException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"limweiliang"},"content":"            sayText(e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"limweiliang"},"content":"        // Save the updated list to hard disk when needed","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"limweiliang"},"content":"        if (taskList.wasModified()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"limweiliang"},"content":"            try {","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"limweiliang"},"content":"                saveToDisk();","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"limweiliang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"limweiliang"},"content":"                sayText(\"I encountered a problem saving to disk: \" + e.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"limweiliang"},"content":"    private int readTaskNumberFromInput(String input) throws AthenaInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"limweiliang"},"content":"        int taskNumber \u003d -1;","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"limweiliang"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"limweiliang"},"content":"            taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"limweiliang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"limweiliang"},"content":"            throw new AthenaInputException(ErrorCode.MISSING_TASK_NUMBER);","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"limweiliang"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e this.taskList.getNumberOfTasks()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"limweiliang"},"content":"            throw new AthenaInputException(ErrorCode.INVALID_TASK_NUMBER);","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"limweiliang"},"content":"            return taskNumber;","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"limweiliang"},"content":"    private String readTaskNameForTodo(String input) throws AthenaInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"limweiliang"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"limweiliang"},"content":"            throw new AthenaInputException(ErrorCode.MISSING_TASK_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"limweiliang"},"content":"        return input.strip();","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":132,"author":{"gitId":"limweiliang"},"content":"    private String[] readTaskNameAndDateTime(String input, String separator) throws AthenaInputException {","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"limweiliang"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"limweiliang"},"content":"            throw new AthenaInputException(ErrorCode.MISSING_TASK_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"limweiliang"},"content":"        } else if (!input.contains(separator)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"limweiliang"},"content":"            throw new AthenaInputException(ErrorCode.MISSING_TASK_DATETIME);","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"limweiliang"},"content":"            // Split input into task name and datetime","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"limweiliang"},"content":"            String[] taskNameAndDate \u003d input.split(separator, 2);","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"limweiliang"},"content":"            taskNameAndDate[0] \u003d taskNameAndDate[0].strip();","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"limweiliang"},"content":"            taskNameAndDate[1] \u003d taskNameAndDate[1].strip();","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"limweiliang"},"content":"            // Check that the required fields are present","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"limweiliang"},"content":"            if (taskNameAndDate[0].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"limweiliang"},"content":"                throw new AthenaInputException(ErrorCode.MISSING_TASK_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"limweiliang"},"content":"            } else if (taskNameAndDate[1].equals(\"\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"limweiliang"},"content":"                throw new AthenaInputException(ErrorCode.MISSING_TASK_DATETIME);","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"limweiliang"},"content":"            return taskNameAndDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":151,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":152,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":153,"author":{"gitId":"limweiliang"},"content":"    public boolean isActive() {","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"limweiliang"},"content":"        return this.isActive;","lastModifiedDate":"2022-01-20"},{"lineNumber":155,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"limweiliang"},"content":"    private void shutdown() {","lastModifiedDate":"2022-01-20"},{"lineNumber":158,"author":{"gitId":"limweiliang"},"content":"        this.isActive \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"limweiliang"},"content":"        sayText(\"Farewell!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"limweiliang"},"content":"    private static void sayText(String text) {","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"limweiliang"},"content":"        System.out.println(\"Athena: \" + text);","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":166,"author":{"gitId":"limweiliang"},"content":"    private void sayTaskAddingLines(String taskString) {","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"limweiliang"},"content":"        sayText(\"Okay, I\u0027ve added this task to your list.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":168,"author":{"gitId":"limweiliang"},"content":"        System.out.println(taskString);","lastModifiedDate":"2022-01-20"},{"lineNumber":169,"author":{"gitId":"limweiliang"},"content":"        sayNumberOfTasksInList();","lastModifiedDate":"2022-01-20"},{"lineNumber":170,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"limweiliang"},"content":"    private void sayNumberOfTasksInList() {","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"limweiliang"},"content":"        if (this.taskList.getNumberOfTasks() \u003d\u003d 1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"limweiliang"},"content":"            sayText(\"Now you have 1 task in your list.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":175,"author":{"gitId":"limweiliang"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":176,"author":{"gitId":"limweiliang"},"content":"            sayText(String.format(\"Now you have %d tasks in your list.\", this.taskList.getNumberOfTasks()));","lastModifiedDate":"2022-01-20"},{"lineNumber":177,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":178,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":179,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":180,"author":{"gitId":"limweiliang"},"content":"    private void saveToDisk() throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"limweiliang"},"content":"        java.nio.file.Path directoryPath \u003d Paths.get(SAVE_DIRECTORY);","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"limweiliang"},"content":"        java.nio.file.Path savePath \u003d directoryPath.resolve(SAVE_FILE_NAME);","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":184,"author":{"gitId":"limweiliang"},"content":"        // Create the data directory if necessary","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"limweiliang"},"content":"        if (!Files.exists(directoryPath)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"limweiliang"},"content":"            Files.createDirectory(directoryPath);","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"limweiliang"},"content":"        // Save the file, overriding any existing save","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"limweiliang"},"content":"        ArrayList\u003cString\u003e taskListTextFormat \u003d taskList.getSaveRepresentation();","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"limweiliang"},"content":"        Files.write(savePath, taskListTextFormat);","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":193,"author":{"gitId":"limweiliang"},"content":"    private void loadFromDisk(java.nio.file.Path savePath) throws IOException {","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"limweiliang"},"content":"        List\u003cString\u003e taskListTextFormat \u003d Files.readAllLines(savePath);","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"limweiliang"},"content":"        taskList \u003d  new TaskList(taskListTextFormat);","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"limweiliang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-20"},{"lineNumber":199,"author":{"gitId":"limweiliang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":200,"author":{"gitId":"limweiliang"},"content":"        Athena athena \u003d new Athena();","lastModifiedDate":"2022-01-20"},{"lineNumber":201,"author":{"gitId":"limweiliang"},"content":"        while (athena.isActive()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":202,"author":{"gitId":"limweiliang"},"content":"            // System.out.print(\"You: \");","lastModifiedDate":"2022-01-20"},{"lineNumber":203,"author":{"gitId":"limweiliang"},"content":"            String rawInput \u003d scanner.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":204,"author":{"gitId":"limweiliang"},"content":"            athena.execute(rawInput);","lastModifiedDate":"2022-01-20"},{"lineNumber":205,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":206,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":207,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":207}},{"path":"src/main/java/AthenaInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"public class AthenaInputException extends Exception {","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"    private final ErrorCode errorCode;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"    public AthenaInputException(ErrorCode errorCode) {","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"        this.errorCode \u003d errorCode;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"        switch (errorCode) {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"        case MISSING_TASK_NUMBER:","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"            return(\"Error. Please provide a valid task number.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"        case INVALID_TASK_NUMBER:","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"            return(\"Error. There is no such task. Please try again.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"        case MISSING_TASK_NAME:","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"            return(\"Error. Please provide a task name.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"        case MISSING_TASK_DATETIME:","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"            return(\"Error. Please provide a date and time.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"        case INVALID_TASK_DATETIME:","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"            return(\"Error. Please enter the date and time in the following format: dd/mm/yyyy hh:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"        default:","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"            return(\"\"); // Should not get here.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"            // No fallthrough","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"limweiliang":31}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"    private static final DateTimeFormatter outputFormatter \u003d","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\");","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDate, outputFormatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    public String getSaveString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"        return super.getSaveString() + \"|\" + dueDate.format(outputFormatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    public String getIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"        return \"D\";","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"        return super.toString() + String.format(\" (by: %s)\", dueDate.format(outputFormatter));","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":34}},{"path":"src/main/java/ErrorCode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"public enum ErrorCode {","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"    MISSING_TASK_NUMBER,","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"    INVALID_TASK_NUMBER,","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"    MISSING_TASK_NAME,","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"    MISSING_TASK_DATETIME,","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"    INVALID_TASK_DATETIME","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"limweiliang":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"// STRETCH GOAL: Add a duration for event?","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"    private static final DateTimeFormatter outputFormatter \u003d","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\");","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    private final LocalDateTime eventDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"    public Event(String description, LocalDateTime eventDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    public Event(String description, String eventDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"        this.eventDate \u003d LocalDateTime.parse(eventDate, outputFormatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    public String getSaveString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"        return super.getSaveString() + \"|\" + eventDate.format(outputFormatter);","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    public String getIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"        return \"E\";","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"        return super.toString() + String.format(\" (at: %s)\", eventDate.format(outputFormatter));","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":34}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"    private final String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"    private boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"    // Returns the icon of the type of task","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"    public abstract String getIcon();","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"    public String getSaveString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"        return getIcon() + \"|\" + (isDone ? 1 : 0) + \"|\" + description;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"        String completionMark \u003d (this.isDone? \"X\" : \" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"        return String.format(\"[%s][%s] %s\", getIcon(), completionMark, this.description);","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":30}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"public class TaskList {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"    private boolean wasModified;","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"    // Known bug - code will break if user input includes |","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"    public TaskList(List\u003cString\u003e saveTextFormat) {","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"        this();","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"        for (int i \u003d 0; i \u003c saveTextFormat.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"            String taskSaveString \u003d saveTextFormat.get(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"            String[] taskParams \u003d taskSaveString.split(\"\\\\|\");","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"            switch (taskParams[0]) {","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"            case \"T\":","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"                taskList.add(new ToDo(taskParams[2]));","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"            case \"E\":","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"                taskList.add(new Event(taskParams[2], taskParams[3]));","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"            case \"D\":","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"                taskList.add(new Deadline(taskParams[2], taskParams[3]));","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"limweiliang"},"content":"            default:","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"limweiliang"},"content":"                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"limweiliang"},"content":"            if (taskParams[1].equals(\"1\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"limweiliang"},"content":"                markTaskAsDone(i + 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"limweiliang"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"limweiliang"},"content":"    public void resetLastModified() {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"limweiliang"},"content":"    public boolean wasModified() {","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"limweiliang"},"content":"        return wasModified;","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"limweiliang"},"content":"    public String addTodo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"limweiliang"},"content":"        ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"limweiliang"},"content":"        taskList.add(toDo);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"limweiliang"},"content":"        return toDo.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"limweiliang"},"content":"    public String addEvent(String description, LocalDateTime eventDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"limweiliang"},"content":"        Event event \u003d new Event(description, eventDate);","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"limweiliang"},"content":"        taskList.add(event);","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"limweiliang"},"content":"        return event.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"limweiliang"},"content":"    public String addDeadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"limweiliang"},"content":"        Deadline deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"limweiliang"},"content":"        taskList.add(deadline);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"limweiliang"},"content":"        return deadline.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"limweiliang"},"content":"    // Return the relevant Task in string form","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"limweiliang"},"content":"    public String markTaskAsDone(int taskNumber) {","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"limweiliang"},"content":"        Task task \u003d taskList.get(taskNumber - 1); // assume valid taskNumber","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"limweiliang"},"content":"        task.markAsDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"limweiliang"},"content":"        return task.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"limweiliang"},"content":"    // Return the relevant Task in string form","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"limweiliang"},"content":"    public String markTaskAsNotDone(int taskNumber) {","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"limweiliang"},"content":"        Task task \u003d taskList.get(taskNumber - 1); // assume valid taskNumber","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"limweiliang"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"limweiliang"},"content":"        return task.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":85,"author":{"gitId":"limweiliang"},"content":"    // Return the deleted Task in String form. Assume valid inputs.","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"limweiliang"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"limweiliang"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"limweiliang"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"limweiliang"},"content":"        wasModified \u003d true;","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"limweiliang"},"content":"        return task.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":92,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":93,"author":{"gitId":"limweiliang"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"limweiliang"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"limweiliang"},"content":"    public ArrayList\u003cString\u003e getSaveRepresentation() {","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"limweiliang"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"limweiliang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"limweiliang"},"content":"            output.add(task.getSaveString());","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"limweiliang"},"content":"        return output;","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":105,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":106,"author":{"gitId":"limweiliang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"limweiliang"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"limweiliang"},"content":"            return \"Empty list!\";","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"limweiliang"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"limweiliang"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"limweiliang"},"content":"            output.append(String.format(\"%d. %s\\n\", i, taskList.get(i - 1)));","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"limweiliang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":114,"author":{"gitId":"limweiliang"},"content":"        return output.toString().strip();","lastModifiedDate":"2022-01-20"},{"lineNumber":115,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":116,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":116}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"    public String getIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"        return \"T\";","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limweiliang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"limweiliang"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"limweiliang"},"content":"deadline return book /by this Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"limweiliang"},"content":"event project meeting /at Tues 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"limweiliang"},"content":"mark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"limweiliang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"limweiliang"},"content":"mark 3","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"limweiliang"},"content":"unmark 2","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"limweiliang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"limweiliang"},"content":"deadline do homework /by no idea :)","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"limweiliang"},"content":"delete 1","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"limweiliang"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"limweiliang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"limweiliang"},"content":"invalidcommand","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"limweiliang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"limweiliang"},"content":"todo","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"limweiliang"},"content":"deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"event","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"limweiliang"},"content":"deadline noby","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"limweiliang"},"content":"event noat","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"limweiliang"},"content":"deadline /by notaskname","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"limweiliang"},"content":"event /at notaskname","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"deadline name /by","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"limweiliang"},"content":"event name /at","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"limweiliang"},"content":"mark -15","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"limweiliang"},"content":"mark","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"limweiliang"},"content":"unmark 23","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"limweiliang"},"content":"delete 2323233","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"limweiliang"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"limweiliang":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"limweiliang"},"content":"java -classpath ..\\bin Athena \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"limweiliang":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"limweiliang"},"content":"java -classpath ../bin Athena \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"limweiliang":1}}]
