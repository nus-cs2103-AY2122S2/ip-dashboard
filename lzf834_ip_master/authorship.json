[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lzf834":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"Duke is a task managing desktop application that can be used via both the Command Line Interface (CLI) ","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"or the Graphical User Interface (GUI).","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"## Quick Start","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"1. Ensure you have [Java 11](https://www.oracle.com/java/technologies/downloads/#java11) installed","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"2. Download Duke.jar from [here](https://github.com/lzf834/ip/releases/tag/Level-10)","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"3. Run the app by double-clicking the .jar file","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"4. Type in your commands and hit `Enter` to execute them.","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"An in-depth list of commands can be found below.","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"- Add different types of tasks (***Todo***, ***Events*** and ***Deadlines***)","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"- Date and time for ***Events*** and ***Deadlines***","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"- `list` out all your tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"- `mark`/`unmark` your tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"- `delete` your old or completed tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"- `find` your tasks!","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"- `reset` ALL your tasks","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"### Adding a ***Todo*** Task","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"Creates a new Todo task along with the name of the task provided.","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"Format: ","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"- `todo TASK_NAME`","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"  - **ALL** new tasks are marked as Incompleted by default.","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"  - `TASK_NAME` must not be empty.","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":" ","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"Example: ","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"- `todo CS2103 IP` ","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"  - Creates a new ***Todo*** task called `CS2103 IP`.","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"### Adding an ***Event*** Task","lastModifiedDate":"2022-02-12"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"Creates a new Event task along with the name of the task provided, as well as the **Date** and **Time** (Optional) of the event.","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"Format: ","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"- `event TASK_NAME /at TASK_DATE TASK_TIME`","lastModifiedDate":"2022-02-12"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"  - **ALL** new tasks are marked as Incompleted by default.","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"  - `TASK_NAME` must not be empty.","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"  - `/at` **MUST** be added.","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"  - `TASK_DATE` must not be empty (Format is in **YYYY-MM-DD**).","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"  - `TASK_TIME` is **optional** (Format is in **HH:mm**).","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":" ","lastModifiedDate":"2022-02-12"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"Example: ","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"- `event CS2103 TP meeting /at 2022-02-24 09:00` ","lastModifiedDate":"2022-02-12"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"  - Creates a new ***Event*** task called `CS2103 TP meeting (at 24 Feb 2022 09:00)`.","lastModifiedDate":"2022-02-12"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"- `event CS2103 TP meeting /at 2022-02-24` ","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"  - Creates a new ***Event*** task called `CS2103 TP meeting (at 24 Feb 2022)`.","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"  ","lastModifiedDate":"2022-02-12"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"### Adding a ***Deadline*** Task","lastModifiedDate":"2022-02-12"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"Creates a new Deadline task along with the name of the task provided, as well as the **Date** and **Time** (Optional) of the event.","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"Format: ","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"- `deadline TASK_NAME /by TASK_DATE TASK_TIME`","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"  - **ALL** new tasks are marked as Incompleted by default.","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"  - `TASK_NAME` must not be empty.","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"  - `/by` **MUST** be added.","lastModifiedDate":"2022-02-12"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"  - `TASK_DATE` must not be empty (Format is in **YYYY-MM-DD**).","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"  - `TASK_TIME` is **optional** (Format is in **HH:mm**).","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":" ","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"Example: ","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"- `deadline CS2103 tutorial /by 2022-02-24 09:00` ","lastModifiedDate":"2022-02-12"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"  - Creates a new ***Deadline*** task called `CS2103 tutorial (by 24 Feb 2022 09:00)`.","lastModifiedDate":"2022-02-12"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"- `deadline CS2103 tutorial /by 2022-02-24` ","lastModifiedDate":"2022-02-12"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"  - Creates a new ***Deadline*** task called `CS2103 tutorial (by 24 Feb 2022)`.","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"  ","lastModifiedDate":"2022-02-12"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"### Listing out all your tasks with `list`","lastModifiedDate":"2022-02-12"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"Lists out all the tasks that have been added to your task list thus far.","lastModifiedDate":"2022-02-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"Format: `list`","lastModifiedDate":"2022-02-12"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"- All your tasks will be displayed in the format `INDEX) [TASK_TYPE][STATUS] NAME (DATE TIME)","lastModifiedDate":"2022-02-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"### Marking and Unmakring tasks as complete/incomplete with `mark` and `unmark`","lastModifiedDate":"2022-02-12"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"Marks the task at the index number entered as complete/incomplete with `[X]/[ ]` respectively.","lastModifiedDate":"2022-02-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"- `mark INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"\t- Marks the task at index number `INDEX` as completed.","lastModifiedDate":"2022-02-12"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"- `unmark INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"\t- Marks the task at index number `INDEX` as incomplete.","lastModifiedDate":"2022-02-12"},{"lineNumber":83,"author":{"gitId":"lzf834"},"content":"\t","lastModifiedDate":"2022-02-12"},{"lineNumber":84,"author":{"gitId":"lzf834"},"content":"Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"lzf834"},"content":"- `mark 1`","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"lzf834"},"content":"- `unmark 1`","lastModifiedDate":"2022-02-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"lzf834"},"content":"### Deleting your tasks with `delete`","lastModifiedDate":"2022-02-12"},{"lineNumber":90,"author":{"gitId":"lzf834"},"content":"Deletes the task at the index number entered.","lastModifiedDate":"2022-02-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"lzf834"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":93,"author":{"gitId":"lzf834"},"content":"- `delete INDEX`","lastModifiedDate":"2022-02-12"},{"lineNumber":94,"author":{"gitId":"lzf834"},"content":"\t- Deletes the task at index number `INDEX`.","lastModifiedDate":"2022-02-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\t","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"lzf834"},"content":"Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":97,"author":{"gitId":"lzf834"},"content":"- `delete 1`","lastModifiedDate":"2022-02-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"lzf834"},"content":"### Find your task with `find`","lastModifiedDate":"2022-02-12"},{"lineNumber":100,"author":{"gitId":"lzf834"},"content":"Returns a list of tasks, along with their index number, that contains the text entered.","lastModifiedDate":"2022-02-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"lzf834"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":103,"author":{"gitId":"lzf834"},"content":"- `find KEYWORDS`","lastModifiedDate":"2022-02-12"},{"lineNumber":104,"author":{"gitId":"lzf834"},"content":"\t- finds and lists out all tasks with `KEYWORDS` in their name.","lastModifiedDate":"2022-02-12"},{"lineNumber":105,"author":{"gitId":"lzf834"},"content":"\t- Function is case-insensitive.","lastModifiedDate":"2022-02-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\t","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"lzf834"},"content":"Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":108,"author":{"gitId":"lzf834"},"content":"- `find tutorial`","lastModifiedDate":"2022-02-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"lzf834"},"content":"### Clear all your tasks in the Duke with `reset`","lastModifiedDate":"2022-02-12"},{"lineNumber":111,"author":{"gitId":"lzf834"},"content":"Empties out the tasks in the Duke.","lastModifiedDate":"2022-02-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"lzf834"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"lzf834"},"content":"- `reset`","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"lzf834"},"content":"\t- Empties out the tasks in the Duke.","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\t","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"lzf834"},"content":"Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"lzf834"},"content":"- `reset`","lastModifiedDate":"2022-02-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"lzf834"},"content":"### Exiting the application with `bye`","lastModifiedDate":"2022-02-12"},{"lineNumber":121,"author":{"gitId":"lzf834"},"content":"Format:","lastModifiedDate":"2022-02-12"},{"lineNumber":122,"author":{"gitId":"lzf834"},"content":"- `bye`","lastModifiedDate":"2022-02-12"},{"lineNumber":123,"author":{"gitId":"lzf834"},"content":"\t- The application will save all your tasks locally and exit immediately.","lastModifiedDate":"2022-02-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"lzf834"},"content":"Example:","lastModifiedDate":"2022-02-12"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"- `bye`","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"lzf834":108,"-":18}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":" * Deadline Class that is a subclass of task, has additional date and time attributes","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    private LocalTime time \u003d null;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"     * Constructor for Deadline Class","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"     * Input is taken as {DATE TIME}, where date is in YYYY-MM-DD format and time is in HH:mm format","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"     * @param taskName the details/name of the task","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"     * @param dateTime the date and time in string format","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException checks for any invalid input into date and time","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    public Deadline(String taskName, String dateTime) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"        super(taskName);","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"        dateTime \u003d dateTime.trim();","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"        String[] splitString \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"        if (splitString.length \u003d\u003d 1) { // Only date is given","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"                this.date \u003d LocalDate.parse(splitString[0]);","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(\"Invalid input into date\");","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"        } else if (splitString.length \u003d\u003d 2) { // Date and time is given","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"                this.date \u003d LocalDate.parse(splitString[0]);","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"                this.time \u003d LocalTime.parse(splitString[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(\"Invalid input into date/time\");","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(\"Please input for a date (optional: time)\");","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"     * Getter for date","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"     * @return date","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"        return date;","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"     * Getter for time","lastModifiedDate":"2022-01-30"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"     * @return time","lastModifiedDate":"2022-01-30"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2022-01-30"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"        return time;","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"     * Method to print the Deadline task out, overrides the method in the superclass","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"    public void printTask() {","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-02-12"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"     * Overrides the toString method, used for JUnit testing ensuring the correct output is printed out","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"     * @return String that goes into the output","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"        result +\u003d \"[D]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"        if (this.getDone()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"            result +\u003d \"[X]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"lzf834"},"content":"            result +\u003d \"[ ]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"lzf834"},"content":"        result +\u003d \" \" + this.getTaskName() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"lzf834"},"content":"        if (this.time !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"lzf834"},"content":"            result +\u003d \" \" + this.time.format(DateTimeFormatter.ofPattern((\"HH:mm\")));","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"lzf834"},"content":"        result +\u003d \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"lzf834"},"content":"        return result;","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"lzf834"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"lzf834"},"content":"        if (o instanceof Deadline) {","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"lzf834"},"content":"            Deadline newo \u003d (Deadline) o;","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"lzf834"},"content":"            if (this.toString().equals(newo.toString())) {","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"lzf834"},"content":"                return true;","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"lzf834"},"content":"        return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"lzf834":104}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-31"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-31"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-31"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-31"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-31"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-31"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-31"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-31"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-31"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"    private void flip() {","lastModifiedDate":"2022-01-31"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-31"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"        db.flip();","lastModifiedDate":"2022-01-31"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"        return db;","lastModifiedDate":"2022-01-31"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"lzf834":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":" * Duke class which is the main entry point when starting up the application","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"public class Duke {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"     * Constructor for Duke class","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    public Duke(String path, String fileDir) {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"        this.storage \u003d new Storage(path, fileDir);","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"        //Reading arraylist from data.txt","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"            this.taskList \u003d storage.load();","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"     * method to run the application and start taking inputs","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"    public void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"        ui.startUp();","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"        String inputData;","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"        boolean hasEnded \u003d false;","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"        while (!hasEnded) {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"            try {","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"                inputData \u003d scanner.nextLine();","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"                hasEnded \u003d parser.takeInput(inputData, taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"                System.out.println(e);","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"                ui.printSeparator();","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"            storage.storeTasks(taskList.getTasks());","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"     * point of entry for the application","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"     * @param args","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"        new Duke(\"c:/data/data.txt\", \"c:/data\").run();","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"    public String getResponse(String input) throws DukeException, IOException {","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"            String output \u003d parser.guiTakeInput(input, taskList);","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"            return output;","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"            return e.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"lzf834":71}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":" * Exception class for all exceptions thrown when Duke is being run","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"        super(message);","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lzf834":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":" * Event Class that is a subclass of task, has additional date and time attributes","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"    private LocalDate date;","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    private LocalTime time \u003d null;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"     * Constructor for Event Class","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"     * Input is taken as {DATE TIME}, where date is in YYYY-MM-DD format and time is in HH:mm format","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"     * @param taskName the details/name of the task","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"     * @param dateTime the date and time in string format","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException checks for any invalid input into date and time","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    public Event(String taskName, String dateTime) throws DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"        super(taskName);","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"        dateTime \u003d dateTime.trim();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"        String[] splitString \u003d dateTime.split(\" \");","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        if (splitString.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"                this.date \u003d LocalDate.parse(splitString[0]);","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(\"Invalid input into date\");","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"        } else if (splitString.length \u003d\u003d 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"            try {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"                this.date \u003d LocalDate.parse(splitString[0]);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"                this.time \u003d LocalTime.parse(splitString[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(\"Invalid input into date/time\");","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(\"Please input for a date (optional: time)\");","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"        return time;","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"        return date;","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"     * Method to print the Deadline task out, overrides the method in the superclass","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"    public void printTask() {","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"     * Overrides the toString method, used for JUnit testing ensuring the correct output is printed out","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"     * @return String that goes into the output","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"        result +\u003d \"[E]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"        if (this.getDone()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"            result +\u003d \"[X]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"            result +\u003d \"[ ]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"        result +\u003d \" \" + this.getTaskName() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"        if ((this.time !\u003d null)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"            result +\u003d \" \" + this.time.format(DateTimeFormatter.ofPattern((\"HH:mm\")));","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"        result +\u003d \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"        return result;","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"lzf834"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"lzf834"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"lzf834"},"content":"            Event newo \u003d (Event) o;","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"lzf834"},"content":"            if (this.toString().equals(newo.toString())) {","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"lzf834"},"content":"                return true;","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"lzf834"},"content":"        return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"lzf834":92}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-31"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-31"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-31"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-31"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-31"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-31"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"public class Launcher {","lastModifiedDate":"2022-01-31"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-31"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-31"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-31"}],"authorContributionMap":{"lzf834":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    private Duke duke \u003d new Duke(\"c:/data/data.txt\", \"c:/data\");","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"            stage.show();","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lzf834":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Breezy.png\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Siri.png\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"     * Initializes the GUI together with the welcome messages","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"        String welcomeMsg \u003d \"Hi I\u0027m Seeree! Feel free to tell me any tasks you\u0027d like!\";","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        String formatNote \u003d \"NOTE: For events and deadlines format for dates:YYYY-MM-DD. \"","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"                + \"Adding time for events and deadlines are optional, but the format is in the form HH:mm\";","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"                DialogBox.getDukeDialog(welcomeMsg, dukeImage));","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"                DialogBox.getDukeDialog(formatNote, dukeImage));","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"    private void handleUserInput() throws DukeException, IOException {","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"            Platform.exit();","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"        );","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lzf834":68}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":" * Class that specifically deals with input from the user and calls the respective class and methods","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"public class Parser {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"    // String messages for printing/output","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    private final String BYE_MSG \u003d \"~BYE!~ Come back to Duke anytime\";","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"    private final String RESET_MSG \u003d \"List of tasks has been resetted\";","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    private final String INVALID_CMD \u003d \"You have entered an invalid instruction\";","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    private final String MISSING_DATETIME \u003d \"Description of deadline must include a date/time!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"     * Empty constructor for the Parser class","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    public Parser() {}","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"     * Method to take in the input that is passed by the user and makes sense of what to do from the input","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"     * @param input String input by the user","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"     * @param taskList Current taskList","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"     * @return a boolean to check when to stop taking inputs from the user","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException checks for any invalid instructions that have been inputted by the user","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"    public boolean takeInput(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"            System.out.println(BYE_MSG);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"            return true;","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"        } else if (input.equals(\"list\")) { //Check if input \u003d\u003d list","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"            taskList.printList();","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"        } else if (input.equals(\"reset\")) { //Instruction to reset the arraylist","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"            taskList.reset();","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"            System.out.println(RESET_MSG);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        } else if (input.contains(\"unmark\") || input.contains(\"delete\") || input.contains(\"mark\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"            //Check if input \u003d\u003d unmark or delete or mark","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"            String[] splitString \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"            String instr \u003d splitString[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"            if (splitString.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"                System.out.println(\"Did you miss out the index in your input?\");","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"                //Make sure the string input contains at least 2 parts, command and index","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"                assert splitString.length \u003e\u003d 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"                try {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"                    int index \u003d Integer.parseInt(splitString[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"                    if (instr.equals(\"unmark\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"                        taskList.unmarkTask(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"                    } else if (instr.equals(\"mark\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"                        taskList.markTask(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"                    } else if (instr.equals(\"delete\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"                        taskList.deleteTask(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"                    } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"                        throw new DukeException(INVALID_CMD);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"        } else if (input.contains(\"find\")) { //input is find","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"            String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"            if (splitString.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(\"Please input the keyword(s) for find\");","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"            assert splitString.length \u003e\u003d 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"            String command \u003d splitString[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"            String text \u003d splitString[1];","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"            if (command.equals(\"find\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"                taskList.find(text);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(INVALID_CMD);","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"        } else if (input.contains(\"todo\") || input.contains(\"event\") || input.contains(\"deadline\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"            //input is a new type of task","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"            //identify type of task","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"            String[] stringArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"            //task has no task detail/name","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"            if (stringArray.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(\"Description of task cannot be empty!\");","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"lzf834"},"content":"            assert stringArray.length \u003e\u003d 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"lzf834"},"content":"            String taskType \u003d stringArray[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"lzf834"},"content":"            String taskDetails \u003d stringArray[1];","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"lzf834"},"content":"            Task newTask \u003d new Task(\"\");","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"lzf834"},"content":"            if (taskType.equals(\"todo\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"lzf834"},"content":"                newTask \u003d new Todo(taskDetails);","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"lzf834"},"content":"            } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"lzf834"},"content":"                String[] stringSplit \u003d taskDetails.split(\"/by\");","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"lzf834"},"content":"                if (stringSplit.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"lzf834"},"content":"                    throw new DukeException(MISSING_DATETIME + \" Missed out a /by?\");","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"lzf834"},"content":"                String details \u003d stringSplit[0].trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"lzf834"},"content":"                String dateTime \u003d stringSplit[1].trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"lzf834"},"content":"                newTask \u003d new Deadline(details, dateTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"lzf834"},"content":"            } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"lzf834"},"content":"                String[] splitString \u003d taskDetails.split(\"/at\");","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"lzf834"},"content":"                if (splitString.length \u003c 2) {","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"lzf834"},"content":"                    throw new DukeException(MISSING_DATETIME + \" Missed out a /at?\");","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"lzf834"},"content":"                String details \u003d splitString[0].trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"lzf834"},"content":"                String dateTime \u003d splitString[1].trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"lzf834"},"content":"                newTask \u003d new Event(details, dateTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"lzf834"},"content":"            for (Task t : taskList.getTasks()) {","lastModifiedDate":"2022-02-12"},{"lineNumber":113,"author":{"gitId":"lzf834"},"content":"                if (t.toString().equals(newTask.toString())) {","lastModifiedDate":"2022-02-12"},{"lineNumber":114,"author":{"gitId":"lzf834"},"content":"                    throw new DukeException(\"This task already exists!\");","lastModifiedDate":"2022-02-12"},{"lineNumber":115,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":116,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":117,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":118,"author":{"gitId":"lzf834"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(\"no such task type\");","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"lzf834"},"content":"        Ui.printSeparator();","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"lzf834"},"content":"        return false;","lastModifiedDate":"2022-01-24"},{"lineNumber":124,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":125,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"lzf834"},"content":"     * Takes an input string and returns the relevant details to be printed out by the GUI depending on instruction","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"lzf834"},"content":"     * @param input String input","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"lzf834"},"content":"     * @param taskList taskList of tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"lzf834"},"content":"     * @return a string containing the details to be printed out","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"lzf834"},"content":"    public String guiTakeInput(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":134,"author":{"gitId":"lzf834"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":135,"author":{"gitId":"lzf834"},"content":"            Storage.storeTasks(taskList.getTasks());","lastModifiedDate":"2022-02-12"},{"lineNumber":136,"author":{"gitId":"lzf834"},"content":"            return BYE_MSG;","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"lzf834"},"content":"        } else if (input.equals(\"list\")) { //Check if input \u003d\u003d list","lastModifiedDate":"2022-02-01"},{"lineNumber":138,"author":{"gitId":"lzf834"},"content":"            return taskList.guiPrintList();","lastModifiedDate":"2022-02-01"},{"lineNumber":139,"author":{"gitId":"lzf834"},"content":"        } else if (input.equals(\"reset\")) { //Instruction to reset the arraylist","lastModifiedDate":"2022-02-01"},{"lineNumber":140,"author":{"gitId":"lzf834"},"content":"            taskList.reset();","lastModifiedDate":"2022-02-01"},{"lineNumber":141,"author":{"gitId":"lzf834"},"content":"            return RESET_MSG;","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"lzf834"},"content":"        } else if (input.contains(\"unmark\") || input.contains(\"delete\") || input.contains(\"mark\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":143,"author":{"gitId":"lzf834"},"content":"            //Check if input \u003d\u003d unmark or delete or mark","lastModifiedDate":"2022-02-01"},{"lineNumber":144,"author":{"gitId":"lzf834"},"content":"            String[] splitString \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2022-02-01"},{"lineNumber":145,"author":{"gitId":"lzf834"},"content":"            String instr \u003d splitString[0];","lastModifiedDate":"2022-02-01"},{"lineNumber":146,"author":{"gitId":"lzf834"},"content":"            if (splitString.length \u003c 2) {","lastModifiedDate":"2022-02-01"},{"lineNumber":147,"author":{"gitId":"lzf834"},"content":"                return \"Did you miss out the index in your input?\";","lastModifiedDate":"2022-02-01"},{"lineNumber":148,"author":{"gitId":"lzf834"},"content":"            } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":149,"author":{"gitId":"lzf834"},"content":"                assert splitString.length \u003e\u003d 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"lzf834"},"content":"                try {","lastModifiedDate":"2022-02-01"},{"lineNumber":151,"author":{"gitId":"lzf834"},"content":"                    int index \u003d Integer.parseInt(splitString[1]);","lastModifiedDate":"2022-02-01"},{"lineNumber":152,"author":{"gitId":"lzf834"},"content":"                    return modifyTasks(instr, index, taskList);","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"lzf834"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":154,"author":{"gitId":"lzf834"},"content":"                    return e.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":155,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-02-01"},{"lineNumber":156,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":157,"author":{"gitId":"lzf834"},"content":"        } else if (input.contains(\"find\")) { //input is find","lastModifiedDate":"2022-02-01"},{"lineNumber":158,"author":{"gitId":"lzf834"},"content":"            String[] splitString \u003d input.split(\" \", 2);","lastModifiedDate":"2022-02-01"},{"lineNumber":159,"author":{"gitId":"lzf834"},"content":"            return parseFind(splitString, taskList);","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"lzf834"},"content":"        } else if (input.contains(\"todo\") || input.contains(\"event\") || input.contains(\"deadline\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"lzf834"},"content":"            //input is a new type of task","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"lzf834"},"content":"            String[] stringArray \u003d input.split(\" \", 2);","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"lzf834"},"content":"            return parseNewTask(stringArray, taskList);","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(\"No such task type\");","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"lzf834"},"content":"     * Abstracted method to deal with unmark, mark and delete command","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"lzf834"},"content":"     * @param cmd the string command passed in","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"lzf834"},"content":"     * @param index index of task within tasklist","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"lzf834"},"content":"     * @param taskList the tasklist itself","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"lzf834"},"content":"     * @return a String output of the current tasklist after modification","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException for any invalid command given","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"lzf834"},"content":"    public String modifyTasks(String cmd, Integer index, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"lzf834"},"content":"        if (cmd.equals(\"unmark\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"lzf834"},"content":"            return taskList.guiUnmarkTask(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"lzf834"},"content":"        } else if (cmd.equals(\"mark\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"lzf834"},"content":"            return taskList.guiMarkTask(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"lzf834"},"content":"        } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"lzf834"},"content":"            return taskList.guiDeleteTask(index);","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(INVALID_CMD);","lastModifiedDate":"2022-02-06"},{"lineNumber":186,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"lzf834"},"content":"     * Abstracted method call for find command","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"lzf834"},"content":"     * @param splitString input that has been split into command and text","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"lzf834"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"lzf834"},"content":"     * @return String containing index and tasks matching the text input given","lastModifiedDate":"2022-02-06"},{"lineNumber":194,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException for invalid commands and empty text to find","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"lzf834"},"content":"    public String parseFind(String[] splitString, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":197,"author":{"gitId":"lzf834"},"content":"        if (splitString.length \u003c 2) {","lastModifiedDate":"2022-02-01"},{"lineNumber":198,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(\"Please input the keyword(s) for find\");","lastModifiedDate":"2022-02-01"},{"lineNumber":199,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":200,"author":{"gitId":"lzf834"},"content":"        assert splitString.length \u003e\u003d 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":201,"author":{"gitId":"lzf834"},"content":"        String command \u003d splitString[0];","lastModifiedDate":"2022-02-01"},{"lineNumber":202,"author":{"gitId":"lzf834"},"content":"        String text \u003d splitString[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":203,"author":{"gitId":"lzf834"},"content":"        if (command.equals(\"find\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":204,"author":{"gitId":"lzf834"},"content":"            return taskList.guiFind(text);","lastModifiedDate":"2022-02-01"},{"lineNumber":205,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":206,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(INVALID_CMD);","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":209,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":210,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"lzf834"},"content":"     * Abstracted method call for adding new tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"lzf834"},"content":"     * @param stringArray input that has been split into command and task details","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"lzf834"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"lzf834"},"content":"     * @return String containing confirmation message and task that has been added","lastModifiedDate":"2022-02-06"},{"lineNumber":215,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException for invalid commands/commands without their required details","lastModifiedDate":"2022-02-06"},{"lineNumber":216,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":217,"author":{"gitId":"lzf834"},"content":"    public String parseNewTask(String[] stringArray, TaskList taskList) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":218,"author":{"gitId":"lzf834"},"content":"        //task has no task detail/name","lastModifiedDate":"2022-02-01"},{"lineNumber":219,"author":{"gitId":"lzf834"},"content":"        if (stringArray.length \u003c 2) {","lastModifiedDate":"2022-02-01"},{"lineNumber":220,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(\"Description of task cannot be empty!\");","lastModifiedDate":"2022-02-01"},{"lineNumber":221,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":222,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":223,"author":{"gitId":"lzf834"},"content":"        assert stringArray.length \u003e\u003d 2;","lastModifiedDate":"2022-02-06"},{"lineNumber":224,"author":{"gitId":"lzf834"},"content":"        String taskType \u003d stringArray[0];","lastModifiedDate":"2022-02-01"},{"lineNumber":225,"author":{"gitId":"lzf834"},"content":"        String taskDetails \u003d stringArray[1];","lastModifiedDate":"2022-02-01"},{"lineNumber":226,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":227,"author":{"gitId":"lzf834"},"content":"        Task newTask \u003d new Task(\"\");","lastModifiedDate":"2022-02-01"},{"lineNumber":228,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":229,"author":{"gitId":"lzf834"},"content":"        //identify new task","lastModifiedDate":"2022-02-06"},{"lineNumber":230,"author":{"gitId":"lzf834"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":231,"author":{"gitId":"lzf834"},"content":"            newTask \u003d new Todo(taskDetails);","lastModifiedDate":"2022-02-01"},{"lineNumber":232,"author":{"gitId":"lzf834"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":233,"author":{"gitId":"lzf834"},"content":"            String[] stringSplit \u003d taskDetails.split(\"/by\");","lastModifiedDate":"2022-02-01"},{"lineNumber":234,"author":{"gitId":"lzf834"},"content":"            if (stringSplit.length \u003c 2) {","lastModifiedDate":"2022-02-01"},{"lineNumber":235,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(MISSING_DATETIME + \" Missed out a /by?\");","lastModifiedDate":"2022-02-06"},{"lineNumber":236,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":237,"author":{"gitId":"lzf834"},"content":"            String details \u003d stringSplit[0].trim();","lastModifiedDate":"2022-02-01"},{"lineNumber":238,"author":{"gitId":"lzf834"},"content":"            String dateTime \u003d stringSplit[1].trim();","lastModifiedDate":"2022-02-01"},{"lineNumber":239,"author":{"gitId":"lzf834"},"content":"            newTask \u003d new Deadline(details, dateTime);","lastModifiedDate":"2022-02-01"},{"lineNumber":240,"author":{"gitId":"lzf834"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":241,"author":{"gitId":"lzf834"},"content":"            String[] splitString \u003d taskDetails.split(\"/at\");","lastModifiedDate":"2022-02-01"},{"lineNumber":242,"author":{"gitId":"lzf834"},"content":"            if (splitString.length \u003c 2) {","lastModifiedDate":"2022-02-01"},{"lineNumber":243,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(MISSING_DATETIME + \" Missed out a /at?\");","lastModifiedDate":"2022-02-06"},{"lineNumber":244,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":245,"author":{"gitId":"lzf834"},"content":"            String details \u003d splitString[0].trim();","lastModifiedDate":"2022-02-01"},{"lineNumber":246,"author":{"gitId":"lzf834"},"content":"            String dateTime \u003d splitString[1].trim();","lastModifiedDate":"2022-02-01"},{"lineNumber":247,"author":{"gitId":"lzf834"},"content":"            newTask \u003d new Event(details, dateTime);","lastModifiedDate":"2022-02-01"},{"lineNumber":248,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":249,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":250,"author":{"gitId":"lzf834"},"content":"        for (Task t : taskList.getTasks()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":251,"author":{"gitId":"lzf834"},"content":"            if (t.toString().equals(newTask.toString())) {","lastModifiedDate":"2022-02-06"},{"lineNumber":252,"author":{"gitId":"lzf834"},"content":"                throw new DukeException(\"This task already exists!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":253,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":254,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":255,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":256,"author":{"gitId":"lzf834"},"content":"        return taskList.guiAddTask(newTask);","lastModifiedDate":"2022-02-01"},{"lineNumber":257,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":258,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzf834":258}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.io.File;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":" * Class that handles loading and storing data, from and to data.txt file","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":" * Contains 2 attributes passed in when Duke runs","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"public class Storage {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"    private static String path;","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    private static String fileDir;","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"     * Constructor for Storage class","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"     * @param path the path to the storage file from root","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"     * @param fileDir the path to the storage directory from root","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"    public Storage(String path, String fileDir) {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"     * Loads data from data.txt if it exists in local storage","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"     * @return a TaskList filled with tasks recorded in data.txt","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"     * @throws FileNotFoundException if file is not found or inaccessible","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"    public TaskList load() throws FileNotFoundException {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        File file \u003d new File(path); // create a File for the given file path","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"        if (file.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"            Scanner fileScanner \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"                String[] taskLine \u003d fileScanner.nextLine().split(\"~\");","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"                Task task;","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"                String taskType \u003d taskLine[0];","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"                try {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"                    if (taskType.equals(\"T\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"                        task \u003d new Todo(taskLine[2]);","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"                        assert task instanceof Todo;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"                    } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"                        String dateTime \u003d taskLine[3];","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"                        //Time is added","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"                        if (taskLine.length \u003d\u003d 5) {","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"                            dateTime +\u003d \" \" + taskLine[4];","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"                        }","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"                        task \u003d new Deadline(taskLine[2], dateTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"                        assert task instanceof Deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"                    } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"                        String dateTime \u003d taskLine[3];","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"                        //Time is added","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"                        if (taskLine.length \u003d\u003d 5) {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"                            dateTime +\u003d \" \" + taskLine[4];","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"                        }","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"                        task \u003d new Event(taskLine[2], dateTime);","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"                        assert task instanceof Event;","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"                    } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"                        throw new DukeException(\"Invalid task was read\");","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"                    if (taskLine[1].equals(\"X\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"                        task.setDone(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"                    list.addTaskNoPrint(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"                    System.out.println(e);","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"        return list;","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"     * Writes current tasks in TaskList back to data.txt file","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"lzf834"},"content":"     * @param tasks an arrayList of current tasks","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"lzf834"},"content":"    public static void storeTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-12"},{"lineNumber":87,"author":{"gitId":"lzf834"},"content":"        //Saving the changes back to file","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"lzf834"},"content":"        File file \u003d new File(fileDir);","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"lzf834"},"content":"        //if prev file exists, delete it and replace with new empty file","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"lzf834"},"content":"            if (!file.exists()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"lzf834"},"content":"                file.mkdir();","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"lzf834"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"lzf834"},"content":"            System.out.println(e);","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"lzf834"},"content":"        //Writing to empty txt file","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"lzf834"},"content":"            FileWriter fileWriter \u003d new FileWriter(path, false);","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"lzf834"},"content":"            PrintWriter printWriter \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"lzf834"},"content":"            for (Task t: tasks) {","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"lzf834"},"content":"                String taskToAppend \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"lzf834"},"content":"                //Identify task type","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"lzf834"},"content":"                if (t instanceof Todo) {","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"lzf834"},"content":"                    taskToAppend +\u003d \"T~\";","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"lzf834"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"lzf834"},"content":"                    taskToAppend +\u003d \"D~\";","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"lzf834"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"lzf834"},"content":"                    taskToAppend +\u003d \"E~\";","lastModifiedDate":"2022-01-24"},{"lineNumber":112,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"lzf834"},"content":"                //Identify if task is done","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"lzf834"},"content":"                if (t.getDone()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"lzf834"},"content":"                    taskToAppend +\u003d \"X~\";","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"lzf834"},"content":"                } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"lzf834"},"content":"                    taskToAppend +\u003d \" ~\";","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"lzf834"},"content":"                taskToAppend +\u003d t.getTaskName() + \"~\";","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"lzf834"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"lzf834"},"content":"                    Deadline tempTask \u003d (Deadline) t;","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"lzf834"},"content":"                    String date \u003d tempTask.getDate().toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"lzf834"},"content":"                    if (tempTask.getTime() !\u003d null) {","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"lzf834"},"content":"                        date +\u003d \"~\" + tempTask.getTime().toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":127,"author":{"gitId":"lzf834"},"content":"                    taskToAppend +\u003d date.trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":128,"author":{"gitId":"lzf834"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2022-01-24"},{"lineNumber":129,"author":{"gitId":"lzf834"},"content":"                    Event tempTask \u003d (Event) t;","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"lzf834"},"content":"                    String date \u003d tempTask.getDate().toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"lzf834"},"content":"                    if (tempTask.getTime() !\u003d null) {","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"lzf834"},"content":"                        date +\u003d \"~\" + tempTask.getTime().toString();","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"lzf834"},"content":"                    }","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"lzf834"},"content":"                    taskToAppend +\u003d date.trim();","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"lzf834"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":136,"author":{"gitId":"lzf834"},"content":"                printWriter.println(taskToAppend);","lastModifiedDate":"2022-01-24"},{"lineNumber":137,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":138,"author":{"gitId":"lzf834"},"content":"            printWriter.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":139,"author":{"gitId":"lzf834"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"lzf834"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzf834":143}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":" * Task Class that contains the name/details of the task and whether it has been completed","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"public class Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"    //Attributes of a task","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"    private String taskName;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"    private boolean done;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"     * Constructor for task, always initialised to be not done","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"     * @param taskName name/details of the task","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"     * Marks the task as completed/uncompleted","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"     * @param done boolean dictating whether task is done or undone","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"     * Prints out the status of the task and the details","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"     * @return boolean value of whether task is or is not done","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"        return this.done;","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"        return taskName;","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"     * Prints out the status of the task and the details","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"    public void printTask() {","lastModifiedDate":"2022-01-15"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"        if (this.getDone()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"            System.out.println(\"[X] \" + this.getTaskName());","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-15"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"            System.out.println(\"[ ] \" + this.getTaskName());","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"     * returns the string of each task together with their status and name","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"     * @return the string of each task together with their status and name to the GUI","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"    public String guiPrintTask() {","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"        String output;","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"        if (this.getDone()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"            output \u003d \"[X] \" + this.getTaskName();","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"            output \u003d \"[ ] \" + this.getTaskName();","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"        return output;","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"            if (this.taskName \u003d\u003d ((Task) o).taskName) {","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"                return true;","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"        return false;","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"lzf834":77}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":" * TaskList class that contains an ArrayList of tasks","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"public class TaskList {","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"     * Constructor for TaskList class, initialises a new ArrayList","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"     * prints out the list","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"    public void printList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"            System.out.print(i + \": \");","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"            task.printTask();","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"     * Gives the string output containing the list of tasks back to GUI to be printed out","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"     * @return an output string of the list of tasks","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"    public String guiPrintList() {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"            System.out.print(i + \": \");","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"            output +\u003d i + \": \";","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"            output +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"        return output;","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"        return this.tasks;","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"     * Clears the list of tasks","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"    public void reset() {","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"        tasks.clear();","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"        assert tasks.size() \u003d\u003d 0;","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"     * Takes in a task to be added","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"     * @param task a task from user","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"        System.out.println(\"Got it. The task has been added:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"        task.printTask();","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"     * returns a string containing the message after a task has been added","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"     * @param task task input by user to be added","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"     * @return a string containing the confirmation message and how many existing tasks back to GUI/user","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"    public String guiAddTask(Task task) {","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"        output +\u003d \"Got it. The task has been added:\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"        output +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"        output +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"        return output;","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":82,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"lzf834"},"content":"     * Takes in a task to be added and adds it to the ArrayList, without the print statements","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"lzf834"},"content":"     * Used when loading from data.txt","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"lzf834"},"content":"     * @param task a task from data.txt","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"lzf834"},"content":"    public void addTaskNoPrint(Task task) {","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"lzf834"},"content":"        tasks.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"lzf834"},"content":"     * Deletes a task from the ArrayList at a specific index","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":95,"author":{"gitId":"lzf834"},"content":"     * @param index index of the task to be deleted (1-based indexing)","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":97,"author":{"gitId":"lzf834"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":98,"author":{"gitId":"lzf834"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":99,"author":{"gitId":"lzf834"},"content":"            System.out.println(\"Index out of bounds, please try again\");","lastModifiedDate":"2022-01-24"},{"lineNumber":100,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"lzf834"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"lzf834"},"content":"            printList();","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"lzf834"},"content":"    /**\\","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"lzf834"},"content":"     * returns the string output after a task has been deleted","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"lzf834"},"content":"     * @param index the index of the task to be removed","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"lzf834"},"content":"     * @return the string output of the task list after a task has been deleted","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"lzf834"},"content":"    public String guiDeleteTask(int index) {","lastModifiedDate":"2022-02-01"},{"lineNumber":112,"author":{"gitId":"lzf834"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":113,"author":{"gitId":"lzf834"},"content":"            return \"Index out of bounds, please try again\";","lastModifiedDate":"2022-02-01"},{"lineNumber":114,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":115,"author":{"gitId":"lzf834"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2022-02-01"},{"lineNumber":116,"author":{"gitId":"lzf834"},"content":"            return guiPrintList();","lastModifiedDate":"2022-02-01"},{"lineNumber":117,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":118,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":119,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":120,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"lzf834"},"content":"     * Marks a task from the ArrayList as done","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"lzf834"},"content":"     * @param index index of the task to be marked as done (1-based indexing)","lastModifiedDate":"2022-01-24"},{"lineNumber":124,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":125,"author":{"gitId":"lzf834"},"content":"    public void markTask(int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":126,"author":{"gitId":"lzf834"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":127,"author":{"gitId":"lzf834"},"content":"            System.out.println(\"Index out of bounds, please try again\");","lastModifiedDate":"2022-01-24"},{"lineNumber":128,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":129,"author":{"gitId":"lzf834"},"content":"            tasks.get(index - 1).setDone(true);","lastModifiedDate":"2022-01-24"},{"lineNumber":130,"author":{"gitId":"lzf834"},"content":"            assert tasks.get(index-1).getDone() \u003d\u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"lzf834"},"content":"            printList();","lastModifiedDate":"2022-01-24"},{"lineNumber":132,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":133,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":134,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"lzf834"},"content":"     * returns the task list after marking a task","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"lzf834"},"content":"     * @param index the index of the task to be marked in the tasklist","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"lzf834"},"content":"     * @return a string of the task list after marking a task","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"lzf834"},"content":"    public String guiMarkTask(int index) {","lastModifiedDate":"2022-02-01"},{"lineNumber":141,"author":{"gitId":"lzf834"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":142,"author":{"gitId":"lzf834"},"content":"            return \"Index out of bounds, please try again\";","lastModifiedDate":"2022-02-01"},{"lineNumber":143,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":144,"author":{"gitId":"lzf834"},"content":"            tasks.get(index - 1).setDone(true);","lastModifiedDate":"2022-02-01"},{"lineNumber":145,"author":{"gitId":"lzf834"},"content":"            assert tasks.get(index-1).getDone() \u003d\u003d true;","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"lzf834"},"content":"            return guiPrintList();","lastModifiedDate":"2022-02-01"},{"lineNumber":147,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":148,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":149,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":150,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":151,"author":{"gitId":"lzf834"},"content":"     * Marks a task from the ArrayList as not done","lastModifiedDate":"2022-01-24"},{"lineNumber":152,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":153,"author":{"gitId":"lzf834"},"content":"     * @param index index of the task to be marked as not done (1-based indexing)","lastModifiedDate":"2022-01-24"},{"lineNumber":154,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":155,"author":{"gitId":"lzf834"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2022-01-24"},{"lineNumber":156,"author":{"gitId":"lzf834"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":157,"author":{"gitId":"lzf834"},"content":"            System.out.println(\"Index out of bounds, please try again\");","lastModifiedDate":"2022-01-24"},{"lineNumber":158,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":159,"author":{"gitId":"lzf834"},"content":"            tasks.get(index - 1).setDone(false);","lastModifiedDate":"2022-01-24"},{"lineNumber":160,"author":{"gitId":"lzf834"},"content":"            assert tasks.get(index-1).getDone() \u003d\u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"lzf834"},"content":"            printList();","lastModifiedDate":"2022-01-24"},{"lineNumber":162,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":163,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":164,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":165,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"lzf834"},"content":"     * returns the task list after unmarking a task","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"lzf834"},"content":"     * @param index the index of the task to be unmarked in the tasklist","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"lzf834"},"content":"     * @return a string of the task list after unmarking a task","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"lzf834"},"content":"    public String guiUnmarkTask(int index) {","lastModifiedDate":"2022-02-01"},{"lineNumber":171,"author":{"gitId":"lzf834"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":172,"author":{"gitId":"lzf834"},"content":"            return \"Index out of bounds, please try again\";","lastModifiedDate":"2022-02-01"},{"lineNumber":173,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":174,"author":{"gitId":"lzf834"},"content":"            tasks.get(index - 1).setDone(false);","lastModifiedDate":"2022-02-01"},{"lineNumber":175,"author":{"gitId":"lzf834"},"content":"            assert tasks.get(index-1).getDone() \u003d\u003d false;","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"lzf834"},"content":"            return guiPrintList();","lastModifiedDate":"2022-02-01"},{"lineNumber":177,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":178,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":179,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":180,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":181,"author":{"gitId":"lzf834"},"content":"     * find any matching keyword(s) in text to any tasks in the taskList and print them out","lastModifiedDate":"2022-01-24"},{"lineNumber":182,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":183,"author":{"gitId":"lzf834"},"content":"     * @param text keyword(s) to find","lastModifiedDate":"2022-01-24"},{"lineNumber":184,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException if there are no matches for the keyword","lastModifiedDate":"2022-01-24"},{"lineNumber":185,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":186,"author":{"gitId":"lzf834"},"content":"    public void find(String text) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":187,"author":{"gitId":"lzf834"},"content":"        ArrayList\u003cString\u003e toPrint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":188,"author":{"gitId":"lzf834"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":189,"author":{"gitId":"lzf834"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-01-24"},{"lineNumber":190,"author":{"gitId":"lzf834"},"content":"            String taskName \u003d task.getTaskName().toLowerCase();","lastModifiedDate":"2022-01-24"},{"lineNumber":191,"author":{"gitId":"lzf834"},"content":"            if (taskName.contains(text.toLowerCase())) {","lastModifiedDate":"2022-01-24"},{"lineNumber":192,"author":{"gitId":"lzf834"},"content":"                String result \u003d \"Index in taskList: \" + (i + 1) + \" || Task Details: \" + task.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":193,"author":{"gitId":"lzf834"},"content":"                toPrint.add(result);","lastModifiedDate":"2022-01-24"},{"lineNumber":194,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":195,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":196,"author":{"gitId":"lzf834"},"content":"        if (toPrint.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-24"},{"lineNumber":197,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(\"no matches found for this keyword(s)\");","lastModifiedDate":"2022-01-24"},{"lineNumber":198,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":199,"author":{"gitId":"lzf834"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2022-01-24"},{"lineNumber":200,"author":{"gitId":"lzf834"},"content":"            for (String s: toPrint) {","lastModifiedDate":"2022-01-24"},{"lineNumber":201,"author":{"gitId":"lzf834"},"content":"                System.out.println(s);","lastModifiedDate":"2022-01-24"},{"lineNumber":202,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":203,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":204,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":205,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":206,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"lzf834"},"content":"     * method to find any task with the matching text given by the user and returns them the list of tasks together","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"lzf834"},"content":"     * with its index","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"lzf834"},"content":"     * @param text input by the user to find","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"lzf834"},"content":"     * @return a String of list of tasks that matches the user\u0027s input","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException if no matches found","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"lzf834"},"content":"    public String guiFind(String text) throws DukeException {","lastModifiedDate":"2022-02-01"},{"lineNumber":214,"author":{"gitId":"lzf834"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":215,"author":{"gitId":"lzf834"},"content":"        ArrayList\u003cString\u003e toPrint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-01"},{"lineNumber":216,"author":{"gitId":"lzf834"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-01"},{"lineNumber":217,"author":{"gitId":"lzf834"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-02-01"},{"lineNumber":218,"author":{"gitId":"lzf834"},"content":"            String taskName \u003d task.getTaskName().toLowerCase();","lastModifiedDate":"2022-02-01"},{"lineNumber":219,"author":{"gitId":"lzf834"},"content":"            if (taskName.contains(text.toLowerCase())) {","lastModifiedDate":"2022-02-01"},{"lineNumber":220,"author":{"gitId":"lzf834"},"content":"                String result \u003d \"Index in taskList: \" + (i + 1) + \" || Task Details: \" + task.toString();","lastModifiedDate":"2022-02-01"},{"lineNumber":221,"author":{"gitId":"lzf834"},"content":"                toPrint.add(result);","lastModifiedDate":"2022-02-01"},{"lineNumber":222,"author":{"gitId":"lzf834"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":223,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":224,"author":{"gitId":"lzf834"},"content":"        if (toPrint.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-01"},{"lineNumber":225,"author":{"gitId":"lzf834"},"content":"            throw new DukeException(\"no matches found for this keyword(s)\");","lastModifiedDate":"2022-02-01"},{"lineNumber":226,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":227,"author":{"gitId":"lzf834"},"content":"            output \u003d String.join(\"\\n\", toPrint);","lastModifiedDate":"2022-02-01"},{"lineNumber":228,"author":{"gitId":"lzf834"},"content":"            output \u003d \"Here are the matching tasks in your list: \\n\" + output;","lastModifiedDate":"2022-02-01"},{"lineNumber":229,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":230,"author":{"gitId":"lzf834"},"content":"        return output;","lastModifiedDate":"2022-02-01"},{"lineNumber":231,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":232,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzf834":232}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":" * Todo Class that is a subclass of task, no additional attributes","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"     * Constructor for Todo class","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"     * @param taskName the details/name of the task","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"        super(taskName);","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"     * Method to print the Todo task out, overrides the method in the superclass","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"    public void printTask() {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"     * Overrides the toString method, used for JUnit testing ensuring the correct output is printed out","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"     * @return String that goes into the output","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"    public String toString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"        result +\u003d \"[T]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"        if (this.getDone()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"            result +\u003d \"[X]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"            result +\u003d \"[ ]\";","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"        result +\u003d \" \" + this.getTaskName();","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"        return result;","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"lzf834":41}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":" * UI class that handles the printing of startup and miscellaneous lines","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"public class Ui {","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"    static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    static final String WELCOME \u003d \"Welcome to\\n\" + LOGO + \"\\n\" + \"Feel free to tell duke any tasks you\u0027d like!\";","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"    static final String FORMAT_NOTE \u003d \"NOTE: For events and deadlines format for dates:YYYY-MM-DD.\\n\"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"            + \"Adding time for events and deadlines are optional, but the format is in the form HH:mm\";","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    static final String LINE \u003d \"-----------------------------------\";","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"     * Empty Constructor","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    public Ui() {}","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"     * prints Welcome message and notes on how to format input","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    public void startUp() {","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"        System.out.println(WELCOME);","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        System.out.println(FORMAT_NOTE);","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"        printSeparator();","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"     * prints a separator line to be used between inputs and outputs","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"    public static void printSeparator() {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"        System.out.println(LINE);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzf834":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: lightskyblue; -fx-background-radius: 10; -fx-border-color: black; -fx-border-radius: 10; -fx-border-width: 2; -fx-label-padding: 5 10 5 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"        \u003cfont\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"        \u003c/font\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"        \u003c/opaqueInsets\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lzf834":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"lzf834":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":" * Test for parser","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"     * test bye command quits and returns true","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    public void byeCommand_testReturn_true() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"            assertEquals(true, p.takeInput(\"bye\", taskList));","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"     * test that adding a task does not quit Duke","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"    public void todoTest_addToTaskList_false() {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"            assertEquals(false, p.takeInput(\"todo go toilet\", taskList));","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"     * test output when wrong input format for date and time","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"     * @throws DukeException for invalid input to date and time","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"    public void eventOutput_dateTimeException() throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"            assertEquals(0, p.takeInput(\"event Mass /at 1231231\", taskList));","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"            assertEquals(\"Invalid input into date\", e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzf834":54}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"lzf834"},"content":" * test the output when tasks are being added","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"lzf834"},"content":"public class TaskTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"lzf834"},"content":"     * test adding todo task","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"lzf834"},"content":"    public void todoTest() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"lzf834"},"content":"        String expectedResult \u003d \"[T][ ] buy groceries\";","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"lzf834"},"content":"        Task todo \u003d new Todo(\"buy groceries\");","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedResult, todo.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"lzf834"},"content":"     * test adding an event without time","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"lzf834"},"content":"    public void eventTestNoTime() {","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"lzf834"},"content":"        String expectedResult \u003d \"[E][ ] dinner with family (at: Jan 1 2022)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"lzf834"},"content":"        Task todo \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"lzf834"},"content":"            todo \u003d new Event(\"dinner with family\", \"2022-01-01\");","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"lzf834"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"lzf834"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedResult, todo.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"lzf834"},"content":"     * test adding a deadline without time","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"lzf834"},"content":"    public void deadlineTestNoTime() {","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"lzf834"},"content":"        String expectedResult \u003d \"[D][ ] Complete Tutorial (by: Jan 2 2022)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"lzf834"},"content":"        Task todo \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"lzf834"},"content":"            todo \u003d new Deadline(\"Complete Tutorial\", \"2022-01-02\");","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"lzf834"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"lzf834"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedResult, todo.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"lzf834"},"content":"     * test adding an event with time","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"lzf834"},"content":"    public void eventTestTime() {","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"lzf834"},"content":"        String expectedResult \u003d \"[E][ ] dinner with family (at: Jan 1 2022 16:00)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"lzf834"},"content":"        Task todo \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"lzf834"},"content":"            todo \u003d new Event(\"dinner with family\", \"2022-01-01 16:00\");","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"lzf834"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"lzf834"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedResult, todo.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"lzf834"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":67,"author":{"gitId":"lzf834"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"lzf834"},"content":"     * test adding deadline without time","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"lzf834"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"lzf834"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"lzf834"},"content":"    public void deadlineTestTime() {","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"lzf834"},"content":"        String expectedResult \u003d \"[D][ ] Complete Tutorial (by: Jan 2 2022 23:00)\";","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"lzf834"},"content":"        Task todo \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"lzf834"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"lzf834"},"content":"            todo \u003d new Deadline(\"Complete Tutorial\", \"2022-01-02 23:00\");","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"lzf834"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"lzf834"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"lzf834"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"lzf834"},"content":"        assertEquals(expectedResult, todo.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"lzf834"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"lzf834"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzf834":81}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lzf834"},"content":"event e1 /at 1999-01-01 23:30","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"lzf834"},"content":"deadline d1 /by 1999-09-09 23:12","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"lzf834"},"content":"event e2 /at 1999-01-01","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"lzf834"},"content":"deadline d2 /by 1999-09-09","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"lzf834"},"content":"list","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"lzf834"},"content":"mark 1","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"lzf834"},"content":"unmark 1","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"lzf834"},"content":"delete 1","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"lzf834":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lzf834"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lzf834":1,"-":20}}]
