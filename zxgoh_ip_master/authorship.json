[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"# duke.Duke project template","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zxgoh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"zxgoh":15}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"[T][ ] test 1","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"[T][ ] test 2","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zxgoh":2}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":85,"zxgoh":4}},{"path":"src/Instructions/commands.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"Commands | Format","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"todo |  todo [taskname]","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"deadline | deadline [taskname] /[time]","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"event | event [taskname] /[time]","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zxgoh":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":" * Represents the deadline tasks input by the user","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"     * Super constructor to the task class","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"     * Super constructor to the task class","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"     * @param digitMonth the month represented numerically","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"     * @return corresponding month in words if valid, else returns notValidMonth","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    public String digitMonth_to_AlphabeticalMonth(String digitMonth) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        if (digitMonth.equals(\"01\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"            return \"January\";","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"02\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"            return \"February\";","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"03\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"            return \"March\";","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"04\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"            return \"April\";","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"05\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"            return \"May\";","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"06\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"            return \"June\";","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"07\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"            return \"July\";","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"08\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"            return \"August\";","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"09\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"            return \"September\";","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"10\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"            return \"October\";","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"11\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"            return \"November\";","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"12\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"            return \"December\";","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"            return \"notValidMonth\";","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"     * Returns deadline task in string format","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"     * @param","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"     * @return deadline task in a string format, changing the numerical months to","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"     * words, and 24h time to 12h time","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"        String newReply \u003d super.description.replace(\"deadline \", \"\");","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        String taskAtHand \u003d newReply.split(\"/\")[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        String deadLine \u003d newReply.split(\"/\")[1].replace(\"by \", \"by: \");","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        String date \u003d deadLine.split(\" \")[1].split(\"-\")[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        String month \u003d digitMonth_to_AlphabeticalMonth(deadLine.split(\" \")[1].split(\"-\")[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        String year \u003d deadLine.split(\" \")[1].split(\"-\")[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"        String time \u003d Integer.toString(Integer.parseInt(deadLine.split(\" \")[2]) % 1200);","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        if (time.length() \u003c 4 ) {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"            time +\u003d \"pm\";","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"            time +\u003d \"am\";","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"        String finalDescription \u003d taskAtHand + \"(\" + \"by \" + date + \" \" + month + \" \" + year + \", \" + time + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + finalDescription;","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"zxgoh":80}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    private Label text;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"        text \u003d l;","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    private void flip() {","lastModifiedDate":"2022-02-03"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-03"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-03"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-02-03"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        db.flip();","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        return db;","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zxgoh":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"import java.util.List;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-03"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        fw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        Outputs op \u003d new Outputs();","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        System.out.println(op.greeting + op.logo);","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        System.out.println(op.border","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"                           + op.firstPrompt","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"                           + op.instructions","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"                           + op.border);","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        ArrayList\u003cTask\u003e itemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"        while(true) {","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-18"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"            String reply \u003d sc.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"            String[] splittedString \u003d reply.split(\" \");","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"            file.delete();","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"                file.createNewFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"                System.out.println(\" \");","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"            if (splittedString[0].equals(\"mark\") \u0026\u0026 splittedString.length \u003d\u003d 2) { // check for mark tag","lastModifiedDate":"2022-01-18"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"                int index \u003d Integer.valueOf(reply.split(\" \")[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"                itemList.get(index - 1).markAsDone();","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"                System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"                        \"     Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"                        \"       \" + itemList.get(index - 1).getDescription() + \"\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"                        op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"                        op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":79,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":80,"author":{"gitId":"zxgoh"},"content":"            } else if (splittedString[0].equals(\"unmark\") \u0026\u0026 splittedString.length \u003d\u003d 2) { // check for unmark tag","lastModifiedDate":"2022-01-18"},{"lineNumber":81,"author":{"gitId":"zxgoh"},"content":"                int index \u003d Integer.valueOf(reply.split(\" \")[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":82,"author":{"gitId":"zxgoh"},"content":"                itemList.get(index - 1).markAsUndone();","lastModifiedDate":"2022-01-18"},{"lineNumber":83,"author":{"gitId":"zxgoh"},"content":"                System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"zxgoh"},"content":"                        \"     OK, I\u0027ve marked this task as not done yet: \\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":85,"author":{"gitId":"zxgoh"},"content":"                        \"       \" + itemList.get(index - 1).getDescription() + \"\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":86,"author":{"gitId":"zxgoh"},"content":"                        op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"zxgoh"},"content":"                        op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":89,"author":{"gitId":"zxgoh"},"content":"            } else if (splittedString[0].equals(\"todo\")) { // check for todo tag","lastModifiedDate":"2022-01-18"},{"lineNumber":90,"author":{"gitId":"zxgoh"},"content":"                if (splittedString.length \u003d\u003d 1) { //invalid todo command","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"zxgoh"},"content":"                            \"     ☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"zxgoh"},"content":"                            op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"zxgoh"},"content":"                            op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"zxgoh"},"content":"                } else { //valid todo command","lastModifiedDate":"2022-01-20"},{"lineNumber":96,"author":{"gitId":"zxgoh"},"content":"                    Task todoTask \u003d new Todo(reply);","lastModifiedDate":"2022-01-18"},{"lineNumber":97,"author":{"gitId":"zxgoh"},"content":"                    itemList.add(todoTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":98,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"zxgoh"},"content":"                            \"     Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":100,"author":{"gitId":"zxgoh"},"content":"                            \"       \" + todoTask.getDescription() + \"\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":101,"author":{"gitId":"zxgoh"},"content":"                            \"     Now you have \" + itemList.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":102,"author":{"gitId":"zxgoh"},"content":"                            op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"zxgoh"},"content":"                            op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"zxgoh"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":105,"author":{"gitId":"zxgoh"},"content":"            } else if (splittedString[0].equals(\"deadline\")) { // check for deadline tag","lastModifiedDate":"2022-01-18"},{"lineNumber":106,"author":{"gitId":"zxgoh"},"content":"                if (splittedString.length \u003d\u003d 1) { //invalid deadline command","lastModifiedDate":"2022-01-20"},{"lineNumber":107,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"zxgoh"},"content":"                            \"     ☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":109,"author":{"gitId":"zxgoh"},"content":"                            op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"zxgoh"},"content":"                            op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"zxgoh"},"content":"                } else { //valid deadline command","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"zxgoh"},"content":"                    Task deadlineTask \u003d new Deadline(reply);","lastModifiedDate":"2022-01-18"},{"lineNumber":113,"author":{"gitId":"zxgoh"},"content":"                    itemList.add(deadlineTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":114,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"zxgoh"},"content":"                            \"     Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":116,"author":{"gitId":"zxgoh"},"content":"                            \"       \" + deadlineTask.getDescription() + \"\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":117,"author":{"gitId":"zxgoh"},"content":"                            \"     Now you have \" + itemList.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":118,"author":{"gitId":"zxgoh"},"content":"                            op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"zxgoh"},"content":"                            op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"zxgoh"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":121,"author":{"gitId":"zxgoh"},"content":"            } else if (splittedString[0].equals(\"event\")) { // check for event tag","lastModifiedDate":"2022-01-18"},{"lineNumber":122,"author":{"gitId":"zxgoh"},"content":"                if (splittedString.length \u003d\u003d 1) { //invalid event command","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"zxgoh"},"content":"                            \"     ☹ OOPS!!! The description of a event cannot be empty.\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":125,"author":{"gitId":"zxgoh"},"content":"                            op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"zxgoh"},"content":"                            op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"zxgoh"},"content":"                } else { //valid event command","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"zxgoh"},"content":"                    Task eventTask \u003d new Event(reply);","lastModifiedDate":"2022-01-18"},{"lineNumber":129,"author":{"gitId":"zxgoh"},"content":"                    itemList.add(eventTask);","lastModifiedDate":"2022-01-18"},{"lineNumber":130,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"zxgoh"},"content":"                            \"     Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":132,"author":{"gitId":"zxgoh"},"content":"                            \"       \" + eventTask.getDescription() + \"\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":133,"author":{"gitId":"zxgoh"},"content":"                            \"     Now you have \" + itemList.size() + \" tasks in the list.\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":134,"author":{"gitId":"zxgoh"},"content":"                            op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"zxgoh"},"content":"                            op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"zxgoh"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":137,"author":{"gitId":"zxgoh"},"content":"            } else if (reply.equals(\"bye\")) { // check for bye","lastModifiedDate":"2022-01-18"},{"lineNumber":138,"author":{"gitId":"zxgoh"},"content":"                System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"zxgoh"},"content":"                        \"     Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":140,"author":{"gitId":"zxgoh"},"content":"                        op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"zxgoh"},"content":"                break;","lastModifiedDate":"2022-01-18"},{"lineNumber":142,"author":{"gitId":"zxgoh"},"content":"            } else if (reply.equals(\"list\")) { // check for list","lastModifiedDate":"2022-01-18"},{"lineNumber":143,"author":{"gitId":"zxgoh"},"content":"                String totalString \u003d op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"zxgoh"},"content":"                        \"    Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":145,"author":{"gitId":"zxgoh"},"content":"                for (int i \u003d 0; i \u003c itemList.size(); i++) {","lastModifiedDate":"2022-01-18"},{"lineNumber":146,"author":{"gitId":"zxgoh"},"content":"                    totalString +\u003d \"    \" + (i + 1) + \". \" + itemList.get(i).getDescription() + \"\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":147,"author":{"gitId":"zxgoh"},"content":"                }","lastModifiedDate":"2022-01-18"},{"lineNumber":148,"author":{"gitId":"zxgoh"},"content":"                totalString +\u003d op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"zxgoh"},"content":"                        op.border;","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"zxgoh"},"content":"                System.out.println(totalString);","lastModifiedDate":"2022-01-18"},{"lineNumber":151,"author":{"gitId":"zxgoh"},"content":"            } else if (splittedString[0].equals(\"delete\")) { //check for delete","lastModifiedDate":"2022-01-20"},{"lineNumber":152,"author":{"gitId":"zxgoh"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"zxgoh"},"content":"                    int index \u003d Integer.valueOf(splittedString[1]);","lastModifiedDate":"2022-01-18"},{"lineNumber":154,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":155,"author":{"gitId":"zxgoh"},"content":"                    String toRemove \u003d itemList.remove(index - 1).getDescription();","lastModifiedDate":"2022-01-18"},{"lineNumber":156,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"zxgoh"},"content":"                            \"     Noted. I\u0027ve removed this task: \\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":158,"author":{"gitId":"zxgoh"},"content":"                            \"       \" + toRemove + \"\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":159,"author":{"gitId":"zxgoh"},"content":"                            \"     Now you have \" + itemList.size() + \" tasks in the list.\\n\" + op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"zxgoh"},"content":"                            op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"zxgoh"},"content":"                } catch (NumberFormatException n) {","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(\"Invalid input, please enter a valid index number instead\");","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"zxgoh"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"zxgoh"},"content":"            } else if (splittedString[0].equals(\"find\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"zxgoh"},"content":"                    String keyword \u003d splittedString[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"zxgoh"},"content":"                    List\u003cTask\u003e filteredItemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"zxgoh"},"content":"                    for (Task t : itemList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"zxgoh"},"content":"                        filteredItemList.add(t);","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"zxgoh"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"zxgoh"},"content":"                    filteredItemList.removeIf(s -\u003e !s.getDescription().contains(keyword));","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"zxgoh"},"content":"                    String relevantTasks \u003d \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"zxgoh"},"content":"                    int count \u003d 1;","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"zxgoh"},"content":"                    for (Task t : filteredItemList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"zxgoh"},"content":"                        relevantTasks +\u003d \"     \" + count + \".\" + t.getDescription() + \"\\n\";","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"zxgoh"},"content":"                        count++;","lastModifiedDate":"2022-01-27"},{"lineNumber":176,"author":{"gitId":"zxgoh"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":177,"author":{"gitId":"zxgoh"},"content":"                    System.out.println(op.border","lastModifiedDate":"2022-01-27"},{"lineNumber":178,"author":{"gitId":"zxgoh"},"content":"                                       + \"     Here are the matching tasks in your list:\\n\" + relevantTasks","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"zxgoh"},"content":"                                       + op.instructions + op.border);","lastModifiedDate":"2022-01-27"},{"lineNumber":180,"author":{"gitId":"zxgoh"},"content":"            } else { //check non-existing commands","lastModifiedDate":"2022-01-20"},{"lineNumber":181,"author":{"gitId":"zxgoh"},"content":"                System.out.println(op.border +","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"zxgoh"},"content":"                        \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2022-01-18"},{"lineNumber":183,"author":{"gitId":"zxgoh"},"content":"                        op.instructions +","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"zxgoh"},"content":"                        op.border);","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":186,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":187,"author":{"gitId":"zxgoh"},"content":"            String file2 \u003d \"data/duke.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":188,"author":{"gitId":"zxgoh"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"zxgoh"},"content":"                for (Task t : itemList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"zxgoh"},"content":"                    writeToFile(file2, t.getDescription() + \"\\n\");","lastModifiedDate":"2022-01-26"},{"lineNumber":191,"author":{"gitId":"zxgoh"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":192,"author":{"gitId":"zxgoh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":193,"author":{"gitId":"zxgoh"},"content":"                System.out.println(\"\");","lastModifiedDate":"2022-01-26"},{"lineNumber":194,"author":{"gitId":"zxgoh"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":196,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":197,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":198,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":199,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":200,"author":{"gitId":"zxgoh"},"content":"     * Iteration 2:","lastModifiedDate":"2022-02-03"},{"lineNumber":201,"author":{"gitId":"zxgoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-03"},{"lineNumber":202,"author":{"gitId":"zxgoh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-03"},{"lineNumber":203,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":204,"author":{"gitId":"zxgoh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-03"},{"lineNumber":205,"author":{"gitId":"zxgoh"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-02-03"},{"lineNumber":206,"author":{"gitId":"zxgoh"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-02-03"},{"lineNumber":207,"author":{"gitId":"zxgoh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-03"},{"lineNumber":208,"author":{"gitId":"zxgoh"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-02-03"},{"lineNumber":209,"author":{"gitId":"zxgoh"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-02-03"},{"lineNumber":210,"author":{"gitId":"zxgoh"},"content":"        );","lastModifiedDate":"2022-02-03"},{"lineNumber":211,"author":{"gitId":"zxgoh"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-03"},{"lineNumber":212,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":213,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":214,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":215,"author":{"gitId":"zxgoh"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-02-03"},{"lineNumber":216,"author":{"gitId":"zxgoh"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-02-03"},{"lineNumber":217,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":218,"author":{"gitId":"zxgoh"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2022-02-03"},{"lineNumber":219,"author":{"gitId":"zxgoh"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2022-02-03"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":222,"author":{"gitId":"zxgoh"},"content":"    @Override","lastModifiedDate":"2022-02-03"},{"lineNumber":223,"author":{"gitId":"zxgoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-03"},{"lineNumber":224,"author":{"gitId":"zxgoh"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-02-03"},{"lineNumber":225,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":226,"author":{"gitId":"zxgoh"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-02-03"},{"lineNumber":227,"author":{"gitId":"zxgoh"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-03"},{"lineNumber":228,"author":{"gitId":"zxgoh"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-03"},{"lineNumber":229,"author":{"gitId":"zxgoh"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-03"},{"lineNumber":230,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":231,"author":{"gitId":"zxgoh"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-03"},{"lineNumber":232,"author":{"gitId":"zxgoh"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-03"},{"lineNumber":233,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":234,"author":{"gitId":"zxgoh"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-03"},{"lineNumber":235,"author":{"gitId":"zxgoh"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-03"},{"lineNumber":236,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":237,"author":{"gitId":"zxgoh"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-03"},{"lineNumber":238,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":239,"author":{"gitId":"zxgoh"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-03"},{"lineNumber":240,"author":{"gitId":"zxgoh"},"content":"        stage.show();","lastModifiedDate":"2022-02-03"},{"lineNumber":241,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":242,"author":{"gitId":"zxgoh"},"content":"        stage.setTitle(\"Juke\");","lastModifiedDate":"2022-02-03"},{"lineNumber":243,"author":{"gitId":"zxgoh"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-03"},{"lineNumber":244,"author":{"gitId":"zxgoh"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":245,"author":{"gitId":"zxgoh"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":246,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":247,"author":{"gitId":"zxgoh"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":248,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":249,"author":{"gitId":"zxgoh"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-03"},{"lineNumber":250,"author":{"gitId":"zxgoh"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-03"},{"lineNumber":251,"author":{"gitId":"zxgoh"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-03"},{"lineNumber":252,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":253,"author":{"gitId":"zxgoh"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":254,"author":{"gitId":"zxgoh"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-03"},{"lineNumber":255,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":256,"author":{"gitId":"zxgoh"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-02-03"},{"lineNumber":257,"author":{"gitId":"zxgoh"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-03"},{"lineNumber":258,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":259,"author":{"gitId":"zxgoh"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":260,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":261,"author":{"gitId":"zxgoh"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":262,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":263,"author":{"gitId":"zxgoh"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":264,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":265,"author":{"gitId":"zxgoh"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":266,"author":{"gitId":"zxgoh"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":267,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":268,"author":{"gitId":"zxgoh"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":269,"author":{"gitId":"zxgoh"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-03"},{"lineNumber":270,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":271,"author":{"gitId":"zxgoh"},"content":"        //event handler","lastModifiedDate":"2022-02-03"},{"lineNumber":272,"author":{"gitId":"zxgoh"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-03"},{"lineNumber":273,"author":{"gitId":"zxgoh"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-03"},{"lineNumber":274,"author":{"gitId":"zxgoh"},"content":"        });","lastModifiedDate":"2022-02-03"},{"lineNumber":275,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":276,"author":{"gitId":"zxgoh"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-03"},{"lineNumber":277,"author":{"gitId":"zxgoh"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-03"},{"lineNumber":278,"author":{"gitId":"zxgoh"},"content":"        });","lastModifiedDate":"2022-02-03"},{"lineNumber":279,"author":{"gitId":"zxgoh"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-03"},{"lineNumber":280,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":281,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":282,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":283,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-02-03"},{"lineNumber":284,"author":{"gitId":"zxgoh"},"content":"     * Iteration 1:","lastModifiedDate":"2022-02-03"},{"lineNumber":285,"author":{"gitId":"zxgoh"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-02-03"},{"lineNumber":286,"author":{"gitId":"zxgoh"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-02-03"},{"lineNumber":287,"author":{"gitId":"zxgoh"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-02-03"},{"lineNumber":288,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-02-03"},{"lineNumber":289,"author":{"gitId":"zxgoh"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-03"},{"lineNumber":290,"author":{"gitId":"zxgoh"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-02-03"},{"lineNumber":291,"author":{"gitId":"zxgoh"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-03"},{"lineNumber":292,"author":{"gitId":"zxgoh"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-03"},{"lineNumber":293,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":294,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":295,"author":{"gitId":"zxgoh"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-03"},{"lineNumber":296,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":297,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":298,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zxgoh":295,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":" * Represents the event tasks input by the user","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"     * Super constructor to the task class","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"     * @param description the description of the event task","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"    public Event(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"     * Super constructor to the task class","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"     * @param digitMonth the month represented numerically","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"     * @return corresponding month in words if valid, else returns notValidMonth","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    public String digitMonth_to_AlphabeticalMonth(String digitMonth) {","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"        if (digitMonth.equals(\"01\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"            return \"January\";","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"02\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"            return \"February\";","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"03\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"            return \"March\";","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"04\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"            return \"April\";","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"05\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"            return \"May\";","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"06\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"            return \"June\";","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"07\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"            return \"July\";","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"08\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"            return \"August\";","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"09\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"            return \"September\";","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"10\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"            return \"October\";","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"11\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"            return \"November\";","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"        } else if (digitMonth.equals(\"12\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"            return \"December\";","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"            return \"notValidMonth\";","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"     * Returns deadline task in string format","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"zxgoh"},"content":"     * @param","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"zxgoh"},"content":"     * @return deadline task in a string format, changing the numerical months to","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"zxgoh"},"content":"     * words, and 24h time to 12h time","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"zxgoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":63,"author":{"gitId":"zxgoh"},"content":"        String newReply \u003d super.description.replace(\"event \", \"\");","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"zxgoh"},"content":"        String taskAtHand \u003d newReply.split(\"/\")[0];","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"zxgoh"},"content":"        String deadLine \u003d newReply.split(\"/\")[1].replace(\"at \", \"at: \");","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"zxgoh"},"content":"        String date \u003d deadLine.split(\" \")[1].split(\"-\")[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"zxgoh"},"content":"        String month \u003d digitMonth_to_AlphabeticalMonth(deadLine.split(\" \")[1].split(\"-\")[1]);","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"zxgoh"},"content":"        String year \u003d deadLine.split(\" \")[1].split(\"-\")[2];","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"zxgoh"},"content":"        String time \u003d Integer.toString(Integer.parseInt(deadLine.split(\" \")[2]) % 1200);","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"zxgoh"},"content":"        if (time.length() \u003c 4 ) {","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"zxgoh"},"content":"            time +\u003d \"pm\";","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"zxgoh"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"zxgoh"},"content":"            time +\u003d \"am\";","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"zxgoh"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"zxgoh"},"content":"        String finalDescription \u003d taskAtHand + \"(\" + \"at \" + date + \" \" + month + \" \" + year + \", \" + time + \")\";","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"zxgoh"},"content":"        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + finalDescription;","lastModifiedDate":"2022-01-18"},{"lineNumber":77,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":78,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"zxgoh":78}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"zxgoh":13}},{"path":"src/main/java/duke/Outputs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"public class Outputs {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"    public Outputs() {","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"    String greeting \u003d \"Welcome, fellow user, to\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"    String logo \u003d         \"\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"            \"       _       _        \\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"            \"      | |     | |       \\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"            \"      | |_   _| | _____ \\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"            \"  _   | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"            \" | |__| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"            \"  \\\\____/ \\\\__,_|_|\\\\_\\\\___|\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"            \"                        \\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"            \"                        \\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    String instructions \u003d","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"            \"\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"                    \"     **********************************************************************\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"                    \"     * COMMANDS | FORMAT                                                  *\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"                    \"     * normal task |  todo [taskname]                                     *\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"                    \"     * normal task with deadline | deadline [taskname] /by [date\u0026time]    *\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"                    \"     * event task with deadline | event [taskname] /by [date\u0026time]        *\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"                    \"     *                                                                    *\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"                    \"     * Note for [date\u0026time]: enter it strictly in the following format    *\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"                    \"     *    dd/mm/yyyy [24h] | eg: 31-12-1969 1830                          *\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"                    \"     **********************************************************************\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"                    \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    String firstPrompt \u003d                 \"     Hello! I\u0027m Juke\\n\" +","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"            \"     What can I do for you?\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    String border \u003d \"    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zxgoh":39}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":" * Represents the tasks that the user inputs into the program, which is defined by","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":" * description and completion status","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"     * Constructor for all possible tasks, including todo, deadline and event","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"     * @param description The description of the task given by user","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     * Checks if task is Mark as done or not and gives the output","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     * @param","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"     * @return \"X\" or \" \" depending on whether isDone is true or false respectively","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"     * Task is marked as done, isDone becomes true","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"     * @param","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"     * Task is marked as not done, isDone becomes false","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"     * @param","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"zxgoh"},"content":"    public void markAsUndone() {","lastModifiedDate":"2022-01-18"},{"lineNumber":50,"author":{"gitId":"zxgoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":51,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"zxgoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":54,"author":{"gitId":"zxgoh"},"content":"        return \"\";","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":56,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"zxgoh":56}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":" * Represents the todo tasks input by the user","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"     * Super constructor to the task class","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"     * @return","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"     * Returns todo task in string format","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"     * @param","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"     * @return todo task in a string format","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"        String newReply \u003d super.description.replace(\"todo \", \"\");","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + newReply;","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"zxgoh":30}},{"path":"src/main/test/duke/DukeTest_1.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zxgoh"},"content":"package duke;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"zxgoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"zxgoh"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"zxgoh"},"content":"class DukeTest_1 {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"zxgoh"},"content":"     * Checks if the method that converts numerical months to","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"zxgoh"},"content":"     * months in words accurately works as intended","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"zxgoh"},"content":"     * @param","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"zxgoh"},"content":"     * @return test case passed or failed","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"zxgoh"},"content":"    void checkMonthConverterMethod() {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"zxgoh"},"content":"        assertEquals(\"January\",","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"zxgoh"},"content":"                new Deadline(\"test\").digitMonth_to_AlphabeticalMonth(\"01\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"zxgoh"},"content":"        assertEquals(\"notValidMonth\",","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"zxgoh"},"content":"                new Deadline(\"test\").digitMonth_to_AlphabeticalMonth(\"1\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"zxgoh"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"zxgoh"},"content":"     * Checks if user input gives the intended output by verifying the commands","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"zxgoh"},"content":"     * \"todo\", \"deadline\", \"event\"","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"zxgoh"},"content":"     * @param","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"zxgoh"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"zxgoh"},"content":"     * @return test case passed or failed","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"zxgoh"},"content":"     * @throws","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"zxgoh"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"zxgoh"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"zxgoh"},"content":"    void checkGetDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"zxgoh"},"content":"        //check for todo","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"zxgoh"},"content":"        assertEquals(\"[T][ ] project\", new Todo(\"todo project\").getDescription());","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"zxgoh"},"content":"        //check for deadline method","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"zxgoh"},"content":"        assertEquals(\"[D][ ] assignment (by 12 December 1212, 630pm)\",","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"zxgoh"},"content":"                new Deadline(\"deadline assignment /by 12-12-1212 1830\").getDescription());","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"zxgoh"},"content":"        //check for event method","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"zxgoh"},"content":"        assertEquals(\"[E][ ] party (at 11 November 1111, 520pm)\",","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"zxgoh"},"content":"                new Event(\"event party /at 11-11-1111 1720\").getDescription());","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"zxgoh"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"zxgoh"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"zxgoh"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"zxgoh":47}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zxgoh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"zxgoh":1}}]
