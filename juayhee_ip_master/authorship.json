[{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juayhee"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"juayhee"},"content":" * Prints bye message, terminating command for Duke.main()","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"juayhee"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"juayhee"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"juayhee"},"content":"    final String EXIT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"juayhee"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"juayhee"},"content":"    void execute() {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"juayhee"},"content":"        System.out.println(Duke.formatAnswer(EXIT));","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"juayhee"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"juayhee"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"juayhee":11}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juayhee"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"juayhee"},"content":"    abstract void execute();","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"juayhee"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"juayhee":3}},{"path":"src/main/java/CommandFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juayhee"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"juayhee"},"content":" * Decides which type of command to generate given user input","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"juayhee"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"juayhee"},"content":"public class CommandFactory {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"juayhee"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"juayhee"},"content":"     * Extracts the command portion of the input provided by the user (usually first word)","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"juayhee"},"content":"     * @param input Input from the user","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"juayhee"},"content":"     * @return One word string","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"juayhee"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"juayhee"},"content":"    private String isolateCommand(String input) {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"juayhee"},"content":"        int whiteSpaceIndex \u003d input.indexOf(\" \"); // Index of first whitespace","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"juayhee"},"content":"        if (whiteSpaceIndex \u003d\u003d -1) { // If the input string has no whitespaces (i.e. one word)","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"juayhee"},"content":"            return input;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"juayhee"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"juayhee"},"content":"        return input.substring(0, whiteSpaceIndex);","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"juayhee"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"juayhee"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"juayhee"},"content":"     * Generates the appropriate command type given the input","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"juayhee"},"content":"     * @param input  Input from the user","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"juayhee"},"content":"     * @return Value of parent type Command","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"juayhee"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"juayhee"},"content":"    public Command makeCommand(String input) {","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"juayhee"},"content":"        String commandWord \u003d isolateCommand(input);","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"juayhee"},"content":"        if (commandWord.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"juayhee"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"juayhee"},"content":"        } else {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"juayhee"},"content":"            return new EchoCommand(input);","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"juayhee"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"juayhee"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"juayhee"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"juayhee":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juayhee"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"juayhee"},"content":"        // Constant strings","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"juayhee"},"content":"        final String INTRO \u003d \"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\";","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"juayhee"},"content":"        // Init","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"juayhee"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"juayhee"},"content":"        System.out.println(Duke.formatAnswer(INTRO));","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"juayhee"},"content":"        // Reading and processing inputs","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"juayhee"},"content":"        String nextLine \u003d sc.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"juayhee"},"content":"        CommandFactory commandFactory \u003d new CommandFactory();","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"juayhee"},"content":"        while (true) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"juayhee"},"content":"            Command nextCommand \u003d commandFactory.makeCommand(nextLine); // Creating the appropriate command","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"juayhee"},"content":"            nextCommand.execute();","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"juayhee"},"content":"            if (nextCommand instanceof ByeCommand) { // Check for exit command","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"juayhee"},"content":"                break;","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"juayhee"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"juayhee"},"content":"            nextLine \u003d sc.nextLine();","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"juayhee"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"juayhee"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"juayhee"},"content":"     * Prepares input for printing to System.out (adds top and bottom line)","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"juayhee"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"juayhee"},"content":"    public static String formatAnswer(String input) {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"juayhee"},"content":"        // Variables","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"juayhee"},"content":"        String output;","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"juayhee"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"juayhee"},"content":"        // Output","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"juayhee"},"content":"        output \u003d \"\\t\" + line + \"\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"juayhee"},"content":"                + \"\\t\" + input + \"\\n\"","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"juayhee"},"content":"                + \"\\t\" + line + \"\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"juayhee"},"content":"        return output;","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"juayhee"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"juayhee"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"juayhee"},"content":"     * Checks if input is \"bye\"","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"juayhee"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"juayhee"},"content":"    private boolean isBye(String input) {","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":49,"author":{"gitId":"juayhee"},"content":"        return (input.equals(\"bye\"));","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"juayhee":46}},{"path":"src/main/java/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juayhee"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"juayhee"},"content":" * Repeats input to user","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"juayhee"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"juayhee"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"juayhee"},"content":"    private String input;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"juayhee"},"content":"    public EchoCommand (String input) {","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"juayhee"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"juayhee"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"juayhee"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"juayhee"},"content":"    void execute() {","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"juayhee"},"content":"        System.out.println(Duke.formatAnswer(input));","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"juayhee"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"juayhee"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"juayhee":15}}]
