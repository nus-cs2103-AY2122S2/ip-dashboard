[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EvaderFati"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"EvaderFati"},"content":" * Represent tasks that need to be done before a specific date/time.","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"EvaderFati"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"EvaderFati"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"EvaderFati"},"content":"    protected String time;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"EvaderFati"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"EvaderFati"},"content":"        super(description);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"EvaderFati"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"EvaderFati"},"content":"     * Returns a string representation of the object, including the task type(i.e. Deadline), description,","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"EvaderFati"},"content":"     * and time.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"EvaderFati"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"EvaderFati"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"EvaderFati"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"EvaderFati"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"EvaderFati":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EvaderFati"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"EvaderFati"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"EvaderFati"},"content":"import java.util.List;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"EvaderFati"},"content":"     * Enum of different types of tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"EvaderFati"},"content":"    private enum TaskType {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"EvaderFati"},"content":"        TODO,","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"EvaderFati"},"content":"        EVENT,","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"EvaderFati"},"content":"        DEADLINE","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"EvaderFati"},"content":"    private List\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e(); // a list to collect tasks","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"EvaderFati"},"content":"    private Scanner sc\u003d new Scanner(System.in);","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"EvaderFati"},"content":"     * Print the msg between line breaks.","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"EvaderFati"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"EvaderFati"},"content":"     * @param msg A string of message to be printed.","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"EvaderFati"},"content":"    private void printMsg(String msg) {","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"EvaderFati"},"content":"        String br \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"EvaderFati"},"content":"        System.out.println(br + msg + br);","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"EvaderFati"},"content":"        return;","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"EvaderFati"},"content":"     * Print out the greeting words.","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"EvaderFati"},"content":"    private void greeting() {","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"EvaderFati"},"content":"        this.printMsg(\"\\t Hello! I\u0027m Duke\\n\\t What can I do for you?\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"EvaderFati"},"content":"     * Print out the goodbye words.","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"EvaderFati"},"content":"    private void bye() {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"EvaderFati"},"content":"        this.printMsg(\"\\t Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":42,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":43,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"EvaderFati"},"content":"     * List out the current tasks as well as their status.","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":46,"author":{"gitId":"EvaderFati"},"content":"    private void list() {","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"EvaderFati"},"content":"        String msg \u003d \"\";","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"EvaderFati"},"content":"        for (int i \u003d 1; i \u003c\u003d lst.size(); i++) {","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"EvaderFati"},"content":"            msg +\u003d \"\\t \" + i + \".\" + lst.get(i-1).toString() + \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"EvaderFati"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"EvaderFati"},"content":"        this.printMsg(\"\\t Here are the tasks in your list:\\n\" + msg);","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":54,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"EvaderFati"},"content":"     * Add a task to the list.","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"EvaderFati"},"content":"     * A task can be one of \u0027todo\u0027, \u0027event\u0027 or \u0027deadline\u0027, whilst \u0027event\u0027 and \u0027deadline\u0027 have a time ","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"EvaderFati"},"content":"     * specified after the keyword \u0027/at\u0027 or \u0027/by\u0027.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"EvaderFati"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":59,"author":{"gitId":"EvaderFati"},"content":"     * @param input The user input of adding a task. ","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"EvaderFati"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"EvaderFati"},"content":"     * @throws DukeException when part of the infomation of a todo, event or deadline is missing.","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":63,"author":{"gitId":"EvaderFati"},"content":"    private void addTask(TaskType type, String input) throws DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"EvaderFati"},"content":"        String description;","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"EvaderFati"},"content":"        String time;","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"EvaderFati"},"content":"        int timeIndex;","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"EvaderFati"},"content":"        Task t;","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"EvaderFati"},"content":"        if (type \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"EvaderFati"},"content":"                description \u003d input.substring(5);","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"EvaderFati"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"EvaderFati"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"EvaderFati"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"EvaderFati"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":77,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"EvaderFati"},"content":"            t \u003d new Todo(description);","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"EvaderFati"},"content":"        } else if (type \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"EvaderFati"},"content":"            timeIndex \u003d input.indexOf(\" /at \");","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"EvaderFati"},"content":"            if (timeIndex \u003d\u003d -1) { ","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"EvaderFati"},"content":"                // cannot find \u0027/at\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"EvaderFati"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! The time of an event cannot be empty.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"EvaderFati"},"content":"                description \u003d input.substring(6, timeIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"EvaderFati"},"content":"                time \u003d input.substring(timeIndex + 5);","lastModifiedDate":"2022-01-23"},{"lineNumber":88,"author":{"gitId":"EvaderFati"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":89,"author":{"gitId":"EvaderFati"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! The description or time of an event cannot be empty.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":91,"author":{"gitId":"EvaderFati"},"content":"            if (description.equals(\"\") || time.equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":92,"author":{"gitId":"EvaderFati"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! The description or time of an event cannot be empty.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"EvaderFati"},"content":"            t \u003d new Event(description, time);","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"EvaderFati"},"content":"        } else { ","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"EvaderFati"},"content":"            // deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"EvaderFati"},"content":"            timeIndex \u003d input.indexOf(\" /by \");","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"EvaderFati"},"content":"            if (timeIndex \u003d\u003d -1) { ","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"EvaderFati"},"content":"                // cannot find \u0027/at\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"EvaderFati"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! The time of a deadline cannot be empty.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"EvaderFati"},"content":"                description \u003d input.substring(9, timeIndex);","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"EvaderFati"},"content":"                time \u003d input.substring(timeIndex + 5);","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"EvaderFati"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":106,"author":{"gitId":"EvaderFati"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! The description or time of a deadline cannot be empty.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"EvaderFati"},"content":"            if (description.equals(\"\") || time.equals(\"\")) {","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"EvaderFati"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! The description or time of a deadline cannot be empty.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"EvaderFati"},"content":"            t \u003d new Deadline(description, time);","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"EvaderFati"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"EvaderFati"},"content":"        this.lst.add(t);","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"EvaderFati"},"content":"        this.printMsg(\"\\t Got it. I\u0027ve added this task:\\n\\t   \" + t.toString()","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"EvaderFati"},"content":"                + \"\\n\\t Now you have \" + this.lst.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":117,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":118,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":119,"author":{"gitId":"EvaderFati"},"content":"     * Mark a particular task as done.","lastModifiedDate":"2022-01-21"},{"lineNumber":120,"author":{"gitId":"EvaderFati"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":121,"author":{"gitId":"EvaderFati"},"content":"     * @param num The number of the task to be marked.","lastModifiedDate":"2022-01-21"},{"lineNumber":122,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":123,"author":{"gitId":"EvaderFati"},"content":"    private void mark(int num) {","lastModifiedDate":"2022-01-22"},{"lineNumber":124,"author":{"gitId":"EvaderFati"},"content":"        this.lst.get(num).markAsDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":125,"author":{"gitId":"EvaderFati"},"content":"        this.printMsg(\"\\t Nice! I\u0027ve marked this task as done:\\n\\t   \" + lst.get(num).toString() + \"\\n\"); ","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":127,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":128,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":129,"author":{"gitId":"EvaderFati"},"content":"     * Unmark a particular task as done.","lastModifiedDate":"2022-01-21"},{"lineNumber":130,"author":{"gitId":"EvaderFati"},"content":"     *","lastModifiedDate":"2022-01-21"},{"lineNumber":131,"author":{"gitId":"EvaderFati"},"content":"     * @param num The number of the task to be unmarked.","lastModifiedDate":"2022-01-21"},{"lineNumber":132,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":133,"author":{"gitId":"EvaderFati"},"content":"    private void unmark(int num) {","lastModifiedDate":"2022-01-22"},{"lineNumber":134,"author":{"gitId":"EvaderFati"},"content":"        this.lst.get(num).unmarkAsDone();","lastModifiedDate":"2022-01-22"},{"lineNumber":135,"author":{"gitId":"EvaderFati"},"content":"        this.printMsg(\"\\t OK, I\u0027ve marked this task as not done yet:\\n\\t   \" + lst.get(num).toString() + \"\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":137,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-24"},{"lineNumber":139,"author":{"gitId":"EvaderFati"},"content":"     * Delete a task in the specified index.","lastModifiedDate":"2022-01-24"},{"lineNumber":140,"author":{"gitId":"EvaderFati"},"content":"     *","lastModifiedDate":"2022-01-24"},{"lineNumber":141,"author":{"gitId":"EvaderFati"},"content":"     * @param num The number of the task to be removed.","lastModifiedDate":"2022-01-24"},{"lineNumber":142,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-24"},{"lineNumber":143,"author":{"gitId":"EvaderFati"},"content":"    private void delete(int num) {","lastModifiedDate":"2022-01-24"},{"lineNumber":144,"author":{"gitId":"EvaderFati"},"content":"        Task t \u003d this.lst.remove(num);","lastModifiedDate":"2022-01-24"},{"lineNumber":145,"author":{"gitId":"EvaderFati"},"content":"        this.printMsg(\"\\t Noted. I\u0027ve removed this task:\\n\\t   \" + t.toString()","lastModifiedDate":"2022-01-24"},{"lineNumber":146,"author":{"gitId":"EvaderFati"},"content":"                + \"\\n\\t Now you have \" + this.lst.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":147,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":148,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":149,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":150,"author":{"gitId":"EvaderFati"},"content":"     * Give the bot intructions and let it do the corresponding job.","lastModifiedDate":"2022-01-22"},{"lineNumber":151,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":152,"author":{"gitId":"EvaderFati"},"content":"    private void run() {","lastModifiedDate":"2022-01-22"},{"lineNumber":153,"author":{"gitId":"EvaderFati"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":154,"author":{"gitId":"EvaderFati"},"content":"        String[] splitted \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2022-01-21"},{"lineNumber":155,"author":{"gitId":"EvaderFati"},"content":"        if (input.equals(\"bye\")) { ","lastModifiedDate":"2022-01-27"},{"lineNumber":156,"author":{"gitId":"EvaderFati"},"content":"            this.bye();","lastModifiedDate":"2022-01-22"},{"lineNumber":157,"author":{"gitId":"EvaderFati"},"content":"            return;","lastModifiedDate":"2022-01-22"},{"lineNumber":158,"author":{"gitId":"EvaderFati"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"EvaderFati"},"content":"            this.list();","lastModifiedDate":"2022-01-22"},{"lineNumber":160,"author":{"gitId":"EvaderFati"},"content":"        } else if (splitted.length \u003d\u003d 2 \u0026\u0026 splitted[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":162,"author":{"gitId":"EvaderFati"},"content":"                int num \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":163,"author":{"gitId":"EvaderFati"},"content":"                this.mark(num-1);","lastModifiedDate":"2022-01-22"},{"lineNumber":164,"author":{"gitId":"EvaderFati"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":165,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(\"\\t Opps! Pls check your numbers.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"EvaderFati"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":167,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(\"\\t Opps! The item you wanna mark is out of bounds.\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":168,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":169,"author":{"gitId":"EvaderFati"},"content":"        } else if (splitted.length \u003d\u003d 2 \u0026\u0026 splitted[0].equals(\"unmark\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":171,"author":{"gitId":"EvaderFati"},"content":"                int num \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2022-01-21"},{"lineNumber":172,"author":{"gitId":"EvaderFati"},"content":"                this.unmark(num-1);","lastModifiedDate":"2022-01-22"},{"lineNumber":173,"author":{"gitId":"EvaderFati"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":174,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(\"\\t Opps! Pls check your numbers.\\n\");","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"EvaderFati"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":176,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(\"\\t Opps! The item you wanna unmark is out of bounds.\\n\");","lastModifiedDate":"2022-01-22"},{"lineNumber":177,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":178,"author":{"gitId":"EvaderFati"},"content":"        } else if (splitted[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":180,"author":{"gitId":"EvaderFati"},"content":"                this.addTask(TaskType.TODO, input);","lastModifiedDate":"2022-01-23"},{"lineNumber":181,"author":{"gitId":"EvaderFati"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":182,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":183,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":184,"author":{"gitId":"EvaderFati"},"content":"        } else if (splitted[0].equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":186,"author":{"gitId":"EvaderFati"},"content":"                this.addTask(TaskType.EVENT, input);","lastModifiedDate":"2022-01-23"},{"lineNumber":187,"author":{"gitId":"EvaderFati"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":188,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":189,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":190,"author":{"gitId":"EvaderFati"},"content":"        } else if (splitted[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":192,"author":{"gitId":"EvaderFati"},"content":"                this.addTask(TaskType.DEADLINE, input);","lastModifiedDate":"2022-01-23"},{"lineNumber":193,"author":{"gitId":"EvaderFati"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":194,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(e.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":195,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":196,"author":{"gitId":"EvaderFati"},"content":"        } else if (splitted.length \u003d\u003d 2 \u0026\u0026 splitted[0].equals(\"delete\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"EvaderFati"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":198,"author":{"gitId":"EvaderFati"},"content":"                int num \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2022-01-24"},{"lineNumber":199,"author":{"gitId":"EvaderFati"},"content":"                this.delete(num-1);","lastModifiedDate":"2022-01-24"},{"lineNumber":200,"author":{"gitId":"EvaderFati"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":201,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(\"\\t Opps! Pls check your numbers.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":202,"author":{"gitId":"EvaderFati"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":203,"author":{"gitId":"EvaderFati"},"content":"                this.printMsg(\"\\t Opps! The item you wanna mark is out of bounds.\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":204,"author":{"gitId":"EvaderFati"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":205,"author":{"gitId":"EvaderFati"},"content":"        } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"EvaderFati"},"content":"            this.printMsg(\"\\t ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":207,"author":{"gitId":"EvaderFati"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":208,"author":{"gitId":"EvaderFati"},"content":"        this.run();","lastModifiedDate":"2022-01-22"},{"lineNumber":209,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":210,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-22"},{"lineNumber":212,"author":{"gitId":"EvaderFati"},"content":"        Duke bot \u003d new Duke();","lastModifiedDate":"2022-01-22"},{"lineNumber":213,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":214,"author":{"gitId":"EvaderFati"},"content":"        bot.greeting();","lastModifiedDate":"2022-01-22"},{"lineNumber":215,"author":{"gitId":"EvaderFati"},"content":"        bot.run();","lastModifiedDate":"2022-01-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"EvaderFati":213,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EvaderFati"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"EvaderFati"},"content":"    public DukeException(String str) {","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"EvaderFati"},"content":"        super(str);","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"EvaderFati"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"EvaderFati":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EvaderFati"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"EvaderFati"},"content":" * Represents tasks that start at a specific time and ends at a specific time.","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"EvaderFati"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"EvaderFati"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"EvaderFati"},"content":"    protected String time;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"EvaderFati"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"EvaderFati"},"content":"        super(description);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"EvaderFati"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"EvaderFati"},"content":"     * Returns a string representation of the object, including the task type(i.e. Event), description,","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"EvaderFati"},"content":"     * and time.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"EvaderFati"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"EvaderFati"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"EvaderFati"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.time + \")\";","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"EvaderFati"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"EvaderFati":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EvaderFati"},"content":"public class Task {","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"EvaderFati"},"content":"    protected String description;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"EvaderFati"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"EvaderFati"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"EvaderFati"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"EvaderFati"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"EvaderFati"},"content":"     * Provide status info of a task.","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"EvaderFati"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"EvaderFati"},"content":"     * @return \"X\" if the task is done; \" \" if it is not.","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"EvaderFati"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"EvaderFati"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"EvaderFati"},"content":"     * Mark a task as done.","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"EvaderFati"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"EvaderFati"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"EvaderFati"},"content":"     * Unmark a task.","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"EvaderFati"},"content":"\tpublic void unmarkAsDone() {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"EvaderFati"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"EvaderFati"},"content":"\t}","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"EvaderFati"},"content":"     * Provide the status info and description of a task.","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"EvaderFati"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"EvaderFati"},"content":"     * @return A string includes status and description.","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"EvaderFati"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"EvaderFati"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"EvaderFati"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"EvaderFati":41}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EvaderFati"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"EvaderFati"},"content":" * Represent tasks without any date/time attached to it.","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"EvaderFati"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"EvaderFati"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"EvaderFati"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"EvaderFati"},"content":"        super(description);","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"EvaderFati"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"EvaderFati"},"content":"     * Returns a string representation of the object, including the task type(i.e. Todo) and description.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"EvaderFati"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"EvaderFati"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"EvaderFati"},"content":"    public String toString() {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"EvaderFati"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"EvaderFati"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"EvaderFati"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"EvaderFati":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EvaderFati"},"content":"todo read books","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"EvaderFati"},"content":"deadline week3 ip /by tonight","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"EvaderFati"},"content":"event tut /at tmr 9am","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"EvaderFati"},"content":"list","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"EvaderFati"},"content":"mark 2","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"EvaderFati"},"content":"mark 1","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"EvaderFati"},"content":"unmark 2","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"EvaderFati"},"content":"list","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"EvaderFati"},"content":"delete 2","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"EvaderFati"},"content":"delete 3","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"EvaderFati"},"content":"todo","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"EvaderFati"},"content":"deadline test","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"EvaderFati"},"content":"bye","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"EvaderFati"},"content":"","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"EvaderFati":14}}]
