[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"# main.Duke project template","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"3. After that, locate the `src/main/java/main.Duke.java` file, right-click it, and choose `Run main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aditi2313":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"aditi2313":14}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":1}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"    private void flip() {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        return new DialogBox(l.getText(), iv.getImage());","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        var db \u003d new DialogBox(l.getText(), iv.getImage());","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":60}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"import parser.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import ui.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":" * Main class from which the bot is run.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    private static final String FILE_PATH \u003d \"data.txt\";","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    public Duke() {","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"            tasks \u003d new TaskList(storage.setUpData());","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        ui \u003d new Ui(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"     * Starts the bot by combining Parser, Storage, TaskList and Ui and handling main.Duke exceptions.","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    public String run(String userInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"            return ui.startConversation(this.parser, this.storage, userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"            return ui.showIllegalTextError(e);","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"     * Main method.","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"     * @param args not used.","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"    public static void main(String[] args) {}","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"     * Greeting the user when bot is started.","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"     * @return String greeting.","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"    public String greetUser() {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"        return \"Hello! I\u0027m main.Duke :) \\nWhat can I do for you? :D\";","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"        stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getDukeDialog(new Label(greetUser()), new ImageView(duke))","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"aditi2313"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"        });","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"        });","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"     * Iteration 1:","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"aditi2313"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"aditi2313"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"aditi2313"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"aditi2313"},"content":"     * Iteration 2:","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"aditi2313"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"aditi2313"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"aditi2313"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"aditi2313"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"aditi2313"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"aditi2313"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"aditi2313"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"aditi2313"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"aditi2313"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"aditi2313"},"content":"        String[] inputStringArray \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"aditi2313"},"content":"        if (!inputStringArray[0].equals(\"bye\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"aditi2313"},"content":"            return new Duke().run(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"aditi2313"},"content":"        return \"Bye. Hope to see you again soon! :))\";","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"aditi2313":176,"-":2}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class Launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getUserDialog(new Label(input), new ImageView(userImage)),","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getDukeDialog(new Label(response), new ImageView(dukeImage))","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":51}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package exception;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Custom Exception class that defines user related errors.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"        super(message);","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"     * Returns error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"     * @return String version of the error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        return super.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":21}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":" * Interface that deals with making sense of the user commands.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"public class Parser {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * Calls appropriate TaskList methods for each command and updates storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray string array containing user instructions.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     * @param storage Storage object that deals with storage updation.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If user input message does not make sense.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    public String userCommand(String[] inputStringsArray, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        switch (inputStringsArray[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            case \"list\":","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"                return tasks.displayList();","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"                String marked \u003d tasks.mark(inputStringsArray[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"                storage.updateData(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"                return marked;","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"                String unmarked \u003d tasks.unmark(inputStringsArray[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"                storage.updateData(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"                return unmarked;","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"            case \"event\":","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"                String added \u003d tasks.addToList(inputStringsArray);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"                storage.updateData(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"                return added;","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"                String deleted \u003d tasks.delete(inputStringsArray[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"                storage.updateData(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"                return deleted;","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            case \"find\":","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"                return tasks.find(inputStringsArray[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"            default:","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means O.o\");","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":52}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import task.Todo;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":" * Interface that deals with pushing or pulling tasks from the storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"public class Storage {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    String path;","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"     * Retrieves tasks from the storage (if any) and adds them to a new task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     * @return list of tasks retrieved from the storage, else an empty list.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If data file does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    public ArrayList\u003cTask\u003e setUpData() throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            FileReader myObj \u003d new FileReader(this.path);","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"            BufferedReader br \u003d new BufferedReader(myObj);","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"            String line;","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"                String[] lineArray \u003d line.split(\"/\");","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"                Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"                switch (lineArray[0]) {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"                    case \"T\":","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"                        task \u003d new Todo(lineArray[2]);","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"                        break;","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"                        task \u003d new Event(lineArray[2], lineArray[3]);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"                        break;","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"                    default:","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"                        task \u003d new Deadline(lineArray[2], lineArray[3]);","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"                if (lineArray[1].equals(\"X\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"                    task.setAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"                tasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"            return tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"File does not exist.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"     * Adds or removes tasks from storage according to changes made by user.","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"     * @param taskList updated list of tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"    public void updateData(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"            FileWriter myObj \u003d new FileWriter(this.path);","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"            myObj.flush();","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 0; i \u003c taskList.tasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"                myObj.write(taskList.tasks.get(i).symbol() + \"/\" + taskList.tasks.get(i).getStatusIcon() + \"/\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"                        taskList.tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"            myObj.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"File does not exist.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":78}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates deadline tasks with due dates.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    LocalDate date;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public Deadline(String details, String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents deadline tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027D\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        return \"D\";","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"     * Returns deadline details along with full string representation of the date.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"     * @return details of the deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + this.date.getDayOfMonth() + \" \" + this.date.getMonth() + \" \" + this.date.getYear();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the deadline along with date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"     * @return String which combines deadline details with toString method of the date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + \"/\" + this.date.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":43}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates event tasks with due dates.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    LocalDate date;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public Event(String details, String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents event tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027E\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        return \"E\";","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"     * Returns event details along with full string representation of the date.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"     * @return details of the event.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + this.date.getDayOfMonth() + \" \" + this.date.getMonth() + \" \" + this.date.getYear();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the event along with date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"     * @return String which combines event details with toString method of the date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + \"/\" + this.date.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":42}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/** Abstract class that distinguishes between different Tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" *  Holds a description and the status of whether a task is done or not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"abstract public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"    protected String details;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    Task(String details) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol to represent a completed or not completed task.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"     * @return String \"X\" or \" \".","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"        return (isDone? \"X\" : \" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"     * Sets task status as not completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * Sets task status as completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    public void setAsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents task type.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027D\u0027, \u0027E\u0027 or \u0027T\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    abstract public String symbol();","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"     * Returns task details along with full string representation of the date if any.","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"     * @return details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    abstract public String displayTime();","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"     * @return String details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        return details;","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":57}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":" * Interface that stores list of tasks and contains methods that manipulate it.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"public class TaskList {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * Prints all tasks in the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    public String displayList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"            returnString \u003d returnString + (i + 1) + \". [\" + tasks.get(i).symbol() + \"][\" + tasks.get(i).getStatusIcon()","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"                    + \"] \" + tasks.get(i).displayTime() + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        return returnString;","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"     * @param stringsToAdd array that contains details of the task user wants to add to the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If input string does not comply with todo, deadline or event formats.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    public String addToList(String[] stringsToAdd) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        if (stringsToAdd.length \u003c 2) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"OOPS!! The description of a \" + stringsToAdd[0] + \" cannot be empty.\");","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"            Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            String returnString \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"            boolean containsBy \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 1; i \u003c stringsToAdd.length; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"                if (stringsToAdd[i].equals(\"by\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"                    containsBy \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"                    returnString \u003d returnString + stringsToAdd[i] + \" \";","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"            if (stringsToAdd[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"                if (containsBy) {","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"                    throw new DukeException(\"Todo cannot have a due date. Create an deadline or event instead :)\");","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Todo(returnString);","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"            } else if (stringsToAdd[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"                if (!containsBy) {","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"                    throw new DukeException(\"A deadline needs a due date. Create a todo instead.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Deadline(returnString, stringsToAdd[stringsToAdd.length - 1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"                if (!containsBy) {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"                    throw new DukeException(\"An event needs a due date. Create a todo instead.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Event(returnString, stringsToAdd[stringsToAdd.length - 1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"            tasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"            return \"Got it!! :D I\u0027ve added this task:\\n\" + \" [\" + task.symbol() + \"][] \" + returnString +","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"     * Marks a specific task in the task list as completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"     * @param number String number that specifies task number in task list to mark as completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"    public String mark(String number) {","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"        tasks.get(num - 1).setAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        return \"Nice! :P I\u0027ve marked this task as done:\\n [\" + temp.symbol() + \"][\" +","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"                temp.getStatusIcon() + \"] \" + temp;","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"     * Marks a specific task in the task list as not completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"     * @param number String number that specifies task number in task list to mark as not completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"    public String unmark(String number) {","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"        int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        tasks.get(num - 1).setAsNotDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        return \"OK ._. , I\u0027ve marked this task as not done yet:\\n [\" + temp.symbol() + \"][\" +","lastModifiedDate":"2022-02-06"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"                temp.getStatusIcon() + \"] \" + temp;","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"     * Deletes all or specific tasks from the task list based on string input.","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"     * @param number string that specifies if a specific task number or all tasks are to be deleted.","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"    public String delete(String number) {","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        if (number.equals(\"all\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"            this.tasks \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"            return \"All right! I have deleted all tasks in your list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"            int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"            Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"            String tempString \u003d \"Noted. I\u0027ve removed this task:\\n [\" + temp.symbol() + \"][\" +","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"                    temp.getStatusIcon() + \"] \" + temp +","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"                    \"\\nNow you have \" + (tasks.size() - 1) + \" tasks left in this list\";","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"            tasks.remove(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"            return tempString;","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"     * Prints tasks in the task list that contain a specified keyword.","lastModifiedDate":"2022-01-30"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray keyword used to filer tasks in task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"    public String find(String inputStringsArray) {","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"aditi2313"},"content":"            String details \u003d this.tasks.get(i).details;","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"            String[] detailsArray \u003d details.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"            for (int j \u003d 0; j \u003c detailsArray.length; j++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"                if (detailsArray[j].equals(inputStringsArray)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"                    foundTasks.add(this.tasks.get(i));","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"        String returnString \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"            returnString \u003d returnString + (i + 1) + \". [\" + foundTasks.get(i).symbol() + \"][\"","lastModifiedDate":"2022-01-30"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"                    + foundTasks.get(i).getStatusIcon() + \"] \" + foundTasks.get(i).displayTime() + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"        return returnString;","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":144}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates task types without due date.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    public Todo(String details) {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents todo tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027T\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        return \"T\";","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     * Returns task details since it does not have a due date.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * @return details of the todo.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        return super.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":29}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import parser.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" * Interface that the user interacts with.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":" * Involves a scanner to read user inputs.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"public class Ui {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    public Ui(TaskList tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     * Starts conversation with user by combining Parser and Storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * @param parser Instance of Parser to process user commands.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     * @param storage Instance of storage to update data in storage","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If invalid input message is entered.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    public String startConversation(Parser parser, Storage storage, String userInput) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        String[] inputStringArray \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        return parser.userCommand(inputStringArray, storage);","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     * Displays appropriate error messages.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"     * @param e DukeException for the error caused by incorrect user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     * @returns Error message.","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    public String showIllegalTextError(DukeException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        return e.getMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"7.0\" layoutY\u003d\"561.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"311.0\" promptText\u003d\"Enter a command for Duke\" AnchorPane.bottomAnchor\u003d\"4.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"322.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"73.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"            \u003cFont size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"            \u003cInsets left\u003d\"1.0\" right\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":27}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    public void symbolTest(){","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"        Deadline testDeadline \u003d new Deadline(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testDeadline.symbol(), \"D\");","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    public void displayTimeTest() {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"        Deadline testDeadline \u003d new Deadline(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testDeadline.displayTime(), \"Complete 21003 ip tasks30 JANUARY 2021\");","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aditi2313":19}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"public class EventTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    public void symbolTest(){","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"        Event testEvent \u003d new Event(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testEvent.symbol(), \"E\");","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    public void displayTimeTest() {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"        Event testEvent \u003d new Event(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testEvent.displayTime(), \"Complete 21003 ip tasks30 JANUARY 2021\");","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aditi2313":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"java -classpath ..\\bin main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"aditi2313":1}}]
