[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"# main.Duke project template","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"3. After that, locate the `src/main/java/main.Duke.java` file, right-click it, and choose `Run main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aditi2313":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"    archiveBaseName \u003d \"Main\"","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"aditi2313":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"# User Guide for Duke","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"*Let Duke help you manage your todos, events, deadlines and notes, so ","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"you never have to do it yourself!*","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"![Duke Image](https://aditi2313.github.io/ip/Ui.png)","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"## Table of Contents","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"1. [Setting up Duke](#setting-up-duke)","lastModifiedDate":"2022-02-16"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"2. [Application Features](#application-features)","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"3. [Task List command usages](#task-list-command-usages)","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"   - [Viewing task list](#viewing-task-list)","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"   - [Creating a new todo](#creating-a-new-todo)","lastModifiedDate":"2022-02-14"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"   - [Creating a new deadline](#creating-a-new-deadline)","lastModifiedDate":"2022-02-14"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"   - [Creating a new event](#creating-a-new-event)","lastModifiedDate":"2022-02-14"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"   - [Marking a task as complete](#marking-a-task-as-complete)","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"   - [Marking a task as incomplete](#marking-a-task-as-incomplete)","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"   - [Deleting a task](#deleting-a-task)","lastModifiedDate":"2022-02-14"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"   - [Deleting all tasks](#deleting-all-tasks)","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"   - [Finding tasks](#finding-tasks)","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"4. [Note List command usages](#note-list-command-usages)","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"   - [Viewing note list](#viewing-note-list)","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"   - [Creating a new note](#creating-a-new-note)","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"   - [Deleting a note](#deleting-a-note)","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"   - [Deleting all notes](#deleting-all-notes)","lastModifiedDate":"2022-02-14"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"   - [Finding notes](#finding-notes)","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"5. [General command usages](#general-command-usages)","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"   - [Asking for help](#asking-for-help)","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"   - [Closing the application](#closing-the-application)","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"## Setting up Duke","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"1. Make sure you have Java 11 installed.","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"2. Download the `Main.jar` file from releases. You can find the link to the GitHub page above.","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"3. Create a new folder in a working directory of your choice and name it `Duke`.","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"4. Move the `Main.jar` file to the `Duke` folder.","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"5. Move into the working directory via Terminal/Command Line by running:","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"````","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"cd \u003cpath_to_the_duke_folder_you_created\u003e","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"````","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"6. Run Duke using the command:","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"````","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"java -jar Main.jar","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"````","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"## Application Features","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"1. Create and add new `todos`, `deadlines`, `events` and `notes` to your task and note lists.","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"2. Mark/unmark `todos`, `deadlines` and `events` in your task list.","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"3. Delete tasks and notes from your lists.","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"4. Filter tasks and notes in your lists by `keyword`.","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"## Task List Command Usages","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"### Viewing task list","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"`task list` allows you to view your task list.","lastModifiedDate":"2022-02-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"Format and Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"`task list`","lastModifiedDate":"2022-02-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"### Creating a new todo","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"`task new todo` allows you to add a new todo to your task list.","lastModifiedDate":"2022-02-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"`task new todo \u003ctodo description\u003e`","lastModifiedDate":"2022-02-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"`task new todo Create a resume`","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"### Creating a new deadline","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"`task new deadline` allows you to add a new deadline to your task list.","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"`task new deadline \u003cdeadline description\u003e /by \u003cdate in YYYY-MM-DD format\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"`task new deadline Submit CS2103T quiz /by 2022-02-13`","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"### Creating a new event","lastModifiedDate":"2022-02-14"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"`task new event` allows you to add a new event to your task list.","lastModifiedDate":"2022-02-14"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"`task new event \u003cevent description\u003e /on \u003cdate in YYYY-MM-DD format\u003e`","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"`task new event Attend CS seminar /on 2020-02-26`","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"### Marking a task as complete","lastModifiedDate":"2022-02-14"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"`task mark` allows you to set the status of a task as completed.","lastModifiedDate":"2022-02-14"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"`task mark \u003cindex number of task to mark\u003e`","lastModifiedDate":"2022-02-14"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"`task mark 2`","lastModifiedDate":"2022-02-14"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"### Marking a task as incomplete","lastModifiedDate":"2022-02-14"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"`task unmark` allows you to set the status of a task to incomplete.","lastModifiedDate":"2022-02-14"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"`task unmark: \u003cindex number of task to unmark\u003e`","lastModifiedDate":"2022-02-14"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"`task mark 2`","lastModifiedDate":"2022-02-14"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"### Deleting a task","lastModifiedDate":"2022-02-14"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"`task delete` allows you to delete a specific task in your task list.","lastModifiedDate":"2022-02-14"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"`task delete \u003cindex number\u003e`","lastModifiedDate":"2022-02-14"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"`task delete 2`","lastModifiedDate":"2022-02-14"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"### Deleting all tasks","lastModifiedDate":"2022-02-14"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"`task delete all` allows you to delete all tasks in your task list.","lastModifiedDate":"2022-02-14"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"Format and Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"`task delete all`","lastModifiedDate":"2022-02-14"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"### Finding tasks","lastModifiedDate":"2022-02-14"},{"lineNumber":128,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"`task find` allows you to find all tasks in your task list that match a specific keyword.","lastModifiedDate":"2022-02-14"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"`task find \u003ckeyword\u003e`","lastModifiedDate":"2022-02-14"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"`task find seminar`","lastModifiedDate":"2022-02-14"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"## Note List Command Usages","lastModifiedDate":"2022-02-14"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"### Viewing note list","lastModifiedDate":"2022-02-14"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"`note list` allows you to view your note list.","lastModifiedDate":"2022-02-14"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":143,"author":{"gitId":"aditi2313"},"content":"Format and Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"`note list`","lastModifiedDate":"2022-02-14"},{"lineNumber":145,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"### Creating a new note","lastModifiedDate":"2022-02-14"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":148,"author":{"gitId":"aditi2313"},"content":"`note new` allows you to add a new note to your note list.","lastModifiedDate":"2022-02-14"},{"lineNumber":149,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":150,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"`note new \u003cnote description\u003e`","lastModifiedDate":"2022-02-14"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":153,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":154,"author":{"gitId":"aditi2313"},"content":"`note new Buy new books from bookstore.`","lastModifiedDate":"2022-02-14"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":156,"author":{"gitId":"aditi2313"},"content":"### Deleting a note","lastModifiedDate":"2022-02-14"},{"lineNumber":157,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":158,"author":{"gitId":"aditi2313"},"content":"`note delete` allows you to delete a specific note in your note list.","lastModifiedDate":"2022-02-14"},{"lineNumber":159,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":160,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"`note delete \u003cindex number\u003e`","lastModifiedDate":"2022-02-14"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":163,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":164,"author":{"gitId":"aditi2313"},"content":"`note delete 2`","lastModifiedDate":"2022-02-14"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":166,"author":{"gitId":"aditi2313"},"content":"### Deleting all notes","lastModifiedDate":"2022-02-14"},{"lineNumber":167,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":168,"author":{"gitId":"aditi2313"},"content":"`note delete all` allows you to delete all notes in your note list.","lastModifiedDate":"2022-02-14"},{"lineNumber":169,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":170,"author":{"gitId":"aditi2313"},"content":"Format and Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":171,"author":{"gitId":"aditi2313"},"content":"`note delete all`","lastModifiedDate":"2022-02-14"},{"lineNumber":172,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":173,"author":{"gitId":"aditi2313"},"content":"### Finding notes","lastModifiedDate":"2022-02-14"},{"lineNumber":174,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":175,"author":{"gitId":"aditi2313"},"content":"`note find` allows you to find all notes in your note list that match a specific keyword.","lastModifiedDate":"2022-02-14"},{"lineNumber":176,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":177,"author":{"gitId":"aditi2313"},"content":"Format:","lastModifiedDate":"2022-02-14"},{"lineNumber":178,"author":{"gitId":"aditi2313"},"content":"`note find \u003ckeyword\u003e`","lastModifiedDate":"2022-02-14"},{"lineNumber":179,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":180,"author":{"gitId":"aditi2313"},"content":"Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":181,"author":{"gitId":"aditi2313"},"content":"`note find books`","lastModifiedDate":"2022-02-14"},{"lineNumber":182,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":183,"author":{"gitId":"aditi2313"},"content":"## General Command Usages","lastModifiedDate":"2022-02-14"},{"lineNumber":184,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":185,"author":{"gitId":"aditi2313"},"content":"### Asking for help","lastModifiedDate":"2022-02-14"},{"lineNumber":186,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":187,"author":{"gitId":"aditi2313"},"content":"`help` allows you to view all duke commands.","lastModifiedDate":"2022-02-14"},{"lineNumber":188,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":189,"author":{"gitId":"aditi2313"},"content":"Format and Example: ","lastModifiedDate":"2022-02-14"},{"lineNumber":190,"author":{"gitId":"aditi2313"},"content":"`help`","lastModifiedDate":"2022-02-14"},{"lineNumber":191,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":192,"author":{"gitId":"aditi2313"},"content":"### Closing the application","lastModifiedDate":"2022-02-14"},{"lineNumber":193,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":194,"author":{"gitId":"aditi2313"},"content":"`bye` closes the application.","lastModifiedDate":"2022-02-14"},{"lineNumber":195,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":196,"author":{"gitId":"aditi2313"},"content":"Format and Example:","lastModifiedDate":"2022-02-14"},{"lineNumber":197,"author":{"gitId":"aditi2313"},"content":"`bye`","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"aditi2313":184,"-":13}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"    private void flip() {","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        return new DialogBox(l.getText(), iv.getImage());","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        var db \u003d new DialogBox(l.getText(), iv.getImage());","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":62}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import java.io.File;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"import notes.NoteList;","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"import parser.Parser;","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":" * Main class from which the bot is run.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    private static final String TASK_FILE_PATH \u003d \"tasklistdata.txt\";","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    private static final String NOTE_FILE_PATH \u003d \"notelistdata.txt\";","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    private final Ui ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    private NoteList notes;","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpeg\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"     * Duke constructor which creates new files for data to be stored.","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"    public Duke() {","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"        File taskFile \u003d new File(TASK_FILE_PATH);","lastModifiedDate":"2022-02-14"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        File noteFile \u003d new File(NOTE_FILE_PATH);","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"            taskFile.createNewFile();","lastModifiedDate":"2022-02-14"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"            noteFile.createNewFile();","lastModifiedDate":"2022-02-14"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-14"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"Could not create file.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        storage \u003d new Storage(TASK_FILE_PATH, NOTE_FILE_PATH);","lastModifiedDate":"2022-02-11"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"            tasks \u003d new TaskList(storage.setUpTaskData());","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"            notes \u003d new NoteList(storage.setUpNoteData());","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"Could not set up data.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"        ui \u003d new Ui(tasks, notes);","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        parser \u003d new Parser(tasks, notes);","lastModifiedDate":"2022-02-11"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"     * Starts the bot by combining Parser, Storage, TaskList and Ui and handling Duke exceptions.","lastModifiedDate":"2022-02-16"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"    public String run(String userInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"            return ui.startConversation(this.parser, this.storage, userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"            return ui.showIllegalTextError(e);","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"    public static void main(String[] args) {}","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"     * Creates the container for the content of the chat to scroll.","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"    public void setContainer(Stage stage) {","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        formatWindow(stage, mainLayout);","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"     * Formatting the window to look as expected.","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"    public void formatWindow(Stage stage, AnchorPane mainLayout) {","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"     * Starts the conversation between the user and the bot.","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-02-13"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-13"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"        //Setting up required components","lastModifiedDate":"2022-02-13"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"        setContainer(stage);","lastModifiedDate":"2022-02-13"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"        //Add functionality to handle user input.","lastModifiedDate":"2022-02-13"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"aditi2313"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"        });","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"aditi2313"},"content":"        });","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"aditi2313"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":153,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"aditi2313"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2022-02-10"},{"lineNumber":157,"author":{"gitId":"aditi2313"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-10"},{"lineNumber":158,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"aditi2313"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"aditi2313"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getUserDialog(new Label(userText), new ImageView(user)),","lastModifiedDate":"2022-02-16"},{"lineNumber":164,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getDukeDialog(new Label(dukeText), new ImageView(duke))","lastModifiedDate":"2022-02-16"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"aditi2313"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"aditi2313"},"content":"     * Generates Duke response for user inputs.","lastModifiedDate":"2022-02-10"},{"lineNumber":171,"author":{"gitId":"aditi2313"},"content":"     * @param userInput String entered by the user","lastModifiedDate":"2022-02-10"},{"lineNumber":172,"author":{"gitId":"aditi2313"},"content":"     * @returns Duke\u0027s response by running the bot.","lastModifiedDate":"2022-02-10"},{"lineNumber":173,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"aditi2313"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"aditi2313"},"content":"        return new Duke().run(userInput);","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"aditi2313":175,"-":2}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class Launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            stage.setResizable(false);","lastModifiedDate":"2022-02-16"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpeg\"));","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * Initializes the bot main window by adding a user greeting.","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getDukeDialog(new Label(Ui.greetUser()),","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"                        new ImageView(dukeImage))","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        );","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getUserDialog(new Label(input), new ImageView(userImage)),","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"                DialogBox.getDukeDialog(new Label(response), new ImageView(dukeImage))","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":60}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package exception;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Custom Exception class that defines user related errors.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"        super(message);","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"     * Returns error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"     * @return String version of the error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        return super.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":21}},{"path":"src/main/java/notes/Note.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package notes;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"public class Note {","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"    protected String description;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"    public Note(String description) {","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"        return this.description;","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"aditi2313":16}},{"path":"src/main/java/notes/NoteList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package notes;","lastModifiedDate":"2022-02-11"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"public class NoteList {","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"    public NoteList(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"     * Prints all notes in the note list.","lastModifiedDate":"2022-02-11"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    public String displayList() {","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"            returnString \u003d returnString + (i + 1) + \". \" + notes.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        if (returnString.equals(\"\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            return \"Seems like you haven\u0027t added any notes to your list yet...\";","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            return returnString;","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * Adds a new note to the note list.","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     * @param stringNoteArray String note that needs to be added to the note list.","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when note description is empty.","lastModifiedDate":"2022-02-16"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    public String addToList(String[] stringNoteArray) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        String note \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 2; i \u003c stringNoteArray.length; i++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"            note \u003d note + stringNoteArray[i] + \" \";","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        if (note.equals(\"\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Hmm. Note description cannot be empty...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            Note newNote \u003d new Note(note);","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"            this.notes.add(newNote);","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"            return \"Got it! I\u0027ve added this note:\\n\" + note + \"\\n to your list of notes.\";","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * Deletes all or specific notes from the note list based on string input.","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray string that specifies if a specific note number or all notes to be deleted.","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a valid list index.","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"    public String delete(String[] inputStringsArray) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"            String number \u003d inputStringsArray[2];","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"            if (number.equals(\"all\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"                this.notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"                return \"All right! I have deleted all tasks in your list.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"            } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"                int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"                Note note \u003d notes.get(num - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"                String tempString \u003d \"Noted. I\u0027ve removed this note:\\n\" + note.toString()","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"                        + \"\\nNow you have \" + (this.notes.size() - 1) + \" notes left in your note list\";","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"                this.notes.remove(num - 1);","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"                return tempString;","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Try entering a valid index number or \u0027all\u0027 for the notes you want to delete\");","lastModifiedDate":"2022-02-16"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"     * Prints notes in the note list that contain a specified keyword.","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray keyword used to filer notes in task list.","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a keyword to filter using.","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"    public String find(String[] inputStringsArray) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"            ArrayList\u003cNote\u003e foundNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 0; i \u003c this.notes.size(); i++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"                String details \u003d this.notes.get(i).toString();","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"                String[] detailsArray \u003d details.split(\" \");","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"                for (int j \u003d 0; j \u003c detailsArray.length; j++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"                    if (detailsArray[j].equals(inputStringsArray[2])) {","lastModifiedDate":"2022-02-16"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"                        foundNotes.add(this.notes.get(i));","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"                        break;","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"                    }","lastModifiedDate":"2022-02-11"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"            String returnString \u003d \"Here are the matching notes in your list:\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 0; i \u003c foundNotes.size(); i++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"                returnString \u003d returnString + (i + 1) + \". \" + foundNotes.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"            return returnString;","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Enter a keyword to filter notes by!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"     * Getter for notes","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"    public ArrayList\u003cNote\u003e getNotes() {","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"        return this.notes;","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"aditi2313":108}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import notes.NoteList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":" * Interface that deals with making sense of the user commands.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"public class Parser {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    private NoteList notes;","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     * Parser class constructor","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * @param tasks maintains the tasks added to the task list.","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     * @param notes maintains the notes added to the note list.","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public Parser(TaskList tasks, NoteList notes) {","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     * Divides note and task commands entered by the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray string array containing the user command.","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     * @param storage Storage object that deals with storage updates.","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If user input message does not make sense.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    public String userCommand(String[] inputStringsArray, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        switch (inputStringsArray[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        case \"task\":","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"            return taskParser(inputStringsArray, storage);","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        case \"note\":","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"            return noteParser(inputStringsArray, storage);","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        case \"help\":","lastModifiedDate":"2022-02-11"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"            return Ui.userHelp();","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        default:","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"OOPS! I\u0027m sorry, but I don\u0027t know what that command means.\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"                    + \"Enter \u0027help\u0027 if you need it!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"     * Handles method calls based on task related user commands.","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray string array containing user instructions.","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * @param storage Storage object that deals with storage updates.","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If user input message does not make sense.","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    public String taskParser(String[] inputStringsArray, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        String taskCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"            taskCommand \u003d inputStringsArray[1];","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Enter a task command...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"        switch (taskCommand) {","lastModifiedDate":"2022-02-16"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"        case \"list\":","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"            return tasks.displayList();","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"            String marked \u003d tasks.mark(inputStringsArray);","lastModifiedDate":"2022-02-16"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"            storage.updateTaskData(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"            return marked;","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"            String unmarked \u003d tasks.unmark(inputStringsArray);","lastModifiedDate":"2022-02-16"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"            storage.updateTaskData(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"            return unmarked;","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"        case \"new\":","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"            String added \u003d tasks.addToList(inputStringsArray);","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"            storage.updateTaskData(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"            return added;","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        case \"delete\":","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"            String deleted \u003d tasks.delete(inputStringsArray);","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"            storage.updateTaskData(tasks);","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"            return deleted;","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"        case \"find\":","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"            return tasks.find(inputStringsArray);","lastModifiedDate":"2022-02-16"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"        default:","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Not sure what that task command means... Enter \u0027help\u0027 if you need it!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"     * Handles method calls based on note related user commands","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray string array containing user instructions.","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"     * @param storage Storage object that deals with storage updates.","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If user input message does not make sense.","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"    public String noteParser(String[] inputStringsArray, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        String taskCommand;","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"            taskCommand \u003d inputStringsArray[1];","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Enter a note command...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"        switch (taskCommand) {","lastModifiedDate":"2022-02-16"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"        case \"list\":","lastModifiedDate":"2022-02-11"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"            return notes.displayList();","lastModifiedDate":"2022-02-11"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"        case \"new\":","lastModifiedDate":"2022-02-11"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"            String added \u003d notes.addToList(inputStringsArray);","lastModifiedDate":"2022-02-11"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"            storage.updateNoteData(notes);","lastModifiedDate":"2022-02-11"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"            return added;","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"            String deleted \u003d notes.delete(inputStringsArray);","lastModifiedDate":"2022-02-16"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"            storage.updateNoteData(notes);","lastModifiedDate":"2022-02-11"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"            return deleted;","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"        case \"find\":","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"            return notes.find(inputStringsArray);","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"        default:","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Not sure what that note command means...\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"                    + \"Enter \u0027help if you need it!\");","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":117}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import notes.Note;","lastModifiedDate":"2022-02-11"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import notes.NoteList;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"import task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"import task.Todo;","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":" * Interface that deals with pushing or pulling tasks from the storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"public class Storage {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    private String taskPath;","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    private String notePath;","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"     * Storage class constructor.","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     * @param taskPath provides path for the task data file.","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"     * @param notePath provides path for the note data file.","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    public Storage(String taskPath, String notePath) {","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        this.taskPath \u003d taskPath;","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"        this.notePath \u003d notePath;","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"     * Retrieves tasks from the storage (if any) and adds them to a new task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"     * @return list of tasks retrieved from the storage, else an empty list.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If data file does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    public ArrayList\u003cTask\u003e setUpTaskData() throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            FileReader myObj \u003d new FileReader(this.taskPath);","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"            BufferedReader br \u003d new BufferedReader(myObj);","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"            String line;","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"                String[] lineArray \u003d line.split(\"/\");","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"                switch (lineArray[0]) {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"                case \"T\":","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Todo(lineArray[2]);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"                case \"E\":","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Event(lineArray[2], lineArray[3]);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"                default:","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Deadline(lineArray[2], lineArray[3]);","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"                if (lineArray[1].equals(\"X\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"                    task.setAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"                tasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"            return tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Could not reach file.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"     * Retrieves notes from the storage (if any) and adds them to a new note list.","lastModifiedDate":"2022-02-11"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"     * @return list of notes retrieved from the storage, else an empty list.","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If data file does not exist.","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"    public ArrayList\u003cNote\u003e setUpNoteData() throws DukeException {","lastModifiedDate":"2022-02-11"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"            FileReader myObj \u003d new FileReader(this.notePath);","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"            BufferedReader br \u003d new BufferedReader(myObj);","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"            String line;","lastModifiedDate":"2022-02-11"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"            ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-11"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-02-11"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"                Note newNote \u003d new Note(line);","lastModifiedDate":"2022-02-11"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"                notes.add(newNote);","lastModifiedDate":"2022-02-11"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"            return notes;","lastModifiedDate":"2022-02-11"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Could not reach file.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"     * Adds or removes tasks from storage according to changes made by user.","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"     * @param taskList updated list of tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"    public void updateTaskData(TaskList taskList) {","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"            FileWriter taskPath \u003d new FileWriter(this.taskPath);","lastModifiedDate":"2022-02-11"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"            taskPath.flush();","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 0; i \u003c taskList.getTasks().size(); i++) {","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"                taskPath.write(taskList.getTasks().get(i).symbol() + \"/\"","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"                        + taskList.getTasks().get(i).getStatusIcon() + \"/\"","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"                        + taskList.getTasks().get(i).toString() + \"\\n\");","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"            taskPath.close();","lastModifiedDate":"2022-02-11"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"Could not reach file.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"     * Adds or removes notes from storage according to changes made by user.","lastModifiedDate":"2022-02-11"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"     * @param noteList updated list of notes.","lastModifiedDate":"2022-02-11"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"    public void updateNoteData(NoteList noteList) {","lastModifiedDate":"2022-02-11"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-11"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"            FileWriter notePath \u003d new FileWriter(this.notePath);","lastModifiedDate":"2022-02-11"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"            notePath.flush();","lastModifiedDate":"2022-02-11"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 0; i \u003c noteList.getNotes().size(); i++) {","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"                notePath.write(noteList.getNotes().get(i).toString() + \"\\n\");","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"            notePath.close();","lastModifiedDate":"2022-02-11"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-11"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"Could not reach file.\");","lastModifiedDate":"2022-02-14"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":127}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates deadline tasks with due dates.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    private LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"     * Deadline class constructor","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"     * @param details provides description of the deadline being created.","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     * @param date provides the date when the deadline is due.","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a valid date.","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public Deadline(String details, String date) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Hmm...have you entered a correct date?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents deadline tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027D\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        return \"D\";","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"     * Returns deadline details along with full string representation of the date.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"     * @return details of the deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + this.date.getDayOfMonth() + \" \" + this.date.getMonth() + \" \" + this.date.getYear();","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the deadline along with date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"     * @return String which combines deadline details with toString method of the date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + \"/\" + this.date.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":56}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-16"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates event tasks with due dates.","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    private LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"     * Event class constructor","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"     * @param details provides description of the event being created.","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     * @param date provides the date of when the event is.","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a valid date.","lastModifiedDate":"2022-02-16"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public Event(String details, String date) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Hmm...have you entered a correct date?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents event tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027E\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        return \"E\";","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"     * Returns event details along with full string representation of the date.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"     * @return details of the event.","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + this.date.getDayOfMonth() + \" \" + this.date.getMonth()","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"                + \" \" + this.date.getYear();","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the event along with date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * @return String which combines event details with toString method of the date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + \"/\" + this.date.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":57}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/** Abstract class that distinguishes between different Tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" *  Holds a description and the status of whether a task is done or not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public abstract class Task {","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"    protected String details;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    Task(String details) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol to represent a completed or not completed task.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"     * @return String \"X\" or \" \".","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"     * Sets task status as not completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * Sets task status as completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    public void setAsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents task type.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027D\u0027, \u0027E\u0027 or \u0027T\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    public abstract String symbol();","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"     * Returns task details along with full string representation of the date if any.","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"     * @return details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    public abstract String displayTime();","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"     * @return String details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        return details;","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":57}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":" * Interface that stores list of tasks and contains methods that manipulate it.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"public class TaskList {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * Creates new tasks based on if a todo, deadline or event is entered by the user.","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     * @param taskType indicates if a task is a todo, deadline or event.","lastModifiedDate":"2022-02-16"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     * @param stringsToAdd contains user input string array.","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * @param containsBy indicates if a deadline by date has been entered.","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     * @param containsOn indicated if an event on date has been entered.","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"     * @param returnString contains the description of the task entered by the user.","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a valid date for the task.","lastModifiedDate":"2022-02-16"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    public String createNewTask(String taskType, String[] stringsToAdd, Boolean containsBy, Boolean containsOn,","lastModifiedDate":"2022-02-16"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"                                String returnString) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-16"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-16"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"            if (containsBy || containsOn) {","lastModifiedDate":"2022-02-16"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"                throw new DukeException(\"Todo cannot have a due date. Create an deadline or event instead!\");","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"                return returnAfterAdding(new Todo(returnString), returnString);","lastModifiedDate":"2022-02-16"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-16"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"            if (!containsBy || stringsToAdd[stringsToAdd.length - 1].equals(\"/by\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"                throw new DukeException(\"A deadline needs a due date. Create a todo/event instead!\");","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"            } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"                return returnAfterAdding(new Deadline(returnString, stringsToAdd[stringsToAdd.length - 1]), returnString);","lastModifiedDate":"2022-02-16"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"        default:","lastModifiedDate":"2022-02-16"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            if (!containsOn || stringsToAdd[stringsToAdd.length - 1].equals(\"/on\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"                throw new DukeException(\"An event needs a date. Create a todo/deadline instead!\");","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"            } else {","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"                return returnAfterAdding(new Event(returnString, stringsToAdd[stringsToAdd.length - 1]), returnString);","lastModifiedDate":"2022-02-16"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-16"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"     * Adds task to task list and informs user that it has been added.","lastModifiedDate":"2022-02-16"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"     * @param task task to be added to the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"     * @param returnString description of the task to be added.","lastModifiedDate":"2022-02-16"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"     * @return String to tell the user that the task has been added to the task list.","lastModifiedDate":"2022-02-16"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-16"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"    public String returnAfterAdding(Task task, String returnString) {","lastModifiedDate":"2022-02-16"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        tasks.add(task);","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"        return \"Got it! I\u0027ve added this task:\\n\" + \" [\" + task.symbol() + \"][] \"","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"                + returnString + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"     * Prints all tasks in the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"     * @returns String containing all tasks in the list.","lastModifiedDate":"2022-02-16"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"    public String displayList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"            returnString \u003d returnString + (i + 1) + \". [\" + tasks.get(i).symbol() + \"][\"","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"                    + tasks.get(i).getStatusIcon() + \"] \" + tasks.get(i).displayTime() + \"\\n\";","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"        if (returnString.equals(\"\")) {","lastModifiedDate":"2022-02-11"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"            return \"Seems like you haven\u0027t added any tasks to your list yet...\";","lastModifiedDate":"2022-02-11"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        } else {","lastModifiedDate":"2022-02-11"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"            return returnString;","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"     * @param stringsToAdd array that contains user command.","lastModifiedDate":"2022-02-16"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If input string is not a todo, deadline or event.","lastModifiedDate":"2022-02-16"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"    public String addToList(String[] stringsToAdd) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        String taskType;","lastModifiedDate":"2022-02-16"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"            taskType \u003d stringsToAdd[2];","lastModifiedDate":"2022-02-16"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Err what type of task do you want me to create for you?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"        switch (taskType) {","lastModifiedDate":"2022-02-16"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"        case \"todo\":","lastModifiedDate":"2022-02-16"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"        case \"deadline\":","lastModifiedDate":"2022-02-16"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"        case \"event\":","lastModifiedDate":"2022-02-16"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"            String returnString \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"            boolean containsBy \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"            boolean containsOn \u003d false;","lastModifiedDate":"2022-02-14"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 3; i \u003c stringsToAdd.length; i++) {","lastModifiedDate":"2022-02-11"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"                if (stringsToAdd[i].equals(\"/by\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"                    containsBy \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"                } else if (stringsToAdd[i].equals(\"/on\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"                    containsOn \u003d true;","lastModifiedDate":"2022-02-14"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"                    break;","lastModifiedDate":"2022-02-14"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"                    returnString \u003d returnString + stringsToAdd[i] + \" \";","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"            if (returnString.equals(\"\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"                throw new DukeException(\"Task description cannot be empty...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"            } else {","lastModifiedDate":"2022-02-16"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"                return createNewTask(taskType, stringsToAdd, containsBy, containsOn, returnString);","lastModifiedDate":"2022-02-16"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-02-16"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"        default:","lastModifiedDate":"2022-02-16"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"A task must be a todo, event or deadline...\");","lastModifiedDate":"2022-02-16"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"     * Marks a specific task in the task list as completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray String number that specifies task number in task list to mark as completed.","lastModifiedDate":"2022-02-16"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a valid list index.","lastModifiedDate":"2022-02-16"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"    public String mark(String[] inputStringsArray) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"            int num \u003d Integer.parseInt(inputStringsArray[2]);","lastModifiedDate":"2022-02-16"},{"lineNumber":128,"author":{"gitId":"aditi2313"},"content":"            tasks.get(num - 1).setAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"            Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n [\" + temp.symbol() + \"][\"","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"                    + temp.getStatusIcon() + \"] \" + temp;","lastModifiedDate":"2022-02-15"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Try entering an valid index number?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"     * Marks a specific task in the task list as not completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray String number that specifies task number in task list to mark as not completed.","lastModifiedDate":"2022-02-16"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a valid list index.","lastModifiedDate":"2022-02-16"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"    public String unmark(String[] inputStringsArray) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":143,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":144,"author":{"gitId":"aditi2313"},"content":"            int num \u003d Integer.parseInt(inputStringsArray[2]);","lastModifiedDate":"2022-02-16"},{"lineNumber":145,"author":{"gitId":"aditi2313"},"content":"            tasks.get(num - 1).setAsNotDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":146,"author":{"gitId":"aditi2313"},"content":"            Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":147,"author":{"gitId":"aditi2313"},"content":"            return \"OK , I\u0027ve marked this task as not done yet:\\n [\" + temp.symbol() + \"][\"","lastModifiedDate":"2022-02-15"},{"lineNumber":148,"author":{"gitId":"aditi2313"},"content":"                    + temp.getStatusIcon() + \"] \" + temp;","lastModifiedDate":"2022-02-15"},{"lineNumber":149,"author":{"gitId":"aditi2313"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":150,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Try entering an valid index number?\");","lastModifiedDate":"2022-02-16"},{"lineNumber":151,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":152,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":154,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":155,"author":{"gitId":"aditi2313"},"content":"     * Deletes all or specific tasks from the task list based on string input.","lastModifiedDate":"2022-01-30"},{"lineNumber":156,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray string that specifies if a specific task number or all tasks are to be deleted.","lastModifiedDate":"2022-02-16"},{"lineNumber":157,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a valid list index.","lastModifiedDate":"2022-02-16"},{"lineNumber":158,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":159,"author":{"gitId":"aditi2313"},"content":"    public String delete(String[] inputStringsArray) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":160,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":161,"author":{"gitId":"aditi2313"},"content":"            String number \u003d inputStringsArray[2];","lastModifiedDate":"2022-02-16"},{"lineNumber":162,"author":{"gitId":"aditi2313"},"content":"            if (number.equals(\"all\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":163,"author":{"gitId":"aditi2313"},"content":"                this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":164,"author":{"gitId":"aditi2313"},"content":"                return \"All right! I have deleted all tasks in your list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"aditi2313"},"content":"            } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":166,"author":{"gitId":"aditi2313"},"content":"                int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-01-29"},{"lineNumber":167,"author":{"gitId":"aditi2313"},"content":"                Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":168,"author":{"gitId":"aditi2313"},"content":"                String tempString \u003d \"Noted. I\u0027ve removed this task:\\n [\" + temp.symbol() + \"][\"","lastModifiedDate":"2022-02-15"},{"lineNumber":169,"author":{"gitId":"aditi2313"},"content":"                        + temp.getStatusIcon() + \"] \" + temp","lastModifiedDate":"2022-02-15"},{"lineNumber":170,"author":{"gitId":"aditi2313"},"content":"                        + \"\\nNow you have \" + (tasks.size() - 1) + \" tasks left in this list\";","lastModifiedDate":"2022-02-15"},{"lineNumber":171,"author":{"gitId":"aditi2313"},"content":"                tasks.remove(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":172,"author":{"gitId":"aditi2313"},"content":"                return tempString;","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":174,"author":{"gitId":"aditi2313"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":175,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Try entering an index number or \u0027all\u0027 for the tasks you want to delete\");","lastModifiedDate":"2022-02-16"},{"lineNumber":176,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":177,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":178,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":179,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":180,"author":{"gitId":"aditi2313"},"content":"     * Prints tasks in the task list that contain a specified keyword.","lastModifiedDate":"2022-01-30"},{"lineNumber":181,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray keyword used to filer tasks in task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":182,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException when user has not entered a keyword.","lastModifiedDate":"2022-02-16"},{"lineNumber":183,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":184,"author":{"gitId":"aditi2313"},"content":"    public String find(String[] inputStringsArray) throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":185,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-02-16"},{"lineNumber":186,"author":{"gitId":"aditi2313"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":187,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":188,"author":{"gitId":"aditi2313"},"content":"                String details \u003d this.tasks.get(i).details;","lastModifiedDate":"2022-01-30"},{"lineNumber":189,"author":{"gitId":"aditi2313"},"content":"                String[] detailsArray \u003d details.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":190,"author":{"gitId":"aditi2313"},"content":"                for (int j \u003d 0; j \u003c detailsArray.length; j++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":191,"author":{"gitId":"aditi2313"},"content":"                    if (detailsArray[j].equals(inputStringsArray[2])) {","lastModifiedDate":"2022-02-16"},{"lineNumber":192,"author":{"gitId":"aditi2313"},"content":"                        foundTasks.add(this.tasks.get(i));","lastModifiedDate":"2022-01-30"},{"lineNumber":193,"author":{"gitId":"aditi2313"},"content":"                        break;","lastModifiedDate":"2022-01-30"},{"lineNumber":194,"author":{"gitId":"aditi2313"},"content":"                    }","lastModifiedDate":"2022-01-30"},{"lineNumber":195,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":196,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":197,"author":{"gitId":"aditi2313"},"content":"            String returnString \u003d \"Here are the tasks I could find in your list that match the keyword:\\n\";","lastModifiedDate":"2022-02-13"},{"lineNumber":198,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":199,"author":{"gitId":"aditi2313"},"content":"                returnString \u003d returnString + (i + 1) + \". [\" + foundTasks.get(i).symbol() + \"][\"","lastModifiedDate":"2022-02-10"},{"lineNumber":200,"author":{"gitId":"aditi2313"},"content":"                        + foundTasks.get(i).getStatusIcon() + \"] \" + foundTasks.get(i).displayTime() + \"\\n\";","lastModifiedDate":"2022-02-10"},{"lineNumber":201,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":202,"author":{"gitId":"aditi2313"},"content":"            return returnString;","lastModifiedDate":"2022-02-06"},{"lineNumber":203,"author":{"gitId":"aditi2313"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-16"},{"lineNumber":204,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"Enter a keyword to filter tasks by!\");","lastModifiedDate":"2022-02-16"},{"lineNumber":205,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":206,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":207,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":208,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":209,"author":{"gitId":"aditi2313"},"content":"     * Getter for tasks","lastModifiedDate":"2022-02-15"},{"lineNumber":210,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":211,"author":{"gitId":"aditi2313"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-15"},{"lineNumber":212,"author":{"gitId":"aditi2313"},"content":"        return this.tasks;","lastModifiedDate":"2022-02-15"},{"lineNumber":213,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":214,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":214}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates task types without due date.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    public Todo(String details) {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents todo tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027T\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        return \"T\";","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     * Returns task details since it does not have a due date.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * @return details of the todo.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        return super.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":29}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import notes.NoteList;","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import parser.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":" * Interface that the user interacts with.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" * Involves a scanner to read user inputs.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"public class Ui {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    private NoteList notes;","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * Ui class constructor.","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     * @param tasks contains list of all tasks added by user.","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     * @param notes contains list of all notes added by user.","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    public Ui(TaskList tasks, NoteList notes) {","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"     * Starts conversation with user by combining Parser and Storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     * @param parser Instance of Parser to process user commands.","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * @param storage Instance of storage to update data in storage","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     * @param userInput String input entered by the user.","lastModifiedDate":"2022-02-16"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If invalid input message is entered.","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    public String startConversation(Parser parser, Storage storage, String userInput) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        String[] inputStringArray \u003d userInput.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-02-16"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"            System.exit(0);","lastModifiedDate":"2022-02-16"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-02-16"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        return parser.userCommand(inputStringArray, storage);","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"     * Displays a user greeting.","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"     * @return String message to greet user when the bot is started.","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    public static String greetUser() {","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"        return \"Hello! I\u0027m Duke :) \\nWhat can I do for you? :D\\n\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                + \"Enter \u0027help\u0027 to view Duke commands...\";","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"     * Provides help to user by listing duke commands.","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"     * @return String containing all duke commands.","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    public static String userHelp() {","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"        return \"Duke commands:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"                + \"To access notes, start command with \u0027note\u0027. To access tasks start command with \u0027task\u0027.\\n\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"                + \"Task feature example commands:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"                + \"1. Creating todos: task new todo \u003ctodo description\u003e\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"                + \"2. Creating deadlines: task new deadline \u003cdeadline description\u003e /by \u003cdate in YYYY-MM-DD format\u003e\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"                + \"3. Creating events: task new event \u003cevent description\u003e /on \u003cdate in YYYY-MM-DD format\u003e\\n\"","lastModifiedDate":"2022-02-16"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"                + \"4. Viewing task list: task list\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"                + \"5. Marking tasks as complete: task mark \u003cindex number of task to mark\u003e\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"                + \"6. Marking tasks as incomplete: task unmark: \u003cindex number of task to unmark\u003e\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"                + \"7. Find a tasks by keyword: task find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"                + \"8. Deleting a task by index number: task delete \u003cindex number\u003e\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"                + \"9. Deleting all tasks: task delete all\\n\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"                + \"Note feature example commands:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"                + \"1. Creating new note: note new \u003cnote description\u003e\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"                + \"2. Viewing all notes: note list\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"                + \"3. Finding a note by keyword: note find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"                + \"4. Deleting a note by index number: note delete \u003cindex number\u003e\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"                + \"5. Deleting all notes: note delete all\\n\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"                + \"Other commands:\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"                + \"1. Viewing this help section: help\\n\"","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"                + \"2. Closing duke conversation: bye\";","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"     * Displays appropriate error messages.","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"     * @param e DukeException for the error caused by incorrect user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"     * @returns Error message.","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"    public String showIllegalTextError(DukeException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        return e.getMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":89}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" opacity\u003d\"0.9\" style\u003d\"-fx-background-color: white; -fx-background-radius: 15px;\" text\u003d\"Label\" textFill\u003d\"#022857\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"            \u003cFont name\u003d\"Baskerville\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" opacity\u003d\"0.9\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"5.0\" layoutY\u003d\"561.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"313.0\" promptText\u003d\"Enter command for Duke\" AnchorPane.bottomAnchor\u003d\"4.0\"\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"            \u003cFont name\u003d\"Baskerville\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"322.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"74.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"            \u003cFont name\u003d\"Baskerville\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"      \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"            \u003cImageView fitHeight\u003d\"558.0\" fitWidth\u003d\"389.0\"\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"               \u003cimage\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"                  \u003cImage url\u003d\"@../images/download.jpg\" /\u003e","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"               \u003c/image\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: transparent; -fx-background: transparent;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"395.0\" /\u003e","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"aditi2313":37}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    public void symbolTest() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        Deadline testDeadline \u003d new Deadline(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testDeadline.symbol(), \"D\");","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    public void displayTimeTest() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        Deadline testDeadline \u003d new Deadline(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testDeadline.displayTime(), \"Complete 21003 ip tasks30 JANUARY 2021\");","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aditi2313":20}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"public class EventTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    public void symbolTest() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        Event testEvent \u003d new Event(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testEvent.symbol(), \"E\");","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    public void displayTimeTest() throws DukeException {","lastModifiedDate":"2022-02-16"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        Event testEvent \u003d new Event(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testEvent.displayTime(), \"Complete 21003 ip tasks30 JANUARY 2021\");","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aditi2313":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"java -classpath ..\\bin main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"aditi2313":1}}]
