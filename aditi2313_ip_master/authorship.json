[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"import parser.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import ui.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":" * Main class from which the bot is run.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    Duke(String filePath) {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"            tasks \u003d new TaskList(storage.setUpData());","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"        ui \u003d new Ui(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"     * Starts the bot by combining Parser, Storage, TaskList and Ui and handling Duke exceptions.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    public void run() {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            ui.startConversation(this.parser, this.storage);","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"            ui.showIllegalTextError(e);","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"            new Duke(\"data.txt\").run();","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"     * Runs the bot.","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"     * @param args but not used.","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        System.out.println(\"Hello! I\u0027m Duke :) \\nWhat can I do for you? :D\");","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"        new Duke(\"data.txt\").run();","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"aditi2313":44,"-":4}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package exception;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Custom Exception class that defines user related errors.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"        super(message);","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"     * Returns error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"     * @return String version of the error message.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        return super.getMessage();","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":21}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":" * Interface that deals with making sense of the user commands.","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"public class Parser {","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * Calls appropriate TaskList methods for each command and updates storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray string array containing user instructions.","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     * @param storage Storage object that deals with storage updation.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If user input message does not make sense.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    public void userCommand(String[] inputStringsArray, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        switch (inputStringsArray[0]) {","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"            case \"list\":","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"                tasks.displayList();","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"                tasks.mark(inputStringsArray[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"                storage.updateData(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"                tasks.unmark(inputStringsArray[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"                storage.updateData(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"            case \"event\":","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"                tasks.addToList(inputStringsArray);","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"                storage.updateData(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"                tasks.delete(inputStringsArray[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"                storage.updateData(tasks);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"                break;","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"            case \"find\":","lastModifiedDate":"2022-01-30"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"                tasks.find(inputStringsArray[1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                break;","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"            default:","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means O.o\");","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":54}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import task.Deadline;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import task.Event;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import task.Task;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import task.Todo;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":" * Interface that deals with pushing or pulling tasks from the storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"public class Storage {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    String path;","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"    public Storage(String path) {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"        this.path \u003d path;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"     * Retrieves tasks from the storage (if any) and adds them to a new task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     * @return list of tasks retrieved from the storage, else an empty list.","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If data file does not exist.","lastModifiedDate":"2022-01-30"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    public ArrayList\u003cTask\u003e setUpData() throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            FileReader myObj \u003d new FileReader(this.path);","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"            BufferedReader br \u003d new BufferedReader(myObj);","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"            String line;","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"                String[] lineArray \u003d line.split(\"/\");","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"                Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"                switch (lineArray[0]) {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"                    case \"T\":","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"                        task \u003d new Todo(lineArray[2]);","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"                        break;","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"                    case \"E\":","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"                        task \u003d new Event(lineArray[2], lineArray[3]);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"                        break;","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"                    default:","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"                        task \u003d new Deadline(lineArray[2], lineArray[3]);","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"                if (lineArray[1].equals(\"X\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"                    task.setAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"                tasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"            return tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"File does not exist.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"     * Adds or removes tasks from storage according to changes made by user.","lastModifiedDate":"2022-01-30"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"     * @param taskList updated list of tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"    public void updateData(TaskList taskList) {","lastModifiedDate":"2022-01-30"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"            FileWriter myObj \u003d new FileWriter(this.path);","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"            myObj.flush();","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 0; i \u003c taskList.tasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"                myObj.write(taskList.tasks.get(i).symbol() + \"/\" + taskList.tasks.get(i).getStatusIcon() + \"/\" +","lastModifiedDate":"2022-01-30"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"                        taskList.tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"            myObj.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"File does not exist.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":78}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates deadline tasks with due dates.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    LocalDate date;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public Deadline(String details, String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents deadline tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027D\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        return \"D\";","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"     * Returns deadline details along with full string representation of the date.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"     * @return details of the deadline.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + this.date.getDayOfMonth() + \" \" + this.date.getMonth() + \" \" + this.date.getYear();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the deadline along with date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"     * @return String which combines deadline details with toString method of the date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + \"/\" + this.date.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":43}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates event tasks with due dates.","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    LocalDate date;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    public Event(String details, String date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents event tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027E\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"        return \"E\";","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"     * Returns event details along with full string representation of the date.","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"     * @return details of the event.","lastModifiedDate":"2022-01-30"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + this.date.getDayOfMonth() + \" \" + this.date.getMonth() + \" \" + this.date.getYear();","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the event along with date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"     * @return String which combines event details with toString method of the date object.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"        return super.toString() + \"/\" + this.date.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":42}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/** Abstract class that distinguishes between different Tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" *  Holds a description and the status of whether a task is done or not done.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"abstract public class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"    protected String details;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    Task(String details) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        this.details \u003d details;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol to represent a completed or not completed task.","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"     * @return String \"X\" or \" \".","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"        return (isDone? \"X\" : \" \");","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"     * Sets task status as not completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"     * Sets task status as completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    public void setAsDone() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents task type.","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027D\u0027, \u0027E\u0027 or \u0027T\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"    abstract public String symbol();","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"     * Returns task details along with full string representation of the date if any.","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"     * @return details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"    abstract public String displayTime();","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"     * Returns details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"     * @return String details of the task.","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"        return details;","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":57}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":" * Interface that stores list of tasks and contains methods that manipulate it.","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"public class TaskList {","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * Prints all tasks in the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    public void displayList() {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"            returnString \u003d returnString + (i + 1) + \". [\" + tasks.get(i).symbol() + \"][\" + tasks.get(i).getStatusIcon()","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"                    + \"] \" + tasks.get(i).displayTime() + \"\\n\";","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        System.out.println(returnString);","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"     * @param stringsToAdd array that contains details of the task user wants to add to the task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If input string does not comply with todo, deadline or event formats.","lastModifiedDate":"2022-01-30"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    public void addToList(String[] stringsToAdd) throws DukeException {","lastModifiedDate":"2022-01-30"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"        if (stringsToAdd.length \u003c 2) {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"            throw new DukeException(\"OOPS!! The description of a \" + stringsToAdd[0] + \" cannot be empty.\");","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"        } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"            Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"            String returnString \u003d \"\";","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"            boolean containsBy \u003d false;","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"            for (int i \u003d 1; i \u003c stringsToAdd.length; i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"                if (stringsToAdd[i].equals(\"by\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"                    containsBy \u003d true;","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"                    break;","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"aditi2313"},"content":"                    returnString \u003d returnString + stringsToAdd[i] + \" \";","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"aditi2313"},"content":"            if (stringsToAdd[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":54,"author":{"gitId":"aditi2313"},"content":"                if (containsBy) {","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"aditi2313"},"content":"                    throw new DukeException(\"Todo cannot have a due date. Create an deadline or event instead :)\");","lastModifiedDate":"2022-01-30"},{"lineNumber":56,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Todo(returnString);","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"aditi2313"},"content":"            } else if (stringsToAdd[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":60,"author":{"gitId":"aditi2313"},"content":"                if (!containsBy) {","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"aditi2313"},"content":"                    throw new DukeException(\"A deadline needs a due date. Create a todo instead.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Deadline(returnString, stringsToAdd[stringsToAdd.length - 1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":64,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"aditi2313"},"content":"            } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"aditi2313"},"content":"                if (!containsBy) {","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"aditi2313"},"content":"                    throw new DukeException(\"An event needs a due date. Create a todo instead.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"aditi2313"},"content":"                } else {","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"aditi2313"},"content":"                    task \u003d new Event(returnString, stringsToAdd[stringsToAdd.length - 1]);","lastModifiedDate":"2022-01-30"},{"lineNumber":70,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"aditi2313"},"content":"            tasks.add(task);","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"Got it!! :D I\u0027ve added this task:\\n\" + \" [\" + task.symbol() + \"][] \" + returnString +","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"aditi2313"},"content":"                    \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":79,"author":{"gitId":"aditi2313"},"content":"     * Marks a specific task in the task list as completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":80,"author":{"gitId":"aditi2313"},"content":"     * @param number String number that specifies task number in task list to mark as completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":81,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":82,"author":{"gitId":"aditi2313"},"content":"    public void mark(String number) {","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"aditi2313"},"content":"        int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"aditi2313"},"content":"        tasks.get(num - 1).setAsDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"aditi2313"},"content":"        Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"aditi2313"},"content":"        System.out.println(\"Nice! :P I\u0027ve marked this task as done:\\n [\" + temp.symbol() + \"][\" +","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"aditi2313"},"content":"                temp.getStatusIcon() + \"] \" + temp);","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":91,"author":{"gitId":"aditi2313"},"content":"     * Marks a specific task in the task list as not completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":92,"author":{"gitId":"aditi2313"},"content":"     * @param number String number that specifies task number in task list to mark as not completed.","lastModifiedDate":"2022-01-30"},{"lineNumber":93,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":94,"author":{"gitId":"aditi2313"},"content":"    public void unmark(String number) {","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"aditi2313"},"content":"        int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"aditi2313"},"content":"        tasks.get(num - 1).setAsNotDone();","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"aditi2313"},"content":"        Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"aditi2313"},"content":"        System.out.println(\"OK ._. , I\u0027ve marked this task as not done yet:\\n [\" + temp.symbol() + \"][\" +","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"aditi2313"},"content":"                temp.getStatusIcon() + \"] \" + temp);","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":103,"author":{"gitId":"aditi2313"},"content":"     * Deletes all or specific tasks from the task list based on string input.","lastModifiedDate":"2022-01-30"},{"lineNumber":104,"author":{"gitId":"aditi2313"},"content":"     * @param number string that specifies if a specific task number or all tasks are to be deleted.","lastModifiedDate":"2022-01-30"},{"lineNumber":105,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":106,"author":{"gitId":"aditi2313"},"content":"    public void delete(String number) {","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"aditi2313"},"content":"        if (number.equals(\"all\")) {","lastModifiedDate":"2022-01-30"},{"lineNumber":108,"author":{"gitId":"aditi2313"},"content":"            this.tasks \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":109,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"All right! I have deleted all tasks in your list.\");","lastModifiedDate":"2022-01-30"},{"lineNumber":110,"author":{"gitId":"aditi2313"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":111,"author":{"gitId":"aditi2313"},"content":"            int num \u003d Integer.parseInt(number);","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"aditi2313"},"content":"            Task temp \u003d tasks.get(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"aditi2313"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n [\" + temp.symbol() + \"][\" +","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"aditi2313"},"content":"                    temp.getStatusIcon() + \"] \" + temp +","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"aditi2313"},"content":"                    \"\\nNow you have \" + (tasks.size() - 1) + \" tasks left in this list\");","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"aditi2313"},"content":"            tasks.remove(num - 1);","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":119,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":121,"author":{"gitId":"aditi2313"},"content":"     * Prints tasks in the task list that contain a specified keyword.","lastModifiedDate":"2022-01-30"},{"lineNumber":122,"author":{"gitId":"aditi2313"},"content":"     * @param inputStringsArray keyword used to filer tasks in task list.","lastModifiedDate":"2022-01-30"},{"lineNumber":123,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":124,"author":{"gitId":"aditi2313"},"content":"    public void find(String inputStringsArray) {","lastModifiedDate":"2022-01-30"},{"lineNumber":125,"author":{"gitId":"aditi2313"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-30"},{"lineNumber":126,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":127,"author":{"gitId":"aditi2313"},"content":"            String details \u003d this.tasks.get(i).details;","lastModifiedDate":"2022-01-30"},{"lineNumber":128,"author":{"gitId":"aditi2313"},"content":"            String[] detailsArray \u003d details.split(\" \");","lastModifiedDate":"2022-01-30"},{"lineNumber":129,"author":{"gitId":"aditi2313"},"content":"            for (int j \u003d 0; j \u003c detailsArray.length; j++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":130,"author":{"gitId":"aditi2313"},"content":"                if (detailsArray[j].equals(inputStringsArray)) {","lastModifiedDate":"2022-01-30"},{"lineNumber":131,"author":{"gitId":"aditi2313"},"content":"                    foundTasks.add(this.tasks.get(i));","lastModifiedDate":"2022-01-30"},{"lineNumber":132,"author":{"gitId":"aditi2313"},"content":"                    break;","lastModifiedDate":"2022-01-30"},{"lineNumber":133,"author":{"gitId":"aditi2313"},"content":"                }","lastModifiedDate":"2022-01-30"},{"lineNumber":134,"author":{"gitId":"aditi2313"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":135,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":136,"author":{"gitId":"aditi2313"},"content":"        String returnString \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":137,"author":{"gitId":"aditi2313"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2022-01-30"},{"lineNumber":138,"author":{"gitId":"aditi2313"},"content":"            returnString \u003d returnString + (i + 1) + \". [\" + foundTasks.get(i).symbol() + \"][\"","lastModifiedDate":"2022-01-30"},{"lineNumber":139,"author":{"gitId":"aditi2313"},"content":"                    + foundTasks.get(i).getStatusIcon() + \"] \" + foundTasks.get(i).displayTime() + \"\\n\";","lastModifiedDate":"2022-01-30"},{"lineNumber":140,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":141,"author":{"gitId":"aditi2313"},"content":"        System.out.println(returnString);","lastModifiedDate":"2022-01-30"},{"lineNumber":142,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":143,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":143}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":" * Class that encapsulates task types without due date.","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    public Todo(String details) {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"        super(details);","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"     * Returns character symbol that represents todo tasks.","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"     * @return String \u0027T\u0027.","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"    public String symbol() {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        return \"T\";","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"     * Returns task details since it does not have a due date.","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * @return details of the todo.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"    @Override","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"    public String displayTime() {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"        return super.toString();","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":29}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import exception.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"import parser.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"import task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"/**","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":" * Interface that the user interacts with.","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":" * Involves a scanner to read user inputs.","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":" */","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"public class Ui {","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    TaskList tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"    public Ui(TaskList tasks) {","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"aditi2313"},"content":"     * Starts conversation with user by combining Parser and Storage.","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"aditi2313"},"content":"     * @param parser Instance of Parser to process user commands.","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"aditi2313"},"content":"     * @param storage Instance of storage to update data in storage","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"aditi2313"},"content":"     * @throws DukeException If invalid input message is entered.","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"aditi2313"},"content":"    public void startConversation(Parser parser, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"aditi2313"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"aditi2313"},"content":"        String inputString \u003d sc.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"aditi2313"},"content":"        String[] inputStringArray \u003d inputString.split(\" \");","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"aditi2313"},"content":"        while (!inputStringArray[0].equals(\"bye\")) {","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"aditi2313"},"content":"            parser.userCommand(inputStringArray, storage);","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"aditi2313"},"content":"            inputString \u003d sc.nextLine();","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"aditi2313"},"content":"            inputStringArray \u003d inputString.split(\" \");","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"aditi2313"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"aditi2313"},"content":"        System.out.println(\"Bye. Hope to see you again soon! :))\");","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"aditi2313"},"content":"    /**","lastModifiedDate":"2022-01-30"},{"lineNumber":41,"author":{"gitId":"aditi2313"},"content":"     * Displays appropriate error messages.","lastModifiedDate":"2022-01-30"},{"lineNumber":42,"author":{"gitId":"aditi2313"},"content":"     * @param e DukeException for the error caused by incorrect user input.","lastModifiedDate":"2022-01-30"},{"lineNumber":43,"author":{"gitId":"aditi2313"},"content":"     */","lastModifiedDate":"2022-01-30"},{"lineNumber":44,"author":{"gitId":"aditi2313"},"content":"    public void showIllegalTextError(DukeException e) {","lastModifiedDate":"2022-01-30"},{"lineNumber":45,"author":{"gitId":"aditi2313"},"content":"        System.out.println(e.toString());","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"aditi2313":48}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    public void symbolTest(){","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"        Deadline testDeadline \u003d new Deadline(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testDeadline.symbol(), \"D\");","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    public void displayTimeTest() {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"        Deadline testDeadline \u003d new Deadline(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testDeadline.displayTime(), \"Complete 21003 ip tasks30 JANUARY 2021\");","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aditi2313":19}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"package task;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"aditi2313"},"content":"public class EventTest {","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"aditi2313"},"content":"    public void symbolTest(){","lastModifiedDate":"2022-01-30"},{"lineNumber":10,"author":{"gitId":"aditi2313"},"content":"        Event testEvent \u003d new Event(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":11,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testEvent.symbol(), \"E\");","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"aditi2313"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"aditi2313"},"content":"    @Test","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"aditi2313"},"content":"    public void displayTimeTest() {","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"aditi2313"},"content":"        Event testEvent \u003d new Event(\"Complete 21003 ip tasks\", \"2021-01-30\");","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"aditi2313"},"content":"        assertEquals(testEvent.displayTime(), \"Complete 21003 ip tasks30 JANUARY 2021\");","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"aditi2313"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":19,"author":{"gitId":"aditi2313"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"aditi2313":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aditi2313"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"aditi2313"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"aditi2313"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"aditi2313"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"aditi2313"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"aditi2313":5}}]
