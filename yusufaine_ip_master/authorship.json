[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-02-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yusufaine":20,"-":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":" * An instance of DialogBox.","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"        InputStream fontStream \u003d this.getClass().getResourceAsStream(\"/font/Hasklig-Regular.ttf\");","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"        Font font \u003d Font.loadFont(fontStream, 14);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"        dialog.setFont(font);","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"        Rectangle clip \u003d new Rectangle(displayPicture.getFitWidth(), displayPicture.getFitHeight());","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"        clip.setArcWidth(256);","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        clip.setArcHeight(256);","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"     * Gets user dialog.","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"     * @param text string that the user had input","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"     * @param img  the image associated to the user","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"     * @return the user dialog","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"        var userDb \u003d new DialogBox(text + \"    \", img);","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"        userDb.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"        return userDb;","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"     * Gets duke dialog.","lastModifiedDate":"2022-02-04"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"     * @param text string that Duke has responded with","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"     * @param img  the image associated with Duke","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"     * @return the duke dialog","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-04"},{"lineNumber":81,"author":{"gitId":"yusufaine"},"content":"        var dukeDb \u003d (text.isBlank() || text.isEmpty())","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"yusufaine"},"content":"                ? new DialogBox(\"How can I help?\", img)","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"yusufaine"},"content":"                : new DialogBox(text, img);","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"yusufaine"},"content":"        dukeDb.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"yusufaine"},"content":"        dukeDb.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"yusufaine"},"content":"        return dukeDb;","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":88,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"yusufaine":88}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":" * An instance of Duke, which helps control Storage, TaskList, and UI, managing the application.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"public class Duke {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    private static Storage storage;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    private static Ui ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Duke.","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param filePath the file path","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"            tasks \u003d new TaskList(storage.read());","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"            ui.showError(e.toString());","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Gets response.","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @param input the input","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     * @return the response","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"        Command cmd \u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d Parser.parseCommand(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"        // ensures cmd is not null so that it can be executed","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        assert cmd !\u003d null;","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"        String response \u003d cmd.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"        Parser.setIsExit(cmd.isExit());","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        return response;","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"yusufaine":50}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":" * The type Duke exception.","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Duke exception.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"     * @param message the message","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yusufaine":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"public class Launcher {","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"     * The entry point of application.","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     * @param args the input arguments","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"yusufaine":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":" * A GUI for Duke using FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    private final Duke duke \u003d new Duke(\"data/todo.dat\");","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            stage.show();","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"yusufaine":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"            this.getClass().getResourceAsStream(\"/images/bot_128p.jpg\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"            this.getClass().getResourceAsStream(\"/images/user_128p.jpg\")));","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * Initializes the MainWindow (GUI) for this application.","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        String botName \u003d \"Duke, the Task Master\";","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        String greeting \u003d \"Greetings, I am \" + botName + \".\\n\"","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"                + \"I\u0027m here to help you with your... tasks, obviously!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     * Sets duke.","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"     * @param d the d","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"    @FXML","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"        String response \u003d duke.getResponse(userInput.getText());","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"        );","lastModifiedDate":"2022-02-04"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-04"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"        //TODO: Show exit message before closing","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"        if (Parser.isExit()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2022-02-04"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"            stage.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"yusufaine":73}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"import duke.command.ToggleCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"import duke.command.ViewScheduleCommand;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":" * An instance of Parser, used to parse user input to the respective commands.","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     * Is exit boolean.","lastModifiedDate":"2022-02-04"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     * @return the boolean","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    public static boolean isExit() {","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"        return isExit;","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * Sets is exit.","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     * @param flag the flag","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"    public static void setIsExit(boolean flag) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        isExit \u003d flag;","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"     * Parses `String` to `Integer`.","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"     * @param strToIntValue the `String` that needs to be parsed to an `Integer` value","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"     * @return the `Integer` value of the `String`.","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the parameter could not be parsed to an `Integer`.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"    public static int parseInt(String strToIntValue) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"            return Integer.parseInt(strToIntValue);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please provide the item NUMBER to remove.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"     * Parses a `String` and returns its corresponding `Command`.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"     * @param fullCommand the full command containing the keyword and its necessary details","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"     * @return the corresponding command","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"    public static Command parseCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"        // Not sure how to trim (if even necessary) this down since it\u0027s all case-checking.","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"        String[] input \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"        switch (input[0].toLowerCase()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"        case \"exit\":","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"        case \"list\":","lastModifiedDate":"2022-01-30"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"            return new ListCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"            return new ToggleCommand(input[0], input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"        case \"event\":","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"            return new AddCommand(input[0], input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"        case \"remove\":","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"yusufaine"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"yusufaine"},"content":"            return new DeleteCommand(input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"yusufaine"},"content":"        case \"clear\":","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"yusufaine"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"yusufaine"},"content":"        case \"find\":","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"yusufaine"},"content":"            return new FindCommand(input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"yusufaine"},"content":"        case \"view\":","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"yusufaine"},"content":"            return new ViewScheduleCommand(input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"yusufaine"},"content":"        case \"help\":","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"yusufaine"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"yusufaine"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"yusufaine"},"content":"            return new InvalidCommand();","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"yusufaine"},"content":"     * Parses a `String` to `Task` when reading from the locally-stored data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"yusufaine"},"content":"     * @param entry an entry in the locally-stored data file","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"yusufaine"},"content":"     * @return the corresponding tasks initiated with its details and marked status.","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if there is an invalid keyword in the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"yusufaine"},"content":"    public static Task parseStringToTask(String entry) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"yusufaine"},"content":"        String[] input \u003d entry.split(\" \\\\| \");","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"yusufaine"},"content":"        Task newTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"yusufaine"},"content":"        switch (input[0]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"yusufaine"},"content":"        case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"yusufaine"},"content":"            newTask \u003d new ToDo(input[2], input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"yusufaine"},"content":"        case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"yusufaine"},"content":"            newTask \u003d new Deadline(input[2], input[3], input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":112,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"yusufaine"},"content":"        case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":114,"author":{"gitId":"yusufaine"},"content":"            newTask \u003d new Event(input[2], input[3], input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"yusufaine"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Invalid keyword from source file.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":118,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":119,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":120,"author":{"gitId":"yusufaine"},"content":"        return newTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":121,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":122}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":" * An instance of storage which is used to read/write to the data file of the user.","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    private final File dataFile;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Storage.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     * @param filePath the path to the locally-stored file","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        dataFile \u003d new File(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"        // ensures that the path to the file exists and supports r/w access","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        canReadWrite(dataFile.getParentFile());","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"        dataFile.getParentFile().mkdirs();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"            // ensures that the file has r/w access","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"            assert canReadWrite(dataFile);","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"     * Reads list the {@link #dataFile} and returns a `List` used to populate `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"     * @return the content of {@link #dataFile} in a `List`","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if {@link #dataFile} could not be located or read","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"    public List\u003cString\u003e read() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"        List\u003cString\u003e dataList;","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        // try block should populate dataList unless no r/w permission","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"        try (Scanner sc \u003d new Scanner(dataFile)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"            //TODO: modify this a little to include to A-Stream","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"            dataList \u003d sc.useDelimiter(\"\\\\n\")","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"                    .tokens()","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Unable to locate/read file.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"        // if dataList is empty, dataFile has no entry","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"        return dataList;","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"     * Stores the content of `TaskList` into {@link #dataFile}.","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"     * @param tasks the `TaskList` containing this instance\u0027s `Task`","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"     * @return true if this method runs successfully","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if {@link #dataFile} could not be located or written to","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"    public boolean write(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"        try (FileWriter fw \u003d new FileWriter(dataFile, false)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"            tasks.getTasks().forEach(task -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"                try {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"                    fw.write(task.toFile());","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"                    e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"            });","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"            // most likely r/w permissions","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Unable to locate/write to file.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"yusufaine"},"content":"        return true;","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"yusufaine"},"content":"    private boolean canReadWrite(File f) {","lastModifiedDate":"2022-02-06"},{"lineNumber":86,"author":{"gitId":"yusufaine"},"content":"        return f.canRead() \u0026\u0026 f.canWrite();","lastModifiedDate":"2022-02-06"},{"lineNumber":87,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":88}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":" * An instance of TaskList that stores all the tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"public class TaskList {","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new empty TaskList.","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new TaskList and populates it with the content of the","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * parameter provided.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     * @param tasks the tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    public TaskList(List\u003cString\u003e tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"        tasks.forEach(entry -\u003e { // parse entries","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"                this.tasks.add(Parser.parseStringToTask(entry));","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"        });","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"     * Gets tasks.","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"     * @return the tasks","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"        return tasks;","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"     * Returns `true` if this TaskList contains no `Task`.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"     * @return `true` if this TaskList contains no `Task`","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"     * Get `Task` at the specified position in this `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"     * @param index index of the `Task` to get","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"     * @return the `Task` at the specified position in this `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"     * Removes the `Task` at the specified position in this `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"     * Shift the other `Task` to the left (subtracts one from their indices).","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"     * Returns the `Task` that was removed from the `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"     * @param index the index of the `task` to be removed","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"     * @return the `task` previously at the specified position","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"     * Returns the number of `Task` in this `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"yusufaine"},"content":"     * @return the number of `Task` in this list","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"yusufaine"},"content":"    public int size() {","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"yusufaine"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"yusufaine"},"content":"     * Appends the specified `Task` to the end of this `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"yusufaine"},"content":"     * @param task the task","lastModifiedDate":"2022-01-29"},{"lineNumber":91,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"yusufaine"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":93,"author":{"gitId":"yusufaine"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":96}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.util.Date;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":" * An instance of UI.","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"public class Ui {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     * Padding string used to format the bot\u0027s responses","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    public static final String STR_PADDING \u003d \"  \";","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * Close string.","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     * @return A string to acknowledge the program is closing.","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    public String close() {","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        return \"Pleasure to be of service, see you soon! Shutting down in 3 seconds.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     * Display the contents of TaskList.","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"     * @param tasks the TaskList","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * @return the contents of TaskList in string format.","lastModifiedDate":"2022-02-04"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    public String showList(TaskList tasks) {","lastModifiedDate":"2022-02-04"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"        StringBuilder sb \u003d new StringBuilder(STR_PADDING + \"Here are the tasks in your list: \\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"            sb.append(String.format(STR_PADDING + \"  %d. \" + tasks.get(i), i + 1));","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"     * Shows whether the keyword has been found in the list of Task.","lastModifiedDate":"2022-02-04"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"     * @param findString the keyword that the user wants to find","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"     * @param filteredTask the taskList that has been filtered to search for the keyword","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     * @return the contents of filteredTask that matches the keyword, if any.","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"    public String showFind(String findString, List\u003cTask\u003e filteredTask) {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"        if (filteredTask.isEmpty()) {","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"            return String.format(\"I could not find any tasks that contains \\\"%s\\\"\", findString);","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        } else {","lastModifiedDate":"2022-02-04"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"            StringBuilder sb \u003d new StringBuilder(STR_PADDING + \"You\u0027ve searched for: \\\"\" + findString + \"\\\"\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"            sb.append(STR_PADDING + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"            for (int i \u003d 0; i \u003c filteredTask.size(); i++) {","lastModifiedDate":"2022-02-04"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"                sb.append(String.format(\"\\n\" + STR_PADDING + \"  %d. \" + filteredTask.get(i), i + 1));","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-02-04"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"            return sb.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"     * Show the input task getting marked or unmarked based on its status.","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"     * @param task the task","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"     * @return the string","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"    public String showToggleTask(Task task) {","lastModifiedDate":"2022-02-04"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"        String markedString \u003d \"Nice! I\u0027ve marked this task: \";","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"        String unmarkedString \u003d \"OK, I\u0027ve unmarked this task: \";","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"        String outString \u003d task.getIsMarked() ? markedString : unmarkedString;","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"        sb.append(STR_PADDING).append(outString).append(\"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"        sb.append(STR_PADDING).append(\"   \").append(task);","lastModifiedDate":"2022-02-04"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"yusufaine"},"content":"     * Show that the input task has been added to the list.","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"yusufaine"},"content":"     * @param listSize the list size","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"yusufaine"},"content":"     * @param task     the task","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"yusufaine"},"content":"     * @return A string to acknowledge that a task has been added to the list.","lastModifiedDate":"2022-02-04"},{"lineNumber":87,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"yusufaine"},"content":"    public String showAddition(int listSize, Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"yusufaine"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-04"},{"lineNumber":90,"author":{"gitId":"yusufaine"},"content":"        String taskString \u003d (listSize \u003d\u003d 1)","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"yusufaine"},"content":"                ? \"task\"","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"yusufaine"},"content":"                : \"tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"yusufaine"},"content":"        String ack \u003d \"Got it, I\u0027ve added this task: \";","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"yusufaine"},"content":"        String size \u003d String.format(\"Now you have %d %s in the list\", listSize, taskString);","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"yusufaine"},"content":"        sb.append(STR_PADDING).append(ack).append(\"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":97,"author":{"gitId":"yusufaine"},"content":"        sb.append(STR_PADDING).append(\"   \").append(task).append(\"\\n\");","lastModifiedDate":"2022-02-04"},{"lineNumber":98,"author":{"gitId":"yusufaine"},"content":"        sb.append(STR_PADDING).append(size);","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"yusufaine"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-04"},{"lineNumber":101,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"yusufaine"},"content":"     * Show that the input task(s) has been removed to the list.","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"yusufaine"},"content":"     * @param listSize the list size","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"yusufaine"},"content":"     * @param tasks     the task(s)","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"yusufaine"},"content":"     * @return A string to acknowledge that the task(s) specified has been added to the list.","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"yusufaine"},"content":"    public String showDeletion(int listSize, List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"yusufaine"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"yusufaine"},"content":"        String taskString \u003d (listSize \u003d\u003d 1)","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"yusufaine"},"content":"                ? \"task\"","lastModifiedDate":"2022-02-06"},{"lineNumber":114,"author":{"gitId":"yusufaine"},"content":"                : \"tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":115,"author":{"gitId":"yusufaine"},"content":"        String deletedTaskString \u003d (tasks.size() \u003d\u003d 1)","lastModifiedDate":"2022-02-06"},{"lineNumber":116,"author":{"gitId":"yusufaine"},"content":"                ? \"task\"","lastModifiedDate":"2022-02-06"},{"lineNumber":117,"author":{"gitId":"yusufaine"},"content":"                : \"tasks\";","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"yusufaine"},"content":"        String ack \u003d String.format(\"Noted, I\u0027ve removed the following %s: \", deletedTaskString);","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"yusufaine"},"content":"        String size \u003d String.format(\"Now you have %d %s in the list\", listSize, taskString);","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"yusufaine"},"content":"        sb.append(ack);","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"yusufaine"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"yusufaine"},"content":"            sb.append(String.format(\"\\n\" + STR_PADDING + \"  %d. \" + tasks.get(i), i + 1));","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":124,"author":{"gitId":"yusufaine"},"content":"        sb.append(\"\\n\").append(STR_PADDING).append(size);","lastModifiedDate":"2022-02-06"},{"lineNumber":125,"author":{"gitId":"yusufaine"},"content":"        return sb.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"yusufaine"},"content":"     * Show an error message containing the input parameter.","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"yusufaine"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"yusufaine"},"content":"     * @return the error message in a specific format.","lastModifiedDate":"2022-02-04"},{"lineNumber":133,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"yusufaine"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":135,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"Error: %s\", errorMessage);","lastModifiedDate":"2022-02-04"},{"lineNumber":136,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"yusufaine"},"content":"     * Shows a list of dated-events that occur on the specified date.","lastModifiedDate":"2022-02-06"},{"lineNumber":140,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":141,"author":{"gitId":"yusufaine"},"content":"     * @param dateCheck the date that the user wants to see","lastModifiedDate":"2022-02-06"},{"lineNumber":142,"author":{"gitId":"yusufaine"},"content":"     * @param filteredTask the taskList that has been filtered to search for the keyword","lastModifiedDate":"2022-02-06"},{"lineNumber":143,"author":{"gitId":"yusufaine"},"content":"     * @return the contents of filteredTask that matches the keyword, if any.","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"yusufaine"},"content":"    public String showSchedule(Date dateCheck, List\u003cTask\u003e filteredTask) {","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"yusufaine"},"content":"        if (filteredTask.isEmpty()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"yusufaine"},"content":"            return String.format(\"I could not find any tasks that occurs on \\\"%s\\\"\", sdf.format(dateCheck));","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"yusufaine"},"content":"        } else {","lastModifiedDate":"2022-02-06"},{"lineNumber":151,"author":{"gitId":"yusufaine"},"content":"            StringBuilder sb \u003d new StringBuilder(STR_PADDING);","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"yusufaine"},"content":"            sb.append(String.format(\"You\u0027ve searched for task(s) that occur on: \\\"%s\\\"\\n\", sdf.format(dateCheck)));","lastModifiedDate":"2022-02-06"},{"lineNumber":153,"author":{"gitId":"yusufaine"},"content":"            sb.append(STR_PADDING + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"yusufaine"},"content":"            for (int i \u003d 0; i \u003c filteredTask.size(); i++) {","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"yusufaine"},"content":"                sb.append(String.format(\"\\n\" + STR_PADDING + \"  %d. \" + filteredTask.get(i), i + 1));","lastModifiedDate":"2022-02-06"},{"lineNumber":156,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":157,"author":{"gitId":"yusufaine"},"content":"            return sb.toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":158,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":159,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":161,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":162,"author":{"gitId":"yusufaine"},"content":"     * Shows a list of commands that the user can use.","lastModifiedDate":"2022-02-06"},{"lineNumber":163,"author":{"gitId":"yusufaine"},"content":"     * @return list of commands that the user can use","lastModifiedDate":"2022-02-06"},{"lineNumber":164,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":165,"author":{"gitId":"yusufaine"},"content":"    public String showHelp() {","lastModifiedDate":"2022-02-06"},{"lineNumber":166,"author":{"gitId":"yusufaine"},"content":"        return \"Here are the available commands -- \\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":167,"author":{"gitId":"yusufaine"},"content":"                + showHelpAdd()","lastModifiedDate":"2022-02-06"},{"lineNumber":168,"author":{"gitId":"yusufaine"},"content":"                + showHelpClear()","lastModifiedDate":"2022-02-06"},{"lineNumber":169,"author":{"gitId":"yusufaine"},"content":"                + showHelpDelete()","lastModifiedDate":"2022-02-06"},{"lineNumber":170,"author":{"gitId":"yusufaine"},"content":"                + showHelpExit()","lastModifiedDate":"2022-02-06"},{"lineNumber":171,"author":{"gitId":"yusufaine"},"content":"                + showHelpFind()","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"yusufaine"},"content":"                + showHelpList()","lastModifiedDate":"2022-02-06"},{"lineNumber":173,"author":{"gitId":"yusufaine"},"content":"                + showHelpToggle()","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"yusufaine"},"content":"                + showHelpView();","lastModifiedDate":"2022-02-06"},{"lineNumber":175,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":177,"author":{"gitId":"yusufaine"},"content":"    private String showHelpAdd() {","lastModifiedDate":"2022-02-06"},{"lineNumber":178,"author":{"gitId":"yusufaine"},"content":"        return \"Add command: \\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":179,"author":{"gitId":"yusufaine"},"content":"                + \"  todo \u003cdescription\u003e\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"yusufaine"},"content":"                + \"  event \u003cdescription\u003e /at \u003cdd/MM/yyyy hh:mm\u003e\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":181,"author":{"gitId":"yusufaine"},"content":"                + \"  deadline \u003cdescription\u003e /by \u003cdd/MM/yyyy hh:mm\u003e\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":182,"author":{"gitId":"yusufaine"},"content":"                + \"E.g: event meet John at the Cafe /at 06/03/2022 16:00\\n\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":183,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":185,"author":{"gitId":"yusufaine"},"content":"    private String showHelpClear() {","lastModifiedDate":"2022-02-06"},{"lineNumber":186,"author":{"gitId":"yusufaine"},"content":"        return \"Clear command: [WARNING] This will remove all your tasks!!\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"yusufaine"},"content":"                + \"  clear\\n\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":189,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":190,"author":{"gitId":"yusufaine"},"content":"    private String showHelpDelete() {","lastModifiedDate":"2022-02-06"},{"lineNumber":191,"author":{"gitId":"yusufaine"},"content":"        return \"Delete command: [NOTE] you can see the entry number using `list`\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":192,"author":{"gitId":"yusufaine"},"content":"                + \"  delete \u003centry number\u003e\\n\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":194,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":195,"author":{"gitId":"yusufaine"},"content":"    private String showHelpExit() {","lastModifiedDate":"2022-02-06"},{"lineNumber":196,"author":{"gitId":"yusufaine"},"content":"        return \"Exit command: [NOTE] Close using this to ensure your data is saved!!\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":197,"author":{"gitId":"yusufaine"},"content":"                + \"  exit\\n\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":198,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":199,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":200,"author":{"gitId":"yusufaine"},"content":"    private String showHelpFind() {","lastModifiedDate":"2022-02-06"},{"lineNumber":201,"author":{"gitId":"yusufaine"},"content":"        return \"Find command:\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":202,"author":{"gitId":"yusufaine"},"content":"                + \"  find \u003ckeyword\u003e\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":203,"author":{"gitId":"yusufaine"},"content":"                + \"E.g: find book -- this would give you all the task that contains \"","lastModifiedDate":"2022-02-06"},{"lineNumber":204,"author":{"gitId":"yusufaine"},"content":"                + \"\\t\\\"book\\\" such as \\\"books\\\" or \\\"booking\\\"\\n\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":205,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":206,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":207,"author":{"gitId":"yusufaine"},"content":"    private String showHelpList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":208,"author":{"gitId":"yusufaine"},"content":"        return \"List command: [NOTE] the entry numbers here are used in mark/unmark/delete\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"yusufaine"},"content":"                + \"  list\\n\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":210,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":212,"author":{"gitId":"yusufaine"},"content":"    private String showHelpToggle() {","lastModifiedDate":"2022-02-06"},{"lineNumber":213,"author":{"gitId":"yusufaine"},"content":"        return \"Mark/Unmark command: \\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":214,"author":{"gitId":"yusufaine"},"content":"                + \"  mark \u003centry number\u003e\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":215,"author":{"gitId":"yusufaine"},"content":"                + \"  unmark \u003centry number\u003e\\n\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":216,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":217,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":218,"author":{"gitId":"yusufaine"},"content":"    private String showHelpView() {","lastModifiedDate":"2022-02-06"},{"lineNumber":219,"author":{"gitId":"yusufaine"},"content":"        return \"View command: \\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":220,"author":{"gitId":"yusufaine"},"content":"                + \"  view \u003cdd/mm/yyyy\u003e\\n\"","lastModifiedDate":"2022-02-06"},{"lineNumber":221,"author":{"gitId":"yusufaine"},"content":"                + \"E.g: view 06/06/2022\\n\";","lastModifiedDate":"2022-02-06"},{"lineNumber":222,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":223,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":223}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":" * An instance of AddCommand","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    private final String taskType;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    private final String taskDetails;","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Add command.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     * @param taskType    the task type","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * @param taskDetails the task details","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    public AddCommand(String taskType, String taskDetails) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"        this.taskType \u003d taskType.toLowerCase();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Adds the task into this `TaskList` and prints out a message to show what has been added.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * @return string to inform the user that the specific task has been added.","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"            tasks.addTask(task \u003d new ToDo(taskDetails));","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            return ui.showAddition(tasks.size(), task);","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        case \"event\":","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"            String[] eventDetails \u003d taskDetails.split(\" /at \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"                tasks.addTask(task \u003d new Event(eventDetails[0], eventDetails[1]));","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"                return ui.showAddition(tasks.size(), task);","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"                return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"            String[] deadlineDetails \u003d taskDetails.split(\" /by \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"                tasks.addTask(task \u003d new Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"                return ui.showAddition(tasks.size(), task);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"                return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"        default:","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"            return ui.showError(\"Invalid command detected in AddCommand.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":65}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":" * An instance of ClearCommand.","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * Clears the `TaskList` that is in memory.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @return string to inform the user that the list has been cleared","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        tasks.getTasks().clear();","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        return \"Your task list has been cleared.\";","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"yusufaine":25}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":" * An abstract class Command that is extended to create the respective subclasses.","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     * Executes the command according to its subclass.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @return a string to indicate what has been executed","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * Returns `true` if the `Command` is `ExitCommand`.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     * @return `true` if the `Command` is `ExitCommand`","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    };","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":" * An instance of DeleteCommand.","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    private final String[] entryNumbers;","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Delete command.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     * @param entryNumbers the entry numbers that the user wants to remove/delete from the list","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    public DeleteCommand(String entryNumbers) {","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"        this.entryNumbers \u003d entryNumbers.split(\" \");","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     * Deletes/removes the specified task and prints a message upon its completion.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     * @return string to indicate that the specified task has been removed from the list.","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            return \"Your list is empty!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"        } else if (entryNumbers.length \u003c 1) {","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            return \"Please enter the entry number(s) that you wish to remove!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"        List\u003cInteger\u003e deletionNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        Arrays.stream(entryNumbers)","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"                .forEach(entry -\u003e {","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"                    int i \u003d -1;","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"                    try {","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"                        i \u003d Parser.parseInt(entry);","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"                        ui.showError(e.getMessage());","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"                    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"                    if (i \u003e\u003d 0) {","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"                        deletionNumbers.add(i - 1);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"                    }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"                });","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"        List\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"        deletionNumbers.forEach(n -\u003e deletedTasks.add(tasks.get(n)));","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"        deletionNumbers.sort(Comparator.reverseOrder());","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"        deletionNumbers.forEach(tasks::removeTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"        return ui.showDeletion(tasks.size(), deletedTasks);","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":68}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":" * An instance of ExitCommand.","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     * Writes this `TaskList` into the local file and closes the `Ui`.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * @return string to inform the user that the app is going to close.","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            storage.write(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"        return ui.close();","lastModifiedDate":"2022-02-04"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     * Returns `true` so that the program can proceed to gracefully close.","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @return true to signal the application to close.","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"        return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":39}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":" * An instance of FindCommand.","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    private final String findString;","lastModifiedDate":"2022-01-30"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * Finds all the tasks that contains the keyword that was provided.","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     * @param findString the keyword that the user wants to find","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    public FindCommand(String findString) {","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        this.findString \u003d findString;","lastModifiedDate":"2022-01-30"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     * Displays a list of events that match the keyword given by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @return list of events that match the keyword given by the user, if any","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"            return \"Your list is empty!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"            // already does \"fuzzy\" search","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            List\u003cTask\u003e filteredTask \u003d tasks.getTasks().stream()","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"                    .filter(task -\u003e task.getTaskName().contains(findString))","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            return ui.showFind(findString, filteredTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"yusufaine":47}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":" * An instance of HelpCommand","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"        return ui.showHelp();","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"yusufaine":15}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":" * An instance of InvalidCommand.","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * Prints out that the command given is invalid.","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @return string indicating that the command is invalid.","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        return \"Invalid command. Try `help` to view the list of possible commands.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":" * An instance of ListCommand.","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     * Prints out the content of `TaskList` with its respective entry numbers.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * @return the entries of the list in string format","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"            return \"Your list is empty!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"            return ui.showList(tasks);","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":26}},{"path":"src/main/java/duke/command/ToggleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":" * An instance of ToggleCommand.","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"public class ToggleCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    private final String cmd;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    private final String entryNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Toggle command.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     * @param cmd         to indicate whether to `mark` or `unmark` a `Task`","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     * @param entryNumber the entry number of the `Task` to `mark` or `unmark`","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    public ToggleCommand(String cmd, String entryNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"        this.entryNumber \u003d entryNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"     * Sets the status the `Task` according to the {@link #cmd}.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * @return the associated message to show that the TaskList is empty, or if the command has been marked/unmarked.","lastModifiedDate":"2022-02-04"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-04"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"                return \"Your list is empty!\";","lastModifiedDate":"2022-02-04"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            int toggleIndex \u003d Parser.parseInt(entryNumber) - 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"            if (toggleIndex \u003c 0 || toggleIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"                return ui.showError(\"Invalid entry number!\");","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"                Task toggleTask \u003d tasks.get(toggleIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"                toggleTask.setMarked(cmd);","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"                return ui.showToggleTask(toggleTask);","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":56}},{"path":"src/main/java/duke/command/ViewScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.util.Date;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":" * An instance of ViewScheduleCommand.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"public class ViewScheduleCommand extends Command {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    private final Date dateCheck;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new View schedule command.","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"     * @param dateString the date string","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    public ViewScheduleCommand(String dateString) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"            this.dateCheck \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(dateString);","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd/MM/yyyy\\\" format\\\"\");","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"     * Displays a list of events that match the date given by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"     * @return list of events that match the date given by the user, if any","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"        List\u003cTask\u003e filteredTask \u003d tasks.getTasks().stream()","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"                .filter(this::isDatedTask)","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"                .filter(task -\u003e isSameDate(getDate(task)))","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"        return ui.showSchedule(dateCheck, filteredTask);","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"    private Date getDate(Task datedTask) {","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"        return (datedTask instanceof Event)","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"                ? ((Event) datedTask).getDate()","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"                : ((Deadline) datedTask).getDate();","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"    private boolean isSameDate(Date current) {","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"        return sdf.format(current).equals(sdf.format(dateCheck));","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"    private boolean isDatedTask(Task task) {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"        return task instanceof Event","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"                || task instanceof Deadline;","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"yusufaine":70}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    /** The `Date` of when this `Deadline` is held. */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    private final Date date;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Deadline.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param date       the date of when this `Deadline` is due","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the `String` representation of the date does not follow the format","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public Deadline(String taskName, String date) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(date);","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd / MM / yyyy HH:mm\\\" format\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Deadline.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     * @param date       the date of when this `Deadline` is due","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * @param isMarked the is `Deadline` has been marked/completed","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the `String` representation of the date does not follow the format","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    public Deadline(String taskName, String date, String isMarked) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(date);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            this.isMarked \u003d (isMarked.equals(\"1\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd/MM/yyyy HH:mm\\\" format\");","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"    public Date getDate() {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"        return date;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"     * Returns the `String` representation of a `Deadline`.","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"     * @return the `String` representation of a `Deadline`","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy @ hh:mm a\");","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), sdf.format(this.date));","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"     * Returns the `String` representation of a `Deadline` that is written to the local data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"     * @return the `String` representation of a `Deadline` that is written to the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"    public String toFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"        String markStatus \u003d super.isMarked ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"%s | %s | %s | %s\\n\", \"D\", markStatus, super.taskName, sdf.format(this.date));","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yusufaine":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    /** The `Date` of when this `Event` is held. */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    private final Date date;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param date       the date of when this `Event` is held","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the `String` representation of the date does not follow the format","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public Event(String taskName, String date) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(date);","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd/MM/yyyy HH:mm\\\" format\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     * @param date       the date of when this `Event` is held","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * @param isMarked the is `Event` has been marked/completed","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the `String` representation of the date does not follow the format","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    public Event(String taskName, String date, String isMarked) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(date);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            this.isMarked \u003d (isMarked.equals(\"1\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd / MM / yyyy HH:mm\\\" format\");","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"    public Date getDate() {","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"        return date;","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"     * Returns the `String` representation of an `Event`.","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"     * @return the `String` representation of an `Event`","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy @ hh:mm a\");","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), sdf.format(this.date));","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"     * Returns the `String` representation of an `Event` that is written to the local data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"     * @return the `String` representation of an `Event` that is written to the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"    public String toFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"        String markStatus \u003d super.isMarked ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"%s | %s | %s | %s\\n\", \"E\", markStatus, super.taskName, sdf.format(this.date));","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yusufaine":73}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"    /** The name/description of the `Task`. */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"    protected String taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"    /** Indicates if the `Task` has been completed. */","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"    protected boolean isMarked;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Task.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     * Sets {@link #isMarked} according to whether the input equals to \"mark\".","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * @param status indicating if the `Task` needs to be marked or unmarked","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    public void setMarked(String status) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"        this.isMarked \u003d status.equals(\"mark\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"        return isMarked;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"    private String getMarkedStatus() {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"        return isMarked ? \"X\" : \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"     * Returns the String representation of a `Task`.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"     * @return the String representation of a `Task`","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"[%s] \" + this.getTaskName(), this.getMarkedStatus());","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"     * Returns the String representation of a `Task` that is written to the local data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"     * @return the String representation of a `Task` that is written to the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"    public abstract String toFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"yusufaine":57}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new ToDo.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new ToDo.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param isMarked the task has been marked/completed","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    public ToDo(String taskName, String isMarked) {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        this.isMarked \u003d (isMarked.equals(\"1\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     * Returns the String representation of a `ToDo`.","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     * @return the String representation of a `ToDo`","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * Returns the String representation of a `ToDo` that is written to the local data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"     * @return the String representation of a `ToDo` that is written to the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"    public String toFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        String markStatus \u003d super.isMarked ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"%s | %s | %s\\n\", \"T\", markStatus, super.taskName);","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yusufaine":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Message\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"yusufaine":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"611.0\" prefWidth\u003d\"720.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"564.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"609.0\" AnchorPane.bottomAnchor\u003d\"6.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"            \u003cFont name\u003d\"Hasklig\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"      \u003c/TextField\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"630.0\" layoutY\u003d\"564.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"720.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"718.0\" /\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"      \u003c/content\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-02-04"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"yusufaine":24}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"    /** Dummy test. */","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yusufaine":11}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"import duke.command.ToggleCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Parser#parseInt(String)} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    public void parseIntTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            assertEquals(-1, Parser.parseInt(\"-1\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"            assertEquals(0, Parser.parseInt(\"0\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"            assertEquals(99, Parser.parseInt(\"99\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"            assertEquals(-1, Parser.parseInt(\"NaN\")); // trigger exception","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"            assertEquals(\"Please provide the item NUMBER to remove.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Parser#parseCommand(String)} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"    public void parseCommandTest() throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        String[] commands \u003d {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            \"exit\", \"list\", \"mark 0\", \"unmark 0\", \"todo todo\",","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            \"event e /at 29/01/2022 16:00\", \"deadline d /by 29/01/2022 16:00\",","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"            \"remove 0\", \"delete 0\", \"invalid\"","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"        };","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[0]) instanceof ExitCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[1]) instanceof ListCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[2]) instanceof ToggleCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[3]) instanceof ToggleCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[4]) instanceof AddCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[5]) instanceof AddCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[6]) instanceof AddCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[7]) instanceof DeleteCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[8]) instanceof DeleteCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[9]) instanceof InvalidCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Parser#parseStringToTask(String)} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"    public void parseStringToTaskTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"        String[] inputs \u003d {","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"            \"T | 1 | read book\",","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"            \"D | 0 | return book | 06/06/2022 15:00\",","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"            \"E | 0 | project meeting | 06/08/2022 14:00\",","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"            \"X | 3 | false value\"","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"        };","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"            assertTrue(Parser.parseStringToTask(inputs[0]) instanceof ToDo);","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"            assertTrue(Parser.parseStringToTask(inputs[1]) instanceof Deadline);","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"            assertTrue(Parser.parseStringToTask(inputs[2]) instanceof Event);","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"            assertNotNull(Parser.parseStringToTask(inputs[3]));","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"            assertEquals(\"Invalid keyword from source file.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yusufaine":80}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-04"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    private Storage validStorage \u003d new Storage(\"data/.test.dat\");","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    private Storage invalidStorage \u003d new Storage(\"data/.invalid.dat\");","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Storage#read()} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public void readTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"            assertNotNull(validStorage.read());","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            assertNotNull(invalidStorage.read());","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            assertEquals(\"Unable to locate/read data file.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Storage#write(TaskList)} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"    public void writeTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"        tasks.addTask(new ToDo(\"write test\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"            assertTrue(validStorage.write(tasks));","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"            assertTrue(invalidStorage.write(tasks));","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            assertEquals(\"Unable to locate/write to data file.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yusufaine":44}}]
