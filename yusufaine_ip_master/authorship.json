[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"java {","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"    toolchain {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"        languageVersion \u003d JavaLanguageVersion.of(11)","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2022-02-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yusufaine":7,"-":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    private static Storage storage;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    private static Ui ui;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param filePath the file path to locally-stored data.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"            tasks \u003d new TaskList(storage.read());","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"            ui.showError(e.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    private void run() {","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"        boolean hasExit \u003d false;","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"        while (!hasExit) {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"            // default case in Parser::parseCommand handles invalid commands","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"            if (fullCommand.isBlank()) {","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"                continue;","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"            Command cmd \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"            cmd.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            hasExit \u003d cmd.isExit();","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"     * The entry point of application.","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"     * @param args the input arguments","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"        new Duke(\"data/todo.dat\").run();","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yusufaine":49,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Duke exception.","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"     * @param message the message","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yusufaine":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"import duke.command.ToggleCommand;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"public class Parser {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     * Parses `String` to `Integer`.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     * @param strToIntValue the `String` that needs to be parsed to an `Integer` value","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * @return the `Integer` value of the `String`.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the parameter could not be parsed to an `Integer`.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"    public static int parseInt(String strToIntValue) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"            return Integer.parseInt(strToIntValue);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please provide the item NUMBER to remove.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * Parses a `String` and returns its corresponding `Command`.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     * @param fullCommand the full command containing the keyword and its necessary details","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"     * @return the corresponding command","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"    public static Command parseCommand(String fullCommand) {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        Command cmd;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        String[] input \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"        switch (input[0].toLowerCase()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        case \"exit\":","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d new ExitCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        case \"ls\":","lastModifiedDate":"2022-01-30"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"        case \"list\":","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d new ListCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d new ToggleCommand(input[0], input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"        case \"event\":","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d new AddCommand(input[0], input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"        case \"remove\":","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d new DeleteCommand(input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"        case \"clear\":","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d new ClearCommand();","lastModifiedDate":"2022-02-01"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-02-01"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"        case \"find\":","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d new FindCommand(input[1]);","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"            cmd \u003d new InvalidCommand();","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"        return cmd;","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"     * Parses a `String` to `Task` when reading from the locally-stored data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"yusufaine"},"content":"     * @param entry an entry in the locally-stored data file","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"yusufaine"},"content":"     * @return the corresponding tasks initiated with its details and marked status.","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if there is an invalid keyword in the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"yusufaine"},"content":"    public static Task parseStringToTask(String entry) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"yusufaine"},"content":"        String[] input \u003d entry.split(\" \\\\| \");","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"yusufaine"},"content":"        Task newTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":88,"author":{"gitId":"yusufaine"},"content":"        switch (input[0]) {","lastModifiedDate":"2022-01-28"},{"lineNumber":89,"author":{"gitId":"yusufaine"},"content":"        case \"T\":","lastModifiedDate":"2022-01-28"},{"lineNumber":90,"author":{"gitId":"yusufaine"},"content":"            newTask \u003d new ToDo(input[2],input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"yusufaine"},"content":"        case \"D\":","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"yusufaine"},"content":"            newTask \u003d new Deadline(input[2], input[3], input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":95,"author":{"gitId":"yusufaine"},"content":"        case \"E\":","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"yusufaine"},"content":"            newTask \u003d new Event(input[2], input[3], input[1]);","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"yusufaine"},"content":"        default:","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Invalid keyword from source file.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"yusufaine"},"content":"        return newTask;","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":104}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import java.io.File;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"public class Storage {","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    private final File dataFile;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Storage.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param filePath the path to the locally-stored file","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"        dataFile \u003d new File(filePath);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        // dir/file check should not throw unless no r/w permission","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        dataFile.getParentFile().mkdirs();","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * Reads list the {@link #dataFile} and returns a `List` used to populate `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * @return the content of {@link #dataFile} in a `List`","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if {@link #dataFile} could not be located or read","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    public List\u003cString\u003e read() throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        List\u003cString\u003e dataList;","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        // try block should populate dataList unless no r/w permission","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        try (Scanner sc \u003d new Scanner(dataFile)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"            dataList \u003d sc.useDelimiter(\"\\\\n\")","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"                    .tokens()","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Unable to locate/read file.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"        // if dataList is empty, dataFile has no entry","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"        return dataList;","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"     * Stores the content of `TaskList` into {@link #dataFile}.","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"     * @param tasks the `TaskList` containing this instance\u0027s `Task`","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"     * @return true if this method runs successfully","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if {@link #dataFile} could not be located or written to","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"    public boolean write(TaskList tasks) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"        try (FileWriter fw \u003d new FileWriter(dataFile, false)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"                try {","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"                    fw.write(tasks.get(i).toFile());","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"                    throw new DukeException(\"Unable to write to file.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"            return true;","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"            // most likely r/w permissions","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Unable to locate/write to file.\");","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":76}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"public class TaskList {","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    /** Instantiates a new empty TaskList. */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"        return tasks;","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new TaskList and populates it with the content of the","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * parameter provided.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     * @param tasks the tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    public TaskList(List\u003cString\u003e tasks) {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"        tasks.forEach(entry -\u003e { // parse entries","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"                this.tasks.add(Parser.parseStringToTask(entry));","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"        });","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"     * Returns `true` if this TaskList contains no `Task`.","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"     * @return `true` if this TaskList contains no `Task`","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"     * Get `Task` at the specified position in this `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"     * @param index index of the `Task` to get","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"     * @return the `Task` at the specified position in this `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"     * Removes the `Task` at the specified position in this `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"     * Shift the other `Task` to the left (subtracts one from their indices).","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"     * Returns the `Task` that was removed from the `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"     * @param index the index of the `task` to be removed","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"     * @return the `task` previously at the specified position","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"     * Returns the number of `Task` in this `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"     * @return the number of `Task` in this list","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"    public int size() {","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"     * Appends the specified `Task` to the end of this `TaskList`.","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"yusufaine"},"content":"     * @param task the task","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"yusufaine"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"yusufaine"},"content":"        this.tasks.add(task);","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":86,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":87}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"public class Ui {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    /** Padding string used to format the bot\u0027s responses*/","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    public final String STR_PADDING \u003d \"      \";","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    /** Print exit message and close {@link #sc}*/","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    public void close() {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"        printWithDivider(\"Pleasure to be of service, see you soon!\");","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"        sc.close();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     * Read the command string from UI\u0027s Scanner ({@link #sc}).","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     * @return the string","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Show the input task getting marked or unmarked based on its status.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @param task the task","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    public void showToggleTask(Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"        List\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"        String markedString \u003d \"Nice! I\u0027ve marked this task: \";","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"        String unmarkedString \u003d \"OK, I\u0027ve unmarked this task: \";","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        String outString \u003d task.getIsMarked() ? markedString : unmarkedString;","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        outputs.add(outString);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        outputs.add(\"   \" + task);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"        printWithDivider(outputs);","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"     * Show that the input task has been removed from the list.","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"     * @param listSize the list size","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"     * @param task     the task","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"    public void showDeletion(int listSize, Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        List\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"        String ack \u003d \"Noted, I\u0027ve removed the following task: \";","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"        String taskString \u003d (listSize \u003d\u003d 1) ? \"task\" : \"tasks\";","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"        String size \u003d String.format(\"Now you have %d %s in the list\", listSize, taskString);","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"        outputs.add(ack);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"        outputs.add(\"   \" + task);","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"        outputs.add(size);","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"        printWithDivider(outputs);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"     * Show that the input task has been added to the list.","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"     * @param listSize the list size","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"     * @param task     the task","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"    public void showAddition(int listSize, Task task) {","lastModifiedDate":"2022-01-28"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"        List\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-28"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"        String taskString \u003d (listSize \u003d\u003d 1) ? \"task\" : \"tasks\";","lastModifiedDate":"2022-01-28"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"        String ack \u003d \"Got it, I\u0027ve added this task: \";","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"        String size \u003d String.format(\"Now you have %d %s in the list\", listSize, taskString);","lastModifiedDate":"2022-01-28"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"        outputs.add(ack);","lastModifiedDate":"2022-01-28"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"        outputs.add(\"   \" + task);","lastModifiedDate":"2022-01-28"},{"lineNumber":80,"author":{"gitId":"yusufaine"},"content":"        outputs.add(size);","lastModifiedDate":"2022-01-28"},{"lineNumber":81,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":82,"author":{"gitId":"yusufaine"},"content":"        printWithDivider(outputs);","lastModifiedDate":"2022-01-28"},{"lineNumber":83,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":84,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":85,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"yusufaine"},"content":"     * Show an error message containing the input parameter.","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":88,"author":{"gitId":"yusufaine"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2022-01-29"},{"lineNumber":89,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":90,"author":{"gitId":"yusufaine"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":91,"author":{"gitId":"yusufaine"},"content":"        this.printWithDivider(\"Error: \" + errorMessage);","lastModifiedDate":"2022-01-28"},{"lineNumber":92,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":93,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":94,"author":{"gitId":"yusufaine"},"content":"    /** Show a welcome message with the bot\u0027s name. */","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"yusufaine"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"yusufaine"},"content":"        String botName \u003d \"Duke, the Task Master\";","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"yusufaine"},"content":"        String greeting \u003d \"Greetings, I am \" + botName + \".\\n\" +","lastModifiedDate":"2022-02-03"},{"lineNumber":98,"author":{"gitId":"yusufaine"},"content":"                STR_PADDING + \"I\u0027m here to help you with your... tasks, obviously!\";","lastModifiedDate":"2022-02-03"},{"lineNumber":99,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"yusufaine"},"content":"        this.printWithDivider(greeting);","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":104,"author":{"gitId":"yusufaine"},"content":"     * Print the content of the input List enclosed by dividers.","lastModifiedDate":"2022-01-29"},{"lineNumber":105,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":106,"author":{"gitId":"yusufaine"},"content":"     * @param messages the messages","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"yusufaine"},"content":"    public void printWithDivider(List\u003cString\u003e messages) {","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"yusufaine"},"content":"        System.out.println(\"    -----------------------------------------------------------\");","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"yusufaine"},"content":"        for (String s : messages) {","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"yusufaine"},"content":"            System.out.println(STR_PADDING + s);","lastModifiedDate":"2022-02-03"},{"lineNumber":112,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"yusufaine"},"content":"        System.out.println(\"    -----------------------------------------------------------\");","lastModifiedDate":"2022-01-29"},{"lineNumber":114,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":115,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":116,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"yusufaine"},"content":"     * Print the content of the input StringBuilder enclosed by dividers.","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"yusufaine"},"content":"     * @param message the message","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":121,"author":{"gitId":"yusufaine"},"content":"    public void printWithDivider(StringBuilder message) {","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"yusufaine"},"content":"        System.out.println(\"    -----------------------------------------------------------\");","lastModifiedDate":"2022-01-29"},{"lineNumber":123,"author":{"gitId":"yusufaine"},"content":"        System.out.println(message.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"yusufaine"},"content":"        System.out.println(\"    -----------------------------------------------------------\");","lastModifiedDate":"2022-01-29"},{"lineNumber":125,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":126,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":127,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"yusufaine"},"content":"     * Print the content of the input String enclosed by dividers.","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"yusufaine"},"content":"     * @param message the message","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"yusufaine"},"content":"    public void printWithDivider(String message) {","lastModifiedDate":"2022-01-28"},{"lineNumber":133,"author":{"gitId":"yusufaine"},"content":"        System.out.println(\"    -----------------------------------------------------------\");","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"yusufaine"},"content":"        System.out.println(STR_PADDING + message);","lastModifiedDate":"2022-02-03"},{"lineNumber":135,"author":{"gitId":"yusufaine"},"content":"        System.out.println(\"    -----------------------------------------------------------\");","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":137,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":137}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    private final String taskType;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    private final String taskDetails;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Add command.","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * @param taskType    the task type","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     * @param taskDetails the task details","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    public AddCommand(String taskType, String taskDetails) {","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        this.taskType \u003d taskType.toLowerCase();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     * Adds the task into this `TaskList` and prints out a message to show what has been added.","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"        Task task;","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"            tasks.addTask(task \u003d new ToDo(taskDetails));","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"            ui.showAddition(tasks.size(), task);","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        case \"event\":","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"            String[] eventDetails \u003d taskDetails.split(\" /at \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"                tasks.addTask(task \u003d new Event(eventDetails[0], eventDetails[1]));","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"                ui.showAddition(tasks.size(), task);","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"            String[] deadlineDetails \u003d taskDetails.split(\" /by \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"            try {","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"                tasks.addTask(task \u003d new Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"                ui.showAddition(tasks.size(), task);","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"        default:","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"            break;","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":64}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"     * Clears the `TaskList` that is in memory.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"        ui.printWithDivider(\"Are you sure you want to clear your list? (Y/N)\");","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"        boolean hasAnswered \u003d false;","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"        while (!hasAnswered) {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"            switch (userInput.toUpperCase()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            case \"Y\":","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"                tasks.getTasks().clear();","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"                ui.printWithDivider(\"Your task list has been cleared.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"                hasAnswered \u003d true;","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"                break;","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"            case \"N\":","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"                ui.printWithDivider(\"Your task list was NOT cleared.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"                hasAnswered \u003d true;","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"                break;","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"            default:","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"                ui.printWithDivider(\"Please enter Y or N.\");","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"yusufaine":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"     * Executes the command according to its subclass.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * Returns `true` if the `Command` is `ExitCommand`.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     * @return `true` if the `Command` is `ExitCommand`","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        return false;","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    };","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":25}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    private final String entryNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Delete command.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * @param entryNumber the entry number that the user wants to remove/delete","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    public DeleteCommand(String entryNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"        this.entryNumber \u003d entryNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * Deletes/removes the specified task and prints a message upon its completion.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"                ui.printWithDivider(\"Your list is empty!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"                return;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"            int deletionIndex \u003d Parser.parseInt(entryNumber) - 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"            if (deletionIndex \u003c 0 || deletionIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"                ui.showError(\"Invalid entry number!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"                ui.showDeletion(tasks.size(), tasks.removeTask(deletionIndex));","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":47}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     * Writes this `TaskList` into the local file and closes the `Ui`.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"            storage.write(tasks);","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        ui.close();","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     * Returns `true` so that the program can proceed to gracefully close.","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     * @return true to signal the application to close.","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"        return true;","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-30"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-30"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-30"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-30"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import java.util.List;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-30"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    private final String findString;","lastModifiedDate":"2022-01-30"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * Finds all the tasks that contains the keyword that was provided.","lastModifiedDate":"2022-02-02"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param findString the keyword that the user wants to find","lastModifiedDate":"2022-02-02"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    public FindCommand(String findString) {","lastModifiedDate":"2022-01-30"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"        this.findString \u003d findString;","lastModifiedDate":"2022-01-30"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-30"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"     * Execute.","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-30"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-30"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-30"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"            ui.printWithDivider(\"Your list is empty!\");","lastModifiedDate":"2022-01-30"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"        } else {","lastModifiedDate":"2022-01-30"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"            List\u003cTask\u003e filteredTask \u003d tasks.getTasks().stream()","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"                    .filter(task -\u003e task.getTaskName().contains(findString))","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"            if (filteredTask.isEmpty()) {","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"                ui.printWithDivider(String.format(\"I could not find any tasks that contains \\\"%s\\\"\", findString));","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            } else {","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"                StringBuilder sb \u003d new StringBuilder(ui.STR_PADDING + \"You\u0027ve searched for: \\\"\" + findString + \"\\\"\\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"                sb.append(ui.STR_PADDING + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-02-03"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-30"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"                int[] taskCount \u003d {1};","lastModifiedDate":"2022-01-30"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"                filteredTask.forEach(task -\u003e {","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"                    sb.append(String.format(\"\\n\" + ui.STR_PADDING + \"  %d. \" + task, taskCount[0]++));","lastModifiedDate":"2022-02-03"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"                });","lastModifiedDate":"2022-01-30"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"                ui.printWithDivider(sb);","lastModifiedDate":"2022-01-30"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-30"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-30"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-30"}],"authorContributionMap":{"yusufaine":54}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"     * Prints out that the command given is invalid.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"        ui.showError(\"Invalid command.\");","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":19}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"     * Prints out the content of `TaskList` with its respective entry numbers.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"            ui.printWithDivider(\"Your list is empty!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"        } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"            StringBuilder sb \u003d new StringBuilder(ui.STR_PADDING + \"Here are the tasks in your list: \\n\");","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"                sb.append(String.format(ui.STR_PADDING + \"  %d. \" + tasks.get(i), i+1));","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"                    sb.append(\"\\n\");","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"                }","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"            ui.printWithDivider(sb);","lastModifiedDate":"2022-02-02"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":30}},{"path":"src/main/java/duke/command/ToggleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.command;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"public class ToggleCommand extends Command {","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    private final String cmd;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"    private final String entryNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Toggle command.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param cmd   to indicate whether to `mark` or `unmark` a `Task`","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * @param entryNumber the entry number of the `Task` to `mark` or `unmark`","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public ToggleCommand(String cmd, String entryNumber) {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        this.entryNumber \u003d entryNumber;","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"     * Sets the status the `Task` according to the {@link #cmd}.","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     * @param tasks   the tasks in `TaskList`","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"     * @param ui      the UI that the user interacts with","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * @param storage the storage that is used to read/write to the local file","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"                ui.printWithDivider(\"Your list is empty!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"                return;","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            int toggleIndex \u003d Parser.parseInt(entryNumber) - 1;","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            if (toggleIndex \u003c 0 || toggleIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"                ui.showError(\"Invalid entry number!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            } else {","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"                Task toggleTask \u003d tasks.get(toggleIndex);","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"                toggleTask.setMarked(cmd);","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"                ui.showToggleTask(toggleTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"            }","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"yusufaine":53}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    /** The `Date` of when this `Deadline` is held. */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    private final Date by;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Deadline.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param by       the date of when this `Deadline` is due","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the `String` representation of the date does not follow the format","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public Deadline(String taskName, String by) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            this.by \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(by);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd / MM / yyyy HH:mm\\\" format\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Deadline.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     * @param by       the date of when this `Deadline` is due","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * @param isMarked the is `Deadline` has been marked/completed","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the `String` representation of the date does not follow the format","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    public Deadline(String taskName, String by, String isMarked) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            this.by \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(by);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            this.isMarked \u003d (isMarked.equals(\"1\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd / MM / yyyy HH:mm\\\" format\");","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     * Returns the `String` representation of a `Deadline`.","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"     * @return the `String` representation of a `Deadline`","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy @ hh:mm a\");","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), sdf.format(this.by));","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"     * Returns the `String` representation of a `Deadline` that is written to the local data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"     * @return the `String` representation of a `Deadline` that is written to the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"    public String toFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"        String markStatus \u003d super.isMarked ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"%s | %s | %s | %s\\n\", \"D\", markStatus, super.taskName, sdf.format(this.by));","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yusufaine":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import java.util.Date;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"    /** The `Date` of when this `Event` is held. */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    private final Date at;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param at       the date of when this `Event` is held","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the `String` representation of the date does not follow the format","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public Event(String taskName, String at) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            this.at \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(at);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd / MM / yyyy HH:mm\\\" format\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"     * @param at       the date of when this `Event` is held","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * @param isMarked the is `Event` has been marked/completed","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * @throws DukeException if the `String` representation of the date does not follow the format","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    public Event(String taskName, String at, String isMarked) throws DukeException {","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            this.at \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\").parse(at);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"            this.isMarked \u003d (isMarked.equals(\"1\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"            throw new DukeException(\"Please enter the date in \\\"dd / MM / yyyy HH:mm\\\" format\");","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"     * Returns the `String` representation of an `Event`.","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"     * @return the `String` representation of an `Event`","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy @ hh:mm a\");","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), sdf.format(this.at));","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"     * Returns the `String` representation of an `Event` that is written to the local data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"     * @return the `String` representation of an `Event` that is written to the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"    public String toFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"        String markStatus \u003d super.isMarked ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"%s | %s | %s | %s\\n\", \"E\", markStatus, super.taskName, sdf.format(this.at));","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yusufaine":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"    /** The name/description of the `Task`. */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"    protected String taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"    /** Indicates if the `Task` has been completed. */","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"    protected boolean isMarked;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new Task.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     * Sets {@link #isMarked} according to whether the input equals to \"mark\".","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"     * @param status indicating if the `Task` needs to be marked or unmarked","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    public void setMarked(String status) {","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"        this.isMarked \u003d status.equals(\"mark\");","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"        return isMarked;","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"    private String getMarkedStatus() {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"        return isMarked ? \"X\" : \" \";","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"     * Returns the String representation of a `Task`.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"     * @return the String representation of a `Task`","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"[%s] \" + this.getTaskName(), this.getMarkedStatus());","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"     * Returns the String representation of a `Task` that is written to the local data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"     * @return the String representation of a `Task` that is written to the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"    public abstract String toFile();","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"yusufaine":57}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"package duke.task;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new ToDo.","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"     * Instantiates a new ToDo.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"     * @param taskName the task name/description","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * @param isMarked the task has been marked/completed","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    public ToDo(String taskName, String isMarked) {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"        super(taskName);","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        this.isMarked \u003d (isMarked.equals(\"1\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"     * Returns the String representation of a `ToDo`.","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"     * @return the String representation of a `ToDo`","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     * Returns the String representation of a `ToDo` that is written to the local data file.","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"     *","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"     * @return the String representation of a `ToDo` that is written to the local data file","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"    public String toFile() {","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"        String markStatus \u003d super.isMarked ? \"1\" : \"0\";","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        return String.format(\"%s | %s | %s\\n\", \"T\", markStatus, super.taskName);","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"yusufaine":44}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"public class DukeTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"    /** Dummy test. */","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"    public void dummyTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"        assertEquals(2,2);","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yusufaine":11}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"import duke.Parser;","lastModifiedDate":"2022-01-29"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import duke.command.ToggleCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"public class ParserTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Parser#parseInt(String)} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"    public void parseIntTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"            assertEquals(-1, Parser.parseInt(\"-1\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            assertEquals(0, Parser.parseInt(\"0\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"            assertEquals(99, Parser.parseInt(\"99\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"            assertEquals(-1, Parser.parseInt(\"NaN\")); // trigger exception","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"            assertEquals(\"Please provide the item NUMBER to remove.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Parser#parseCommand(String)} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"    public void parseCommandTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"        String[] commands \u003d {","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"                \"exit\", \"list\", \"mark 0\", \"unmark 0\", \"todo todo\",","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"                \"event e /at 29/01/2022 16:00\", \"deadline d /by 29/01/2022 16:00\",","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"                \"remove 0\", \"delete 0\", \"invalid\"","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"        };","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[0]) instanceof ExitCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[1]) instanceof ListCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[2]) instanceof ToggleCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[3]) instanceof ToggleCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[4]) instanceof AddCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[5]) instanceof AddCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[6]) instanceof AddCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[7]) instanceof DeleteCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[8]) instanceof DeleteCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"yusufaine"},"content":"        assertTrue(Parser.parseCommand(commands[9]) instanceof InvalidCommand);","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":56,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":57,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Parser#parseStringToTask(String)} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"yusufaine"},"content":"    public void parseStringToTaskTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":62,"author":{"gitId":"yusufaine"},"content":"        String[] inputs \u003d {","lastModifiedDate":"2022-01-29"},{"lineNumber":63,"author":{"gitId":"yusufaine"},"content":"                \"T | 1 | read book\",","lastModifiedDate":"2022-01-29"},{"lineNumber":64,"author":{"gitId":"yusufaine"},"content":"                \"D | 0 | return book | 06/06/2022 15:00\",","lastModifiedDate":"2022-01-29"},{"lineNumber":65,"author":{"gitId":"yusufaine"},"content":"                \"E | 0 | project meeting | 06/08/2022 14:00\",","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"yusufaine"},"content":"                \"X | 3 | false value\"","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"yusufaine"},"content":"        };","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":70,"author":{"gitId":"yusufaine"},"content":"            assertTrue(Parser.parseStringToTask(inputs[0]) instanceof ToDo);","lastModifiedDate":"2022-01-29"},{"lineNumber":71,"author":{"gitId":"yusufaine"},"content":"            assertTrue(Parser.parseStringToTask(inputs[1]) instanceof Deadline);","lastModifiedDate":"2022-01-29"},{"lineNumber":72,"author":{"gitId":"yusufaine"},"content":"            assertTrue(Parser.parseStringToTask(inputs[2]) instanceof Event);","lastModifiedDate":"2022-01-29"},{"lineNumber":73,"author":{"gitId":"yusufaine"},"content":"            assertNotNull(Parser.parseStringToTask(inputs[3]));","lastModifiedDate":"2022-01-29"},{"lineNumber":74,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"yusufaine"},"content":"            assertEquals(\"Invalid keyword from source file.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":79,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yusufaine":79}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"import duke.Parser;","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"import duke.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"import duke.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"public class StorageTest {","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"    private final Storage validStorage \u003d new Storage(\"data/.test.dat\");","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"    private final Storage invalidStorage \u003d new Storage(\"data/.invalid.dat\");","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Storage#read()} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"    public void readTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"yusufaine"},"content":"            assertNotNull(validStorage.read());","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"yusufaine"},"content":"            assertNotNull(invalidStorage.read());","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"yusufaine"},"content":"            assertEquals(\"Unable to locate/read data file.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"yusufaine"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"yusufaine"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"yusufaine"},"content":"     * Test to determine if {@link Storage#write(TaskList)} works as intended.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"yusufaine"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"yusufaine"},"content":"    @Test","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"yusufaine"},"content":"    public void writeTest() {","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"yusufaine"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"yusufaine"},"content":"        tasks.addTask(new ToDo(\"write test\"));","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"yusufaine"},"content":"        try {","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"yusufaine"},"content":"            assertTrue(validStorage.write(tasks));","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"yusufaine"},"content":"            assertTrue(invalidStorage.write(tasks));","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"yusufaine"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"yusufaine"},"content":"            assertEquals(\"Unable to locate/write to data file.\", e.getMessage());","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"yusufaine"},"content":"        }","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"yusufaine"},"content":"    }","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"yusufaine"},"content":"}","lastModifiedDate":"2022-01-29"}],"authorContributionMap":{"yusufaine":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yusufaine"},"content":"todo read book","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"yusufaine"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"yusufaine"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"yusufaine"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"yusufaine"},"content":"todo join sports club","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"yusufaine"},"content":"mark 4","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"yusufaine"},"content":"todo borrow book","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"yusufaine"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"yusufaine"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"yusufaine"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"yusufaine"},"content":"mark 0","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"yusufaine"},"content":"mark one","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"yusufaine"},"content":"mark 50","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"yusufaine"},"content":"unmark 0","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"yusufaine"},"content":"unmark 50","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"yusufaine"},"content":"remove 0","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"yusufaine"},"content":"delete zero","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"yusufaine"},"content":"remove 50","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"yusufaine"},"content":"remove 4","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"yusufaine"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"yusufaine"},"content":"exit","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"yusufaine":21}}]
