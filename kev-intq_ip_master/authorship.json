[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"    private Parser cmdParser;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    public Duke() {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"        Duke Lumu \u003d new Duke();","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"        Lumu.botInitialize();","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    private void botInitialize() {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"        Storage storage \u003d Storage.getInstance();","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"        TaskList taskList \u003d new TaskList(storage);","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"        ui.initialize(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kev-intq":22,"-":4}},{"path":"src/main/java/com/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":" * This is an abstract class and cannot be instantiated.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":14}},{"path":"src/main/java/com/duke/command/CommandAdd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command for adding Tasks to the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"public class CommandAdd extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"    private String inputDateTimeFormat \u003d \"dd/MM/yyyy HHmm\";","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"    private String type;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    private String input;","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"     * @param type     Specified type of Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"     * @param input    The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"     * @param taskList The tasklist meant for the Tasks to be added to.","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"    public CommandAdd(String type, String input, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"        super();","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"     * Returns a string of the result of executing the intended function of this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"     * This string is wrapped in a CommandResult object","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(taskAdder(type, input));","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"        } catch (DukeInvalidArgumentException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"kev-intq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"kev-intq"},"content":"                    \"Valid date and time must be given in this format: DD/MM/YYYY HHmm\"","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"kev-intq"},"content":"                            + \"\\nEg: 24/12/2022 2359\");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"kev-intq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(\"Unable to save list.\" +","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"kev-intq"},"content":"                    \"Please check if you have permission to write to files in the following directory: \"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"kev-intq"},"content":"                    + Storage.getInstance().getDirectoryPath());","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"kev-intq"},"content":"     * Checks if the structure of the arguments is valid based on the tyoe of Task indicated.","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"kev-intq"},"content":"     * Returns the type of task as an enum if valid.","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"kev-intq"},"content":"     * @param type Type of Task.","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"kev-intq"},"content":"     * @param args The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"kev-intq"},"content":"     * @return Type of Task on success.","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"kev-intq"},"content":"     * @throws DukeInvalidArgumentException On invalid argument string structure.","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"kev-intq"},"content":"    private Task.TaskType taskIdentifier(String type, String args) throws DukeInvalidArgumentException {","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"kev-intq"},"content":"        Task.TaskType taskType \u003d null;","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"kev-intq"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"kev-intq"},"content":"            if (!args.matches(\"\\\\S+.*\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"kev-intq"},"content":"                throw new DukeInvalidArgumentException(","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"kev-intq"},"content":"                        \"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"kev-intq"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"kev-intq"},"content":"            taskType \u003d Task.TaskType.TODO;","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"kev-intq"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"kev-intq"},"content":"            if (!args.matches(\"\\\\S+.*\\\\s/by\\\\s\\\\S+.*\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"kev-intq"},"content":"                throw new DukeInvalidArgumentException(","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"kev-intq"},"content":"                        \"☹ OOPS!!! The description/date of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"kev-intq"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"kev-intq"},"content":"            taskType \u003d Task.TaskType.DEADLINE;","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"kev-intq"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"kev-intq"},"content":"            if (!args.matches(\"\\\\S+.*\\\\s/at\\\\s\\\\S+.*\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"kev-intq"},"content":"                throw new DukeInvalidArgumentException(","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"kev-intq"},"content":"                        \"☹ OOPS!!! The description/location of a event cannot be empty.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"kev-intq"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":90,"author":{"gitId":"kev-intq"},"content":"            taskType \u003d Task.TaskType.EVENT;","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"kev-intq"},"content":"        return taskType;","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"kev-intq"},"content":"     * Creates a new Task object with the given arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"kev-intq"},"content":"     * Adds the created Task to the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"kev-intq"},"content":"     * @param type Type of Task, as an enum.","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"kev-intq"},"content":"     * @param args The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"kev-intq"},"content":"     * @return A string describing the result.","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"kev-intq"},"content":"     * @throws DukeInvalidArgumentException On invalid argument string structure.","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"kev-intq"},"content":"     * @throws DateTimeParseException       On invalid date/time format.","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException                  On failure to save task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"kev-intq"},"content":"    private String taskAdder(String type, String args)","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"kev-intq"},"content":"            throws DukeInvalidArgumentException, DateTimeParseException, IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"kev-intq"},"content":"        String message \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"kev-intq"},"content":"        Task task \u003d null;","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"kev-intq"},"content":"        Task.TaskType taskType \u003d taskIdentifier(type, args);","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"kev-intq"},"content":"        switch (taskType) {","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"kev-intq"},"content":"        case TODO:","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"kev-intq"},"content":"            task \u003d new Todo(args);","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"kev-intq"},"content":"        case DEADLINE:","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"kev-intq"},"content":"            String timeDate \u003d args.substring(args.indexOf(\" /by \") + 5);","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"kev-intq"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(inputDateTimeFormat);","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"kev-intq"},"content":"            task \u003d new Deadline(args.substring(0, args.indexOf(\" /by \")),","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"kev-intq"},"content":"                    LocalDateTime.parse(timeDate, dateTimeFormatter));","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"kev-intq"},"content":"        case EVENT:","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"kev-intq"},"content":"            task \u003d new Event(args.substring(0, args.indexOf(\" /at \")),","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"kev-intq"},"content":"                    args.substring(args.indexOf(\" /at \") + 5));","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"kev-intq"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"kev-intq"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d task(s) in the list\",","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"kev-intq"},"content":"                task.toString(), taskList.getTaskListSize());","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":132}},{"path":"src/main/java/com/duke/command/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command for shutting down the chatbot.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    private String input;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"     * @param input The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    public CommandBye(String input) {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"        super();","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"     * Returns a string of the result of executing the intended function of this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"     * This string is wrapped in a CommandResult object","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"        if (input.length() !\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(\"A bye command should not be succeeded by any words. \"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"                    + \"Did you meant to do something else?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"            return CommandResult.shutdownResult();","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":36}},{"path":"src/main/java/com/duke/command/CommandClear.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command for clearing all Tasks from the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"public class CommandClear extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    private String input;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"     * @param input    The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"     * @param taskList The tasklist meant for the Tasks to be cleared from.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"    public CommandClear(String input, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"        super();","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"     * Returns a string of the result of executing the intended function of this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"     * This string is wrapped in a CommandResult object","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"            if (input.length() !\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"                return new CommandResult(\"A clearls command should not be succeeded by any words. \"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"                        + \"Did you meant to do something else?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"            } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"                taskList.clearList();","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"                return new CommandResult(\"List successfully cleared\");","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(\"Unable to save list.\" +","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"                    \"Please check if you have permission to write to files in the following directory: \"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"                    + Storage.getInstance().getDirectoryPath());","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":49}},{"path":"src/main/java/com/duke/command/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.exception.DukeEmptyListException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import com.duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command for deleting Tasks from the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    private String input;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"     * @param input    The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"     * @param taskList The tasklist meant for the Tasks to be added to.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    public CommandDelete(String input, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"        super();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"     * Returns a string of the result of executing the intended function of this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"     * This string is wrapped in a CommandResult object","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(taskDeleter(input));","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"        } catch (DukeInvalidArgumentException | DukeEmptyListException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"                    \"Valid numerical number must be given:\" + \"\\nEg: delete 12\");","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"                    \"Invalid task chosen, please ensure that the number given is correct\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(\"Unable to save list.\" +","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"kev-intq"},"content":"                    \"Please check if you have permission to write to files in the following directory: \"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"kev-intq"},"content":"                    + Storage.getInstance().getDirectoryPath());","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"kev-intq"},"content":"     * Deletes a task from the specified index of the TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"kev-intq"},"content":"     * Index must be valid within the length of the list.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"kev-intq"},"content":"     * @param args The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"kev-intq"},"content":"     * @return A string describing the result.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"kev-intq"},"content":"     * @throws DukeInvalidArgumentException When no arguments are given.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"kev-intq"},"content":"     * @throws DukeEmptyListException       When length of task list is 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException                  On failure to save task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"kev-intq"},"content":"    public String taskDeleter(String args)","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"kev-intq"},"content":"            throws DukeInvalidArgumentException, DukeEmptyListException, IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"kev-intq"},"content":"        if (args.length() \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"kev-intq"},"content":"            throw new DukeInvalidArgumentException(\"Please choose which task you would like to delete\");","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"kev-intq"},"content":"        } else if (taskList.getTaskListSize() \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"kev-intq"},"content":"            throw new DukeEmptyListException(\"Your list is empty.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"kev-intq"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"kev-intq"},"content":"            int num \u003d Integer.parseInt(args);","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"kev-intq"},"content":"            Task currTask \u003d taskList.getTask(num - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"kev-intq"},"content":"            taskList.removeTask(num - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"kev-intq"},"content":"            return String.format(\"Noted. I\u0027ve removed this task:\\n\\t%s\", currTask.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":78}},{"path":"src/main/java/com/duke/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command for finding Tasks from the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    private String input;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"     * @param input    The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"     * @param taskList The tasklist meant for the Tasks to be added to.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    public CommandFind(String input, TaskList taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"        super();","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"     * Returns a string of the result of executing the intended function of this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"     * This string is wrapped in a CommandResult object","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(\"Please enter a keyword(s) to find\");","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(taskList.displayCustomList(taskList.findMatch(input)));","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"kev-intq":38}},{"path":"src/main/java/com/duke/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command for displaying Tasks in the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"public class CommandList extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    private String input;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"     * @param input    The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"     * @param taskList The tasklist meant for the Tasks to be added to.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    public CommandList(String input, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"        super();","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"     * Returns a string of the result of executing the intended function of this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"     * This string is wrapped in a CommandResult object.","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"        if (!input.equals(\"\")) {","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(\"The \u0027list\u0027 keyword is reserved for displaying lists. \"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"                    + \"Please enter it as a single word\"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"                    + \"\\nEg: list\");","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(taskList.displayList());","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":40}},{"path":"src/main/java/com/duke/command/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import com.duke.exception.DukeEmptyListException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command for marking Tasks in the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    private String input;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"     * @param input    The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"     * @param taskList The tasklist meant for the Tasks to be added to.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    public CommandMark(String input, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"        super();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"     * Returns a string of the result of executing the intended function of this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"     * This string is wrapped in a CommandResult object","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(taskMarker(input));","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"        } catch (DukeInvalidArgumentException | DukeEmptyListException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"                    \"Valid numerical number must be given:\" + \"\\nEg: mark 12\");","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"                    \"Invalid task chosen, please ensure that the number given is correct\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(\"Unable to save list.\" +","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"kev-intq"},"content":"                    \"Please check if you have permission to write to files in the following directory: \"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"kev-intq"},"content":"                    + Storage.getInstance().getDirectoryPath());","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"kev-intq"},"content":"     * Finds a task in the specified index of the list, and marks it as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"kev-intq"},"content":"     * @param args The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"kev-intq"},"content":"     * @return A string describing the result.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"kev-intq"},"content":"     * @throws DukeInvalidArgumentException When there are no arguments given.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"kev-intq"},"content":"     * @throws DukeEmptyListException       When length of task list is 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException                  On failure to save list.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"kev-intq"},"content":"    public String taskMarker(String args)","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"kev-intq"},"content":"            throws DukeInvalidArgumentException, DukeEmptyListException, IOException {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"kev-intq"},"content":"        if (args.length() \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"kev-intq"},"content":"            throw new DukeInvalidArgumentException(\"Please choose which task you would like to \");","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"kev-intq"},"content":"        } else if (taskList.getTaskListSize() \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"kev-intq"},"content":"            throw new DukeEmptyListException(\"Your list is empty.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"kev-intq"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"kev-intq"},"content":"            int num \u003d Integer.parseInt(args);","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"kev-intq"},"content":"            Task currTask \u003d taskList.getTask(num - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"kev-intq"},"content":"            taskList.markTask(num - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"kev-intq"},"content":"            return String.format(\"Noted. I\u0027ve marked this task as done:\\n\\t%s\", currTask.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":77}},{"path":"src/main/java/com/duke/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":" * Represents a result of a Command execution.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":" * Acts as a wrapper around a string describing the command execution result.","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"public class CommandResult {","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"    private boolean isShutdown \u003d false;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"    private String resultMessage;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"     * @param resultMessage A string describing the command execution result.","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    public CommandResult(String resultMessage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"        this.resultMessage \u003d resultMessage;","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    public boolean isShutdown() {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"        return isShutdown;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"    public String getResultMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"        return resultMessage;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"     * Static method for creating a CommandResult intended to shutdown the bot.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult with a pre-defined shutdown message.","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"    public static CommandResult shutdownResult() {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"        CommandResult result \u003d new CommandResult(\"LUMU: Goodbye. Hope to see you again soon\");","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"        result.isShutdown \u003d true;","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"        return result;","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"     * Static method for creating a CommandResult for unknown arguments.","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult with a pre-defined unknown argument message.","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"    public static CommandResult unknownResult() {","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"        CommandResult result \u003d new CommandResult(","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"                \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"        return result;","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"kev-intq"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"kev-intq"},"content":"        if (obj instanceof CommandResult) {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"kev-intq"},"content":"            CommandResult cmdresult \u003d (CommandResult) obj;","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"kev-intq"},"content":"            return (cmdresult.isShutdown \u003d\u003d this.isShutdown","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"kev-intq"},"content":"                    \u0026\u0026 cmdresult.resultMessage.equals(this.resultMessage));","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"kev-intq"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":61}},{"path":"src/main/java/com/duke/command/CommandUnmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.exception.DukeEmptyListException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import com.duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":" * Represents a chatbot command for unmarking Tasks in the TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"public class CommandUnmark extends Command {","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    private String input;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"     * Constructor for this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"     * @param input    The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"     * @param taskList The tasklist meant for the Tasks to be added to.","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    public CommandUnmark(String input, TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"        super();","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"     * Returns a string of the result of executing the intended function of this class.","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"     * This string is wrapped in a CommandResult object","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"     * @return A CommandResult object containing the result message.","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"    public CommandResult execute() {","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"        try {","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(taskUnmarker(input));","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"        } catch (DukeInvalidArgumentException | DukeEmptyListException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"                    \"Valid numerical number must be given:\" + \"\\nEg: mark 12\");","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"                    \"Invalid task chosen, please ensure that the number given is correct\");","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"            return new CommandResult(\"Unable to save list.\" +","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"kev-intq"},"content":"                    \"Please check if you have permission to write to files in the following directory: \"","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"kev-intq"},"content":"                    + Storage.getInstance().getDirectoryPath());","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"kev-intq"},"content":"     * Finds a task in the specified index of the list, and marks it as not done.","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"kev-intq"},"content":"     * @param args The string of arguments entered by the user, excluding the command word.","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"kev-intq"},"content":"     * @return A string describing the result.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"kev-intq"},"content":"     * @throws DukeInvalidArgumentException When there are no arguments given.","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"kev-intq"},"content":"     * @throws DukeEmptyListException       When length of task list is 0.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException                  On failure to save list.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"kev-intq"},"content":"    public String taskUnmarker(String args) throws DukeInvalidArgumentException, DukeEmptyListException, IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"kev-intq"},"content":"        if (args.length() \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"kev-intq"},"content":"            throw new DukeInvalidArgumentException(\"Please choose which task you would like to unmark.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"kev-intq"},"content":"        } else if (taskList.getTaskListSize() \u003c 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"kev-intq"},"content":"            throw new DukeEmptyListException(\"Your list is empty.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"kev-intq"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"kev-intq"},"content":"            int num \u003d Integer.parseInt(args);","lastModifiedDate":"2022-01-23"},{"lineNumber":71,"author":{"gitId":"kev-intq"},"content":"            Task currTask \u003d taskList.getTask(num - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"kev-intq"},"content":"            taskList.unmarkTask(num - 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"kev-intq"},"content":"            return String.format(\"Noted. I\u0027ve marked this task as not done:\\n\\t%s\", currTask.toString());","lastModifiedDate":"2022-01-23"},{"lineNumber":74,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":76}},{"path":"src/main/java/com/duke/exception/DukeEmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":" * Represents a exception when trying to perform operations on an empty TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"public class DukeEmptyListException extends DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"    public DukeEmptyListException(String errormessage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"        super(errormessage);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":10}},{"path":"src/main/java/com/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"    public DukeException(String errormessage) {","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"        super(errormessage);","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kev-intq":7}},{"path":"src/main/java/com/duke/exception/DukeFileParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":" * Represents a exception when encountering invalid save data structure in the saved listData file.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"public class DukeFileParseException extends DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"    public DukeFileParseException(String errormessage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"        super(errormessage);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":10}},{"path":"src/main/java/com/duke/exception/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.exception;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":" * Represents a exception when encountering invalid argument structure for Duke Commands.","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"public class DukeInvalidArgumentException extends DukeException {","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"    public DukeInvalidArgumentException(String errormessage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"        super(errormessage);","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":10}},{"path":"src/main/java/com/duke/modules/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.modules;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.command.*;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":" * A class responsible for parsing user inputs.","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"public class Parser {","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    public CommandResult parse(String string) {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"        CommandResult cmdResult \u003d null;","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"        String[] strArr \u003d string.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"        String str \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"        if (strArr.length !\u003d 1) str \u003d string.substring(string.indexOf(\" \") + 1);","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"        switch (strArr[0]) {","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"        case \"\":","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandResult(\"*crickets*\");","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandBye(str).execute();","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"        case \"list\":","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandList(str, taskList).execute();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandMark(str, taskList).execute();","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandUnmark(str, taskList).execute();","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandDelete(str, taskList).execute();","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"        case \"clearls\":","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandClear(str, taskList).execute();","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"        case \"find\":","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandFind(str, taskList).execute();","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"        case \"event\":","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d new CommandAdd(strArr[0], str, taskList).execute();","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"kev-intq"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"kev-intq"},"content":"            cmdResult \u003d CommandResult.unknownResult();","lastModifiedDate":"2022-01-23"},{"lineNumber":52,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"kev-intq"},"content":"        return cmdResult;","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":55}},{"path":"src/main/java/com/duke/modules/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.modules;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":" * A class responsible for saving/loading a task list into/from a text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"public class Storage {","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"    public static Storage INSTANCE;","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    private String directoryPath \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"    private String listFile \u003d \"listData.txt\";","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"    public Storage() {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    public static Storage getInstance() {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"        INSTANCE \u003d (INSTANCE \u003d\u003d null) ? new Storage() : INSTANCE;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"        return INSTANCE;","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"     * Saves the task list given to a text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"     * @param taskList A TaskList object","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"     * @return A boolean depending on whether the saving process is successful.","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException On failure of read or write operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"    public boolean saveList(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"        boolean success \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"        File file \u003d new File(this.directoryPath + this.listFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"        file.createNewFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"        FileWriter writer \u003d new FileWriter(this.directoryPath + this.listFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"kev-intq"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"kev-intq"},"content":"            bufferedWriter.write(t.getSaveDescription());","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"kev-intq"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"kev-intq"},"content":"        bufferedWriter.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"kev-intq"},"content":"        success \u003d true;","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"kev-intq"},"content":"        return success;","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":62,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"kev-intq"},"content":"     * Load the task list from a text file stored in the save directory.","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"kev-intq"},"content":"     * @param taskList A TaskList object","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"kev-intq"},"content":"     * @return A boolean depending on whether the loading process is successful.","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException On failure of read or write operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"kev-intq"},"content":"    public boolean loadList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"kev-intq"},"content":"        boolean success \u003d false;","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"kev-intq"},"content":"        try {","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"kev-intq"},"content":"            File file \u003d new File(this.directoryPath + this.listFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"kev-intq"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"kev-intq"},"content":"            file.createNewFile();","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"kev-intq"},"content":"            FileReader reader \u003d new FileReader(this.directoryPath + this.listFile);","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"kev-intq"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"kev-intq"},"content":"            String line;","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"kev-intq"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"kev-intq"},"content":"                String[] task \u003d line.split(\" \\\\| \");","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"kev-intq"},"content":"                switch (task[0]) {","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"kev-intq"},"content":"                case \"com.duke.tasks.Todo\":","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"kev-intq"},"content":"                    Todo todoTask \u003d new Todo(task[2]);","lastModifiedDate":"2022-01-22"},{"lineNumber":85,"author":{"gitId":"kev-intq"},"content":"                    todoTask.setStatus((task[1].equals(\"1\") ? true : false));","lastModifiedDate":"2022-01-22"},{"lineNumber":86,"author":{"gitId":"kev-intq"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":87,"author":{"gitId":"kev-intq"},"content":"                    break;","lastModifiedDate":"2022-01-22"},{"lineNumber":88,"author":{"gitId":"kev-intq"},"content":"                case \"com.duke.tasks.Deadline\":","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"kev-intq"},"content":"                    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ISO_DATE_TIME;","lastModifiedDate":"2022-01-22"},{"lineNumber":90,"author":{"gitId":"kev-intq"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(task[3], dateTimeFormatter);","lastModifiedDate":"2022-01-22"},{"lineNumber":91,"author":{"gitId":"kev-intq"},"content":"                    Deadline deadlineTask \u003d new Deadline(task[2], dateTime);","lastModifiedDate":"2022-01-22"},{"lineNumber":92,"author":{"gitId":"kev-intq"},"content":"                    deadlineTask.setStatus((task[1].equals(\"1\") ? true : false));","lastModifiedDate":"2022-01-22"},{"lineNumber":93,"author":{"gitId":"kev-intq"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"kev-intq"},"content":"                    break;","lastModifiedDate":"2022-01-22"},{"lineNumber":95,"author":{"gitId":"kev-intq"},"content":"                case \"com.duke.tasks.Event\":","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"kev-intq"},"content":"                    Event eventTask \u003d new Event(task[2], task[3]);","lastModifiedDate":"2022-01-22"},{"lineNumber":97,"author":{"gitId":"kev-intq"},"content":"                    eventTask.setStatus((task[1].equals(\"1\") ? true : false));","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"kev-intq"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"kev-intq"},"content":"                    break;","lastModifiedDate":"2022-01-22"},{"lineNumber":100,"author":{"gitId":"kev-intq"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":101,"author":{"gitId":"kev-intq"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":102,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"kev-intq"},"content":"            bufferedReader.close();","lastModifiedDate":"2022-01-22"},{"lineNumber":104,"author":{"gitId":"kev-intq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"kev-intq"},"content":"            System.out.println(","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"kev-intq"},"content":"                    \"Invalid save file format. Save file may have been edited or corrupted.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"kev-intq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"kev-intq"},"content":"            System.out.println(\"Unable to load list.\" +","lastModifiedDate":"2022-01-22"},{"lineNumber":109,"author":{"gitId":"kev-intq"},"content":"                    \"Please check if you have permission to read from files in the following directory: \"","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"kev-intq"},"content":"                    + directoryPath);","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":112,"author":{"gitId":"kev-intq"},"content":"        return success;","lastModifiedDate":"2022-01-22"},{"lineNumber":113,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":114,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"kev-intq"},"content":"    public String getDirectoryPath() {","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"kev-intq"},"content":"        return directoryPath;","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"kev-intq":118}},{"path":"src/main/java/com/duke/modules/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.modules;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":" * A class responsible for dealing with operations on a task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"public class TaskList {","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"        storage.loadList(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"     * Adds a task to the task list and saves the list to a text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"     * @param task The Task to be added","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException On failure of read or write operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    public void addTask(Task task) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"    public void addTaskWithoutSaving(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2022-01-23"},{"lineNumber":45,"author":{"gitId":"kev-intq"},"content":"        return taskList.size();","lastModifiedDate":"2022-01-23"},{"lineNumber":46,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"kev-intq"},"content":"     * Returns a Task object from the given specific index in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"kev-intq"},"content":"     * @param i Index of the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"kev-intq"},"content":"     * @return A Task object.","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"kev-intq"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2022-01-23"},{"lineNumber":55,"author":{"gitId":"kev-intq"},"content":"        return taskList.get(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"kev-intq"},"content":"     * Removes a task from a specified index in the task list and saves the list to a text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"kev-intq"},"content":"     * @param i Index of the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException On failure of read or write operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"kev-intq"},"content":"    public void removeTask(int i) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"kev-intq"},"content":"        taskList.remove(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"kev-intq"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"kev-intq"},"content":"    public void removeTaskWithoutSaving(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"kev-intq"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"kev-intq"},"content":"     * Marks a task from a specified index in the task list as done and saves the list to a text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"kev-intq"},"content":"     * @param i Index of the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException On failure of read or write operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"kev-intq"},"content":"    public void markTask(int i) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":80,"author":{"gitId":"kev-intq"},"content":"        taskList.get(i).setStatus(true);","lastModifiedDate":"2022-01-23"},{"lineNumber":81,"author":{"gitId":"kev-intq"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":82,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":83,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"kev-intq"},"content":"     * Unmarks a task from a specified index in the task list as done and saves the list to a text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":87,"author":{"gitId":"kev-intq"},"content":"     * @param i Index of the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException On failure of read or write operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"kev-intq"},"content":"    public void unmarkTask(int i) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":91,"author":{"gitId":"kev-intq"},"content":"        taskList.get(i).setStatus(false);","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"kev-intq"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"kev-intq"},"content":"     * Clears all tasks in the task list as done and saves the list to a text file.","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"kev-intq"},"content":"     * @throws IOException On failure of read or write operations.","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"kev-intq"},"content":"    public void clearList() throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"kev-intq"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"kev-intq"},"content":"        storage.saveList(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"kev-intq"},"content":"    public void setListWithoutSaving(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"kev-intq"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"kev-intq"},"content":"     * Returns a formatted string displaying the tasks in the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"kev-intq"},"content":"     * Returns a predefined empty list message if the list is empty.","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"kev-intq"},"content":"     * @return A string describing the contents of the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"kev-intq"},"content":"    public String displayList() {","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"kev-intq"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"kev-intq"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"kev-intq"},"content":"            output \u003d \"LUMU: Your list is empty!\";","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"kev-intq"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"kev-intq"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"kev-intq"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"kev-intq"},"content":"                output \u003d output + String.valueOf(i + 1) + \". \" + currTask.toString() + \"\\n\";","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"kev-intq"},"content":"            }","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"kev-intq"},"content":"        return output.trim();","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"kev-intq"},"content":"     * Returns a formatted string displaying the tasks in the given task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"kev-intq"},"content":"     * Returns a predefined empty list message if the list is empty.","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":132,"author":{"gitId":"kev-intq"},"content":"     * @param taskList An ArrayList containing the tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"kev-intq"},"content":"     * @return A string describing the contents of the task list.","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"kev-intq"},"content":"    public String displayCustomList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"kev-intq"},"content":"        String output \u003d \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"kev-intq"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"kev-intq"},"content":"            output \u003d \"No matches found.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"kev-intq"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":140,"author":{"gitId":"kev-intq"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"kev-intq"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"kev-intq"},"content":"                output \u003d output + String.valueOf(i + 1) + \". \" + currTask.toString() + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"kev-intq"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"kev-intq"},"content":"        return output.trim();","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"kev-intq"},"content":"     * Find tasks in the task list that match specified keyword(s).","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"kev-intq"},"content":"     * Returns the matching tasks in an ArrayList.","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"kev-intq"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":152,"author":{"gitId":"kev-intq"},"content":"     * @param args String of keyword(s) to search for.","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"kev-intq"},"content":"     * @return An ArrayList containing the matched tasks.","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"kev-intq"},"content":"    public ArrayList\u003cTask\u003e findMatch(String args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"kev-intq"},"content":"        ArrayList\u003cTask\u003e matchResultsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"kev-intq"},"content":"        if (taskList.size() !\u003d 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"kev-intq"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"kev-intq"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"kev-intq"},"content":"                if (currTask.getDescription().contains(args)) {","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"kev-intq"},"content":"                    matchResultsList.add(currTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":162,"author":{"gitId":"kev-intq"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":163,"author":{"gitId":"kev-intq"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":164,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":165,"author":{"gitId":"kev-intq"},"content":"        return matchResultsList;","lastModifiedDate":"2022-01-26"},{"lineNumber":166,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":167,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":167}},{"path":"src/main/java/com/duke/modules/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.modules;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.command.CommandResult;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":" * A class responsible for dealing with user interactions.","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"public class Ui {","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"    public static final String BOT_NAME \u003d \"LUMU\";","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    public static final String START_MESSAGE \u003d String.format(\"Hello I\u0027m\\n%s\\nWhat can I do for you?\", BOT_NAME);","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"    public static final String LINE_BREAK \u003d \"----------------------------------------\";","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    public Ui() {","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"     * Gets user input and passes it to a Parser to be read.","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"     * Prints out the given string in the CommandResult object given by the Parser object.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    public void initialize(TaskList taskList) {","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"        showStartMessage();","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"        Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"            String commands \u003d scanner.nextLine().trim();","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"            CommandResult cmdResult \u003d parser.parse(commands);","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"            showMessage(cmdResult.getResultMessage());","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"            if (cmdResult.isShutdown()) break;","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"    private void showStartMessage() {","lastModifiedDate":"2022-01-23"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"        String outputMessage \u003d String.format(\"%s\\n%s\\n%s\", LINE_BREAK, START_MESSAGE, LINE_BREAK);","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"    private void showMessage(String message) {","lastModifiedDate":"2022-01-23"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"        String outputMessage \u003d String.format(\"%s\\n%s\", message, LINE_BREAK);","lastModifiedDate":"2022-01-23"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":44}},{"path":"src/main/java/com/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"    public String getBy() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY Ka\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"    public String getSaveDescription() {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"        return String.format(\"%s | %s | %s | %s\",","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"                getClass().getName(), status \u003d\u003d true ? 1 : 0, description, dateTime.toString());","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), getBy());","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kev-intq":28}},{"path":"src/main/java/com/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"    protected String timeDate;","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"        this.timeDate \u003d date;","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"    public String getTimeDate() {","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"        return timeDate;","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    public String getSaveDescription() {","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"        return String.format(\"%s | %s | %s | %s\",","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"                getClass().getName(), status \u003d\u003d true ? 1 : 0, description, getTimeDate());","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), getTimeDate());","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kev-intq":25}},{"path":"src/main/java/com/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"    protected boolean status;","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"    protected String description;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"    public static enum TaskType {TODO, DEADLINE, EVENT}","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"        this.status \u003d false;","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    public boolean getStatus() {","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"        return status;","lastModifiedDate":"2022-01-18"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    public String getDescription() {","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"        return description;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-18"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"        return (status ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-01-18"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"kev-intq"},"content":"    public String getSaveDescription() {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"kev-intq"},"content":"        return \"\";","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"kev-intq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":40,"author":{"gitId":"kev-intq"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kev-intq":42}},{"path":"src/main/java/com/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"package com.duke.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"        super(description);","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"    public String getSaveDescription() {","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"        return String.format(\"%s | %s | %s \",","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"                getClass().getName(), status \u003d\u003d true ? 1 : 0, description);","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kev-intq":19}},{"path":"src/test/java/DukeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"import com.duke.command.CommandResult;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.Parser;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"public class DukeParserTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"    public void byeSingleWordParseTest() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"        Parser testParser \u003d new Parser(null);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"        CommandResult testResult \u003d testParser.parse(\"bye\");","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"        assertEquals(testResult, CommandResult.shutdownResult());","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"    public void byeMultipleWordParseTest() {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"        Parser testParser \u003d new Parser(null);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"        CommandResult testResult \u003d testParser.parse(\"bye bot\");","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"        assertNotEquals(testResult, CommandResult.shutdownResult());","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"kev-intq":22}},{"path":"src/test/java/DukeTasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"import com.duke.modules.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"import com.duke.tasks.Todo;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"public class DukeTasklistTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"    public void displayFilledListTest() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"        TaskList testModule \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"        Task testTask \u003d new Todo(\"testing\");","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"        testList.add(testTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"        testModule.setListWithoutSaving(testList);","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"        assertEquals(testModule.displayList(), \"1. [T][ ] testing\");","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"    public void displayEmptyListTest() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"        TaskList testModule \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"        testModule.setListWithoutSaving(testList);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"        assertEquals(testModule.displayList(), \"LUMU: Your list is empty!\");","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"kev-intq":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kev-intq"},"content":"clearls 1","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"kev-intq"},"content":"clearls","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"kev-intq"},"content":"deadline /by 12/12/2022 1800","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"kev-intq"},"content":"deadline iP  ","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"kev-intq"},"content":"deadline iP /by tomorrow","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"kev-intq"},"content":"deadline iP /by 12/12/2022 1800","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"kev-intq"},"content":"todo ","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"kev-intq"},"content":"todo cut hair","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"kev-intq"},"content":"event movie ","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"kev-intq"},"content":"event movie /at Waterway Plaza","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"kev-intq"},"content":"mark 1","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"kev-intq"},"content":"mark 3","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"kev-intq"},"content":"delete 1","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"kev-intq"},"content":"delete 3","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"kev-intq"},"content":"delete abc","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"unmark 2","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"kev-intq"},"content":"delete 2","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"kev-intq"},"content":"delete 1","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"kev-intq"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"kev-intq"},"content":"bye lumu","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"kev-intq"},"content":"bye","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"kev-intq":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"kev-intq"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":23,"author":{"gitId":"kev-intq"},"content":"pause","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"kev-intq":2,"-":21}}]
