[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"D|1|return book|2019-10-15|18:00","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"E|1|buy books|2019-10-15|18:00|20:00","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"D|1|help your family|2019-10-10|18:00","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"E|0|feed your dog|2019-10-10|18:00|20:00","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"T|0|eat goop ","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":5}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" * Represents command to add a task to the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected Task obj;","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public AddCommand(Task obj) {","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.obj \u003d obj;","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        task.add(obj);","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ui.addList(task);","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        storage.appendFile(obj);","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":8,"-":24}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" * Command represents the instructions interpreted by the parser.","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" * It is to be executed by Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-12"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"     * Execute the action of the command.","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"     * @param task TaskList stored in Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"     * @param ui Ui of Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"     * @param storage File storage of Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"     * @throws IOException If error in IO operation with Duke storage.","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public abstract void execute(TaskList task, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * Returns whether Duke should exit after the command is executed.","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"     * @return True if Duke should exit afterwards.","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":22,"-":8}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" * Represents command to delete a task from the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected Integer index;","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public DeleteCommand(Integer index) {","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.index \u003d index-1;","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        ui.deleteList(task, this.index);","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        task.delete(this.index);","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        storage.overWriteFile(task);","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":8,"-":23}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" * Represents command to exit the Duke program.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        ui.fareWell();","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return;","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":7,"-":15}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package duke.command;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-14"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" * Represents command to find all the tasks in the task list that matches a keyword.","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"    String keyword;","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"        ui.printList(task, keyword);","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        return false;","lastModifiedDate":"2022-01-14"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"lawwm":29}},{"path":"src/main/java/duke/command/FindDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package duke.command;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-14"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" * Represents command to find all the tasks in the task list that matches a date.","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"public class FindDateCommand extends Command{","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    LocalDate keyword;","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"    public FindDateCommand(String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"        this.keyword \u003d LocalDate.parse(keyword);","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"        ui.printList(task, keyword);","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-14"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        return false;","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"lawwm":30}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" * Represents command to list all the tasks in the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        ui.printList(task);","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lawwm":28,"-":17}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" * Represents command to mark a task in the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"    protected boolean isMark;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected Integer index;","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public MarkCommand(Integer index, boolean mark) {","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"        this.isMark \u003d mark;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.index \u003d index-1;","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"        task.mark(this.index, this.isMark);","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"        ui.markList(task, this.isMark, this.index);","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        storage.overWriteFile(task);","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":11,"-":21}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.main;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" * Duke is a chat-bot that curates a todo list according to user\u0027s commands.","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-01-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"     * Start running the Duke program.","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-01-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2022-01-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-01-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-01-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-01-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                ui.showError(\"You have no task with that number.\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2022-01-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                ui.showError(\"Your date and times have not been formatted properly.\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } finally {","lastModifiedDate":"2022-01-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                ui.showLine();","lastModifiedDate":"2022-01-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lawwm":11,"-":52}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.parser;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import duke.command.FindDateCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import duke.main.DukeException;","lastModifiedDate":"2022-01-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import duke.task.DeadLine;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import duke.task.Events;","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":" * Parser to read user commands and ensure that it is syntactically and semantically valid.","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * Returns the command from parsing user\u0027s instructions.","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"     * @param cmd The instruction of the user.","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"     * @return Command to be executed by Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"     * @throws DukeException If there is a syntactic or semantic error.","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Command parse(String cmd) throws DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String[] input \u003d cmd.split(\" \");","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        switch (input[0]) {","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            case \"bye\":","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                return new ExitCommand();","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            case \"list\":","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                return new ListCommand();","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            case \"todo\":","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            case \"deadline\":","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            case \"event\":","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                return Parser.prepareAdd(input);","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            case \"mark\":","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            case \"unmark\":","lastModifiedDate":"2022-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                return Parser.prepareMark(input);","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            case \"delete\":","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                return Parser.prepareDelete(input);","lastModifiedDate":"2022-01-12"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"            case \"findDate\":","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"            case \"find\":","lastModifiedDate":"2022-01-14"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"                return Parser.prepareFind(input);","lastModifiedDate":"2022-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2022-01-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"    private static Command prepareFind(String[] input) throws DukeException {","lastModifiedDate":"2022-01-14"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        if (input.length !\u003d 2) {","lastModifiedDate":"2022-01-14"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"            throw new duke.main.DukeException(\"Fill in proper input to find.\\n\");","lastModifiedDate":"2022-01-14"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        if (input[0].equals(\"find\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"            return new FindCommand(input[1]);","lastModifiedDate":"2022-01-14"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"            return new FindDateCommand(input[1]);","lastModifiedDate":"2022-01-14"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static Command prepareAdd(String[] input) throws DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a \" + input[0] + \" cannot be empty.\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (input[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            StringBuilder obj \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-01-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2022-01-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                obj.append(input[i]);","lastModifiedDate":"2022-01-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                obj.append(\" \");","lastModifiedDate":"2022-01-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new AddCommand(new ToDos(obj.toString()));","lastModifiedDate":"2022-01-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            int i \u003d 1;","lastModifiedDate":"2022-01-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            StringBuilder obj \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-01-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            for (; i \u003c input.length; i++) {","lastModifiedDate":"2022-01-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                if (input[i].charAt(0) \u003d\u003d \u0027/\u0027) break;","lastModifiedDate":"2022-01-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                obj.append(input[i]);","lastModifiedDate":"2022-01-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                obj.append(\" \");","lastModifiedDate":"2022-01-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            obj.setLength(obj.length()-1);","lastModifiedDate":"2022-01-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (input[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                return new AddCommand(new DeadLine(obj.toString(), input[input.length-2], input[input.length-1]));","lastModifiedDate":"2022-01-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                return new AddCommand(new Events(obj.toString(), input[input.length-3], input[input.length-2], input[input.length-1]));","lastModifiedDate":"2022-01-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Command prepareMark(String[] input) throws DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (input.length !\u003d 2) {","lastModifiedDate":"2022-01-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Fill in proper integer for marking/unmarking.\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (input[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new MarkCommand(Integer.parseInt(input[1]), true);","lastModifiedDate":"2022-01-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new MarkCommand(Integer.parseInt(input[1]), false);","lastModifiedDate":"2022-01-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static Command prepareDelete(String[] input) throws DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (input.length !\u003d 2) {","lastModifiedDate":"2022-01-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Fill in proper integer for deletion.\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new DeleteCommand(Integer.parseInt(input[1]));","lastModifiedDate":"2022-01-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":39,"-":75}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.storage;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.main.DukeException;","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":" * Represents a storage system to save the tasks in the hard disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":" * Ensure data persists in event of Duke closing or crashing.","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    protected String filePath;","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected File dir;","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.dir \u003d new File(filePath);","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"     * Load the task stored within hard disk into the Task List.","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     * @return List of Tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"     * @throws IOException If there are IO errors.","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"     * @throws DukeException If there is no previously created file for tasks in hard disks.","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public List\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e loaded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        dir.getParentFile().mkdirs();","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (dir.createNewFile()) {","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new DukeException(\"No previous save file\");","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            Scanner sc \u003d new Scanner(dir);","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String encoded \u003d sc.nextLine();","lastModifiedDate":"2022-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                loaded.add(Task.deserialize(encoded));","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sc.close();","lastModifiedDate":"2022-01-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return loaded;","lastModifiedDate":"2022-01-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"     * Save the added file to hard disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"     * Append the serialized task to the bottom of file in hard disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"     * @param todo Task to be added to the hard disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"     * @throws IOException If there is error in writing to disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void appendFile(Task todo) throws IOException{","lastModifiedDate":"2022-01-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2022-01-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        fw.write(todo.serialize());","lastModifiedDate":"2022-01-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2022-01-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"     * Overwrite the hard disk with state currently in Task List.","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"     * @param todo TaskList to overwrite hard disk with.","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"     * @throws IOException If there is error in writing to disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void overWriteFile(TaskList todo) throws IOException{","lastModifiedDate":"2022-01-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-01-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cString\u003e encodedList \u003d todo.serializedList();","lastModifiedDate":"2022-01-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (String task : encodedList) {","lastModifiedDate":"2022-01-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            fw.write(task);","lastModifiedDate":"2022-01-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2022-01-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":27,"-":51}},{"path":"src/main/java/duke/task/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" * Represents a task that the user wants to do by a specific date and time.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDate bydate;","lastModifiedDate":"2022-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    protected LocalTime bytime;","lastModifiedDate":"2022-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public DeadLine(String objective, String date, String time) {","lastModifiedDate":"2022-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(objective);","lastModifiedDate":"2022-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.bydate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.bytime \u003d LocalTime.parse(time);","lastModifiedDate":"2022-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeadLine(String objective, Boolean done, String date, String time) {","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(objective, done);","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.bydate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.bytime \u003d LocalTime.parse(time);","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    public boolean sameTime(LocalDate date) {","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"        return this.bydate.equals(date);","lastModifiedDate":"2022-01-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (o instanceof DeadLine) {","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            DeadLine e \u003d (DeadLine) o;","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return this.bydate.equals(e.bydate) \u0026\u0026 this.bytime.equals(e.bytime) \u0026\u0026","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    this.objective.equals(e.objective) \u0026\u0026 (this.done \u003d\u003d e.done);","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String serialize() {","lastModifiedDate":"2022-01-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return \"D|\" + (this.done ? \"1|\" : \"0|\") + this.objective","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                + \"|\" + bydate.toString() + \"|\" + bytime.toString() +\"\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2022-01-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-01-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + this.bydate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \"","lastModifiedDate":"2022-01-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + this.bytime.format(DateTimeFormatter.ofPattern(\"HH:mm a\")) + \")\";","lastModifiedDate":"2022-01-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"lawwm":7,"-":48}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" * Represents a task that the user wants to do on a specific date and between a starting and ending time.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Events extends Task{","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    protected LocalTime fromtime;","lastModifiedDate":"2022-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected LocalTime bytime;","lastModifiedDate":"2022-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public Events(String objective, String date, String from, String to) {","lastModifiedDate":"2022-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(objective);","lastModifiedDate":"2022-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.fromtime \u003d LocalTime.parse(from);","lastModifiedDate":"2022-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.bytime \u003d LocalTime.parse(to);","lastModifiedDate":"2022-01-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Events(String objective, Boolean done, String date, String fromtime, String bytime) {","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(objective, done);","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.fromtime \u003d LocalTime.parse(fromtime);","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.bytime \u003d LocalTime.parse(bytime);","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    public boolean sameTime(LocalDate date) {","lastModifiedDate":"2022-01-14"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        return this.date.equals(date);","lastModifiedDate":"2022-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (o instanceof Events) {","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            Events e \u003d (Events) o;","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return this.date.equals(e.date) \u0026\u0026 this.fromtime.equals(e.fromtime) \u0026\u0026 this.bytime.equals(e.bytime)","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u0026\u0026 this.objective.equals(e.objective) \u0026\u0026 this.done \u003d\u003d e.done;","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String serialize() {","lastModifiedDate":"2022-01-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return \"E|\" + (this.done ? \"1|\" : \"0|\") + this.objective + \"|\" + this.date.toString() +","lastModifiedDate":"2022-01-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \"|\" + this.fromtime.toString() + \"|\" + this.bytime.toString() +\"\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2022-01-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-01-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \"","lastModifiedDate":"2022-01-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + this.fromtime.format(DateTimeFormatter.ofPattern(\"HH:mm a\")) + \" - \"","lastModifiedDate":"2022-01-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + this.bytime.format(DateTimeFormatter.ofPattern(\"HH:mm a\"))","lastModifiedDate":"2022-01-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + \")\";","lastModifiedDate":"2022-01-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"lawwm":7,"-":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":" * Represents a task that the user wants to do. Can set to completed and uncompleted.","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected String objective;","lastModifiedDate":"2022-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    protected boolean done;","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public Task(String objective) {","lastModifiedDate":"2022-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        this.objective \u003d objective;","lastModifiedDate":"2022-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Task(String objective, Boolean done) {","lastModifiedDate":"2022-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.objective \u003d objective;","lastModifiedDate":"2022-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"     * Task is completed. Mark it with a cross.","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void mark() {","lastModifiedDate":"2022-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"     * Task is uncompleted. It is unmarked.","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void unmarked() {","lastModifiedDate":"2022-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"     * Returns a serialized version of the string.","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"     * @return Serialized form of the string.","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public abstract String serialize();","lastModifiedDate":"2022-01-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        return this.objective.contains(keyword);","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"     * Check if task occurs on a specific date.","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"     * @param date Date to be compared to the date in task.","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"     * @return True if task occurs on that date.","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    public abstract boolean sameTime(LocalDate date);","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return (done ? \"[X]\" : \"[ ]\") + \" \" + this.objective;","lastModifiedDate":"2022-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"     * Convert an encoded string into a task.","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"     * @param encoded Encoded string to be decoded into task.","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"     * @return Task that is formed from the encoded string.","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Task deserialize(String encoded) {","lastModifiedDate":"2022-01-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String[] arr \u003d encoded.split(\"\\\\|\");","lastModifiedDate":"2022-01-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        boolean completed \u003d arr[1].equals(\"1\");","lastModifiedDate":"2022-01-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2022-01-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ToDos(arr[2], completed);","lastModifiedDate":"2022-01-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } else if (arr[0].equals(\"D\")) {","lastModifiedDate":"2022-01-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeadLine(arr[2], completed, arr[3], arr[4]);","lastModifiedDate":"2022-01-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new Events(arr[2], completed, arr[3], arr[4], arr[5]);","lastModifiedDate":"2022-01-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"lawwm":34,"-":46}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" * Stores a list of task as well as an associated set of operations.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    private List\u003cTask\u003e objectives;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.objectives \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TaskList(List\u003cTask\u003e objectives) {","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.objectives \u003d objectives;","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"     * Add a task to the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * @param obj Task to be added to TaskList.","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void add(Task obj) {","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        objectives.add(obj);","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"     * Get a list of tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     * @return List of Tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public List\u003cTask\u003e getObjectives() {","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return this.objectives;","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    public List\u003cTask\u003e getObjectives(String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-14"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c objectives.size(); i++) {","lastModifiedDate":"2022-01-14"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"            if (objectives.get(i).contains(keyword)) {","lastModifiedDate":"2022-01-14"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"                matches.add(objectives.get(i));","lastModifiedDate":"2022-01-14"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        return matches;","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"    public List\u003cTask\u003e getObjectives(LocalDate keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-14"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c objectives.size(); i++) {","lastModifiedDate":"2022-01-14"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"            if (objectives.get(i).sameTime(keyword)) {","lastModifiedDate":"2022-01-14"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"                matches.add(objectives.get(i));","lastModifiedDate":"2022-01-14"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"        return matches;","lastModifiedDate":"2022-01-14"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"     * Return a task stored at a specified index.","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"     * @param i index of Task stored within TaskList","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"     * @return Task stored at index.","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2022-01-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this.objectives.get(i);","lastModifiedDate":"2022-01-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"     * Return number of tasks in the list.","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"     * @return Size of the TaskList.","lastModifiedDate":"2022-01-17"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Integer getSize() {","lastModifiedDate":"2022-01-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return objectives.size();","lastModifiedDate":"2022-01-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"     * Set a task in the TaskList to completed or uncompleted according to index.","lastModifiedDate":"2022-01-17"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"     * @param index Index of the task to be altered.","lastModifiedDate":"2022-01-17"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"     * @param mark Whether task should be marked or unmarked.","lastModifiedDate":"2022-01-17"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void mark(Integer index, boolean mark) {","lastModifiedDate":"2022-01-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (mark) {","lastModifiedDate":"2022-01-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            objectives.get(index).mark();","lastModifiedDate":"2022-01-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            objectives.get(index).unmarked();","lastModifiedDate":"2022-01-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"     * Remove a task in the TaskList according to index.","lastModifiedDate":"2022-01-17"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void delete(Integer index) {","lastModifiedDate":"2022-01-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.objectives.remove((int) index);","lastModifiedDate":"2022-01-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"     * Get a serialized list of tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"     * @return List of serialized string.","lastModifiedDate":"2022-01-17"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e serializedList() {","lastModifiedDate":"2022-01-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cString\u003e encodedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        for (Task task : objectives) {","lastModifiedDate":"2022-01-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            encodedList.add(task.serialize());","lastModifiedDate":"2022-01-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return encodedList;","lastModifiedDate":"2022-01-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":63,"-":51}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":" * Represents a task that the user wants to do.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ToDos extends Task{","lastModifiedDate":"2022-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ToDos(String objective) {","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(objective);","lastModifiedDate":"2022-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ToDos(String objective, boolean done) {","lastModifiedDate":"2022-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(objective, done);","lastModifiedDate":"2022-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String serialize() {","lastModifiedDate":"2022-01-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return \"T|\" + (this.done ? \"1|\" : \"0|\") + this.objective +\"\\n\";","lastModifiedDate":"2022-01-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2022-01-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (o instanceof ToDos) {","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            ToDos t \u003d (ToDos) o;","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return this.objective.equals(t.objective) \u0026\u0026 (this.done\u003d\u003dt.done);","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-11"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    public boolean sameTime(LocalDate date) {","lastModifiedDate":"2022-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"lawwm":8,"-":35}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.ui;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" * User Interface for user to interact with the program.","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private enum Dialogue {","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"        GREETING, FAREWELL, LIST, MARK, UNMARKED, ADDED, DELETE,","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"        NUMLEFT, LINE, LOADERROR, FIND, FINDDATE","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Scanner in;","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Ui() {","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this(System.in, System.out);","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.out \u003d out;","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // read user command","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String readCommand() {","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String next \u003d in.nextLine();","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return next;","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        speak(Dialogue.LOADERROR);","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void fareWell() {","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        speak(Dialogue.FAREWELL);","lastModifiedDate":"2022-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        speak(Dialogue.GREETING);","lastModifiedDate":"2022-01-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void showLine() {","lastModifiedDate":"2022-01-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        speak(Dialogue.LINE);","lastModifiedDate":"2022-01-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"     * Prints the tasks from the TaskList to shell.","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"     * @param tasks List of tasks to be printed.","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void printList(TaskList tasks) {","lastModifiedDate":"2022-01-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e t \u003d tasks.getObjectives();","lastModifiedDate":"2022-01-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        speak(Dialogue.LIST);","lastModifiedDate":"2022-01-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c t.size(); i++) {","lastModifiedDate":"2022-01-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            System.out.print(i+1);","lastModifiedDate":"2022-01-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            System.out.print(\".\");","lastModifiedDate":"2022-01-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            System.out.println(t.get(i));","lastModifiedDate":"2022-01-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"    public void printList(TaskList tasks, String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e t \u003d tasks.getObjectives(keyword);","lastModifiedDate":"2022-01-14"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"        speak(Dialogue.FIND);","lastModifiedDate":"2022-01-14"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c t.size(); i++) {","lastModifiedDate":"2022-01-14"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"            System.out.print(i+1);","lastModifiedDate":"2022-01-14"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"            System.out.print(\".\");","lastModifiedDate":"2022-01-14"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"            System.out.println(t.get(i));","lastModifiedDate":"2022-01-14"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":78,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"    public void printList(TaskList tasks, LocalDate keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e t \u003d tasks.getObjectives(keyword);","lastModifiedDate":"2022-01-14"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"        speak(Dialogue.FINDDATE);","lastModifiedDate":"2022-01-14"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c t.size(); i++) {","lastModifiedDate":"2022-01-14"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"            System.out.print(i+1);","lastModifiedDate":"2022-01-14"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"            System.out.print(\".\");","lastModifiedDate":"2022-01-14"},{"lineNumber":85,"author":{"gitId":"lawwm"},"content":"            System.out.println(t.get(i));","lastModifiedDate":"2022-01-14"},{"lineNumber":86,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":87,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":88,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":89,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":90,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":91,"author":{"gitId":"lawwm"},"content":"     * Prints the task that has been added.","lastModifiedDate":"2022-01-17"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"     * @param tasks TaskList containing task to be printed.","lastModifiedDate":"2022-01-17"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void addList(TaskList tasks) {","lastModifiedDate":"2022-01-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        speak(Dialogue.ADDED);","lastModifiedDate":"2022-01-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Integer size \u003d tasks.getSize();","lastModifiedDate":"2022-01-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        System.out.println(tasks.getTask(size-1));","lastModifiedDate":"2022-01-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        speak(Dialogue.NUMLEFT, size);","lastModifiedDate":"2022-01-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"     * Prints the task that has been marked/unmarked.","lastModifiedDate":"2022-01-17"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"     * @param tasks TaskList containing task to be printed.","lastModifiedDate":"2022-01-17"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"     * @param mark Whether task is completed or uncompleted.","lastModifiedDate":"2022-01-17"},{"lineNumber":107,"author":{"gitId":"lawwm"},"content":"     * @param index Index of the task stored in task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":108,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void markList(TaskList tasks, boolean mark, int index) {","lastModifiedDate":"2022-01-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (mark) {","lastModifiedDate":"2022-01-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            speak(Dialogue.MARK);","lastModifiedDate":"2022-01-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            System.out.println(tasks.getTask(index));","lastModifiedDate":"2022-01-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            speak(Dialogue.UNMARKED);","lastModifiedDate":"2022-01-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            System.out.println(tasks.getTask(index));","lastModifiedDate":"2022-01-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":119,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":120,"author":{"gitId":"lawwm"},"content":"     * Prints the task that has been deleted.","lastModifiedDate":"2022-01-17"},{"lineNumber":121,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":122,"author":{"gitId":"lawwm"},"content":"     * @param tasks TaskList containing task to be deleted.","lastModifiedDate":"2022-01-17"},{"lineNumber":123,"author":{"gitId":"lawwm"},"content":"     * @param index Index of the task stored in task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":124,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void deleteList(TaskList tasks, int index) {","lastModifiedDate":"2022-01-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        speak(Dialogue.DELETE);","lastModifiedDate":"2022-01-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        System.out.println(tasks.getTask(index));","lastModifiedDate":"2022-01-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void showError(String e) {","lastModifiedDate":"2022-01-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        System.out.println(e);","lastModifiedDate":"2022-01-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void speak(Dialogue option, Integer num) {","lastModifiedDate":"2022-01-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String reply;","lastModifiedDate":"2022-01-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        switch (option) {","lastModifiedDate":"2022-01-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            case NUMLEFT: reply \u003d  \"Now you have \" + num.toString() + \" task in the list\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            default: reply \u003d \"\";","lastModifiedDate":"2022-01-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        System.out.print(reply);","lastModifiedDate":"2022-01-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":144,"author":{"gitId":"lawwm"},"content":"    private static void speak(Dialogue option) {","lastModifiedDate":"2022-01-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String reply;","lastModifiedDate":"2022-01-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        switch (option) {","lastModifiedDate":"2022-01-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            case GREETING:","lastModifiedDate":"2022-01-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                reply \u003d \"Hello from\\n\" + logo +\"\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                reply +\u003d  \"Hello! I\u0027m Duke.\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            case LOADERROR: reply \u003d \"There is no previously saved file to be loaded.\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            case MARK: reply \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            case LINE: reply \u003d \"______________________________________\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            case UNMARKED: reply \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            case DELETE: reply \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            case ADDED: reply \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":168,"author":{"gitId":"lawwm"},"content":"            case FIND: reply \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-01-14"},{"lineNumber":169,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-14"},{"lineNumber":170,"author":{"gitId":"lawwm"},"content":"            case FINDDATE: reply \u003d \"Here are the tasks on that date:\\n\";","lastModifiedDate":"2022-01-14"},{"lineNumber":171,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            case LIST: reply \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            case FAREWELL: reply \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            default: reply \u003d \"Are you finally done?\";","lastModifiedDate":"2022-01-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        System.out.print(reply);","lastModifiedDate":"2022-01-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":57,"-":124}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"T|0|borrow book ","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"D|0|return book|2019-10-15|18:00","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"D|0|return book|2019-10-15|18:00","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"E|0|buy book|2019-10-15|18:00|20:00","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"T|0|buy book ","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"D|0|sell book|2019-10-10|18:00","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"todo buy book","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"delete 7","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"deadline sell book /by 2019-10-10 18:00:00","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"delete 7","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\parser\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\storage\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lawwm":7,"-":20}}]
