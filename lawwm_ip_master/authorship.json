[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lawwm":16,"-":45}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"D|1|return book|2019-10-15|18:00","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"E|1|buy books|2019-10-15|18:00|20:00","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"D|1|help your family|2019-10-10|18:00","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"E|0|feed your dog|2019-10-10|18:00|20:00","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"T|0|eat goop","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"T|1|buy food ","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"T|0|buy food ","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"T|0|kill yourself ","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"D|0|buy more more food|2020-10-10|18:00","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"lawwm":10}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" * Represents command to add a task to the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected Task obj;","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddCommand(Task obj) {","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.obj \u003d obj;","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    public String execute(TaskList task, Storage storage) throws IOException {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        task.add(obj);","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        storage.appendFile(obj);","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"        reply.append(this.speak(Dialogue.ADDED));","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        reply.append(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        reply.append(this.obj.toString());","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"        return reply.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":14,"-":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" * Command represents the instructions interpreted by the parser.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" * It is to be executed by Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    protected enum Dialogue {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"        GREETING, FAREWELL, LIST, MARK, UNMARKED, ADDED, DELETE, NUMLEFT, LINE, LOADERROR, FIND, FINDDATE","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"     * Execute the action of the command.","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"     * @param task TaskList stored in Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"     * @param storage File storage of Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"     * @throws IOException If error in IO operation with Duke storage.","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    public abstract String execute(TaskList task, Storage storage) throws IOException;","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * Returns whether Duke should exit after the command is executed.","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"     * @return True if Duke should exit afterwards.","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    protected String speak(Dialogue option, Integer num) {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        String reply;","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        switch (option) {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"            case NUMLEFT: reply \u003d \"Now you have \" + num.toString() + \" task in the list\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"            default: reply \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        return reply;","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    protected String speak(Dialogue option) {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        String reply;","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"        switch (option) {","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"            case GREETING:","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"                String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"                        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"                        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"                        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"                        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"                reply \u003d \"Hello from\\n\" + logo + \"\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"                reply +\u003d \"Hello! I\u0027m Duke.\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"            case LOADERROR: reply \u003d \"There is no previously saved file to be loaded.\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"            case MARK: reply \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"            case LINE: reply \u003d \"______________________________________\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"            case UNMARKED: reply \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"            case DELETE: reply \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"            case ADDED: reply \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"            case FIND: reply \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"            case FINDDATE: reply \u003d \"Here are the tasks on that date:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"            case LIST: reply \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"            case FAREWELL: reply \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"            default: reply \u003d \"Are you finally done?\";","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"        return reply;","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":70,"-":8}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" * Represents command to delete a task from the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected Integer index;","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public DeleteCommand(Integer index) {","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    public String execute(TaskList task, Storage storage) throws IOException {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"        String deletedTask \u003d (task.getTask(this.index)).toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        task.delete(this.index);","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        storage.overWriteFile(task);","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        reply.append(this.speak(Dialogue.DELETE));","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        reply.append(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"        reply.append(deletedTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"        reply.append(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        reply.append(this.speak(Dialogue.NUMLEFT, task.getSize()));","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        return reply.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":17,"-":22}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":" * Represents command to exit the Duke program.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    public String execute(TaskList task, Storage storage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"        return \"Ok honey.\";","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":8,"-":12}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package duke.command;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-14"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" * Represents command to find all the tasks in the task list that matches a keyword.","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"    private String keyword;","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    public String execute(TaskList tasks, Storage storage) throws IOException {","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e t \u003d tasks.getObjectives(keyword);","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"        reply.append(this.speak(Dialogue.FIND));","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c t.size(); i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"            reply.append(i + 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"            reply.append(\".\");","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"            reply.append(t.get(i));","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"            reply.append(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        return reply.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-14"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        return false;","lastModifiedDate":"2022-01-14"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"lawwm":40}},{"path":"src/main/java/duke/command/FindDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package duke.command;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-14"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" * Represents command to find all the tasks in the task list that matches a date.","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"public class FindDateCommand extends Command {","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"    private LocalDate keyword;","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"    public FindDateCommand(String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"        this.keyword \u003d LocalDate.parse(keyword);","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    public String execute(TaskList tasks, Storage storage) throws IOException {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e t \u003d tasks.getObjectives(keyword);","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        reply.append(this.speak(Dialogue.FINDDATE));","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c t.size(); i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"            reply.append(i + 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"            reply.append(\".\");","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"            reply.append(t.get(i));","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"            reply.append(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        return reply.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-14"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        return false;","lastModifiedDate":"2022-01-14"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-01-14"}],"authorContributionMap":{"lawwm":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import java.util.List;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" * Represents command to list all the tasks in the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    public String execute(TaskList tasks, Storage storage) throws IOException {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e t \u003d tasks.getObjectives();","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"        reply.append(this.speak(Dialogue.LIST));","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c t.size(); i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"            reply.append(i + 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"            reply.append(\".\");","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"            reply.append(t.get(i));","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"            reply.append(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        return reply.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"lawwm":41,"-":15}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" * Represents command to mark a task in the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"    protected boolean isMark;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected Integer index;","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"     * Constructor for MarkCommand class","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"     * @param index Index of the Task that is marked.","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"     * @param mark Whether the Task is marked as completed or uncompleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public MarkCommand(Integer index, boolean mark) {","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"        this.isMark \u003d mark;","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    public String execute(TaskList task, Storage storage) throws IOException {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        task.mark(this.index, this.isMark);","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storage.overWriteFile(task);","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        if (this.isMark) {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"            reply.append(this.speak(Dialogue.MARK));","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"            reply.append(this.speak(Dialogue.UNMARKED));","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"        reply.append(\"\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        reply.append(task.getTask(this.index).toString());","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        return reply.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":25,"-":21}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.main;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":" * Duke is a chat-bot that curates a todo list according to user\u0027s commands.","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected TaskList tasks;","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"     * Constructor for Duke class","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"     * @param filePath Path for file where data is stored and loaded","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-01-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-11"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-01-11"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"            return c.execute(this.tasks, this.storage);","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-11"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-11"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"            return \"You have no task with that number.\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-12"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"            return \"Your date and times have not been formatted properly.\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lawwm":24,"-":28}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package duke.main;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.ui.Main;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"public class Launcher {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":13}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.parser;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import duke.command.FindDateCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import duke.main.DukeException;","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import duke.task.DeadLine;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import duke.task.Events;","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import duke.task.ToDos;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":" * Parser to read user commands and ensure that it is syntactically and semantically valid.","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"     * Returns the command from parsing user\u0027s instructions.","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * @param cmd The instruction of the user.","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     * @return Command to be executed by Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"     * @throws DukeException If there is a syntactic or semantic error.","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Command parse(String cmd) throws DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String[] input \u003d cmd.split(\" \");","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        switch (input[0]) {","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        case \"list\":","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return Parser.prepareAdd(input);","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return Parser.prepareMark(input);","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return Parser.prepareDelete(input);","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"        case \"findDate\":","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        case \"find\":","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"            return Parser.prepareFind(input);","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2022-01-12"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"    private static Command prepareFind(String[] input) throws DukeException {","lastModifiedDate":"2022-01-14"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        if (input.length !\u003d 2) {","lastModifiedDate":"2022-01-14"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"            throw new duke.main.DukeException(\"Fill in proper input to find.\\n\");","lastModifiedDate":"2022-01-14"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"        if (input[0].equals(\"find\")) {","lastModifiedDate":"2022-01-14"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"            return new FindCommand(input[1]);","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"            return new FindDateCommand(input[1]);","lastModifiedDate":"2022-01-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static Command prepareAdd(String[] input) throws DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a \" + input[0] + \" cannot be empty.\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (input[0].equals(\"todo\")) {","lastModifiedDate":"2022-01-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            StringBuilder obj \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-01-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2022-01-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                obj.append(input[i]);","lastModifiedDate":"2022-01-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                obj.append(\" \");","lastModifiedDate":"2022-01-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new AddCommand(new ToDos(obj.toString()));","lastModifiedDate":"2022-01-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            int i \u003d 1;","lastModifiedDate":"2022-01-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            StringBuilder obj \u003d new StringBuilder(\"\");","lastModifiedDate":"2022-01-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            for (; i \u003c input.length; i++) {","lastModifiedDate":"2022-01-12"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"                if (input[i].charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2022-01-19"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"                    break;","lastModifiedDate":"2022-01-19"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"                }","lastModifiedDate":"2022-01-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                obj.append(input[i]);","lastModifiedDate":"2022-01-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                obj.append(\" \");","lastModifiedDate":"2022-01-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            obj.setLength(obj.length() - 1);","lastModifiedDate":"2022-01-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (input[0].equals(\"deadline\")) {","lastModifiedDate":"2022-01-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                return new AddCommand(new DeadLine(obj.toString(), input[input.length - 2], input[input.length - 1]));","lastModifiedDate":"2022-01-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":92,"author":{"gitId":"lawwm"},"content":"                return new AddCommand(new Events(obj.toString(),","lastModifiedDate":"2022-01-19"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"                        input[input.length - 3], input[input.length - 2], input[input.length - 1]));","lastModifiedDate":"2022-01-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Command prepareMark(String[] input) throws DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (input.length !\u003d 2) {","lastModifiedDate":"2022-01-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Fill in proper integer for marking/unmarking.\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (input[0].equals(\"mark\")) {","lastModifiedDate":"2022-01-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return new MarkCommand(Integer.parseInt(input[1]), true);","lastModifiedDate":"2022-01-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new MarkCommand(Integer.parseInt(input[1]), false);","lastModifiedDate":"2022-01-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static Command prepareDelete(String[] input) throws DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (input.length !\u003d 2) {","lastModifiedDate":"2022-01-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Fill in proper integer for deletion.\\n\");","lastModifiedDate":"2022-01-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new DeleteCommand(Integer.parseInt(input[1]));","lastModifiedDate":"2022-01-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":41,"-":74}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.storage;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2022-01-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import duke.main.DukeException;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":" * Represents a storage system to save the tasks in the hard disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":" * Ensure data persists in event of Duke closing or crashing.","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected String filePath;","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected File dir;","lastModifiedDate":"2022-01-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * Constructor for Storage class","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     * @param filePath Path for file where data is stored and loaded","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.dir \u003d new File(filePath);","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     * Load the task stored within hard disk into the Task List.","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"     * @return List of Tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"     * @throws IOException If there are IO errors.","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"     * @throws DukeException If there is no previously created file for tasks in hard disks.","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public List\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e loaded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        dir.getParentFile().mkdirs();","lastModifiedDate":"2022-01-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (dir.createNewFile()) {","lastModifiedDate":"2022-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new DukeException(\"No previous save file\");","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            Scanner sc \u003d new Scanner(dir);","lastModifiedDate":"2022-01-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2022-01-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                String encoded \u003d sc.nextLine();","lastModifiedDate":"2022-01-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                loaded.add(Task.deserialize(encoded));","lastModifiedDate":"2022-01-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            sc.close();","lastModifiedDate":"2022-01-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return loaded;","lastModifiedDate":"2022-01-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"     * Save the added file to hard disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"     * Append the serialized task to the bottom of file in hard disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"     * @param todo Task to be added to the hard disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"     * @throws IOException If there is error in writing to disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void appendFile(Task todo) throws IOException {","lastModifiedDate":"2022-01-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2022-01-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        fw.write(todo.serialize());","lastModifiedDate":"2022-01-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2022-01-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":69,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"     * Overwrite the hard disk with state currently in Task List.","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"     * @param todo TaskList to overwrite hard disk with.","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"     * @throws IOException If there is error in writing to disk.","lastModifiedDate":"2022-01-17"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void overWriteFile(TaskList todo) throws IOException {","lastModifiedDate":"2022-01-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2022-01-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e encodedList \u003d todo.serializedList();","lastModifiedDate":"2022-01-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (String task : encodedList) {","lastModifiedDate":"2022-01-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            fw.write(task);","lastModifiedDate":"2022-01-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2022-01-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":34,"-":49}},{"path":"src/main/java/duke/task/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" * Represents a task that the user wants to do by a specific date and time.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDate bydate;","lastModifiedDate":"2022-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    protected LocalTime bytime;","lastModifiedDate":"2022-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"     * Constructor for DeadLine class where DeadLine is by default uncompleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"     * @param objective Task to be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"     * @param date Date by which task should be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"     * @param time Time by which task should be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeadLine(String objective, String date, String time) {","lastModifiedDate":"2022-01-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(objective);","lastModifiedDate":"2022-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.bydate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.bytime \u003d LocalTime.parse(time);","lastModifiedDate":"2022-01-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"     * Constructor for DeadLine class where completion can be set.","lastModifiedDate":"2022-01-19"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"     * @param objective Task to be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"     * @param done Whether Task has been done.","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     * @param date Date by which task should be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"     * @param time Time by which task should be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public DeadLine(String objective, Boolean done, String date, String time) {","lastModifiedDate":"2022-01-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(objective, done);","lastModifiedDate":"2022-01-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.bydate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.bytime \u003d LocalTime.parse(time);","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    public boolean sameTime(LocalDate date) {","lastModifiedDate":"2022-01-14"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        return this.bydate.equals(date);","lastModifiedDate":"2022-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (o instanceof DeadLine) {","lastModifiedDate":"2022-01-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            DeadLine e \u003d (DeadLine) o;","lastModifiedDate":"2022-01-12"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"            return this.bydate.equals(e.bydate) \u0026\u0026 this.bytime.equals(e.bytime)","lastModifiedDate":"2022-01-19"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"                    \u0026\u0026 this.objective.equals(e.objective) \u0026\u0026 (this.done \u003d\u003d e.done);","lastModifiedDate":"2022-01-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String serialize() {","lastModifiedDate":"2022-01-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return \"D|\" + (this.done ? \"1|\" : \"0|\") + this.objective","lastModifiedDate":"2022-01-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + \"|\" + bydate.toString() + \"|\" + bytime.toString() + \"\\n\";","lastModifiedDate":"2022-01-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2022-01-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2022-01-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + this.bydate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \"","lastModifiedDate":"2022-01-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + this.bytime.format(DateTimeFormatter.ofPattern(\"HH:mm a\")) + \")\";","lastModifiedDate":"2022-01-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"lawwm":22,"-":46}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" * Represents a task that the user wants to do on a specific date and between a starting and ending time.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Events extends Task {","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    protected LocalTime fromtime;","lastModifiedDate":"2022-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected LocalTime bytime;","lastModifiedDate":"2022-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"     * Constructor for Events class where Event is by default uncompleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"     * @param objective Task to be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"     * @param date Date by which task should be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"     * @param from Time by which task should start.","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"     * @param to Time by which task should end.","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Events(String objective, String date, String from, String to) {","lastModifiedDate":"2022-01-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(objective);","lastModifiedDate":"2022-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.fromtime \u003d LocalTime.parse(from);","lastModifiedDate":"2022-01-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.bytime \u003d LocalTime.parse(to);","lastModifiedDate":"2022-01-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"     * Constructor for Events class where completion can be set.","lastModifiedDate":"2022-01-19"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"     * @param objective Task to be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"     * @param done Whether Task has been done.","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     * @param date Date by which task should be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"     * @param from Time by which task should start.","lastModifiedDate":"2022-01-19"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"     * @param by Time by which task should end.","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"    public Events(String objective, Boolean done, String date, String from, String by) {","lastModifiedDate":"2022-01-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(objective, done);","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-01-12"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        this.fromtime \u003d LocalTime.parse(from);","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        this.bytime \u003d LocalTime.parse(by);","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    public boolean sameTime(LocalDate date) {","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        return this.date.equals(date);","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (o instanceof Events) {","lastModifiedDate":"2022-01-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Events e \u003d (Events) o;","lastModifiedDate":"2022-01-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return this.date.equals(e.date) \u0026\u0026 this.fromtime.equals(e.fromtime) \u0026\u0026 this.bytime.equals(e.bytime)","lastModifiedDate":"2022-01-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    \u0026\u0026 this.objective.equals(e.objective) \u0026\u0026 this.done \u003d\u003d e.done;","lastModifiedDate":"2022-01-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String serialize() {","lastModifiedDate":"2022-01-11"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        return \"E|\" + (this.done ? \"1|\" : \"0|\") + this.objective + \"|\" + this.date.toString()","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"                + \"|\" + this.fromtime.toString() + \"|\" + this.bytime.toString() + \"\\n\";","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2022-01-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2022-01-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \"","lastModifiedDate":"2022-01-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + this.fromtime.format(DateTimeFormatter.ofPattern(\"HH:mm a\")) + \" - \"","lastModifiedDate":"2022-01-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + this.bytime.format(DateTimeFormatter.ofPattern(\"HH:mm a\"))","lastModifiedDate":"2022-01-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + \")\";","lastModifiedDate":"2022-01-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"lawwm":27,"-":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":" * Represents a task that the user wants to do. Can set to completed and uncompleted.","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected String objective;","lastModifiedDate":"2022-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    protected boolean done;","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"     * Constructor for Task class where Task is by default uncompleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"     * @param objective Task to be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Task(String objective) {","lastModifiedDate":"2022-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.objective \u003d objective;","lastModifiedDate":"2022-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"     * Constructor for Task class where Task is by default uncompleted.","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"     * @param objective Task to be done.","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * @param done Whether Task is completed.","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Task(String objective, Boolean done) {","lastModifiedDate":"2022-01-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.objective \u003d objective;","lastModifiedDate":"2022-01-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"     * Task is completed. Mark it with a cross.","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void mark() {","lastModifiedDate":"2022-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"     * Task is uncompleted. It is unmarked.","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void unmarked() {","lastModifiedDate":"2022-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"     * Returns a serialized version of the string.","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"     * @return Serialized form of the string.","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public abstract String serialize();","lastModifiedDate":"2022-01-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        return this.objective.contains(keyword);","lastModifiedDate":"2022-01-14"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"     * Check if task occurs on a specific date.","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"     * @param date Date to be compared to the date in task.","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"     * @return True if task occurs on that date.","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"    public abstract boolean sameTime(LocalDate date);","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return (done ? \"[X]\" : \"[ ]\") + \" \" + this.objective;","lastModifiedDate":"2022-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"     * Convert an encoded string into a task.","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"     * @param encoded Encoded string to be decoded into task.","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"lawwm"},"content":"     * @return Task that is formed from the encoded string.","lastModifiedDate":"2022-01-17"},{"lineNumber":76,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Task deserialize(String encoded) {","lastModifiedDate":"2022-01-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String[] arr \u003d encoded.split(\"\\\\|\");","lastModifiedDate":"2022-01-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        boolean completed \u003d arr[1].equals(\"1\");","lastModifiedDate":"2022-01-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2022-01-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ToDos(arr[2], completed);","lastModifiedDate":"2022-01-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } else if (arr[0].equals(\"D\")) {","lastModifiedDate":"2022-01-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new DeadLine(arr[2], completed, arr[3], arr[4]);","lastModifiedDate":"2022-01-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new Events(arr[2], completed, arr[3], arr[4], arr[5]);","lastModifiedDate":"2022-01-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"lawwm":44,"-":46}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" * Stores a list of task as well as an associated set of operations.","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"    private List\u003cTask\u003e objectives;","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.objectives \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TaskList(List\u003cTask\u003e objectives) {","lastModifiedDate":"2022-01-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.objectives \u003d objectives;","lastModifiedDate":"2022-01-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"     * Add a task to the task list.","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"     * @param obj Task to be added to TaskList.","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void add(Task obj) {","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        objectives.add(obj);","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"     * Get a list of tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"     * @return List of Tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public List\u003cTask\u003e getObjectives() {","lastModifiedDate":"2022-01-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return this.objectives;","lastModifiedDate":"2022-01-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    public List\u003cTask\u003e getObjectives(String keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-14"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c objectives.size(); i++) {","lastModifiedDate":"2022-01-14"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"            if (objectives.get(i).contains(keyword)) {","lastModifiedDate":"2022-01-14"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"                matches.add(objectives.get(i));","lastModifiedDate":"2022-01-14"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        return matches;","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"    public List\u003cTask\u003e getObjectives(LocalDate keyword) {","lastModifiedDate":"2022-01-14"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-14"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c objectives.size(); i++) {","lastModifiedDate":"2022-01-14"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"            if (objectives.get(i).sameTime(keyword)) {","lastModifiedDate":"2022-01-14"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"                matches.add(objectives.get(i));","lastModifiedDate":"2022-01-14"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-01-14"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"        return matches;","lastModifiedDate":"2022-01-14"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"     * Return a task stored at a specified index.","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"     * @param i index of Task stored within TaskList","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"     * @return Task stored at index.","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2022-01-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this.objectives.get(i);","lastModifiedDate":"2022-01-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":70,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"lawwm"},"content":"     * Return number of tasks in the list.","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"lawwm"},"content":"     * @return Size of the TaskList.","lastModifiedDate":"2022-01-17"},{"lineNumber":74,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Integer getSize() {","lastModifiedDate":"2022-01-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return objectives.size();","lastModifiedDate":"2022-01-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":79,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":80,"author":{"gitId":"lawwm"},"content":"     * Set a task in the TaskList to completed or uncompleted according to index.","lastModifiedDate":"2022-01-17"},{"lineNumber":81,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":82,"author":{"gitId":"lawwm"},"content":"     * @param index Index of the task to be altered.","lastModifiedDate":"2022-01-17"},{"lineNumber":83,"author":{"gitId":"lawwm"},"content":"     * @param mark Whether task should be marked or unmarked.","lastModifiedDate":"2022-01-17"},{"lineNumber":84,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void mark(Integer index, boolean mark) {","lastModifiedDate":"2022-01-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (mark) {","lastModifiedDate":"2022-01-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            objectives.get(index).mark();","lastModifiedDate":"2022-01-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            objectives.get(index).unmarked();","lastModifiedDate":"2022-01-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":93,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":94,"author":{"gitId":"lawwm"},"content":"     * Remove a task in the TaskList according to index.","lastModifiedDate":"2022-01-17"},{"lineNumber":95,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":96,"author":{"gitId":"lawwm"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void delete(Integer index) {","lastModifiedDate":"2022-01-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.objectives.remove((int) index);","lastModifiedDate":"2022-01-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":102,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":103,"author":{"gitId":"lawwm"},"content":"     * Get a serialized list of tasks.","lastModifiedDate":"2022-01-17"},{"lineNumber":104,"author":{"gitId":"lawwm"},"content":"     *","lastModifiedDate":"2022-01-17"},{"lineNumber":105,"author":{"gitId":"lawwm"},"content":"     * @return List of serialized string.","lastModifiedDate":"2022-01-17"},{"lineNumber":106,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e serializedList() {","lastModifiedDate":"2022-01-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cString\u003e encodedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        for (Task task : objectives) {","lastModifiedDate":"2022-01-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            encodedList.add(task.serialize());","lastModifiedDate":"2022-01-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return encodedList;","lastModifiedDate":"2022-01-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"lawwm":63,"-":51}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2022-01-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":" * Represents a task that the user wants to do.","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":" *","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ToDos extends Task {","lastModifiedDate":"2022-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ToDos(String objective) {","lastModifiedDate":"2022-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(objective);","lastModifiedDate":"2022-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ToDos(String objective, boolean done) {","lastModifiedDate":"2022-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(objective, done);","lastModifiedDate":"2022-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String serialize() {","lastModifiedDate":"2022-01-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return \"T|\" + (this.done ? \"1|\" : \"0|\") + this.objective + \"\\n\";","lastModifiedDate":"2022-01-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2022-01-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-01-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (o instanceof ToDos) {","lastModifiedDate":"2022-01-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            ToDos t \u003d (ToDos) o;","lastModifiedDate":"2022-01-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return this.objective.equals(t.objective) \u0026\u0026 (this.done \u003d\u003d t.done);","lastModifiedDate":"2022-01-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-01-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-11"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"    public boolean sameTime(LocalDate date) {","lastModifiedDate":"2022-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-01-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-10"}],"authorContributionMap":{"lawwm":8,"-":35}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package duke.ui;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    @FXML","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    private Label dialog;","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    @FXML","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"    private void flip() {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"        for (int i \u003d 0; i \u003c tmp.size(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"            if (tmp.get(i) instanceof Label) {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"                ((Label) tmp.get(i)).setStyle(\"-fx-background-color: #d4d4d4; \" +","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"                        \"-fx-background-radius: 10;\");","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":58,"author":{"gitId":"lawwm"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"lawwm"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"lawwm"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"lawwm"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"lawwm"},"content":"        db.flip();","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"lawwm"},"content":"        return db;","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":67}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package duke.ui;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"            stage.show();","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":32}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"package duke.ui;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"/**","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":" */","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"    @FXML","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    @FXML","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"    @FXML","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"    @FXML","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"lawwm"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"lawwm"},"content":"    @FXML","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"lawwm"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"lawwm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"lawwm"},"content":"        String response \u003d \"Hello! I\u0027m Duke.\\nWhat can I do for you?\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"lawwm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"lawwm"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"lawwm"},"content":"        );","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"lawwm"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"lawwm"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"lawwm"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"lawwm"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"lawwm"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"lawwm"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"lawwm"},"content":"    @FXML","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"lawwm"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"lawwm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"lawwm"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"lawwm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"lawwm"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"lawwm"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"lawwm"},"content":"        );","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"lawwm"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"lawwm"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"lawwm"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #53d769; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"lawwm"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"lawwm"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"lawwm"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"lawwm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"lawwm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"lawwm"},"content":"        \u003cInsets bottom\u003d\"25.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"25.0\" /\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"lawwm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"lawwm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" /\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #FFFFFF;\" /\u003e","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"lawwm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"lawwm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"lawwm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":19}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"T|0|borrow book ","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"D|0|return book|2019-10-15|18:00","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"D|0|return book|2019-10-15|18:00","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"E|0|buy book|2019-10-15|18:00|20:00","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"T|0|buy book ","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"D|0|sell book|2019-10-10|18:00","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lawwm"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"lawwm"},"content":"todo buy book","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"lawwm"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"lawwm"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"lawwm"},"content":"delete 7","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"lawwm"},"content":"deadline sell book /by 2019-10-10 18:00:00","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"lawwm"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"lawwm"},"content":"delete 7","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"lawwm"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"lawwm":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\parser\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\storage\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"lawwm"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"lawwm"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lawwm":7,"-":20}}]
