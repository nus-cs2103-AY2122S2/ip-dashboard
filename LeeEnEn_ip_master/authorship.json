[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LeeEnEn":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"Duke is an application that assists you in managing your current task at hand, optimized for use via","lastModifiedDate":"2022-02-17"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"Command Line Interface (CLI). Duke will be able to manage your tasks faster than traditional GUI apps, provided that","lastModifiedDate":"2022-02-17"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"you can type fast.","lastModifiedDate":"2022-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"- Quick Start","lastModifiedDate":"2022-02-17"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"- Features","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"  - Adding a todo task: `todo`","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"  - Adding a deadline task: `deadline`","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"  - Adding an event task: `event`","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"  - Deleting a task: `delete`","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"  - Listing all events: `list`","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"  - Marking a task as completed: `mark`","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"  - Marking a task as incomplete: `unmark`","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"  - Finding a task: `find`","lastModifiedDate":"2022-02-17"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"  - Displaying all available commands: `help`","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"  - Exiting the program: `bye`","lastModifiedDate":"2022-02-17"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"  - Saving the data","lastModifiedDate":"2022-02-17"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"- Command Summary","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"## Quick Start","lastModifiedDate":"2022-02-17"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"1. Ensure that you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-02-17"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"2. Download the latest `duke.jar` from [here.](https://)","lastModifiedDate":"2022-02-17"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Duke.","lastModifiedDate":"2022-02-17"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"![img.png](img.png)","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"5. Type the command in the command box and press Enter to execute it. eg. typing `help` and pressing Enter","lastModifiedDate":"2022-02-17"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"will show you a list of available commands.\u003cbr\u003eSome example commands you can try:","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"   - `list`: Lists all tasks.","lastModifiedDate":"2022-02-17"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"   - `todo buy groceries`: Adds a `todo` task with the description *buy groceries*.","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"   - `delete 3`: Deletes the third task in the list.","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"   - `bye`: Exits the program.","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"6. Refer to the Usage below for details of each command.","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"### `todo` - Adds a Todo task","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"Adds a Todo task to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"Format: `todo [TASK_DESCRIPTION]`","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"Example: `todo buy groceries`","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"Got it, I have added buy groceries to the list!","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"[T][] buy groceries","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"Now you have 1 tasks in the list. ","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"### `deadline` - Adds a Deadline task","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"Adds a Deadline task to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"Format: `deadline [TASK_DESCRIPTION] /by [DATE]`","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"LeeEnEn"},"content":"- Date must be in `yyyy-mm-dd` format.","lastModifiedDate":"2022-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"LeeEnEn"},"content":"Example: `deadline tutorial assignment /by 2022-02-20`","lastModifiedDate":"2022-02-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":68,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":69,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"Got it, I have added tutorial assignment to the list!","lastModifiedDate":"2022-02-17"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"[D][] tutorial assignment (by: Feb 20 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"Now you have 2 tasks in the list. ","lastModifiedDate":"2022-02-17"},{"lineNumber":73,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":74,"author":{"gitId":"LeeEnEn"},"content":"### `event` - Adds an Event task","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"LeeEnEn"},"content":"Adds an Event task to the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"LeeEnEn"},"content":"Format: `event [TASK_DESCRIPTION] /at [DATE]`","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":79,"author":{"gitId":"LeeEnEn"},"content":"- Date must be in `yyyy-mm-dd` format.","lastModifiedDate":"2022-02-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"LeeEnEn"},"content":"Example: `event birthday party /at 2022-02-20`","lastModifiedDate":"2022-02-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"LeeEnEn"},"content":"Got it, I have added birthday party to the list!","lastModifiedDate":"2022-02-17"},{"lineNumber":88,"author":{"gitId":"LeeEnEn"},"content":"[E][] birthday party (at: Feb 20 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":89,"author":{"gitId":"LeeEnEn"},"content":"Now you have 3 tasks in the list. ","lastModifiedDate":"2022-02-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"LeeEnEn"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2022-02-17"},{"lineNumber":92,"author":{"gitId":"LeeEnEn"},"content":"Deletes a task from the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":93,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":94,"author":{"gitId":"LeeEnEn"},"content":"Format: `delete [ITEM NO.]`","lastModifiedDate":"2022-02-17"},{"lineNumber":95,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":96,"author":{"gitId":"LeeEnEn"},"content":"- Delete the task at the specified `[ITEM NO.]`","lastModifiedDate":"2022-02-17"},{"lineNumber":97,"author":{"gitId":"LeeEnEn"},"content":"- The item number refers to the number shown in the displayed tasks list.","lastModifiedDate":"2022-02-17"},{"lineNumber":98,"author":{"gitId":"LeeEnEn"},"content":"- The item number **must be a positive integer** 1, 2, 3,","lastModifiedDate":"2022-02-17"},{"lineNumber":99,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":100,"author":{"gitId":"LeeEnEn"},"content":"Example: `delete 1`","lastModifiedDate":"2022-02-17"},{"lineNumber":101,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":102,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":103,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":104,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":105,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":106,"author":{"gitId":"LeeEnEn"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-02-17"},{"lineNumber":107,"author":{"gitId":"LeeEnEn"},"content":"[T][] buy groceries","lastModifiedDate":"2022-02-17"},{"lineNumber":108,"author":{"gitId":"LeeEnEn"},"content":"Now you have 2 tasks in the list. ","lastModifiedDate":"2022-02-17"},{"lineNumber":109,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":110,"author":{"gitId":"LeeEnEn"},"content":"### `list` - Lists all task in the task list","lastModifiedDate":"2022-02-17"},{"lineNumber":111,"author":{"gitId":"LeeEnEn"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":112,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":113,"author":{"gitId":"LeeEnEn"},"content":"Format: `list`","lastModifiedDate":"2022-02-17"},{"lineNumber":114,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":115,"author":{"gitId":"LeeEnEn"},"content":"Example: `list`","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":117,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":118,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":119,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":120,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":121,"author":{"gitId":"LeeEnEn"},"content":"Here are the task in your list:","lastModifiedDate":"2022-02-17"},{"lineNumber":122,"author":{"gitId":"LeeEnEn"},"content":"1. [T][X] buy groceries","lastModifiedDate":"2022-02-17"},{"lineNumber":123,"author":{"gitId":"LeeEnEn"},"content":"2. [D][] tutorial assignment (by: Feb 20 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":124,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":125,"author":{"gitId":"LeeEnEn"},"content":"### `mark` - Marks a task as completed","lastModifiedDate":"2022-02-17"},{"lineNumber":126,"author":{"gitId":"LeeEnEn"},"content":"Marks a task from the task list as completed.","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":128,"author":{"gitId":"LeeEnEn"},"content":"Format: `mark [ITEM NO.]`","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"LeeEnEn"},"content":"- Marks the task at the specified `[ITEM NO.]`","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"LeeEnEn"},"content":"- The item number refers to the number shown in the displayed tasks list.","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"LeeEnEn"},"content":"- The item number **must be a positive integer** 1, 2, 3,","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"LeeEnEn"},"content":"Example: `mark 1`","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"LeeEnEn"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"LeeEnEn"},"content":"[T][X] buy groceries","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"LeeEnEn"},"content":"### `unmark` - Marks a task as incomplete","lastModifiedDate":"2022-02-17"},{"lineNumber":144,"author":{"gitId":"LeeEnEn"},"content":"Marks a task from the task list as incomplete.","lastModifiedDate":"2022-02-17"},{"lineNumber":145,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":146,"author":{"gitId":"LeeEnEn"},"content":"Format: `unmark [ITEM NO.]`","lastModifiedDate":"2022-02-17"},{"lineNumber":147,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":148,"author":{"gitId":"LeeEnEn"},"content":"- Unmarks the task at the specified `[ITEM NO.]`","lastModifiedDate":"2022-02-17"},{"lineNumber":149,"author":{"gitId":"LeeEnEn"},"content":"- The item number refers to the number shown in the displayed tasks list.","lastModifiedDate":"2022-02-17"},{"lineNumber":150,"author":{"gitId":"LeeEnEn"},"content":"- The item number **must be a positive integer** 1, 2, 3,","lastModifiedDate":"2022-02-17"},{"lineNumber":151,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":152,"author":{"gitId":"LeeEnEn"},"content":"Example: `unmark 2`","lastModifiedDate":"2022-02-17"},{"lineNumber":153,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":154,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":155,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":156,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":157,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":158,"author":{"gitId":"LeeEnEn"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-02-17"},{"lineNumber":159,"author":{"gitId":"LeeEnEn"},"content":"[D][] tutorial assignment (by: Feb 20 2022)","lastModifiedDate":"2022-02-17"},{"lineNumber":160,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":161,"author":{"gitId":"LeeEnEn"},"content":"### `find` - Find a specific task from the list","lastModifiedDate":"2022-02-17"},{"lineNumber":162,"author":{"gitId":"LeeEnEn"},"content":"Finds a task from the task list.","lastModifiedDate":"2022-02-17"},{"lineNumber":163,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":164,"author":{"gitId":"LeeEnEn"},"content":"Format: `find [KEYWORD]`","lastModifiedDate":"2022-02-17"},{"lineNumber":165,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":166,"author":{"gitId":"LeeEnEn"},"content":"- Lists all tasks that contains the `[KEYWORD]`","lastModifiedDate":"2022-02-17"},{"lineNumber":167,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":168,"author":{"gitId":"LeeEnEn"},"content":"Example: `find party`","lastModifiedDate":"2022-02-17"},{"lineNumber":169,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":170,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":171,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":172,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":173,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":174,"author":{"gitId":"LeeEnEn"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-02-17"},{"lineNumber":175,"author":{"gitId":"LeeEnEn"},"content":"[E][X] birthday party","lastModifiedDate":"2022-02-17"},{"lineNumber":176,"author":{"gitId":"LeeEnEn"},"content":"[E][] new year\u0027s eve party","lastModifiedDate":"2022-02-17"},{"lineNumber":177,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":178,"author":{"gitId":"LeeEnEn"},"content":"### `help` - Lists all available commands","lastModifiedDate":"2022-02-17"},{"lineNumber":179,"author":{"gitId":"LeeEnEn"},"content":"Shows a list of all available commands","lastModifiedDate":"2022-02-17"},{"lineNumber":180,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":181,"author":{"gitId":"LeeEnEn"},"content":"Format: `help`","lastModifiedDate":"2022-02-17"},{"lineNumber":182,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":183,"author":{"gitId":"LeeEnEn"},"content":"Example: `help`","lastModifiedDate":"2022-02-17"},{"lineNumber":184,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":185,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":186,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":187,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":188,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":189,"author":{"gitId":"LeeEnEn"},"content":"Here are the list of commands that you can use:","lastModifiedDate":"2022-02-17"},{"lineNumber":190,"author":{"gitId":"LeeEnEn"},"content":"todo: Create a task eg. (todo homework)","lastModifiedDate":"2022-02-17"},{"lineNumber":191,"author":{"gitId":"LeeEnEn"},"content":"event: Create an event that has a starting date eg. (event Birthday Party /at 2022-04-04)","lastModifiedDate":"2022-02-17"},{"lineNumber":192,"author":{"gitId":"LeeEnEn"},"content":"deadline: Create an event with a deadline eg. (deadline Submit assignment /by 2022-02-18)","lastModifiedDate":"2022-02-17"},{"lineNumber":193,"author":{"gitId":"LeeEnEn"},"content":"list: List all the current tasks that you have","lastModifiedDate":"2022-02-17"},{"lineNumber":194,"author":{"gitId":"LeeEnEn"},"content":"delete [ITEM NO.]: Delete a task that is no longer needed in the list eg. (delete 2)","lastModifiedDate":"2022-02-17"},{"lineNumber":195,"author":{"gitId":"LeeEnEn"},"content":"mark/unmark [ITEM NO.]: Mark or unmark a task that is completed in the list eg. (mark 2)","lastModifiedDate":"2022-02-17"},{"lineNumber":196,"author":{"gitId":"LeeEnEn"},"content":"find [KEY]: Find a task in the list corresponding to the keyword eg. (find homework)","lastModifiedDate":"2022-02-17"},{"lineNumber":197,"author":{"gitId":"LeeEnEn"},"content":"bye: Exits the application\";","lastModifiedDate":"2022-02-17"},{"lineNumber":198,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":199,"author":{"gitId":"LeeEnEn"},"content":"### `bye` - Exits the program","lastModifiedDate":"2022-02-17"},{"lineNumber":200,"author":{"gitId":"LeeEnEn"},"content":"Exits the program","lastModifiedDate":"2022-02-17"},{"lineNumber":201,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":202,"author":{"gitId":"LeeEnEn"},"content":"Format: `bye`","lastModifiedDate":"2022-02-17"},{"lineNumber":203,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":204,"author":{"gitId":"LeeEnEn"},"content":"Expected outcome:","lastModifiedDate":"2022-02-17"},{"lineNumber":205,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":206,"author":{"gitId":"LeeEnEn"},"content":"Duke:","lastModifiedDate":"2022-02-17"},{"lineNumber":207,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":208,"author":{"gitId":"LeeEnEn"},"content":"Good bye!","lastModifiedDate":"2022-02-17"},{"lineNumber":209,"author":{"gitId":"LeeEnEn"},"content":"```","lastModifiedDate":"2022-02-17"},{"lineNumber":210,"author":{"gitId":"LeeEnEn"},"content":"### Saving the data","lastModifiedDate":"2022-02-17"},{"lineNumber":211,"author":{"gitId":"LeeEnEn"},"content":"Duke\u0027s data are saved in the same folder duke was running in. Any command that changes the data will be saved","lastModifiedDate":"2022-02-17"},{"lineNumber":212,"author":{"gitId":"LeeEnEn"},"content":"automatically, there is no need to save manually.","lastModifiedDate":"2022-02-17"},{"lineNumber":213,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":214,"author":{"gitId":"LeeEnEn"},"content":"### Command Summary","lastModifiedDate":"2022-02-17"},{"lineNumber":215,"author":{"gitId":"LeeEnEn"},"content":"|Action  |Format, Examples|","lastModifiedDate":"2022-02-17"},{"lineNumber":216,"author":{"gitId":"LeeEnEn"},"content":"|--------|----------------|","lastModifiedDate":"2022-02-17"},{"lineNumber":217,"author":{"gitId":"LeeEnEn"},"content":"|todo    |`todo buy groceries`|","lastModifiedDate":"2022-02-17"},{"lineNumber":218,"author":{"gitId":"LeeEnEn"},"content":"|event   |`event birthday party /at 2022-02-20`|","lastModifiedDate":"2022-02-17"},{"lineNumber":219,"author":{"gitId":"LeeEnEn"},"content":"|deadline|`deadline tutorial assignment /by 2022-02-20`|","lastModifiedDate":"2022-02-17"},{"lineNumber":220,"author":{"gitId":"LeeEnEn"},"content":"|delete  |`delete 2`|","lastModifiedDate":"2022-02-17"},{"lineNumber":221,"author":{"gitId":"LeeEnEn"},"content":"|list    |`list`|","lastModifiedDate":"2022-02-17"},{"lineNumber":222,"author":{"gitId":"LeeEnEn"},"content":"|mark    |`mark 1`|","lastModifiedDate":"2022-02-17"},{"lineNumber":223,"author":{"gitId":"LeeEnEn"},"content":"|unmark  |`unmark 2`|","lastModifiedDate":"2022-02-17"},{"lineNumber":224,"author":{"gitId":"LeeEnEn"},"content":"|find    |`find party`|","lastModifiedDate":"2022-02-17"},{"lineNumber":225,"author":{"gitId":"LeeEnEn"},"content":"|help    |`help`|","lastModifiedDate":"2022-02-17"},{"lineNumber":226,"author":{"gitId":"LeeEnEn"},"content":"|bye     |`bye`|","lastModifiedDate":"2022-02-17"}],"authorContributionMap":{"LeeEnEn":208,"-":18}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"import duke.ui.Main;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"public class Launcher {","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"LeeEnEn":11}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.exception;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":" * Handles Duke exceptions.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"     * Prints the exception message.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"     * @param message Message to be printed.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"        super(message);","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"        assert message !\u003d null : \"DukeException message cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"        assert message.length() \u003e 0 : \"DukeException message cannot have an empty body.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"LeeEnEn":18}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.main;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":" * Behaves as a task manager to keep record of the different tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"    private final Parser parser;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"    private final Storage storage;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"     * Creates a Duke object that takes in a filepath for reading and writing of data.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"     * Initializes all necessary classes.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"     * @param filePath Path in which the list of task is stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"        taskList.fetchData(storage.readData());","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"        assert input !\u003d null : \"Input from user to get a response cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"        assert input.length() \u003e 0 : \"Input from user to get a response cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"        String response \u003d parser.parse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"        return \"Duke: \\n\\n\" + response;","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"     * Saves the current data in a text file.","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"    public void saveData() {","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"        storage.saveData(taskList.getList());","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LeeEnEn":46,"-":2}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.parser;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":" * Handles user input and commands.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"public class Parser {","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"     * Handles user command and give an appropriate reply.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"     * @param userInput commands specified by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string reply that corresponds to the command from the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"    public String parse(String userInput) {","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"        assert userInput !\u003d null : \"User command to be parsed cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"        assert userInput.length() \u003e 0 : \"User command to be parsed cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"        String[] input \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"        Type type \u003d getEnumType(input[0]);","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"            switch (type) {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"            case NULL:","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"            case BYE:","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"                return \"Good bye!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"            case LIST:","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"                return taskList.readList();","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"            case HELP:","lastModifiedDate":"2022-02-17"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"                return showHelpCommands();","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"            case MARK:","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"                if (input.length \u003d\u003d 1 || input[1].equals(\"\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"                    throw new DukeException(\"You are missing the parameter for this mark command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"                return taskList.markTask(input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"            case UNMARK:","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"                if (input.length \u003d\u003d 1 || input[1].equals(\"\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"                    throw new DukeException(\"You are missing the parameter for this unmark command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"                return taskList.unMarkTask(input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"            case DELETE:","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"                if (input.length \u003d\u003d 1 || input[1].equals(\"\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"                    throw new DukeException(\"You are missing the parameter for this delete command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"                }","lastModifiedDate":"2022-02-06"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"                return taskList.delete(input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"            case FIND:","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"                if (input.length \u003d\u003d 1 || input[1].equals(\"\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"                    throw new DukeException(\"You are missing the parameter for this find command!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"LeeEnEn"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"LeeEnEn"},"content":"                return taskList.find(input[1]);","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"LeeEnEn"},"content":"            default:","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"LeeEnEn"},"content":"                return getTask(input, type);","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"LeeEnEn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"     * Takes in the given user input and return a newly created task specified by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"LeeEnEn"},"content":"     * Catches any invalid command and reply appropriately.","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"LeeEnEn"},"content":"     * @param userInput User command.","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"     * @param type Type of task to be created.","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string reply that corresponds to the command from the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"LeeEnEn"},"content":"    private String getTask(String[] userInput, Type type) throws DukeException {","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"LeeEnEn"},"content":"        assert userInput !\u003d null : \"User command to be parsed cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"LeeEnEn"},"content":"        assert type !\u003d null : \"Command type cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"LeeEnEn"},"content":"            Task task;","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"LeeEnEn"},"content":"            String[] strings;","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"LeeEnEn"},"content":"            if (userInput[1].equals(\"\")) {","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"LeeEnEn"},"content":"                throw new DukeException(\"OOPS!!! The description of a \" + userInput[0] + \" cannot be empty.\");","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":92,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"LeeEnEn"},"content":"            switch (type) {","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"LeeEnEn"},"content":"            case DEADLINE:","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"LeeEnEn"},"content":"                strings \u003d userInput[1].split(\" /by \");","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"LeeEnEn"},"content":"                System.out.println(LocalDate.parse(strings[1]));","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"LeeEnEn"},"content":"                task \u003d new Deadline(strings[0], LocalDate.parse(strings[1]));","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"LeeEnEn"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"LeeEnEn"},"content":"            case EVENT:","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"LeeEnEn"},"content":"                strings \u003d userInput[1].split(\" /at \");","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"LeeEnEn"},"content":"                task \u003d new Event(strings[0], LocalDate.parse(strings[1]));","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"LeeEnEn"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"LeeEnEn"},"content":"            case TODO:","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"LeeEnEn"},"content":"                task \u003d new Todo(userInput[1].strip());","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"LeeEnEn"},"content":"                break;","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"LeeEnEn"},"content":"            default:","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"LeeEnEn"},"content":"                task \u003d null;","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"LeeEnEn"},"content":"            boolean isDuplicate \u003d taskList.isTaskDuplicate(task);","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"LeeEnEn"},"content":"            if (isDuplicate) {","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"LeeEnEn"},"content":"                return \"Hmm, you seem to have added this task before.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"LeeEnEn"},"content":"            } else {","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"LeeEnEn"},"content":"                return taskList.add(task);","lastModifiedDate":"2022-02-17"},{"lineNumber":116,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"LeeEnEn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"LeeEnEn"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"LeeEnEn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"LeeEnEn"},"content":"            return \"OOPS!!! Description is empty or invalid timeframe!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":121,"author":{"gitId":"LeeEnEn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"LeeEnEn"},"content":"            return \"OOPS!!! Duke could not understand given date! Please enter in yyyy-mm-dd format!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":123,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-02-17"},{"lineNumber":127,"author":{"gitId":"LeeEnEn"},"content":"     * Shows a list of commands that the user could enter.","lastModifiedDate":"2022-02-17"},{"lineNumber":128,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-17"},{"lineNumber":129,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string containing all the commands available.","lastModifiedDate":"2022-02-17"},{"lineNumber":130,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-02-17"},{"lineNumber":131,"author":{"gitId":"LeeEnEn"},"content":"    private String showHelpCommands() {","lastModifiedDate":"2022-02-17"},{"lineNumber":132,"author":{"gitId":"LeeEnEn"},"content":"        return \"Here are the list of commands that you can use:\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":133,"author":{"gitId":"LeeEnEn"},"content":"                + \"todo:\\nCreate a task eg. (todo homework)\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":134,"author":{"gitId":"LeeEnEn"},"content":"                + \"event:\\nCreate an event that has a starting date eg. (event Birthday Party /at 2022-04-04)\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":135,"author":{"gitId":"LeeEnEn"},"content":"                + \"deadline:\\nCreate an event with a deadline eg. (deadline Submit assignment /by 2022-02-18)\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":136,"author":{"gitId":"LeeEnEn"},"content":"                + \"list:\\nList all the current tasks that you have\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":137,"author":{"gitId":"LeeEnEn"},"content":"                + \"delete [ITEM NO.]:\\nDelete a task that is no longer needed in the list eg. (delete 2)\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":138,"author":{"gitId":"LeeEnEn"},"content":"                + \"mark/unmark [ITEM NO.]:\\nMark or unmark a task that is completed in the list eg. (mark 2)\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":139,"author":{"gitId":"LeeEnEn"},"content":"                + \"find [KEY]:\\nFind a task in the list corresponding to the keyword eg. (find homework)\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":140,"author":{"gitId":"LeeEnEn"},"content":"                + \"bye:\\nExits the application\";","lastModifiedDate":"2022-02-17"},{"lineNumber":141,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-17"},{"lineNumber":142,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":143,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"LeeEnEn"},"content":"     * Returns user commands as an Enum type.","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":146,"author":{"gitId":"LeeEnEn"},"content":"     * @param input User command.","lastModifiedDate":"2022-01-27"},{"lineNumber":147,"author":{"gitId":"LeeEnEn"},"content":"     * @return An Enum type corresponding to the user\u0027s command.","lastModifiedDate":"2022-01-27"},{"lineNumber":148,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":149,"author":{"gitId":"LeeEnEn"},"content":"    public Type getEnumType(String input) {","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"LeeEnEn"},"content":"        assert input !\u003d null : \"User command to get command type cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":151,"author":{"gitId":"LeeEnEn"},"content":"        assert input.length() \u003e 0 : \"User command to get command type cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":152,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":153,"author":{"gitId":"LeeEnEn"},"content":"        String temp \u003d input.toLowerCase();","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"LeeEnEn"},"content":"        Type type;","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"LeeEnEn"},"content":"        switch (temp) {","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"LeeEnEn"},"content":"        case \"bye\":","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.BYE;","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"LeeEnEn"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.DEADLINE;","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"LeeEnEn"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.DELETE;","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"LeeEnEn"},"content":"        case \"event\":","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.EVENT;","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"LeeEnEn"},"content":"        case \"find\":","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.FIND;","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"LeeEnEn"},"content":"        case \"help\":","lastModifiedDate":"2022-02-17"},{"lineNumber":173,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.HELP;","lastModifiedDate":"2022-02-17"},{"lineNumber":174,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-02-17"},{"lineNumber":175,"author":{"gitId":"LeeEnEn"},"content":"        case \"list\":","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.LIST;","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"LeeEnEn"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.MARK;","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"LeeEnEn"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.UNMARK;","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"LeeEnEn"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.TODO;","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"LeeEnEn"},"content":"            break;","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"LeeEnEn"},"content":"        default:","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"LeeEnEn"},"content":"            type \u003d Type.NULL;","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"LeeEnEn"},"content":"        return type;","lastModifiedDate":"2022-01-25"},{"lineNumber":192,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":193,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":194,"author":{"gitId":"LeeEnEn"},"content":"    public enum Type {","lastModifiedDate":"2022-01-25"},{"lineNumber":195,"author":{"gitId":"LeeEnEn"},"content":"        BYE,","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"LeeEnEn"},"content":"        DEADLINE,","lastModifiedDate":"2022-01-25"},{"lineNumber":197,"author":{"gitId":"LeeEnEn"},"content":"        DELETE,","lastModifiedDate":"2022-01-25"},{"lineNumber":198,"author":{"gitId":"LeeEnEn"},"content":"        EVENT,","lastModifiedDate":"2022-01-25"},{"lineNumber":199,"author":{"gitId":"LeeEnEn"},"content":"        FIND,","lastModifiedDate":"2022-01-27"},{"lineNumber":200,"author":{"gitId":"LeeEnEn"},"content":"        HELP,","lastModifiedDate":"2022-02-17"},{"lineNumber":201,"author":{"gitId":"LeeEnEn"},"content":"        LIST,","lastModifiedDate":"2022-01-25"},{"lineNumber":202,"author":{"gitId":"LeeEnEn"},"content":"        MARK,","lastModifiedDate":"2022-01-25"},{"lineNumber":203,"author":{"gitId":"LeeEnEn"},"content":"        UNMARK,","lastModifiedDate":"2022-01-25"},{"lineNumber":204,"author":{"gitId":"LeeEnEn"},"content":"        TODO,","lastModifiedDate":"2022-01-25"},{"lineNumber":205,"author":{"gitId":"LeeEnEn"},"content":"        NULL","lastModifiedDate":"2022-01-25"},{"lineNumber":206,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":207,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"LeeEnEn":207}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import java.io.File;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Event;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":" * Handles reading and writing of data.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"    private File file;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"     * Creates a Storage object that has access to the text file as specified by the filepath.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"     * @param filePath Path in which the text file is stored or to be stored.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"        assert filePath !\u003d null : \"Filepath cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"        assert filePath.length() \u003e 0 : \"Filepath cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"            file.createNewFile();","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"            System.out.println(\"Duke could not find the file! Please check the filepath again!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"     * Reads data from the text file and output it as a list of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"     * @return An array list consisting of all previously stored tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"    public ArrayList\u003cTask\u003e readData() {","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"                String[] temp \u003d scanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"                Task task;","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"                switch (temp[0]) {","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"                case \"D\":","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"                    task \u003d new Deadline(temp[2], LocalDate.parse(temp[3]));","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"                    break;","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"                case \"E\":","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"LeeEnEn"},"content":"                    task \u003d new Event(temp[2], LocalDate.parse(temp[3]));","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"LeeEnEn"},"content":"                    break;","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"LeeEnEn"},"content":"                default:","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"LeeEnEn"},"content":"                    task \u003d new Todo(temp[2]);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"LeeEnEn"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"                if (temp[1].equals(\"X\")) {","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"LeeEnEn"},"content":"                    task.markTask(true, false);","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"LeeEnEn"},"content":"                }","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"                list.add(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"            scanner.close();","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"LeeEnEn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"LeeEnEn"},"content":"            System.out.println(\"OOPS!!! Duke is unable to locate your file!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"        return list;","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"LeeEnEn"},"content":"     * Saves the current tasks into the text file as specified by the filepath.","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"LeeEnEn"},"content":"     * @param list List of tasks created by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"LeeEnEn"},"content":"    public void saveData(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"LeeEnEn"},"content":"        assert list !\u003d null : \"Task list to be save to text file cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"LeeEnEn"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"LeeEnEn"},"content":"            for (Task task: list) {","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"LeeEnEn"},"content":"                fileWriter.write(task.getCharId()","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"LeeEnEn"},"content":"                        + \"|\"","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"LeeEnEn"},"content":"                        + task.getMark()","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"LeeEnEn"},"content":"                        + \"|\"","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"LeeEnEn"},"content":"                        + task.getUserInput()","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"LeeEnEn"},"content":"                        + \"|\"","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"LeeEnEn"},"content":"                        + task.getDate()","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"LeeEnEn"},"content":"                        + \"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"LeeEnEn"},"content":"            fileWriter.close();","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"LeeEnEn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"LeeEnEn"},"content":"            System.out.println(\"OOPS!!! Duke is unable to write to your file!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"LeeEnEn":105}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":" * Represents a Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"     * Creates a Deadline object with description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"     * @param date Date in which the task is due.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"        super(description, \"D\", date);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"        assert description !\u003d null : \"Description of deadline cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"        assert description.length() \u003e 0 : \"Body of deadline cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"        assert date !\u003d null : \"Deadline date cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"     * Prints out the details of the Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string with details of the Deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"                + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"LeeEnEn":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":" * Represents an Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"     * Creates an Event object with description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"     * @param date Date in which the task is due.","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"    public Event(String description, LocalDate date) {","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"        super(description, \"E\", date);","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"        assert description !\u003d null : \"Description of event cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"        assert description.length() \u003e 0 : \"Body of event cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"        assert date !\u003d null : \"Event date cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"     * Prints out the details of the Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string with details of the Event task.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"                + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"LeeEnEn":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":" * Handles the creation of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"public class Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"    private boolean isMarked;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"    private final String description;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"    private final String charId;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"     * Creates a Task object with the relevant details.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"     * @param charId A character corresponding to the type of task created.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"     * @param date Date in which the task is due.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"    public Task(String description, String charId, LocalDate date) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"        this.charId \u003d charId;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"     * Marks the task as completed or incomplete.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"     * @param toMark A boolean to mark or unmark a task.","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"     * @param toShow A boolean to print Duke\u0027s reply to the user.","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"    public String markTask(boolean toMark, boolean toShow) {","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"        this.isMarked \u003d toMark;","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"        String output;","lastModifiedDate":"2022-01-18"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"        if (toShow) {","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"            if (toMark) {","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"                output \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"            } else {","lastModifiedDate":"2022-01-18"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"                output \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2022-01-18"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-01-18"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"            return output + toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"        return \"\";","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"     * Returns \u0027X\u0027 if the task is mark, a space, \u0027 \u0027 otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"     * @return \u0027X\u0027 if the task is mark, a space, \u0027 \u0027 otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"    public char getMark() {","lastModifiedDate":"2022-01-18"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"        return this.isMarked ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"     * Returns a description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"LeeEnEn"},"content":"     * @return A description of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"LeeEnEn"},"content":"    public String getUserInput() {","lastModifiedDate":"2022-01-18"},{"lineNumber":64,"author":{"gitId":"LeeEnEn"},"content":"        return this.description;","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"LeeEnEn"},"content":"     * Returns the char representation of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"     * @return The char representation of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"    public String getCharId() {","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"LeeEnEn"},"content":"        return this.charId;","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"LeeEnEn"},"content":"     * Returns the date in which the task is due.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"LeeEnEn"},"content":"     * @return The date in which the task is due.","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"LeeEnEn"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"LeeEnEn"},"content":"        return this.date;","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"LeeEnEn"},"content":"     * Prints out the details of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string with details of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"LeeEnEn"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":91,"author":{"gitId":"LeeEnEn"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":92,"author":{"gitId":"LeeEnEn"},"content":"        return \"[\" + getMark() + \"] \" + getUserInput();","lastModifiedDate":"2022-01-18"},{"lineNumber":93,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":94,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"LeeEnEn":94}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.task;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":" * Represents a Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"     * Creates A Todo object with details of the task.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"        super(description, \"T\", null);","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"        assert description !\u003d null : \"Description of todo cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"        assert description.length() \u003e 0 : \"Body of todo cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"     * Prints out the details of the Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string with details of the Todo task.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"    public String toString() {","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"LeeEnEn":28}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.tasklist;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":" * Handles the execution of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"public class TaskList {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"    private static ArrayList\u003cTask\u003e list \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"     * Creates a TaskList object that initializes a new list if list was not null.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"        if (list \u003d\u003d null) {","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"            list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"    public String add(Task task) {","lastModifiedDate":"2022-02-17"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"        assert task !\u003d null : \"Task to be added cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"        list.add(task);","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"        return \"Got it, I have added \" + task.getUserInput() + \" to the list!\\n\\n\"","lastModifiedDate":"2022-02-17"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"                + task","lastModifiedDate":"2022-02-17"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2022-02-17"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"                + list.size()","lastModifiedDate":"2022-02-17"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2022-02-17"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"     * Checks if the task at hand is a duplicate, return true, false otherwise.","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"     * @return True if task is a duplicate, false otherwise.","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"    public boolean isTaskDuplicate(Task task) {","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"        for (Task tasks: list) {","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"            String taskDescription \u003d tasks.getUserInput();","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"            if (taskDescription.equals(task.getUserInput())) {","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"                return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"        return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"     * Removes a specific task in the list.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"LeeEnEn"},"content":"     * @param input Input given by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string reply that indicates the removal of task from the list.","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"LeeEnEn"},"content":"    public String delete(String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"LeeEnEn"},"content":"        assert input !\u003d null : \"Input from user to delete a task cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"        assert input.length() \u003e 0 : \"Input from user to delete a task  cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"            int i \u003d Integer.parseInt(input.strip()) - 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"            String description \u003d list.get(i).toString();","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"LeeEnEn"},"content":"            list.remove(i);","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"LeeEnEn"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + description + \"\\nNow you have \"","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"LeeEnEn"},"content":"                    + list.size() + \" tasks in the list.\";","lastModifiedDate":"2022-02-06"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"LeeEnEn"},"content":"            return \"Please enter a valid task number!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"LeeEnEn"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":84,"author":{"gitId":"LeeEnEn"},"content":"     * @return The list of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"LeeEnEn"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"LeeEnEn"},"content":"        return list;","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"LeeEnEn"},"content":"     * Marks the task to be completed in the list.","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":93,"author":{"gitId":"LeeEnEn"},"content":"     * @param input Input given by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":94,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string reply that notifies the user that the task is marked.","lastModifiedDate":"2022-02-06"},{"lineNumber":95,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"LeeEnEn"},"content":"    public String markTask(String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":97,"author":{"gitId":"LeeEnEn"},"content":"        assert input !\u003d null : \"Input from user to mark a task cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"LeeEnEn"},"content":"        assert input.length() \u003e 0 : \"Input from user to mark a task cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":101,"author":{"gitId":"LeeEnEn"},"content":"            int i \u003d Integer.parseInt(input.strip()) - 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":102,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":103,"author":{"gitId":"LeeEnEn"},"content":"            if (i \u003c 0 || i \u003e\u003d list.size()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":104,"author":{"gitId":"LeeEnEn"},"content":"                throw new DukeException(\"Duke has noticed that the number you provided does not \"","lastModifiedDate":"2022-02-06"},{"lineNumber":105,"author":{"gitId":"LeeEnEn"},"content":"                        + \"match the number of task you have.\\nPlease enter a valid task number!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":106,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":107,"author":{"gitId":"LeeEnEn"},"content":"            return list.get(i).markTask(true, true);","lastModifiedDate":"2022-02-06"},{"lineNumber":108,"author":{"gitId":"LeeEnEn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":109,"author":{"gitId":"LeeEnEn"},"content":"            return \"OOPS!!! Please enter a valid task number!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":110,"author":{"gitId":"LeeEnEn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":111,"author":{"gitId":"LeeEnEn"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":112,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":113,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"LeeEnEn"},"content":"     * Unmarks the task in the list.","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":118,"author":{"gitId":"LeeEnEn"},"content":"     * @param input Input given by the user.","lastModifiedDate":"2022-02-06"},{"lineNumber":119,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string reply that notifies the user that the task is unmarked.","lastModifiedDate":"2022-02-06"},{"lineNumber":120,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"LeeEnEn"},"content":"    public String unMarkTask(String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":122,"author":{"gitId":"LeeEnEn"},"content":"        assert input !\u003d null : \"Input from user to unmark a task cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"LeeEnEn"},"content":"        assert input.length() \u003e 0 : \"Input from user to unmark a task cannot be empty.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":126,"author":{"gitId":"LeeEnEn"},"content":"            int i \u003d Integer.parseInt(input.strip()) - 1;","lastModifiedDate":"2022-02-06"},{"lineNumber":127,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":128,"author":{"gitId":"LeeEnEn"},"content":"            if (i \u003c 0 || i \u003e\u003d list.size()) {","lastModifiedDate":"2022-02-06"},{"lineNumber":129,"author":{"gitId":"LeeEnEn"},"content":"                throw new DukeException(\"Duke has noticed that the number you provided does not \"","lastModifiedDate":"2022-02-06"},{"lineNumber":130,"author":{"gitId":"LeeEnEn"},"content":"                        + \"match the number of task you have.\\nPlease enter a valid task number!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":131,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-02-06"},{"lineNumber":132,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":133,"author":{"gitId":"LeeEnEn"},"content":"            return list.get(i).markTask(false, true);","lastModifiedDate":"2022-02-06"},{"lineNumber":134,"author":{"gitId":"LeeEnEn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":135,"author":{"gitId":"LeeEnEn"},"content":"            return \"OOPS!!! Please enter a valid task number!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":136,"author":{"gitId":"LeeEnEn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":137,"author":{"gitId":"LeeEnEn"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-06"},{"lineNumber":138,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":139,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"LeeEnEn"},"content":"     * Returns a list of tasks in detail in the order which it was added.","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":144,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string reply consisting of all the tasks in the list.","lastModifiedDate":"2022-02-06"},{"lineNumber":145,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"LeeEnEn"},"content":"    public String readList() {","lastModifiedDate":"2022-02-06"},{"lineNumber":147,"author":{"gitId":"LeeEnEn"},"content":"        StringBuilder listBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":148,"author":{"gitId":"LeeEnEn"},"content":"        listBuilder.append(\"Here are the task in your list:\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":149,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":150,"author":{"gitId":"LeeEnEn"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"LeeEnEn"},"content":"            listBuilder.append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":152,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":154,"author":{"gitId":"LeeEnEn"},"content":"        return String.valueOf(listBuilder);","lastModifiedDate":"2022-02-06"},{"lineNumber":155,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":158,"author":{"gitId":"LeeEnEn"},"content":"     * Populate the list with tasks saved in the text file.","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":160,"author":{"gitId":"LeeEnEn"},"content":"     * @param data Tasks from the text file to be populated into the list.","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"LeeEnEn"},"content":"    public void fetchData(ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"LeeEnEn"},"content":"        assert data !\u003d null : \"Data from text file cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":164,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":165,"author":{"gitId":"LeeEnEn"},"content":"        list.clear();","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"LeeEnEn"},"content":"        list.addAll(data);","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"LeeEnEn"},"content":"     * Finds a task by searching for a keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-02-06"},{"lineNumber":172,"author":{"gitId":"LeeEnEn"},"content":"     * @param input Keyword specified by the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"LeeEnEn"},"content":"     * @return A string reply consisting of all the tasks that corresponds to the keyword in the list.","lastModifiedDate":"2022-02-06"},{"lineNumber":174,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"LeeEnEn"},"content":"    public String find(String input) {","lastModifiedDate":"2022-02-06"},{"lineNumber":176,"author":{"gitId":"LeeEnEn"},"content":"        assert input !\u003d null : \"Input from user to find a task cannot be null.\";","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"LeeEnEn"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":179,"author":{"gitId":"LeeEnEn"},"content":"        StringBuilder listBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-02-06"},{"lineNumber":180,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":181,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":182,"author":{"gitId":"LeeEnEn"},"content":"            if (input.equals(\"\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"LeeEnEn"},"content":"                throw new DukeException(\"Find command cannot have an empty body!\");","lastModifiedDate":"2022-02-06"},{"lineNumber":184,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"LeeEnEn"},"content":"            if (list.size() !\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"LeeEnEn"},"content":"                listBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":187,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":188,"author":{"gitId":"LeeEnEn"},"content":"                for (Task task: list) {","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"LeeEnEn"},"content":"                    LocalDate date \u003d task.getDate();","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"LeeEnEn"},"content":"                    if (task.getUserInput().contains(input)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"LeeEnEn"},"content":"                        listBuilder.append(++i).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":193,"author":{"gitId":"LeeEnEn"},"content":"                        continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":194,"author":{"gitId":"LeeEnEn"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":195,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":196,"author":{"gitId":"LeeEnEn"},"content":"                    if (date !\u003d null) {","lastModifiedDate":"2022-01-27"},{"lineNumber":197,"author":{"gitId":"LeeEnEn"},"content":"                        if (date.toString().contains(input)","lastModifiedDate":"2022-01-27"},{"lineNumber":198,"author":{"gitId":"LeeEnEn"},"content":"                                || date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).contains(input)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":199,"author":{"gitId":"LeeEnEn"},"content":"                            listBuilder.append(++i).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2022-02-06"},{"lineNumber":200,"author":{"gitId":"LeeEnEn"},"content":"                        }","lastModifiedDate":"2022-01-27"},{"lineNumber":201,"author":{"gitId":"LeeEnEn"},"content":"                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":202,"author":{"gitId":"LeeEnEn"},"content":"                }","lastModifiedDate":"2022-01-27"},{"lineNumber":203,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":204,"author":{"gitId":"LeeEnEn"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"LeeEnEn"},"content":"                return \"Duke searched high and low but could not find the task that you want!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":206,"author":{"gitId":"LeeEnEn"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"LeeEnEn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"LeeEnEn"},"content":"            return \"OOPS!!! The description of the find command cannot be empty!\";","lastModifiedDate":"2022-02-06"},{"lineNumber":209,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":210,"author":{"gitId":"LeeEnEn"},"content":"        return String.valueOf(listBuilder);","lastModifiedDate":"2022-02-06"},{"lineNumber":211,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"LeeEnEn":212}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-17"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-17"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"     * Creates a DialogBox object to store user command and Duke reply.","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"     * @param text User command or Duke response.","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"     * @param img User image or Duke image","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"    public DialogBox(String text, Image img, Color color, Boolean isUser) {","lastModifiedDate":"2022-02-17"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-06"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"        dialog.setFont(Font.font(\"Verdana\", 15));","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"        dialog.setMinSize(0, 30);","lastModifiedDate":"2022-02-17"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"        dialog.setPadding(new Insets(10, 15, 10, 15));","lastModifiedDate":"2022-02-17"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"        dialog.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2022-02-17"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"                color,","lastModifiedDate":"2022-02-17"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"                new CornerRadii(20),","lastModifiedDate":"2022-02-17"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"                null","lastModifiedDate":"2022-02-17"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"        )));","lastModifiedDate":"2022-02-17"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"        Circle clip \u003d new Circle(35, 35, 35);","lastModifiedDate":"2022-02-17"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-02-17"},{"lineNumber":61,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"LeeEnEn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"LeeEnEn"},"content":"    private void flip() {","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"LeeEnEn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"LeeEnEn"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"LeeEnEn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":74,"author":{"gitId":"LeeEnEn"},"content":"        Color color \u003d new Color(0.2, 0.8, 0.8, .95);","lastModifiedDate":"2022-02-17"},{"lineNumber":75,"author":{"gitId":"LeeEnEn"},"content":"        DialogBox db \u003d new DialogBox(text, img, color, true);","lastModifiedDate":"2022-02-17"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"        db.setSpacing(12);","lastModifiedDate":"2022-02-17"},{"lineNumber":77,"author":{"gitId":"LeeEnEn"},"content":"        db.setPadding(new Insets(10, 10, 15, 20));","lastModifiedDate":"2022-02-17"},{"lineNumber":78,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"LeeEnEn"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":80,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":81,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":82,"author":{"gitId":"LeeEnEn"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-06"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"        Color color \u003d new Color(0.8, 0.8, 0.8, .95);","lastModifiedDate":"2022-02-17"},{"lineNumber":84,"author":{"gitId":"LeeEnEn"},"content":"        DialogBox db \u003d new DialogBox(text, img, color, false);","lastModifiedDate":"2022-02-17"},{"lineNumber":85,"author":{"gitId":"LeeEnEn"},"content":"        db.setSpacing(12);","lastModifiedDate":"2022-02-17"},{"lineNumber":86,"author":{"gitId":"LeeEnEn"},"content":"        db.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2022-02-17"},{"lineNumber":87,"author":{"gitId":"LeeEnEn"},"content":"        db.flip();","lastModifiedDate":"2022-02-06"},{"lineNumber":88,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":89,"author":{"gitId":"LeeEnEn"},"content":"        return db;","lastModifiedDate":"2022-02-06"},{"lineNumber":90,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":91,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"LeeEnEn":91}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-06"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"    private final Duke duke \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"    @Override","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"        try {","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-17"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"            stage.getIcons().add(new Image(getClass().getResourceAsStream(\"/images/background.png\")));","lastModifiedDate":"2022-02-17"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"            stage.show();","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"LeeEnEn":35}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.ui;","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import duke.main.Duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-17"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.BackgroundPosition;","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.BackgroundRepeat;","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2022-02-17"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-02-06"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-06"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-06"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-06"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-06"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-06"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-06"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-06"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-06"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-06"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-06"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"        dialogContainer.setBackground(new Background(new BackgroundImage(","lastModifiedDate":"2022-02-17"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"                new Image(getClass().getResourceAsStream(\"/images/background.png\")),","lastModifiedDate":"2022-02-17"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"                BackgroundRepeat.REPEAT,","lastModifiedDate":"2022-02-17"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"                BackgroundRepeat.REPEAT,","lastModifiedDate":"2022-02-17"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"                BackgroundPosition.CENTER,","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"                BackgroundSize.DEFAULT","lastModifiedDate":"2022-02-17"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"        )));","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"        showInitialMessage();","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"    private void showInitialMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"        String input \u003d \"Hello! This is Duke, what can I do for you?\";","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"                DialogBox.getDukeDialog(input, dukeImage)","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"        );","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-02-06"},{"lineNumber":61,"author":{"gitId":"LeeEnEn"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"LeeEnEn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-06"},{"lineNumber":63,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-02-06"},{"lineNumber":64,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-02-06"},{"lineNumber":65,"author":{"gitId":"LeeEnEn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-06"},{"lineNumber":66,"author":{"gitId":"LeeEnEn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-06"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-06"},{"lineNumber":68,"author":{"gitId":"LeeEnEn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-06"},{"lineNumber":69,"author":{"gitId":"LeeEnEn"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-06"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-06"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"        );","lastModifiedDate":"2022-02-06"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-06"},{"lineNumber":73,"author":{"gitId":"LeeEnEn"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"LeeEnEn"},"content":"            duke.saveData();","lastModifiedDate":"2022-02-06"},{"lineNumber":75,"author":{"gitId":"LeeEnEn"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2022-02-06"},{"lineNumber":77,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-02-06"},{"lineNumber":78,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-02-06"},{"lineNumber":79,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"LeeEnEn":79}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.ui;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":" * Handles outputting of visuals to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"public class Ui {","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"    private String hLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"     * Shows a welcome message to the user upon running the program.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"        System.out.println(hLine + \"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"        System.out.println(logo + \"\\nHello! I\u0027m Duke.Main.Duke\\nWhat can I do for you?\");","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"        System.out.println(hLine + \"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"    public void goodbye() {","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"        echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"     * Prints the message between two horizontal lines.","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"     * @param input Message to be printed.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"    public void echo(String input) {","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"        showLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"        System.out.println(input);","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"        showLine();","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"     * Prints a horizontal dash to mark the start or end of a message.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"    public void showLine() {","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"        System.out.println(hLine + \"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"LeeEnEn":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"420.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"LeeEnEn":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"670.0\" prefWidth\u003d\"420.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"628.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"344.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"344.0\" layoutY\u003d\"628.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"627.0\" prefWidth\u003d\"420.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" minHeight\u003d\"627\" prefWidth\u003d\"420.0\" /\u003e","lastModifiedDate":"2022-02-17"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-06"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-06"}],"authorContributionMap":{"LeeEnEn":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"    public void deadlineTestString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-03-04\");","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"        Deadline deadline \u003d new Deadline(\"Return book\", date);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"        assertEquals(\"[D][ ] Return book (by: Mar 4 2022)\", deadline.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"LeeEnEn":18}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"public class EventTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"    public void eventTestString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-01-01\");","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"        Event event \u003d new Event(\"New Year party\", date);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"        assertEquals(\"[E][ ] New Year party (at: Jan 1 2022)\", event.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"LeeEnEn":18}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"package duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"public class TodoTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"    public void todoTestString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"        assertEquals(\"[T][ ] Read book\", todo.toString());","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"LeeEnEn":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"todo read book","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"todo buy milk","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"event birthday party /at Tuesday","lastModifiedDate":"2022-01-18"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"deadline return book /by Wednesday","lastModifiedDate":"2022-01-18"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"mark 1","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"mark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"mark 4","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"event sports meet /at Jan 21","lastModifiedDate":"2022-01-18"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"list","lastModifiedDate":"2022-01-18"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"unmark 2","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"bye","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"LeeEnEn":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"java -classpath ..\\bin duke.main.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LeeEnEn":1,"-":20}}]
