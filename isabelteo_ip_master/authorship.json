[{"path":"src/main/java/seedu/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"     * Attribute enddate tracks the deadline input for the task.","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"    private final String endDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"     * Creates a deadline.","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"     * @param taskName for task name","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"     * @param date for end date","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    Deadline(String taskName, String date) {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"        super(taskName, false);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"        this.endDate \u003d date;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"     * Used to help adjust the done status.","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"     * @param oldDeadline to extract task name and date","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"     * @param done for specified boolean","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    Deadline(Deadline oldDeadline, boolean done) {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        super(oldDeadline.getTaskName(), done);","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        this.endDate \u003d oldDeadline.getDate();","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"     * Returns date as a string.","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"     * @return String date","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    String getDate() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        return this.endDate;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"     * returns a new Task with the specified attribute \u0027done\u0027 based on boolean \u0027status\u0027.","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"     * @param status to provide boolean","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"     * @return new Task with specified boolean for attribute \u0027done\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"    public Task changeTaskStatus(boolean status) {","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        return new Deadline(this, status);","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"     * prints the task string with [D] to annotate.","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"     * @return String task information","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"isabelteo":55}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.NoCommandException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.NoDateException;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" * Functions as the chatbot by taking in inputs.","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" * Also helps in giving out specificed outputs.","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"class Duke {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        String name \u003d in.nextLine();","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Hello \" + name);","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2022-01-16"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"                if (command.startsWith(\"list\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"                    //if equal list, print all in commandTracker","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"                    taskList.printTasks();","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"                    //if command mark is used,","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"                    // then we mark the specified task as done","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"                    int indexAfterCommand \u003d 5;","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"                    taskList \u003d taskList","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"                            .mark(Integer","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"                                    .parseInt(command","lastModifiedDate":"2022-01-21"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"                                            .substring(indexAfterCommand, indexAfterCommand + 1)) - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"                    //command.substring(6) cuts out the command \"mark \"","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"                    //if command unmark is used,","lastModifiedDate":"2022-01-21"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"                    // then we mark the specified task as undone","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"                    int indexAfterCommand \u003d 7;","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"                    taskList \u003d taskList.unmark(Integer","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"                            .parseInt(command","lastModifiedDate":"2022-01-21"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"                                    .substring(indexAfterCommand)) - 1);","lastModifiedDate":"2022-01-21"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"                    //command.substring(6) cuts out the command \"unmark \"","lastModifiedDate":"2022-01-16"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"                } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-21"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"                    //if not, just add task to taskList","lastModifiedDate":"2022-01-21"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"                    //command is given as \"todo \u003ctaskIndex\u003e\"","lastModifiedDate":"2022-01-21"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"                    int indexTaskName \u003d 5;","lastModifiedDate":"2022-01-21"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"                    String taskName \u003d command.substring(indexTaskName);","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"                    Task newTask \u003d new ToDo(taskName);","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"                    //command.substring(5) cuts out the command","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"                    taskList \u003d taskList.add(newTask);","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"                } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"                    int indexTaskName \u003d 9;","lastModifiedDate":"2022-01-21"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"                    //command is given as e.g. \"deadline return book /by Sunday\"","lastModifiedDate":"2022-01-21"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"                    int slashIndex \u003d command.indexOf(\"/\");","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"                    if (slashIndex \u003d\u003d -1) {","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"                        throw new NoDateException();","lastModifiedDate":"2022-01-21"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"                    String taskName \u003d command","lastModifiedDate":"2022-01-21"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"                            .substring(indexTaskName, slashIndex);","lastModifiedDate":"2022-01-21"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"                    String date \u003d command.substring(slashIndex + 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"                    Task newTask \u003d new Deadline(taskName, date);","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"                    taskList \u003d taskList.add(newTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"                } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"                    int indexTaskName \u003d 6;","lastModifiedDate":"2022-01-21"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"                    //event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-01-21"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"                    int slashIndex \u003d command.indexOf(\"/\");","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"                    if (slashIndex \u003d\u003d -1) {","lastModifiedDate":"2022-01-21"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"                        throw new NoDateException();","lastModifiedDate":"2022-01-21"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"                    String taskName \u003d command","lastModifiedDate":"2022-01-21"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"                            .substring(indexTaskName, slashIndex);","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"                    String date \u003d command.substring(slashIndex + 3);","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"                    //+2 is because of \"at \" that occurs before the date","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"                    Task newTask \u003d new Event(taskName, date);","lastModifiedDate":"2022-01-20"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"                    taskList \u003d taskList.add(newTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"                } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-20"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"                    int indexTaskName \u003d 7;","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"                    //command is given as \"delete \u003ctaskIndex\u003e\"","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"                    int index \u003d Integer","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"                            .parseInt(command","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"                                    .substring(indexTaskName, indexTaskName + 1));","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"                    taskList \u003d taskList.delete(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"                } else {","lastModifiedDate":"2022-01-17"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"                    throw new NoCommandException();","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"            } catch (NoCommandException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"                System.out.println(\"Sorry I don\u0027t understand :(\");","lastModifiedDate":"2022-01-21"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"                System.out.println(\"Oh no! You didn\u0027t give me a task.\");","lastModifiedDate":"2022-01-21"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"            } catch (NoDateException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"                System.out.println(\"I don\u0027t you gave me a valid date\");","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-01-16"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"            command \u003d in.nextLine();","lastModifiedDate":"2022-01-16"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"        System.out.println(String.format(\"Bye %s. See you again soon!\", name));","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":19,"isabelteo":89}},{"path":"src/main/java/seedu/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"public class Event extends Deadline {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"     * creates a new Event.","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"     * @param taskName for name of task","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * @param date for data that includes start date and end date of task","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    Event(String taskName, String date) {","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"        super(taskName, date);","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * creates a new Event object with specified boolean as attribute \u0027done\u0027.","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * @param oldEvent to get information like task name more efficiently","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * @param status to provide a specified boolean for attribute \u0027done\u0027 in new event","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    Event(Event oldEvent, boolean status) {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        super(oldEvent, status);","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * Returns a new task with specified boolean as the done attribute.","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     * @param status that provides a specified boolean for the new task","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"     * @return new Task with updated \u0027done\u0027 attribute","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    public Task changeTaskStatus(boolean status) {","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        return new Event(this, status);","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"        return \"[E]\" + super.toString().substring(3);","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        //get rid of [D] in deadline substring","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"isabelteo":38}},{"path":"src/main/java/seedu/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"     * taskName refers to the name of the task.","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"    private final String taskName;","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"     * done records if a task has been marked as complete.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    private final boolean done;","lastModifiedDate":"2022-01-16"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * Constructor for a task.","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * @param name refers to the task name","lastModifiedDate":"2022-01-16"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    Task(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * Constructor for a task that consists of task name and boolean done for task status.","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     * @param name refers to the task name","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"     * @param doneStatus refers to the boolean that tracks if a task is complete","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    Task(String name, boolean doneStatus) {","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        this.done \u003d doneStatus;","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * Checks whether the task has been completed.","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     * @return boolean of this done.","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        return done;","lastModifiedDate":"2022-01-16"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"     * Gets the taskName of the taskList.","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"     * @return String task name","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    String getTaskName() {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"     * Marks task as done.or undone.","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"     * @return new Task with done attribute as the boolean parameter","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"    public abstract Task changeTaskStatus(boolean status);","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"     * prints task.","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"     * @return String with task type, status and name","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"        String marked \u003d this.isDone() ? \"X\" : \" \";","lastModifiedDate":"2022-01-16"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        return String.format(\"[%s] %s\", marked, this.taskName);","lastModifiedDate":"2022-01-16"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"isabelteo":64}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke;","lastModifiedDate":"2022-01-16"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":" * TaskList is used to track all tasks taken in by Duke.","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"public class TaskList {","lastModifiedDate":"2022-01-16"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"     *An array that contains all tasks that will be added.","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * Constructor for TaskList with no parameters.","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"     * Creates a {@link TaskList} with attribute tasks being specified as a given {@link ArrayList}.","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     * @param newTaskList is an {@link ArrayList} of {@link Task}.","lastModifiedDate":"2022-01-21"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"    TaskList(ArrayList\u003cTask\u003e newTaskList) {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        this.tasks \u003d newTaskList;","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"     * returns the number of tasks in the {@link ArrayList} of {@link Task}.","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"     * @return an integer specifying the number of tasks","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    int getNumberOfTasks() {","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"     * Used to print all tasks when command \"list\" is called in Duke.","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    void printTasks() {","lastModifiedDate":"2022-01-16"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Here is your to-do:\");","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfTasks(); i++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"            System.out.println(String","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"                    .format(\"%d . %s\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"     * Used to preserve immutability.","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"     * @return {@link ArrayList}, a copy of this","lastModifiedDate":"2022-01-21"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    ArrayList\u003cTask\u003e copyTaskList() {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        return new ArrayList\u003cTask\u003e(this.tasks);","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"     * @param index where task to be marked is at in TaskList","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"     * @return TaskList with updated {@link ArrayList}","lastModifiedDate":"2022-01-21"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"    TaskList mark(int index) {","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"            Task taskToUpdate \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"            if (taskToUpdate.isDone()) {","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"                System.out","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"                        .println(\"Oh hmm...you finished it already though...what a trooper!\");","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"                return this;","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"            Task newTask \u003d taskToUpdate.changeTaskStatus(true);","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"            //create same size array since we are just adjusting values in the same array","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"            ArrayList\u003cTask\u003e newTasks \u003d this.copyTaskList();","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"            newTasks.set(index, newTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"            System.out.println(String","lastModifiedDate":"2022-01-17"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"                    .format(\"Nice! I\u0027ve marked this task as done: \\n%s\", newTask.toString()));","lastModifiedDate":"2022-01-17"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"            return new TaskList(newTasks);","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"            System.out","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"                    .println(\"Not so fast! I don\u0027t think that task exists! See for yourself\");","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"            this.printTasks();","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"            return this;","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"     * Marks a task as undone.","lastModifiedDate":"2022-01-17"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"     * @param index where the task to be unmarked is at in TaskList","lastModifiedDate":"2022-01-17"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"     * @return TaskList with updated {@link ArrayList}","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"    TaskList unmark(int index) {","lastModifiedDate":"2022-01-17"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"            Task taskToUpdate \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"            if (!taskToUpdate.isDone()) { //if task is already unmarked","lastModifiedDate":"2022-01-17"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"                System.out","lastModifiedDate":"2022-01-17"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"                        .println(\"It seems like you haven\u0027t marked it as done yet...\");","lastModifiedDate":"2022-01-17"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"                return this;","lastModifiedDate":"2022-01-17"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-01-17"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"            Task newTask \u003d taskToUpdate.changeTaskStatus(false);","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"            ArrayList\u003cTask\u003e newTasks \u003d this.copyTaskList();","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"            newTasks.set(index, newTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"            System.out.println(String","lastModifiedDate":"2022-01-17"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"                    .format(\"OK, I\u0027ve marked this task as not done yet:\\n %s\", newTask.toString()));","lastModifiedDate":"2022-01-17"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"            return new TaskList(newTasks);","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"            System.out","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"                    .println(\"Not so fast! I don\u0027t think that task exists! See for yourself\");","lastModifiedDate":"2022-01-20"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"            this.printTasks();","lastModifiedDate":"2022-01-20"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"            return this;","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"     * Adds tasks to TaskList.","lastModifiedDate":"2022-01-17"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"     * @param task is the one to be added to TaskList","lastModifiedDate":"2022-01-21"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"     * @return new TaskList with increased size to accomodate newTask","lastModifiedDate":"2022-01-17"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"    TaskList add(Task task) {","lastModifiedDate":"2022-01-17"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"        //increase size of taskList by 1","lastModifiedDate":"2022-01-17"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cTask\u003e newTasks \u003d this.copyTaskList();","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"        newTasks.add(task);","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"        System.out.println(String","lastModifiedDate":"2022-01-20"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"                .format(\"Got it, I\u0027ve added this task: \\n %s\\nNow you have %d task in the list\",","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"                        task.toString(),","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"                        this.getNumberOfTasks() + 1));","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"        return new TaskList(newTasks);","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"     * Deletes task from TaskList.","lastModifiedDate":"2022-01-21"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"     * @param index of task to be deleted from TaskList","lastModifiedDate":"2022-01-21"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"     * @return new {@link TaskList} with specified task deleted","lastModifiedDate":"2022-01-21"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"    TaskList delete(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"        //increase size of taskList by 1","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.copyTaskList();","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"        Task taskToRemove \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"        updatedTasks.remove(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"        System.out.println(String","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"                .format(\"Got it, I\u0027ve deleted this task: \\n %s\\nNow you have %d task in the list\",","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"                        taskToRemove.toString(),","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"                        this.getNumberOfTasks() - 1));","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"isabelteo":148}},{"path":"src/main/java/seedu/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"    private boolean status;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * used to construct a ToDo object.","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     * @param taskName which specifies name of task","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    ToDo(String taskName) {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"        super(taskName, false);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * used to construct a ToDo with a specified boolean.","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * @param oldToDo for a ToDo object","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     * @param done to specify a boolean","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    ToDo(ToDo oldToDo, boolean done) {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"        super(oldToDo.getTaskName(), done);","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     * returns new task with specified boolean as status.","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"     * @param status gives a specified boolean","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"     * @return new Task with adjusted boolean","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    public Task changeTaskStatus(boolean status) {","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        return new ToDo(this, status);","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"isabelteo":38}},{"path":"src/main/java/seedu/duke/exceptions/NoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * The commandNotFullException is used when no command words were used or invalid/misspelled ones were given.","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"public class NoCommandException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * parameterless constructor for NoCommandException.","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public NoCommandException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"     * A constructor for NoCommandException.","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * @param errorMessage for more information about the error.","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    NoCommandException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"isabelteo":20}},{"path":"src/main/java/seedu/duke/exceptions/NoDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * The NoDateException is thrown when for commands which requires dates.","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"public class NoDateException extends Exception {","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     * parameterless constructor for NoDateException.","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    public NoDateException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * a constructor for NoDateException.","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * @param errorMessage for more information about the error.","lastModifiedDate":"2022-01-21"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-21"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    NoDateException(String errorMessage) {","lastModifiedDate":"2022-01-21"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"        super(errorMessage);","lastModifiedDate":"2022-01-21"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"isabelteo":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"bel","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"todo","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"deadline return books","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"event return books","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"blah","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"todo return books","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"deadline pass books /Sunday","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"event project meeting /Mon 2-4pm","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"unmark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"unmark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"mark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"mark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"bye","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"isabelteo":16}}]
