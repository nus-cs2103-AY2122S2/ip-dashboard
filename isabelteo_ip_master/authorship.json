[{"path":"src/data/oldTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"D 0 return book / 2020-12-01 18:00","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"E 0 tutorial / 2020-08-01 09:00","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"T 0 Ask for help      ","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"D 0 buy new water  / 2019-05-02 05:00","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"T 0 play      ","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":5}},{"path":"src/main/java/seedu/duke/chatbot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.chatbot;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" * Functions as the chatbot by taking in inputs.","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":" * Also helps in giving out specified outputs.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"public class Duke {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    private Storage storage;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    private Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"     * Creates the chatbot.","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"     * @param filePath which provides the path to the database, a txt file storing old tasks","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        this.storage \u003d new Storage(filePath, ui);","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"            this.taskList \u003d storage.getOldTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * Starts the chatbot by taking in commands and executing them.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    public void run() {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"        String name  \u003d ui.showWelcome();","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        Parser parser \u003d new Parser(name);","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"        while (!isExit) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"            try {","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"                Command c \u003d parser.parse(fullCommand); //read the full command and return the command","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"                this.taskList \u003d c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"     * Runs the chatbot Duke with a specified path to the database file.","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        String filePath \u003d \"C:\\\\Users\\\\isabe\\\\IdeaProjects\\\\ip-false\\\\src\\\\data\\\\oldTasks.txt\";","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"isabelteo":54}},{"path":"src/main/java/seedu/duke/chatbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.chatbot;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.AddCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.FindCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.MarkCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.command.UnmarkCommand;","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.IncompleteCommandException;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.NoCommandException;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.NoDateException;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.NoValidTaskIndexException;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.ToDo;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":" * Handles commands from users in String and filters the information needed to create {@link Command}","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"public class Parser {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    private final String userName;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * Creates a Parser, which processes command inputs from users, given in String.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     * @param userName which is the name input by the user","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    Parser(String userName) {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"     *Parses string commands from user into information needed to execute the command.","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"     * @param command which is a string input by the user with a command keyword.","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"     * @return {@link Command } which starts the execution of the command","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if an unknown command keyword or incomplete command is given","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    Command parse(String command) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"        if (command.startsWith(\"list\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"            return new ListCommand();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"            int indexToMark \u003d this.parseForMark(command);","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"            return new MarkCommand(indexToMark);","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"            int indexToUnmark \u003d this.parseForUnmark(command);","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"            return new UnmarkCommand(indexToUnmark);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"            Task newTask \u003d this.parseForTodo(command);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"            Task newTask \u003d this.parseForDeadline(command);","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"            Task newTask \u003d this.parseForEvent(command);","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"            //command is given as \"delete \u003ctaskIndex\u003e\"","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"            int index \u003d this.parseForDelete(command);","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"        } else if (command.startsWith(\"bye\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"            return new ExitCommand(this.userName);","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"            String searchString \u003d this.parseForSearch(command);","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"            return new FindCommand(searchString);","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"            throw new NoCommandException();","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"     * Parses a command that seeks to mark a task.","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"     * @param command is a string with a command keyword \"mark\" from user","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"     * @return the index of the {@link Task} to mark in {@link seedu.duke.task.TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if an invalid task number is given from user","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"    int parseForMark(String command) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"        int indexAfterCommand \u003d 5;","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        if (command.length() \u003c\u003d 5) { //e.g. mark vs \"mark 1\" (correct)","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"            throw new NoValidTaskIndexException();","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"        //-1 because index in taskList is 0 based but command uses 1-based index","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        int indexOfTaskToMark \u003d Integer","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"                .parseInt(command","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"                        .substring(indexAfterCommand, indexAfterCommand + 1)) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"        return indexOfTaskToMark;","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"     * Parses a command that seeks to unmark a task.","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"     * @param command is a string with a command keyword \"unmark\" from user","lastModifiedDate":"2022-01-29"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"     * @return the index of the {@link Task} to unmark in {@link seedu.duke.task.TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if an invalid task number is given from user","lastModifiedDate":"2022-01-29"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"    int parseForUnmark(String command) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"        int indexAfterCommand \u003d 7;","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"        if (command.length() \u003c\u003d 7) { //e.g. \"unmark \" vs \"unmark 1\" (correct)","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"            throw new NoValidTaskIndexException();","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"        int indexToUnmark \u003d Integer","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"                .parseInt(command","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"                        .substring(indexAfterCommand)) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"        return indexToUnmark;","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"     * Parses a command that seeks to delete a task.","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"     * @param command is a string with a command keyword \"delete\" from user","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"     * @return the index of the {@link Task} to delete in {@link seedu.duke.task.TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if an invalid task number is given from user","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"    int parseForDelete(String command) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"        int indexTaskName \u003d 7;","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"        //command is given as \"delete \u003ctaskIndex\u003e\"","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"        if (command.length() \u003c\u003d 7) { //e.g. \"delete \" vs \"delete 1\" (correct)","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"            throw new NoValidTaskIndexException();","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"        //+1 in substring is in case of extra space at the end","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"        //-1 is because 1 based index is used in command","lastModifiedDate":"2022-01-26"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"        int indexToUnmark \u003d Integer","lastModifiedDate":"2022-01-26"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"                .parseInt(command","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"                        .substring(indexTaskName, indexTaskName + 1)) - 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"        return indexToUnmark;","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"     * Parses a command that seeks to add a ToDo o to {@link seedu.duke.task.TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"     * @param command is a string with a command keyword \"todo\"","lastModifiedDate":"2022-01-29"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"     * @return {@link ToDo} to add to {@link seedu.duke.task.TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if an incomplete command is given from user","lastModifiedDate":"2022-01-29"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"    Task parseForTodo(String command) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"        int indexTaskName \u003d 5;","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"        if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-01-26"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"        String taskName \u003d command.substring(indexTaskName);","lastModifiedDate":"2022-01-26"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"        return new ToDo(taskName);","lastModifiedDate":"2022-01-26"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"     * Creates a {@link java.time.LocalDateTime} from a String command detailing the date.","lastModifiedDate":"2022-01-29"},{"lineNumber":151,"author":{"gitId":"isabelteo"},"content":"     * @param dateStr is a string detailing the date in yyyy-MM-dd HH:mm format","lastModifiedDate":"2022-01-29"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"     * @return {@link LocalDateTime} object to create {@link Deadline} and {@link Event}","lastModifiedDate":"2022-01-29"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if wrongly formatted date or no date is given from user.","lastModifiedDate":"2022-01-29"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"    LocalDateTime getLocalDateTimeFromDate(String dateStr) throws DukeException {","lastModifiedDate":"2022-01-29"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"            TemporalAccessor ta \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\").parse(dateStr);","lastModifiedDate":"2022-01-29"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"            LocalDateTime date \u003d LocalDateTime.from(ta);","lastModifiedDate":"2022-01-27"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"            return date;","lastModifiedDate":"2022-01-27"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"            return null;","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"     * Parses a command that seeks to add a {@link Deadline} to {@link seedu.duke.task.TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":167,"author":{"gitId":"isabelteo"},"content":"     * @param command is a string with a command keyword \"deadline\" from user","lastModifiedDate":"2022-01-29"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"     * @return {@link Deadline} to add to {@link seedu.duke.task.TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if an incomplete command is given from user","lastModifiedDate":"2022-01-29"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"    Task parseForDeadline(String command) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":172,"author":{"gitId":"isabelteo"},"content":"        int indexTaskName\u003d 9;","lastModifiedDate":"2022-01-26"},{"lineNumber":173,"author":{"gitId":"isabelteo"},"content":"        if (command.length() \u003c\u003d 9) { //e.g. \"deadline \" vs \"deadline return book /by Sunday\" (correct)","lastModifiedDate":"2022-01-26"},{"lineNumber":174,"author":{"gitId":"isabelteo"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-01-26"},{"lineNumber":175,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"        int dateMarkerIndex \u003d command.indexOf(\"/by\");","lastModifiedDate":"2022-01-26"},{"lineNumber":177,"author":{"gitId":"isabelteo"},"content":"        if (dateMarkerIndex \u003d\u003d -1) { // \"/\" does not exist","lastModifiedDate":"2022-01-26"},{"lineNumber":178,"author":{"gitId":"isabelteo"},"content":"            throw new NoDateException();","lastModifiedDate":"2022-01-26"},{"lineNumber":179,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":180,"author":{"gitId":"isabelteo"},"content":"        String taskName \u003d command","lastModifiedDate":"2022-01-26"},{"lineNumber":181,"author":{"gitId":"isabelteo"},"content":"                .substring(indexTaskName, dateMarkerIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":182,"author":{"gitId":"isabelteo"},"content":"        int indexStartOfDate \u003d dateMarkerIndex + 4;  //\"/by yyyy-mm-dd hh:mm\"","lastModifiedDate":"2022-01-27"},{"lineNumber":183,"author":{"gitId":"isabelteo"},"content":"        if (indexStartOfDate \u003e\u003d command.length()) { //e.g.\"deadline /\" is invalid ; \"deadline /by \"","lastModifiedDate":"2022-01-26"},{"lineNumber":184,"author":{"gitId":"isabelteo"},"content":"            throw new NoDateException();","lastModifiedDate":"2022-01-26"},{"lineNumber":185,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":186,"author":{"gitId":"isabelteo"},"content":"        String dateString \u003d command.substring(indexStartOfDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"isabelteo"},"content":"        LocalDateTime date \u003d this.getLocalDateTimeFromDate(dateString);","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"isabelteo"},"content":"        return new Deadline(taskName, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":189,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":190,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":191,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":192,"author":{"gitId":"isabelteo"},"content":"     * Parses a command seeks to to add a {@link Event} to {@link seedu.duke.task.TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":193,"author":{"gitId":"isabelteo"},"content":"     * @param command is a string with a command keyword \"event\"","lastModifiedDate":"2022-01-29"},{"lineNumber":194,"author":{"gitId":"isabelteo"},"content":"     * @return {@link Event} to add to {@link seedu.duke.task.TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":195,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if an incomplete command is given from user","lastModifiedDate":"2022-01-29"},{"lineNumber":196,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":197,"author":{"gitId":"isabelteo"},"content":"    Task parseForEvent(String command) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":198,"author":{"gitId":"isabelteo"},"content":"        int indexTaskName \u003d 6;","lastModifiedDate":"2022-01-26"},{"lineNumber":199,"author":{"gitId":"isabelteo"},"content":"        if (command.length() \u003c\u003d 6) { //e.g. \"event \" vs \"event project meeting /at Mon 2-4pm\"","lastModifiedDate":"2022-01-26"},{"lineNumber":200,"author":{"gitId":"isabelteo"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2022-01-26"},{"lineNumber":201,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":202,"author":{"gitId":"isabelteo"},"content":"        int dateMarkerIndex \u003d command.indexOf(\"/at\");","lastModifiedDate":"2022-01-26"},{"lineNumber":203,"author":{"gitId":"isabelteo"},"content":"        if (dateMarkerIndex \u003d\u003d -1) {","lastModifiedDate":"2022-01-26"},{"lineNumber":204,"author":{"gitId":"isabelteo"},"content":"            throw new NoDateException();","lastModifiedDate":"2022-01-26"},{"lineNumber":205,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":206,"author":{"gitId":"isabelteo"},"content":"        //+2 is because of \"at \" that occurs before the date then +1 for a space \"at \"","lastModifiedDate":"2022-01-26"},{"lineNumber":207,"author":{"gitId":"isabelteo"},"content":"        String taskName \u003d command","lastModifiedDate":"2022-01-26"},{"lineNumber":208,"author":{"gitId":"isabelteo"},"content":"                .substring(indexTaskName, dateMarkerIndex);","lastModifiedDate":"2022-01-26"},{"lineNumber":209,"author":{"gitId":"isabelteo"},"content":"        int indexStartOfDate \u003d dateMarkerIndex + 4;  //\"/at \u003cdate\u003e\"","lastModifiedDate":"2022-01-26"},{"lineNumber":210,"author":{"gitId":"isabelteo"},"content":"        if (indexStartOfDate \u003e\u003d command.length()) { //e.g.\"deadline /\" is invalid ; \"deadline /by \"","lastModifiedDate":"2022-01-26"},{"lineNumber":211,"author":{"gitId":"isabelteo"},"content":"            throw new NoDateException();","lastModifiedDate":"2022-01-26"},{"lineNumber":212,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":213,"author":{"gitId":"isabelteo"},"content":"        String dateString \u003d command.substring(indexStartOfDate);","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"isabelteo"},"content":"        LocalDateTime date \u003d this.getLocalDateTimeFromDate(dateString);","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"isabelteo"},"content":"        return new Event(taskName, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":216,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":217,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":219,"author":{"gitId":"isabelteo"},"content":"     * Parses a command that seeks to search a {@link Task} in {@link TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":220,"author":{"gitId":"isabelteo"},"content":"     * @param command is a string like \"search book\" to find tasks with the word book in it","lastModifiedDate":"2022-01-29"},{"lineNumber":221,"author":{"gitId":"isabelteo"},"content":"     * @return String Keyword to search in {@link seedu.duke.task.TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":222,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":223,"author":{"gitId":"isabelteo"},"content":"    String parseForSearch(String command) {","lastModifiedDate":"2022-01-27"},{"lineNumber":224,"author":{"gitId":"isabelteo"},"content":"        int indexToStart \u003d 5;","lastModifiedDate":"2022-01-27"},{"lineNumber":225,"author":{"gitId":"isabelteo"},"content":"        return command.substring(5); //\"find \"","lastModifiedDate":"2022-01-27"},{"lineNumber":226,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":227,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":227}},{"path":"src/main/java/seedu/duke/chatbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.chatbot;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.UnableToUpdateDatabaseException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.ToDo;","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"import java.io.File;","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":" * Handles updating of database, a txt file, whenever {@link TaskList} is updated.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"public class Storage {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    private final String filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    private final Ui ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"     * Creates a Storage object which is used to update the database as commands are executed.","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"     * @param filePath specifying the path to the database","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"     * @param ui which is used to handle printing of replies to user","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    Storage(String filePath, Ui ui) {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    public String getFilePath() {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"        return this.filePath;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"     * Creates a {@link TaskList} based on what was saved in the database from previous run of Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"     * @return {@link TaskList} with all previous tasks added","lastModifiedDate":"2022-01-29"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if database file is not found or unable to create the {@link TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"    TaskList getOldTaskList() throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"        TaskList oldTaskList \u003d new TaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Hold on, I am checking if you have tasks saved.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"        // If the file does not exist,we create the file.","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"        // If the file exists, then we scan it to update the taskList","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        File myObj;","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"            myObj \u003d new File(this.filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"                ui.showFileCreated(myObj);","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"                try {","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"                    Scanner sc \u003d new Scanner(myObj);","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"                    StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"                    while (sc.hasNext()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"                        String taskDetails \u003d sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"                        Task taskToAdd \u003d getTaskFromSummary(taskDetails);","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"                        oldTaskList \u003d oldTaskList.add(taskToAdd);","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"                    }","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"                    sc.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"                    ui.showLoadingResult(oldTaskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"                    throw new DukeException(\"Hmmm seems like the file doesn\u0027t exist.\");","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"                }","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"            throw new DukeException(\"An error occured. I will restart the list\");","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"        return oldTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"     * Creates a task from a summarised string saved in the database.","lastModifiedDate":"2022-01-29"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"     * @param taskDetails which is the summarised string of the task","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"     * @return {@link Task} created based on information in string from database.","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"    Task getTaskFromSummary(String taskDetails) {","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"        //taskType is the first letter - e.g. \"T\"f","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"        String taskType \u003d taskDetails.substring(0,1);","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        //start from index 2 to skip space","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"        boolean doneStatus \u003d Integer.parseInt(taskDetails.substring(2,3)) \u003d\u003d 1;","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"        //taskname","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"        String taskName;","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        //only tasks with dates have \u0027/\u0027","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"        if (taskDetails.contains(\"/\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"            int indexOfSlash \u003d taskDetails.indexOf(\"/\");","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"            taskName \u003d taskDetails.substring(4,indexOfSlash - 1);","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"            String date \u003d taskDetails.substring(indexOfSlash + 2); //\"/ Sunday\"","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"            LocalDateTime dateObj \u003d this.getLocalDateTimeFromDate(date);","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"            if (taskType.equals(\"E\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"                return new Event(taskName, doneStatus, dateObj);","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"            } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"                return new Deadline(taskName, doneStatus, dateObj);","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"            taskName \u003d taskDetails.substring(4);","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"            return new ToDo(taskName, doneStatus);","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"     * Creates a summary string for the {@link Task} to be saved in the database.","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"     * @param task to be converted into a summary string and saved","lastModifiedDate":"2022-01-29"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"     * @return string which contains a summarised information about the task to be recreated later","lastModifiedDate":"2022-01-29"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"    public String createSummaryFromTask(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"        String taskType \u003d task.getTaskType();","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"        String  summary \u003d taskType + \" \";","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"        summary +\u003d (task.isDone()) ? \"1 \" : \"0 \";","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"        summary +\u003d task.getTaskName() + \" \";","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"        if (taskType.equals(\"E\") || taskType.equals(\"D\")) {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"            LocalDateTime date \u003d task.getDate();","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"            String dateString \u003d date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"            summary +\u003d \"/ \" + dateString; //24 Dec 2019 --\u003e 2019-12-24","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"        return summary + \"\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"     *Used to add the summary string of a task to be saved into the database.","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"     * @param filePath which stores the absolute path to the database","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"     * @param lineContent which stores the summary string of the task to be saved","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if unable to store the line into the database","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"    public void addLine(String filePath, String lineContent) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(f, true));","lastModifiedDate":"2022-01-26"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"            bw.append(lineContent);","lastModifiedDate":"2022-01-26"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"            bw.close();","lastModifiedDate":"2022-01-26"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"            throw new UnableToUpdateDatabaseException();","lastModifiedDate":"2022-01-29"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"     * Used to update the database whenever the {@link TaskList} is changed.","lastModifiedDate":"2022-01-29"},{"lineNumber":145,"author":{"gitId":"isabelteo"},"content":"     * @param taskList which is the updated {@link TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":146,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException when unable to update the database","lastModifiedDate":"2022-01-29"},{"lineNumber":147,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":148,"author":{"gitId":"isabelteo"},"content":"    public void convertTaskListToFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":149,"author":{"gitId":"isabelteo"},"content":"        //rewrite to a new file","lastModifiedDate":"2022-01-26"},{"lineNumber":150,"author":{"gitId":"isabelteo"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2022-01-26"},{"lineNumber":151,"author":{"gitId":"isabelteo"},"content":"        if (f.delete()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":152,"author":{"gitId":"isabelteo"},"content":"            ui.showCompleteUpdateOfFile();","lastModifiedDate":"2022-01-26"},{"lineNumber":153,"author":{"gitId":"isabelteo"},"content":"        } else {","lastModifiedDate":"2022-01-26"},{"lineNumber":154,"author":{"gitId":"isabelteo"},"content":"            throw new UnableToUpdateDatabaseException();","lastModifiedDate":"2022-01-26"},{"lineNumber":155,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":156,"author":{"gitId":"isabelteo"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":157,"author":{"gitId":"isabelteo"},"content":"            String lineToAdd \u003d this.createSummaryFromTask(taskList.getTasks().get(i));","lastModifiedDate":"2022-01-26"},{"lineNumber":158,"author":{"gitId":"isabelteo"},"content":"            this.addLine(filePath, lineToAdd);","lastModifiedDate":"2022-01-26"},{"lineNumber":159,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":160,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":161,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":163,"author":{"gitId":"isabelteo"},"content":"     * @see Parser#getLocalDateTimeFromDate(String).","lastModifiedDate":"2022-01-29"},{"lineNumber":164,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":165,"author":{"gitId":"isabelteo"},"content":"    LocalDateTime getLocalDateTimeFromDate(String string) {","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"isabelteo"},"content":"            TemporalAccessor ta \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\").parse(string);","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"isabelteo"},"content":"            LocalDateTime date \u003d LocalDateTime.from(ta);","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"isabelteo"},"content":"            return date;","lastModifiedDate":"2022-01-27"},{"lineNumber":170,"author":{"gitId":"isabelteo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":171,"author":{"gitId":"isabelteo"},"content":"            System.out.println(\"Error generating date string\");","lastModifiedDate":"2022-01-27"},{"lineNumber":172,"author":{"gitId":"isabelteo"},"content":"            return null;","lastModifiedDate":"2022-01-27"},{"lineNumber":173,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":174,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":175,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":176,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":176}},{"path":"src/main/java/seedu/duke/chatbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.chatbot;","lastModifiedDate":"2022-01-29"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import java.io.File;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" * Handles all interactions with the user.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":" * Takes in user input using a Scanner object.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":" * Specifies the outputs from Duke in different scenarios.","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"public class Ui {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    private final Scanner sc;","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     * Creates a Ui object that can take in commands from the user","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    Ui() {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     * Used to tell user that Duke is loading tasks saved in database.","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    void showStartLoading() {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Hold on...I am checking if you have previous tasks saved...\");","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"     * Introduces Duke to user.","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"     * @return the name of user to personalise interaction after welcome","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    String showWelcome() {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Thanks for waiting, let me introduce myself! Hello from\\n\" + logo);","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"        String name \u003d in.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Hello \" + name);","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        return name;","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"     * Takes in input from user.","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"     * @return command from user in string","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"    String readCommand() {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"        return sc.nextLine();","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"     * Shows error message from exceptions raised.","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"     * @param errorMessage taken from exceptions raised","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"    void showError(String errorMessage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"     *Shows the result of loading all saved task, which is a {@link TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"     * @param oldTaskList for {@link TaskList} generated from database","lastModifiedDate":"2022-01-29"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"    void showLoadingResult(TaskList oldTaskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Take a look at your previous tasks:\");","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        oldTaskList.printTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"     * Used to indicate to user that a file that acts as database has been created.","lastModifiedDate":"2022-01-29"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"     * @param myObj which is the file that was created","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"    void showFileCreated(File myObj) {","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"File Created: \" + myObj.getName());","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"     * Indicates to user that their command to add a {@link Task} is successful.","lastModifiedDate":"2022-01-29"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"     * @param taskList which is the {@link TaskList} that the {@link Task} was added to","lastModifiedDate":"2022-01-29"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"     * @param newTask which is the new {@link Task} that was added","lastModifiedDate":"2022-01-29"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"    public void showAddResult(TaskList taskList, Task newTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"        System.out.println(String","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"                .format(\"Got it, I\u0027ve added this task: \\n %s\\nNow you have %d task in the list\",","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"                        newTask.toString(),","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"                        taskList.getNumberOfTasks()));","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"     * Indicates to user that their command to delete a {@link Task} is successful.","lastModifiedDate":"2022-01-29"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"     * @param taskList which is the {@link TaskList} that the {@link Task} was deleted from","lastModifiedDate":"2022-01-29"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"     * @param taskToRemove which is the {@link Task} that was deleted","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"    public void showDeleteResult(TaskList taskList, Task taskToRemove) {","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"        System.out.println(String","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"                .format(\"Got it, I\u0027ve deleted this task: \\n %s\\nNow you have %d task in the list\",","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"                        taskToRemove.toString(),","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"                        taskList.getNumberOfTasks()));","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"     * Indicates to user that their command to unmark a {@link Task} is successful.","lastModifiedDate":"2022-01-29"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"     * @param unmarkedTask which is the {@link Task} that was unmarked","lastModifiedDate":"2022-01-29"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"    public static void showUnmarkedResult(Task unmarkedTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"        System.out.println(String","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"                .format(\"OK, I\u0027ve marked this task as not done yet:\\n %s\", unmarkedTask.toString()));","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"     * Indicates to user that their command to mark a {@link Task} is successful.","lastModifiedDate":"2022-01-29"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"     * @param markedTask which is the {@link Task} that was marked","lastModifiedDate":"2022-01-29"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"    public static void showMarkedResult(Task markedTask) {","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"        System.out.println(String","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"                .format(\"Nice! I\u0027ve marked this task as done: \\n%s\", markedTask.toString()));","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"     * Indicates to user that the database has been updated after a change to {@link TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"    public void showCompleteUpdateOfFile() {","lastModifiedDate":"2022-01-26"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Database has been updated\");","lastModifiedDate":"2022-01-26"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"     * Indicates to user that their command to search the {@link TaskList} has been completed.","lastModifiedDate":"2022-01-29"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"     * Shows the user the tasks that match their search keyword","lastModifiedDate":"2022-01-29"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"     * @param taskList which only contains {@link Task} that contain the search keyword","lastModifiedDate":"2022-01-29"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"    public void showCompletedSearch(TaskList taskList) {","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Here are the matched tasks:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"        taskList.printTasks();","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":142}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" * Executes the adding of {@link Task} to {@link TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * Creates a AddCommand.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * @param taskToAdd is the {@link Task} to be added to the {@link TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public AddCommand(Task taskToAdd) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        this.taskToAdd \u003d  taskToAdd;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        TaskList newTaskList \u003d taskList.add(taskToAdd);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        ui.showAddResult(newTaskList,taskToAdd);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        String lineToAdd \u003d storage.createSummaryFromTask(this.taskToAdd);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        storage.addLine(storage.getFilePath(), lineToAdd);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        return newTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"     *{@inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":42}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"     *Executes a command","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"     * @param tasks is taken in as many commands involve updating the {@link TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"     * @param ui is taken in for the commands to interact with the user after executing","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * @param storage is taken in to update the database after executing a command","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * @return {@link TaskList} which is updated after the command is executed","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException when there are errors that prevent the command from being executed","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     * @throws IOException when there are errors updating the database","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    public abstract TaskList execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     *Used to signal to Duke when to exit.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * @return true if user signals they want to exit, false if not","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":27}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" * Executes the deleting of a {@link Task} from {@link TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    private final int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * @param index which is the index of the {@link Task} to delete in {@link TaskList}","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     *{@inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        TaskList newTaskList \u003d taskList.delete(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        Task taskToRemove \u003d taskList.getTasks().get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        String lineToRemove \u003d storage.createSummaryFromTask(taskToRemove);","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        ui.showDeleteResult(newTaskList, taskToRemove);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"        storage.convertTaskListToFile(newTaskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        return newTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"     *{@inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":43}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" * Created when user inputs a command to exit Duke.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"    private final String userName;","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"     * Creates a ExitCommand object.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * @param userName which is the name of the user","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    public ExitCommand(String userName) {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"     *{@inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        System.out.println(String.format(\"Bye %s. See you again soon!\", this.userName));","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        return taskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"     *{@inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"        return true;","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":37}},{"path":"src/main/java/seedu/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" * Created when user inputs a command to search for a {@link seedu.duke.task.Task} in {@link TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    private final String searchTerm;","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * Creates a FindCommand object.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * @param searchTerm which is the string that the {@link seedu.duke.task.Task} needs to contain.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        TaskList newTaskList \u003d taskList.find(this.searchTerm);","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        ui.showCompletedSearch(newTaskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        return taskList; //return the old tasklist because the new one is a filtered version","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"        return false;","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"isabelteo":39}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" * Created when user wants to check the {@link Task} in {@link TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"     * Creates a ListCommand object.","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    public ListCommand() {}","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    public TaskList execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"        System.out.println(\"Here is your to-do:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"        tasks.printTasks();","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        return tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":35}},{"path":"src/main/java/seedu/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" * Created when user wants to mark a {@link seedu.duke.task.Task} as done.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    private final int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * Creates a MarkCommand object.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * @param index which is the index of the {@link seedu.duke.task.Task} to mark","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * @throws DukeException if the index of task is invalid or database cannot be updated","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        TaskList newTaskList \u003d taskList.mark(this.index);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        storage.convertTaskListToFile(newTaskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        return newTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":40}},{"path":"src/main/java/seedu/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.command;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Storage;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" * Created when user wants to unmark a {@link Task} from done to undone.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    private final int index;","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * Creates a UnmarkCommand object.","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * @param index which is the index of the {@link Task} to unmark","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        TaskList newTaskList \u003d taskList.unmark(this.index);","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        storage.convertTaskListToFile(newTaskList);","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        return newTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}.","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"        return false;","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":40}},{"path":"src/main/java/seedu/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * Thrown when errors occur in the different classes.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" * Allows us to pinpoint what went wrong with specific error messages","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"     * Creates an exception.","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"     * @param message that details what went wrong","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"        super(message);","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    public String getMessage() {","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        return super.getMessage();","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":20}},{"path":"src/main/java/seedu/duke/exceptions/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * Thrown when input command from user is invalid or wrongly formatted.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"public class IncompleteCommandException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * Creates a IncompleteCommandException() with an error message telling user to rewrite command","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public IncompleteCommandException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"        super(\"Hmm the command seems to be wrong - did you tell me the task?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":14}},{"path":"src/main/java/seedu/duke/exceptions/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * Thrown when {@link seedu.duke.chatbot.Storage} is unable to access or use database effectively.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"public class LoadingException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * Creates a LoadingException with a message telling user that old tasks cannot be retrieved.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public LoadingException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"        super(\"Looks like there is a problem with creating or retrieving the files for tasks\");","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":13}},{"path":"src/main/java/seedu/duke/exceptions/NoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * Thrown when no valid command keyword was given by user.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"public class NoCommandException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * Creates a NoCommandException with a message to tell user to rewrite command.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public NoCommandException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"        super(\"Sorry I don\u0027t understand :(\");","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"isabelteo":13}},{"path":"src/main/java/seedu/duke/exceptions/NoDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * Thrown when no date is given to create {@link seedu.duke.task.Deadline} and {@link seedu.duke.task.Event}.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"public class NoDateException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * Creates a NoDateException() with a message telling user to add a valid date.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public NoDateException() {","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"        super(\"Hmmm...did you give me a valid date? Like /by Sunday for deadline or /at for event\");","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"isabelteo":13}},{"path":"src/main/java/seedu/duke/exceptions/NoValidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * Thrown when the task index is invalid.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" * Thrown in commands such as {@link seedu.duke.command.MarkCommand} and {@link seedu.duke.command.DeleteCommand}","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"public class NoValidTaskIndexException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"        public NoValidTaskIndexException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"            super(\"Hmm the command seems to be wrong - is the task number correct?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":12}},{"path":"src/main/java/seedu/duke/exceptions/TaskAlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"public class TaskAlreadyMarkedException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"    public TaskAlreadyMarkedException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"        super(\"Oh hmm...seems like I\u0027ve executed that already\");","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":7}},{"path":"src/main/java/seedu/duke/exceptions/UnableToUpdateDatabaseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":" * Thrown when {@link seedu.duke.chatbot.Storage} is unable to update database.","lastModifiedDate":"2022-01-29"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"public class UnableToUpdateDatabaseException extends DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * Creates a UnableToStoreLineException() to update user about database error.","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public UnableToUpdateDatabaseException() {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"        super(\"Can\u0027t seem to store the line\");","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":13}},{"path":"src/main/java/seedu/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":" * Used when user wants to create a {@link Task} that has a end date but no start date.","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    private final String taskType \u003d \"D\";","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"     * Creates a deadline.","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"     * @param taskName for task name","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * @param date for end date","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    public Deadline(String taskName, LocalDateTime date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        super(taskName, false, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"     * Used to help adjust the done status.","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     * @param oldDeadline to extract task name and date","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * @param done for specified boolean","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    Deadline(Deadline oldDeadline, boolean done) {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        super(oldDeadline.getTaskName(), done, oldDeadline.getDate());","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    public Deadline(String taskName, boolean doneStatus, LocalDateTime date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        super(taskName,doneStatus, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     * returns a new Task with the specified attribute \u0027done\u0027 based on boolean \u0027status\u0027.","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"     * @param status to provide boolean","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"     * @return new Task with specified boolean for attribute \u0027done\u0027","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    public Task changeTaskStatus(boolean status) {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        return new Deadline(this, status);","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"        return this.taskType;","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"                + String.format(\" (by: %s)\",this.getFormattingDateString());","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"isabelteo":57}},{"path":"src/main/java/seedu/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"//fix the dateTime for event","lastModifiedDate":"2022-01-29"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" * Used when user wants to create a {@link Task} with start and end date or time.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    private final String taskType \u003d \"E\";","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * Creates an event.","lastModifiedDate":"2022-01-29"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * @param taskName for name of task","lastModifiedDate":"2022-01-29"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * @param date for start and end date","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    public Event(String taskName, LocalDateTime date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        super(taskName, false, date);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * Creates an event using another event object.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     * @param oldEvent for previous event","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"     * @param isDone which is a boolean to denote whether the task is complete","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    Event(Event oldEvent, boolean isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        super(oldEvent.getTaskName(), isDone, oldEvent.getDate());","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"     * Creates an event.","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * @param taskName for task name","lastModifiedDate":"2022-01-29"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     * @param isDone for whether the task is done","lastModifiedDate":"2022-01-29"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"     * @param date for start and end date or time of event","lastModifiedDate":"2022-01-29"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    public Event(String taskName, boolean isDone, LocalDateTime date) {","lastModifiedDate":"2022-01-29"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"        super(taskName,isDone, date);","lastModifiedDate":"2022-01-29"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    public Task changeTaskStatus(boolean status) {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"        return new Event(this, status);","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"        return this.taskType;","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"                + String.format(\" (at: %s)\",this.getFormattingDateString());","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":66}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-29"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":" * Used to create task that is added to {@link TaskList}.","lastModifiedDate":"2022-01-29"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-29"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"     * taskName refers to the name of the task.","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"    private final String taskName;","lastModifiedDate":"2022-01-16"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * done records if a task has been marked as complete.","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    private final boolean done;","lastModifiedDate":"2022-01-16"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"     * Constructor for a task.","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * @param name refers to the task name","lastModifiedDate":"2022-01-16"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    Task(String name) {","lastModifiedDate":"2022-01-16"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-16"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        //do null pointer exception check","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"        this.date \u003d null;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     * Constructor for a task that consists of task name and boolean done for task status.","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     * @param name refers to the task name","lastModifiedDate":"2022-01-16"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"     * @param doneStatus refers to the boolean that tracks if a task is complete","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    Task(String name, boolean doneStatus, LocalDateTime date) {","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2022-01-16"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"        this.done \u003d doneStatus;","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"     * Checks whether the task has been completed.","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"     * @return boolean of this done.","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-01-16"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"        return done;","lastModifiedDate":"2022-01-16"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        return this.taskName;","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"    public LocalDateTime getDate() { return this.date; }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"    public String getFormattingDateString() {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"        try {","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"            String indicator \u003d (this.date.getHour() \u003e\u003d 12) ? \"pm\" : \"am\";","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm \")) + indicator;","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"            return \"\";","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-16"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"     * Marks task as done.or undone.","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"     * @return new Task with done attribute as the boolean parameter","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-16"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"    public abstract Task changeTaskStatus(boolean status);","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-16"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-17"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"     * prints task.","lastModifiedDate":"2022-01-17"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"     * @return String with task type, status and name","lastModifiedDate":"2022-01-17"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-16"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-16"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"        String marked \u003d this.isDone() ? \"X\" : \" \";","lastModifiedDate":"2022-01-16"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"        return String.format(\"[%s] %s\", marked, this.taskName);","lastModifiedDate":"2022-01-16"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-16"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-16"}],"authorContributionMap":{"isabelteo":84}},{"path":"src/main/java/seedu/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.chatbot.Ui;","lastModifiedDate":"2022-01-29"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.NoValidTaskIndexException;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.TaskAlreadyMarkedException;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"/**","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":" * TaskList is used to track all tasks taken in by Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":" */","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"public class TaskList {","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     *An array that contains all tasks that will be added.","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"     * Constructor for TaskList with no parameters.","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"     * Creates a {@link TaskList} with attribute tasks being specified as a given {@link ArrayList}.","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"     * @param newTaskList is an {@link ArrayList} of {@link Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    TaskList(ArrayList\u003cTask\u003e newTaskList) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"        this.tasks \u003d newTaskList;","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"     * returns the number of tasks in the {@link ArrayList} of {@link Task}.","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"     * @return an integer specifying the number of tasks","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"        return this.tasks.size();","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"        return this.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"     * Used to print all tasks when command \"list\" is called in Duke.","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"    public void printTasks() {","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfTasks(); i++) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"            System.out.println(String","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"                    .format(\"%d . %s\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"isabelteo"},"content":"     * Used to preserve immutability.","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"isabelteo"},"content":"     * @return {@link ArrayList}, a copy of this","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"isabelteo"},"content":"    ArrayList\u003cTask\u003e copyTaskList() {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"isabelteo"},"content":"        return new ArrayList\u003c\u003e(this.tasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"isabelteo"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"isabelteo"},"content":"     * @param index where task to be marked is at in TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"isabelteo"},"content":"     * @return TaskList with updated {@link ArrayList}","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"isabelteo"},"content":"    public TaskList mark(int index) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"isabelteo"},"content":"        Task taskToUpdate \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"isabelteo"},"content":"        if (taskToUpdate.isDone()) {","lastModifiedDate":"2022-01-26"},{"lineNumber":72,"author":{"gitId":"isabelteo"},"content":"            throw new TaskAlreadyMarkedException();","lastModifiedDate":"2022-01-26"},{"lineNumber":73,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":74,"author":{"gitId":"isabelteo"},"content":"        Task newTask \u003d taskToUpdate.changeTaskStatus(true);","lastModifiedDate":"2022-01-26"},{"lineNumber":75,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cTask\u003e newTasks \u003d this.copyTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":76,"author":{"gitId":"isabelteo"},"content":"        newTasks.set(index, newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":77,"author":{"gitId":"isabelteo"},"content":"        Ui.showMarkedResult(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":78,"author":{"gitId":"isabelteo"},"content":"        return new TaskList(newTasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":79,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":80,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":81,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":82,"author":{"gitId":"isabelteo"},"content":"     * Marks a task as undone.","lastModifiedDate":"2022-01-26"},{"lineNumber":83,"author":{"gitId":"isabelteo"},"content":"     * @param index where the task to be unmarked is at in TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":84,"author":{"gitId":"isabelteo"},"content":"     * @return TaskList with updated {@link ArrayList}","lastModifiedDate":"2022-01-26"},{"lineNumber":85,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":86,"author":{"gitId":"isabelteo"},"content":"    public TaskList unmark(int index) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":87,"author":{"gitId":"isabelteo"},"content":"        if (index \u003e this.getNumberOfTasks() - 1 || index \u003c 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":88,"author":{"gitId":"isabelteo"},"content":"            throw new NoValidTaskIndexException();","lastModifiedDate":"2022-01-26"},{"lineNumber":89,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":90,"author":{"gitId":"isabelteo"},"content":"        Task taskToUpdate \u003d this.tasks.get(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":91,"author":{"gitId":"isabelteo"},"content":"        if (!taskToUpdate.isDone()) { //if task is already unmarked","lastModifiedDate":"2022-01-26"},{"lineNumber":92,"author":{"gitId":"isabelteo"},"content":"            throw new TaskAlreadyMarkedException();","lastModifiedDate":"2022-01-26"},{"lineNumber":93,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":94,"author":{"gitId":"isabelteo"},"content":"        Task newTask \u003d taskToUpdate.changeTaskStatus(false);","lastModifiedDate":"2022-01-26"},{"lineNumber":95,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cTask\u003e newTasks \u003d this.copyTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":96,"author":{"gitId":"isabelteo"},"content":"        newTasks.set(index, newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":97,"author":{"gitId":"isabelteo"},"content":"        Ui.showUnmarkedResult(newTask);","lastModifiedDate":"2022-01-26"},{"lineNumber":98,"author":{"gitId":"isabelteo"},"content":"        return new TaskList(newTasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":99,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":100,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":101,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":102,"author":{"gitId":"isabelteo"},"content":"     * Adds tasks to TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":103,"author":{"gitId":"isabelteo"},"content":"     * @param task is the one to be added to TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":104,"author":{"gitId":"isabelteo"},"content":"     * @return new TaskList with increased size to accomodate newTask","lastModifiedDate":"2022-01-26"},{"lineNumber":105,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":106,"author":{"gitId":"isabelteo"},"content":"    public TaskList add(Task task) {","lastModifiedDate":"2022-01-26"},{"lineNumber":107,"author":{"gitId":"isabelteo"},"content":"        //increase size of taskList by 1","lastModifiedDate":"2022-01-26"},{"lineNumber":108,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cTask\u003e newTasks \u003d this.copyTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":109,"author":{"gitId":"isabelteo"},"content":"        newTasks.add(task);","lastModifiedDate":"2022-01-26"},{"lineNumber":110,"author":{"gitId":"isabelteo"},"content":"        return new TaskList(newTasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":111,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":112,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":113,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-26"},{"lineNumber":114,"author":{"gitId":"isabelteo"},"content":"     * Deletes task from TaskList.","lastModifiedDate":"2022-01-26"},{"lineNumber":115,"author":{"gitId":"isabelteo"},"content":"     * @param index of task to be deleted from TaskList","lastModifiedDate":"2022-01-26"},{"lineNumber":116,"author":{"gitId":"isabelteo"},"content":"     * @return new {@link TaskList} with specified task deleted","lastModifiedDate":"2022-01-26"},{"lineNumber":117,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-26"},{"lineNumber":118,"author":{"gitId":"isabelteo"},"content":"    public TaskList delete(int index) throws DukeException {","lastModifiedDate":"2022-01-26"},{"lineNumber":119,"author":{"gitId":"isabelteo"},"content":"        //increase size of taskList by 1","lastModifiedDate":"2022-01-26"},{"lineNumber":120,"author":{"gitId":"isabelteo"},"content":"        if (index \u003e this.getNumberOfTasks() - 1 || index \u003c 0) {","lastModifiedDate":"2022-01-26"},{"lineNumber":121,"author":{"gitId":"isabelteo"},"content":"            throw new NoValidTaskIndexException();","lastModifiedDate":"2022-01-26"},{"lineNumber":122,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":123,"author":{"gitId":"isabelteo"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.copyTaskList();","lastModifiedDate":"2022-01-26"},{"lineNumber":124,"author":{"gitId":"isabelteo"},"content":"        updatedTasks.remove(index);","lastModifiedDate":"2022-01-26"},{"lineNumber":125,"author":{"gitId":"isabelteo"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2022-01-26"},{"lineNumber":126,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":127,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":129,"author":{"gitId":"isabelteo"},"content":"     * Used to search the TaskList to find {@link Task} that contain the search keyword.","lastModifiedDate":"2022-01-29"},{"lineNumber":130,"author":{"gitId":"isabelteo"},"content":"     * @param search that contains the search keyword","lastModifiedDate":"2022-01-29"},{"lineNumber":131,"author":{"gitId":"isabelteo"},"content":"     * @return a new {@link TaskList} with only {@link Task} that contain the search keyword","lastModifiedDate":"2022-01-29"},{"lineNumber":132,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":133,"author":{"gitId":"isabelteo"},"content":"    public TaskList find(String search) {","lastModifiedDate":"2022-01-29"},{"lineNumber":134,"author":{"gitId":"isabelteo"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2022-01-27"},{"lineNumber":135,"author":{"gitId":"isabelteo"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfTasks(); i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":136,"author":{"gitId":"isabelteo"},"content":"            Task currentTask \u003d this.tasks.get(i);","lastModifiedDate":"2022-01-27"},{"lineNumber":137,"author":{"gitId":"isabelteo"},"content":"            String taskString \u003d currentTask.toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":138,"author":{"gitId":"isabelteo"},"content":"            if (taskString.contains(search)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"isabelteo"},"content":"                newTaskList \u003d newTaskList.add(currentTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"isabelteo"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"isabelteo"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"isabelteo"},"content":"        return newTaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"isabelteo":144}},{"path":"src/main/java/seedu/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke.task;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"    private final String taskType \u003d \"T\";","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"     * used to construct a ToDo object.","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"     * @param taskName which specifies name of task","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"        super(taskName);","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"     * used to construct a ToDo with a specified boolean.","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"     * @param oldToDo for a ToDo object","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"     * @param isDone to specify a boolean","lastModifiedDate":"2022-01-29"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    ToDo(ToDo oldToDo, boolean isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"        super(oldToDo.getTaskName(), isDone, null);","lastModifiedDate":"2022-01-29"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"     * Used to create a ToDo object.","lastModifiedDate":"2022-01-29"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"     * @param taskName for name of task","lastModifiedDate":"2022-01-29"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"     * @param isDone to denote whether the task is complete","lastModifiedDate":"2022-01-29"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2022-01-29"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"        super(taskName, isDone, null);","lastModifiedDate":"2022-01-29"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    public Task changeTaskStatus(boolean status) {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"        return new ToDo(this, status);","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":41,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":42,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":43,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"isabelteo"},"content":"    public String getTaskType() {","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"isabelteo"},"content":"        return this.taskType;","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"isabelteo"},"content":"    /**","lastModifiedDate":"2022-01-29"},{"lineNumber":49,"author":{"gitId":"isabelteo"},"content":"     * {inheritDoc}","lastModifiedDate":"2022-01-29"},{"lineNumber":50,"author":{"gitId":"isabelteo"},"content":"     */","lastModifiedDate":"2022-01-29"},{"lineNumber":51,"author":{"gitId":"isabelteo"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"isabelteo"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"isabelteo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"isabelteo":55}},{"path":"src/test/java/seedu/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    Deadline deadline;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"    void setUp() {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"        TemporalAccessor ta \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\").parse(\"2018-09-12 18:14\");","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"        LocalDateTime date \u003d LocalDateTime.from(ta);","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"        deadline \u003d new Deadline(\"testing\",date);","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"    @DisplayName(\"Task type should be D\")","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"    void testGetTaskType() {","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"        assertEquals(\"D\",","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"                deadline.getTaskType(),","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"                \"Task type should return D\");","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"    @DisplayName(\"toString should be correct\")","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"    void testToString() {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"        assertEquals(\"[D][ ] testing (by: Sep 12 2018 06:14 pm)\",","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"                deadline.toString());","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"isabelteo":39}},{"path":"src/test/java/seedu/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"package seedu.duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"import seedu.duke.task.ToDo;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"class TaskListTest {","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"    TaskList taskList;","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"isabelteo"},"content":"    void setUp() {","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"isabelteo"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"isabelteo"},"content":"    @DisplayName(\"Adding task to TaskList should increase size of arraylist by 1\")","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"isabelteo"},"content":"    void testAdd() {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"isabelteo"},"content":"        Task newTask \u003d new ToDo(\"Testing\");","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"isabelteo"},"content":"        TaskList newTaskList \u003d taskList.add(newTask);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"isabelteo"},"content":"        assertEquals(1, newTaskList.getNumberOfTasks(),","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"isabelteo"},"content":"                \"Add in TaskList should work\");","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"isabelteo"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"isabelteo"},"content":"    @Test","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"isabelteo"},"content":"    @DisplayName(\"TaskAlreadyMarkedException should be thrown\")","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"isabelteo"},"content":"    void noValidTaskIndexExceptionTesting() {","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"isabelteo"},"content":"        Task newTask \u003d new ToDo(\"Testing\");","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"isabelteo"},"content":"        Throwable exception \u003d assertThrows(DukeException.class, () -\u003e taskList.add(newTask).mark(0).mark(0));","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"isabelteo"},"content":"        assertEquals(\"Oh hmm...seems like I\u0027ve executed that already\", exception.getMessage());","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"isabelteo"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"isabelteo"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"isabelteo":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"isabelteo"},"content":"bel","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"isabelteo"},"content":"todo","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"isabelteo"},"content":"deadline return books","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"isabelteo"},"content":"event return books","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"isabelteo"},"content":"blah","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"isabelteo"},"content":"todo return books","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"isabelteo"},"content":"deadline pass books /Sunday","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"isabelteo"},"content":"event project meeting /Mon 2-4pm","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"isabelteo"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"isabelteo"},"content":"mark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"isabelteo"},"content":"unmark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"isabelteo"},"content":"unmark 1","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"isabelteo"},"content":"mark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"isabelteo"},"content":"mark 2","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"isabelteo"},"content":"list","lastModifiedDate":"2022-01-21"},{"lineNumber":16,"author":{"gitId":"isabelteo"},"content":"bye","lastModifiedDate":"2022-01-21"}],"authorContributionMap":{"isabelteo":16}}]
