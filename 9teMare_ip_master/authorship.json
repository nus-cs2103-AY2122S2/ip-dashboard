[{"path":"src/main/java/CortanaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class CortanaException extends Exception {","lastModifiedDate":"2022-01-13"},{"lineNumber":2,"author":{"gitId":"9teMare"},"content":"    public CortanaException(String message) {","lastModifiedDate":"2022-01-14"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"        super(message);","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-13"}],"authorContributionMap":{"9teMare":2,"-":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    protected String by;","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"9teMare"},"content":"    public boolean equals(Object obj){","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"9teMare"},"content":"        if (obj !\u003d null \u0026\u0026 obj.getClass() \u003d\u003d getClass()) {","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"9teMare"},"content":"            Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"9teMare"},"content":"            return (deadline.description.equals(this.description) \u0026\u0026 deadline.by.equals(this.by));","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"9teMare"},"content":"            return false;","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"9teMare"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-14"},{"lineNumber":28,"author":{"gitId":"9teMare"},"content":"        return Objects.hash(description, by);","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"9teMare":11,"-":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"9teMare"},"content":"    private static final Set\u003cTask\u003e taskSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-01-14"},{"lineNumber":9,"author":{"gitId":"9teMare"},"content":"    private final static ArrayList\u003cTask\u003e tasksArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":11,"author":{"gitId":"9teMare"},"content":"    public static void greet() {","lastModifiedDate":"2022-01-14"},{"lineNumber":12,"author":{"gitId":"9teMare"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2022-01-14"},{"lineNumber":13,"author":{"gitId":"9teMare"},"content":"                \"   ____                  _                           \\n\" +","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"9teMare"},"content":"                \"  / ___|   ___    _ __  | |_    __ _   _ __     __ _ \\n\" +","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"9teMare"},"content":"                \" | |      / _ \\\\  | \u0027__| | __|  / _` | | \u0027_ \\\\   / _` |\\n\" +","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"9teMare"},"content":"                \" | |___  | (_) | | |    | |_  | (_| | | | | | | (_| |\\n\" +","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"9teMare"},"content":"                \"  \\\\____|  \\\\___/  |_|     \\\\__|  \\\\__,_| |_| |_|  \\\\__,_|\\n\" +","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"9teMare"},"content":"                \"                                                     \\n\";","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"9teMare"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\nMy name is Cortana, what can I do for you?\");","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void simpleTodo() {","lastModifiedDate":"2022-01-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String input \u003d scanner.next();","lastModifiedDate":"2022-01-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        input +\u003d scanner.nextLine();","lastModifiedDate":"2022-01-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        while(true) {","lastModifiedDate":"2022-01-11"},{"lineNumber":28,"author":{"gitId":"9teMare"},"content":"            if (input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"bye\")) { //bye, exit","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":32,"author":{"gitId":"9teMare"},"content":"                if (input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"list\")) { //list all tasks","lastModifiedDate":"2022-01-14"},{"lineNumber":33,"author":{"gitId":"9teMare"},"content":"                    list();","lastModifiedDate":"2022-01-15"},{"lineNumber":34,"author":{"gitId":"9teMare"},"content":"                } else if (input.toLowerCase().matches(\"^mark \\\\d+|^mark -\\\\d+\")) { //mark task as done","lastModifiedDate":"2022-01-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"mark \", \"\")) - 1;","lastModifiedDate":"2022-01-11"},{"lineNumber":36,"author":{"gitId":"9teMare"},"content":"                    markAsDone(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":37,"author":{"gitId":"9teMare"},"content":"                } else if (input.toLowerCase().matches(\"^unmark \\\\d+|^unmark -\\\\d+\")) { //mark task as undone","lastModifiedDate":"2022-01-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"unmark \", \"\")) - 1;","lastModifiedDate":"2022-01-11"},{"lineNumber":39,"author":{"gitId":"9teMare"},"content":"                    markAsUndone(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":40,"author":{"gitId":"9teMare"},"content":"                } else if (input.toLowerCase().matches(\"^delete \\\\d+|^delete -\\\\d+\")) { //delete a task","lastModifiedDate":"2022-01-14"},{"lineNumber":41,"author":{"gitId":"9teMare"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"delete \", \"\")) - 1;","lastModifiedDate":"2022-01-14"},{"lineNumber":42,"author":{"gitId":"9teMare"},"content":"                    delete(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                } else { //add task","lastModifiedDate":"2022-01-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    try {","lastModifiedDate":"2022-01-12"},{"lineNumber":45,"author":{"gitId":"9teMare"},"content":"                        //only input the task type and nothing else","lastModifiedDate":"2022-01-14"},{"lineNumber":46,"author":{"gitId":"9teMare"},"content":"                        boolean isEmptyDeadline \u003d input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"deadline\");","lastModifiedDate":"2022-01-14"},{"lineNumber":47,"author":{"gitId":"9teMare"},"content":"                        boolean isEmptyEvent \u003d input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"event\");","lastModifiedDate":"2022-01-14"},{"lineNumber":48,"author":{"gitId":"9teMare"},"content":"                        boolean isEmptyTodo \u003d input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"todo\");","lastModifiedDate":"2022-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        String taskType \u003d isEmptyDeadline ? \"deadline\" : isEmptyEvent ? \"event\" : \"todo\";","lastModifiedDate":"2022-01-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        if (isEmptyDeadline || isEmptyEvent || isEmptyTodo ) {","lastModifiedDate":"2022-01-13"},{"lineNumber":51,"author":{"gitId":"9teMare"},"content":"                            String aOrAn \u003d isEmptyEvent ? \"an \" : \"a \";","lastModifiedDate":"2022-01-15"},{"lineNumber":52,"author":{"gitId":"9teMare"},"content":"                            throw new CortanaException(\"OOPS!!! The description of \" + aOrAn + taskType + \" cannot be empty!\");","lastModifiedDate":"2022-01-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        } else {","lastModifiedDate":"2022-01-13"},{"lineNumber":54,"author":{"gitId":"9teMare"},"content":"                            //input the task type with at least one character after it","lastModifiedDate":"2022-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                            boolean isNotEmptyDeadline \u003d input.toLowerCase().matches(\"^deadline .*\");","lastModifiedDate":"2022-01-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                            boolean isNotEmptyEvent \u003d input.toLowerCase().matches(\"^event .*\");","lastModifiedDate":"2022-01-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                            boolean isNotEmptyTodo \u003d input.toLowerCase().matches(\"^todo .*\");","lastModifiedDate":"2022-01-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            boolean hasBy \u003d Pattern.compile(\"/by .*\").matcher(input).find();","lastModifiedDate":"2022-01-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                            boolean hasAt \u003d Pattern.compile(\"/at .*\").matcher(input).find();","lastModifiedDate":"2022-01-13"},{"lineNumber":60,"author":{"gitId":"9teMare"},"content":"                            if (isNotEmptyDeadline \u0026\u0026 hasBy) { //valid deadline command","lastModifiedDate":"2022-01-14"},{"lineNumber":61,"author":{"gitId":"9teMare"},"content":"                                String[] actualTask \u003d input.replaceAll(\"deadline \", \"\").split(\"/by \");","lastModifiedDate":"2022-01-15"},{"lineNumber":62,"author":{"gitId":"9teMare"},"content":"                                String description \u003d actualTask[0];","lastModifiedDate":"2022-01-15"},{"lineNumber":63,"author":{"gitId":"9teMare"},"content":"                                String by \u003d actualTask[1];","lastModifiedDate":"2022-01-15"},{"lineNumber":64,"author":{"gitId":"9teMare"},"content":"                                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2022-01-15"},{"lineNumber":65,"author":{"gitId":"9teMare"},"content":"                                addTask(deadline);","lastModifiedDate":"2022-01-15"},{"lineNumber":66,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyEvent \u0026\u0026 hasAt) { //valid event command","lastModifiedDate":"2022-01-14"},{"lineNumber":67,"author":{"gitId":"9teMare"},"content":"                                String[] actualTask \u003d input.replaceAll(\"event \", \"\").split(\"/at \");","lastModifiedDate":"2022-01-15"},{"lineNumber":68,"author":{"gitId":"9teMare"},"content":"                                String description \u003d actualTask[0];","lastModifiedDate":"2022-01-15"},{"lineNumber":69,"author":{"gitId":"9teMare"},"content":"                                String at \u003d actualTask[1];","lastModifiedDate":"2022-01-15"},{"lineNumber":70,"author":{"gitId":"9teMare"},"content":"                                Event event \u003d new Event(description, at);","lastModifiedDate":"2022-01-15"},{"lineNumber":71,"author":{"gitId":"9teMare"},"content":"                                addTask(event);","lastModifiedDate":"2022-01-15"},{"lineNumber":72,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyTodo) { //valid todo command","lastModifiedDate":"2022-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                                String description \u003d input.replaceAll(\"todo \", \"\");","lastModifiedDate":"2022-01-13"},{"lineNumber":74,"author":{"gitId":"9teMare"},"content":"                                Todo todo \u003d new Todo(description);","lastModifiedDate":"2022-01-15"},{"lineNumber":75,"author":{"gitId":"9teMare"},"content":"                                addTask(todo);","lastModifiedDate":"2022-01-15"},{"lineNumber":76,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyDeadline \u0026\u0026 hasAt) { //used /at for deadline","lastModifiedDate":"2022-01-14"},{"lineNumber":77,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"Please use the /by keyword for deadline!\");","lastModifiedDate":"2022-01-14"},{"lineNumber":78,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyEvent \u0026\u0026 hasBy) { //used /by for event","lastModifiedDate":"2022-01-14"},{"lineNumber":79,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"Please use the /at keyword for event!\");","lastModifiedDate":"2022-01-14"},{"lineNumber":80,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyDeadline) { //deadline without specifying time with /by","lastModifiedDate":"2022-01-14"},{"lineNumber":81,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"Please specify the deadline time with the /by keyword!\");","lastModifiedDate":"2022-01-15"},{"lineNumber":82,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyEvent) { //event without specifying time with /at","lastModifiedDate":"2022-01-14"},{"lineNumber":83,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"Please specify the event time with the /at keyword!\");","lastModifiedDate":"2022-01-15"},{"lineNumber":84,"author":{"gitId":"9teMare"},"content":"                            } else { //invalid command","lastModifiedDate":"2022-01-14"},{"lineNumber":85,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"I don\u0027t know what that means :(\");","lastModifiedDate":"2022-01-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                            }","lastModifiedDate":"2022-01-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2022-01-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    } catch (CortanaException e) {","lastModifiedDate":"2022-01-13"},{"lineNumber":89,"author":{"gitId":"9teMare"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2022-01-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2022-01-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            input \u003d scanner.next();","lastModifiedDate":"2022-01-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            input +\u003d scanner.nextLine();","lastModifiedDate":"2022-01-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        scanner.close();","lastModifiedDate":"2022-01-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":99,"author":{"gitId":"9teMare"},"content":"    public static void list()  {","lastModifiedDate":"2022-01-15"},{"lineNumber":100,"author":{"gitId":"9teMare"},"content":"        if (tasksArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-15"},{"lineNumber":101,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"You are done for the day, or are you?\");","lastModifiedDate":"2022-01-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":103,"author":{"gitId":"9teMare"},"content":"            for (int i \u003d 0; i \u003c tasksArrayList.size(); i ++) {","lastModifiedDate":"2022-01-15"},{"lineNumber":104,"author":{"gitId":"9teMare"},"content":"                System.out.println(i + 1 + \".\" + tasksArrayList.get(i));","lastModifiedDate":"2022-01-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":107,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":108,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":109,"author":{"gitId":"9teMare"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2022-01-15"},{"lineNumber":110,"author":{"gitId":"9teMare"},"content":"        if (taskSet.contains(task)) {","lastModifiedDate":"2022-01-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            System.out.println(\"Task already exists!\");","lastModifiedDate":"2022-01-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-01-12"},{"lineNumber":113,"author":{"gitId":"9teMare"},"content":"            taskSet.add(task);","lastModifiedDate":"2022-01-15"},{"lineNumber":114,"author":{"gitId":"9teMare"},"content":"            tasksArrayList.add(task);","lastModifiedDate":"2022-01-15"},{"lineNumber":115,"author":{"gitId":"9teMare"},"content":"            String taskOrTasks \u003d tasksArrayList.size() \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2022-01-15"},{"lineNumber":116,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \" \" + task +","lastModifiedDate":"2022-01-15"},{"lineNumber":117,"author":{"gitId":"9teMare"},"content":"                    \"\\nNow you have \" + tasksArrayList.size() + \" \" + taskOrTasks + \" in the list.\");","lastModifiedDate":"2022-01-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-12"},{"lineNumber":119,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":120,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":121,"author":{"gitId":"9teMare"},"content":"    public static void markAsDone(int index) {","lastModifiedDate":"2022-01-15"},{"lineNumber":122,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-15"},{"lineNumber":123,"author":{"gitId":"9teMare"},"content":"            Task task \u003d tasksArrayList.get(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":124,"author":{"gitId":"9teMare"},"content":"            task.markAsDone();","lastModifiedDate":"2022-01-15"},{"lineNumber":125,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n \" + task);","lastModifiedDate":"2022-01-15"},{"lineNumber":126,"author":{"gitId":"9teMare"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":127,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"No such task!\");","lastModifiedDate":"2022-01-15"},{"lineNumber":128,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":129,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":130,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":131,"author":{"gitId":"9teMare"},"content":"    public static void markAsUndone(int index) {","lastModifiedDate":"2022-01-15"},{"lineNumber":132,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-15"},{"lineNumber":133,"author":{"gitId":"9teMare"},"content":"            Task task \u003d tasksArrayList.get(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":134,"author":{"gitId":"9teMare"},"content":"            task.markAsUndone();","lastModifiedDate":"2022-01-15"},{"lineNumber":135,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n \" + task);","lastModifiedDate":"2022-01-15"},{"lineNumber":136,"author":{"gitId":"9teMare"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":137,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"No such task!\");","lastModifiedDate":"2022-01-15"},{"lineNumber":138,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-15"},{"lineNumber":139,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-15"},{"lineNumber":140,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":141,"author":{"gitId":"9teMare"},"content":"    public static void delete (int index) {","lastModifiedDate":"2022-01-15"},{"lineNumber":142,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-15"},{"lineNumber":143,"author":{"gitId":"9teMare"},"content":"            Task taskDeleted \u003d tasksArrayList.get(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":144,"author":{"gitId":"9teMare"},"content":"            tasksArrayList.remove(index);","lastModifiedDate":"2022-01-15"},{"lineNumber":145,"author":{"gitId":"9teMare"},"content":"            taskSet.remove(taskDeleted);","lastModifiedDate":"2022-01-15"},{"lineNumber":146,"author":{"gitId":"9teMare"},"content":"            String taskOrTasks \u003d tasksArrayList.size() \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2022-01-15"},{"lineNumber":147,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + \" \" + taskDeleted + \"\\n\" +","lastModifiedDate":"2022-01-15"},{"lineNumber":148,"author":{"gitId":"9teMare"},"content":"                    \"Now you have \" + tasksArrayList.size() + \" \" + taskOrTasks + \" in the list.\");","lastModifiedDate":"2022-01-15"},{"lineNumber":149,"author":{"gitId":"9teMare"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-15"},{"lineNumber":150,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"No such task!\");","lastModifiedDate":"2022-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"9teMare"},"content":"        greet();","lastModifiedDate":"2022-01-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        simpleTodo();","lastModifiedDate":"2022-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"9teMare":103,"-":55}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    protected String at;","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2022-01-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"9teMare"},"content":"    public boolean equals(Object obj){","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"9teMare"},"content":"        if (obj !\u003d null \u0026\u0026 obj.getClass() \u003d\u003d getClass()) {","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"9teMare"},"content":"            Event event \u003d (Event) obj;","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"9teMare"},"content":"            return (event.description.equals(this.description) \u0026\u0026 event.at.equals(this.at));","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"9teMare"},"content":"            return false;","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"9teMare"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-14"},{"lineNumber":28,"author":{"gitId":"9teMare"},"content":"        return Objects.hash(description, at);","lastModifiedDate":"2022-01-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"9teMare":11,"-":19}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"9teMare"},"content":"    public boolean equals(Object obj){","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"9teMare"},"content":"        if (obj !\u003d null \u0026\u0026 obj.getClass() \u003d\u003d getClass()) {","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"9teMare"},"content":"            Todo todo \u003d (Todo) obj;","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"9teMare"},"content":"            return todo.description.equals(this.description);","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"9teMare"},"content":"            return false;","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"9teMare"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"9teMare"},"content":"        return Objects.hash(description);","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"9teMare":11,"-":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"todo read book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"9teMare"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"9teMare"},"content":"deadline return book /by tomorrow","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"9teMare"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"9teMare"},"content":"event watch lecture /at Friday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"9teMare"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"9teMare"},"content":"delete 2","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"9teMare"},"content":"delete 3","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"9teMare"},"content":"blah","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"9teMare"},"content":"todo","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"9teMare"},"content":"deadline","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"9teMare"},"content":"event","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"9teMare"},"content":"deadline finish project","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"9teMare"},"content":"deadline finish project by tomorrow","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"9teMare"},"content":"event party","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"9teMare"},"content":"event party at","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"9teMare"},"content":"todo read book","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"9teMare"},"content":"event watch lecture /at Friday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"9teMare"},"content":"delete 2","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"9teMare"},"content":"event watch lecture /at Friday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"9teMare"},"content":"deadline watch lecture /by Friday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"9teMare"},"content":"mark 3","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"9teMare"},"content":"bye","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"9teMare":31}}]
