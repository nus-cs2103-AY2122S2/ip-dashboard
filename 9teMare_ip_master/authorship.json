[{"path":"data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"[T][ ] read book","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"9teMare"},"content":"[D][ ] return book (by: Sunday, January 23, 2022)","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"[E][ ] birthday party (at: Sunday, January 23, 2022 0700PM)","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"9teMare":3}},{"path":"src/main/java/CortanaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class CortanaException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"9teMare"},"content":"    public CortanaException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"9teMare"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"9teMare":3,"-":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"9teMare"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"9teMare"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"9teMare"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"9teMare"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"9teMare"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"9teMare"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"9teMare"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"9teMare"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"9teMare"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"9teMare"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"9teMare"},"content":"        LocalDate localDate \u003d by.toLocalDate();","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"9teMare"},"content":"        LocalTime localTime \u003d by.toLocalTime();","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"9teMare"},"content":"        String displayDate \u003d String.format(\"%s, %s %s, %s\",","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"9teMare"},"content":"                localDate.getDayOfWeek().toString().substring(0, 1).toUpperCase() + localDate.getDayOfWeek().toString().substring(1).toLowerCase(),","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"9teMare"},"content":"                localDate.getMonth().toString().substring(0, 1).toUpperCase() + localDate.getMonth().toString().substring(1).toLowerCase(),","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"9teMare"},"content":"                localDate.getDayOfMonth(),","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"9teMare"},"content":"                localDate.getYear());","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"9teMare"},"content":"        String displayTime \u003d \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"9teMare"},"content":"        if (localTime !\u003d LocalTime.MAX) {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"9teMare"},"content":"            DateFormat inputFormat \u003d new SimpleDateFormat(\"HHmm\");","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"9teMare"},"content":"            DateFormat outputFormat \u003d new SimpleDateFormat(\"hhmma\", Locale.ENGLISH);","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"9teMare"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"9teMare"},"content":"                DecimalFormat timeFormatter \u003d new DecimalFormat(\"00\");","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"9teMare"},"content":"                String time \u003d timeFormatter.format(localTime.getHour()) + timeFormatter.format(localTime.getMinute());","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"9teMare"},"content":"                displayTime \u003d \" \" + outputFormat.format(inputFormat.parse(time));","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"9teMare"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"9teMare"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"9teMare"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + displayDate + displayTime + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"9teMare"},"content":"    public boolean equals(Object obj){","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"9teMare"},"content":"        if (obj !\u003d null \u0026\u0026 obj.getClass() \u003d\u003d getClass()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"9teMare"},"content":"            Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"9teMare"},"content":"            return (deadline.description.equals(this.description) \u0026\u0026 deadline.by.equals(this.by));","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"9teMare"},"content":"            return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"9teMare"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"9teMare"},"content":"        return Objects.hash(description, by);","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"9teMare":41,"-":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"import java.io.*;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"9teMare"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"9teMare"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"9teMare"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"9teMare"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"9teMare"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"9teMare"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"9teMare"},"content":"import java.util.*;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"9teMare"},"content":"    private static final Set\u003cTask\u003e taskSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"9teMare"},"content":"    private final static ArrayList\u003cTask\u003e tasksArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"9teMare"},"content":"    public static void greet() {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"9teMare"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"9teMare"},"content":"                \"   ____                  _                           \\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"9teMare"},"content":"                \"  / ___|   ___    _ __  | |_    __ _   _ __     __ _ \\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"9teMare"},"content":"                \" | |      / _ \\\\  | \u0027__| | __|  / _` | | \u0027_ \\\\   / _` |\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"9teMare"},"content":"                \" | |___  | (_) | | |    | |_  | (_| | | | | | | (_| |\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"9teMare"},"content":"                \"  \\\\____|  \\\\___/  |_|     \\\\__|  \\\\__,_| |_| |_|  \\\\__,_|\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"9teMare"},"content":"                \"                                                     \\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"9teMare"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"\\nMy name is Cortana, what can I do for you?\");","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void simpleTodo() {","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String input \u003d scanner.next();","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        input +\u003d scanner.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        while(true) {","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"9teMare"},"content":"            if (input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"bye\")) { //bye, exit","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"9teMare"},"content":"                if (input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"list\")) { //list all tasks","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"9teMare"},"content":"                    list();","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"9teMare"},"content":"                } else if (input.toLowerCase().matches(\"^mark \\\\d+|^mark -\\\\d+\")) { //mark task as done","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"mark \", \"\")) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"9teMare"},"content":"                    markAsDone(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"9teMare"},"content":"                } else if (input.toLowerCase().matches(\"^unmark \\\\d+|^unmark -\\\\d+\")) { //mark task as undone","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"unmark \", \"\")) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"9teMare"},"content":"                    markAsUndone(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"9teMare"},"content":"                } else if (input.toLowerCase().matches(\"^delete \\\\d+|^delete -\\\\d+\")) { //delete a task","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"9teMare"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"delete \", \"\")) - 1;","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"9teMare"},"content":"                    delete(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"9teMare"},"content":"                } else if (input.toLowerCase().matches(\"^delete all\")) { //delete all tasks","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"9teMare"},"content":"                    deleteAll();","lastModifiedDate":"2022-01-21"},{"lineNumber":50,"author":{"gitId":"9teMare"},"content":"                } else if (input.toLowerCase().matches(\"^show all( \\\\d{4}-\\\\d{1,2}-\\\\d{1,2})?( \\\\d{4})?\")) { //show all tasks on a date","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    try {","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"9teMare"},"content":"                        if (input.toLowerCase().replaceAll(\" \", \"\").matches(\"showall\")) {","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"9teMare"},"content":"                            throw new CortanaException(\"Please specify the date time you are looking for!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"9teMare"},"content":"                        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"9teMare"},"content":"                            String time \u003d input.replaceAll(\"show all \", \"\");","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"9teMare"},"content":"                            taskOnSameDate(time);","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"9teMare"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"9teMare"},"content":"                    } catch (CortanaException e) {","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"9teMare"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                } else { //add task","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    try {","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"9teMare"},"content":"                        //only input the task type and nothing else","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"9teMare"},"content":"                        boolean isEmptyDeadline \u003d input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"deadline\");","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"9teMare"},"content":"                        boolean isEmptyEvent \u003d input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"event\");","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"9teMare"},"content":"                        boolean isEmptyTodo \u003d input.replaceAll(\"[ |\\\\t]\", \"\").equalsIgnoreCase(\"todo\");","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                        String taskType \u003d isEmptyDeadline ? \"deadline\" : isEmptyEvent ? \"event\" : \"todo\";","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        if (isEmptyDeadline || isEmptyEvent || isEmptyTodo ) {","lastModifiedDate":"2022-01-20"},{"lineNumber":69,"author":{"gitId":"9teMare"},"content":"                            String aOrAn \u003d isEmptyEvent ? \"an \" : \"a \";","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"9teMare"},"content":"                            throw new CortanaException(\"OOPS!!! The description of \" + aOrAn + taskType + \" cannot be empty!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"9teMare"},"content":"                            //input the task type with at least one character after it","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                            boolean isNotEmptyDeadline \u003d input.toLowerCase().matches(\"^deadline .*\");","lastModifiedDate":"2022-01-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                            boolean isNotEmptyEvent \u003d input.toLowerCase().matches(\"^event .*\");","lastModifiedDate":"2022-01-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                            boolean isNotEmptyTodo \u003d input.toLowerCase().matches(\"^todo .*\");","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                            boolean hasBy \u003d Pattern.compile(\"/by .*\").matcher(input).find();","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                            boolean hasAt \u003d Pattern.compile(\"/at .*\").matcher(input).find();","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"9teMare"},"content":"                            if (isNotEmptyDeadline \u0026\u0026 hasBy) { //valid deadline command","lastModifiedDate":"2022-01-20"},{"lineNumber":79,"author":{"gitId":"9teMare"},"content":"                                String[] actualTask \u003d input.replaceAll(\"deadline \", \"\").split(\"/by \");","lastModifiedDate":"2022-01-20"},{"lineNumber":80,"author":{"gitId":"9teMare"},"content":"                                String description \u003d actualTask[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"9teMare"},"content":"                                String by \u003d actualTask[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"9teMare"},"content":"                                boolean correctTimeFormat \u003d Pattern.compile(\"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}( \\\\d{4})?\").matcher(by).find();","lastModifiedDate":"2022-01-21"},{"lineNumber":83,"author":{"gitId":"9teMare"},"content":"                                if (correctTimeFormat) {","lastModifiedDate":"2022-01-21"},{"lineNumber":84,"author":{"gitId":"9teMare"},"content":"                                    boolean hasTime \u003d Pattern.compile(\"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2} \\\\d{4}\").matcher(by).find();","lastModifiedDate":"2022-01-21"},{"lineNumber":85,"author":{"gitId":"9teMare"},"content":"                                    Deadline deadline;","lastModifiedDate":"2022-01-21"},{"lineNumber":86,"author":{"gitId":"9teMare"},"content":"                                    if (hasTime) {","lastModifiedDate":"2022-01-21"},{"lineNumber":87,"author":{"gitId":"9teMare"},"content":"                                        LocalDateTime localDateTime \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":88,"author":{"gitId":"9teMare"},"content":"                                        deadline \u003d new Deadline(description, localDateTime);","lastModifiedDate":"2022-01-21"},{"lineNumber":89,"author":{"gitId":"9teMare"},"content":"                                    } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":90,"author":{"gitId":"9teMare"},"content":"                                        LocalDate localDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":91,"author":{"gitId":"9teMare"},"content":"                                        deadline \u003d new Deadline(description, LocalDateTime.of(localDate, LocalTime.MAX));","lastModifiedDate":"2022-01-21"},{"lineNumber":92,"author":{"gitId":"9teMare"},"content":"                                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":93,"author":{"gitId":"9teMare"},"content":"                                    addTask(deadline);","lastModifiedDate":"2022-01-20"},{"lineNumber":94,"author":{"gitId":"9teMare"},"content":"                                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":95,"author":{"gitId":"9teMare"},"content":"                                    throw new CortanaException(\"Invalid date time format! Please follow the format yyyy-M-d HHmm!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":96,"author":{"gitId":"9teMare"},"content":"                                }","lastModifiedDate":"2022-01-21"},{"lineNumber":97,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyEvent \u0026\u0026 hasAt) { //valid event command","lastModifiedDate":"2022-01-20"},{"lineNumber":98,"author":{"gitId":"9teMare"},"content":"                                String[] actualTask \u003d input.replaceAll(\"event \", \"\").split(\"/at \");","lastModifiedDate":"2022-01-20"},{"lineNumber":99,"author":{"gitId":"9teMare"},"content":"                                String description \u003d actualTask[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"9teMare"},"content":"                                String at \u003d actualTask[1];","lastModifiedDate":"2022-01-20"},{"lineNumber":101,"author":{"gitId":"9teMare"},"content":"                                boolean correctTimeFormat \u003d Pattern.compile(\"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}( \\\\d{4})?\").matcher(at).find();","lastModifiedDate":"2022-01-21"},{"lineNumber":102,"author":{"gitId":"9teMare"},"content":"                                if (correctTimeFormat) {","lastModifiedDate":"2022-01-21"},{"lineNumber":103,"author":{"gitId":"9teMare"},"content":"                                    boolean hasTime \u003d Pattern.compile(\"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2} \\\\d{4}\").matcher(at).find();","lastModifiedDate":"2022-01-21"},{"lineNumber":104,"author":{"gitId":"9teMare"},"content":"                                    Event event;","lastModifiedDate":"2022-01-21"},{"lineNumber":105,"author":{"gitId":"9teMare"},"content":"                                    if (hasTime) {","lastModifiedDate":"2022-01-21"},{"lineNumber":106,"author":{"gitId":"9teMare"},"content":"                                        LocalDateTime localDateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":107,"author":{"gitId":"9teMare"},"content":"                                        event \u003d new Event(description, localDateTime);","lastModifiedDate":"2022-01-21"},{"lineNumber":108,"author":{"gitId":"9teMare"},"content":"                                    } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":109,"author":{"gitId":"9teMare"},"content":"                                        LocalDate localDate \u003d LocalDate.parse(at, DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2022-01-21"},{"lineNumber":110,"author":{"gitId":"9teMare"},"content":"                                        event \u003d new Event(description, LocalDateTime.of(localDate, LocalTime.MAX));","lastModifiedDate":"2022-01-21"},{"lineNumber":111,"author":{"gitId":"9teMare"},"content":"                                    }","lastModifiedDate":"2022-01-21"},{"lineNumber":112,"author":{"gitId":"9teMare"},"content":"                                    addTask(event);","lastModifiedDate":"2022-01-20"},{"lineNumber":113,"author":{"gitId":"9teMare"},"content":"                                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":114,"author":{"gitId":"9teMare"},"content":"                                    throw new CortanaException(\"Invalid date time format! Please follow the format yyyy-M-d HHmm!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":115,"author":{"gitId":"9teMare"},"content":"                                }","lastModifiedDate":"2022-01-21"},{"lineNumber":116,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyTodo) { //valid todo command","lastModifiedDate":"2022-01-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                String description \u003d input.replaceAll(\"todo \", \"\");","lastModifiedDate":"2022-01-20"},{"lineNumber":118,"author":{"gitId":"9teMare"},"content":"                                Todo todo \u003d new Todo(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":119,"author":{"gitId":"9teMare"},"content":"                                addTask(todo);","lastModifiedDate":"2022-01-20"},{"lineNumber":120,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyDeadline \u0026\u0026 hasAt) { //used /at for deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":121,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"Please use the /by keyword for deadline!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":122,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyEvent \u0026\u0026 hasBy) { //used /by for event","lastModifiedDate":"2022-01-20"},{"lineNumber":123,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"Please use the /at keyword for event!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":124,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyDeadline) { //deadline without specifying time with /by","lastModifiedDate":"2022-01-20"},{"lineNumber":125,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"Please specify the deadline time with the /by keyword!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":126,"author":{"gitId":"9teMare"},"content":"                            } else if (isNotEmptyEvent) { //event without specifying time with /at","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"Please specify the event time with the /at keyword!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"9teMare"},"content":"                            } else { //invalid command","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"9teMare"},"content":"                                throw new CortanaException(\"I don\u0027t know what that means :(\");","lastModifiedDate":"2022-01-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                            }","lastModifiedDate":"2022-01-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2022-01-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    } catch (CortanaException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":133,"author":{"gitId":"9teMare"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2022-01-20"},{"lineNumber":134,"author":{"gitId":"9teMare"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":135,"author":{"gitId":"9teMare"},"content":"                        e.printStackTrace();","lastModifiedDate":"2022-01-20"},{"lineNumber":136,"author":{"gitId":"9teMare"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":137,"author":{"gitId":"9teMare"},"content":"                        System.out.println(\"Invalid input time!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2022-01-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            input \u003d scanner.next();","lastModifiedDate":"2022-01-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            input +\u003d scanner.nextLine();","lastModifiedDate":"2022-01-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        scanner.close();","lastModifiedDate":"2022-01-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"9teMare"},"content":"    public static void list()  {","lastModifiedDate":"2022-01-20"},{"lineNumber":148,"author":{"gitId":"9teMare"},"content":"        if (tasksArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"You are done for the day, or are you?\");","lastModifiedDate":"2022-01-20"},{"lineNumber":150,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":151,"author":{"gitId":"9teMare"},"content":"            for (int i \u003d 0; i \u003c tasksArrayList.size(); i ++) {","lastModifiedDate":"2022-01-20"},{"lineNumber":152,"author":{"gitId":"9teMare"},"content":"                System.out.println(i + 1 + \".\" + tasksArrayList.get(i));","lastModifiedDate":"2022-01-20"},{"lineNumber":153,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":154,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":155,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"9teMare"},"content":"    public static void addTask(Task task) throws IOException {","lastModifiedDate":"2022-01-20"},{"lineNumber":158,"author":{"gitId":"9teMare"},"content":"        if (taskSet.contains(task)) {","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Task already exists!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"9teMare"},"content":"            taskSet.add(task);","lastModifiedDate":"2022-01-20"},{"lineNumber":162,"author":{"gitId":"9teMare"},"content":"            tasksArrayList.add(task);","lastModifiedDate":"2022-01-20"},{"lineNumber":163,"author":{"gitId":"9teMare"},"content":"            writeFile();","lastModifiedDate":"2022-01-20"},{"lineNumber":164,"author":{"gitId":"9teMare"},"content":"            String taskOrTasks \u003d tasksArrayList.size() \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2022-01-20"},{"lineNumber":165,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \" \" + task +","lastModifiedDate":"2022-01-20"},{"lineNumber":166,"author":{"gitId":"9teMare"},"content":"                    \"\\nNow you have \" + tasksArrayList.size() + \" \" + taskOrTasks + \" in the list.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":167,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":168,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":169,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":170,"author":{"gitId":"9teMare"},"content":"    public static void markAsDone(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":171,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"9teMare"},"content":"            Task task \u003d tasksArrayList.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":173,"author":{"gitId":"9teMare"},"content":"            task.markAsDone();","lastModifiedDate":"2022-01-20"},{"lineNumber":174,"author":{"gitId":"9teMare"},"content":"            writeFile();","lastModifiedDate":"2022-01-20"},{"lineNumber":175,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n \" + task);","lastModifiedDate":"2022-01-20"},{"lineNumber":176,"author":{"gitId":"9teMare"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":177,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"No such task!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":178,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":179,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":180,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":181,"author":{"gitId":"9teMare"},"content":"    public static void markAsUndone(int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":182,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"9teMare"},"content":"            Task task \u003d tasksArrayList.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":184,"author":{"gitId":"9teMare"},"content":"            task.markAsUndone();","lastModifiedDate":"2022-01-20"},{"lineNumber":185,"author":{"gitId":"9teMare"},"content":"            writeFile();","lastModifiedDate":"2022-01-20"},{"lineNumber":186,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n \" + task);","lastModifiedDate":"2022-01-20"},{"lineNumber":187,"author":{"gitId":"9teMare"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":188,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"No such task!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":189,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":190,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":191,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":192,"author":{"gitId":"9teMare"},"content":"    public static void delete (int index) {","lastModifiedDate":"2022-01-20"},{"lineNumber":193,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":194,"author":{"gitId":"9teMare"},"content":"            Task taskDeleted \u003d tasksArrayList.get(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":195,"author":{"gitId":"9teMare"},"content":"            tasksArrayList.remove(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":196,"author":{"gitId":"9teMare"},"content":"            taskSet.remove(taskDeleted);","lastModifiedDate":"2022-01-20"},{"lineNumber":197,"author":{"gitId":"9teMare"},"content":"            writeFile();","lastModifiedDate":"2022-01-20"},{"lineNumber":198,"author":{"gitId":"9teMare"},"content":"            String taskOrTasks \u003d tasksArrayList.size() \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2022-01-20"},{"lineNumber":199,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + \" \" + taskDeleted + \"\\n\" +","lastModifiedDate":"2022-01-20"},{"lineNumber":200,"author":{"gitId":"9teMare"},"content":"                    \"Now you have \" + tasksArrayList.size() + \" \" + taskOrTasks + \" in the list.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":201,"author":{"gitId":"9teMare"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":202,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"No such task!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":203,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":204,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":205,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":206,"author":{"gitId":"9teMare"},"content":"    public static void deleteAll () {","lastModifiedDate":"2022-01-21"},{"lineNumber":207,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":208,"author":{"gitId":"9teMare"},"content":"            taskSet.clear();","lastModifiedDate":"2022-01-21"},{"lineNumber":209,"author":{"gitId":"9teMare"},"content":"            tasksArrayList.clear();","lastModifiedDate":"2022-01-21"},{"lineNumber":210,"author":{"gitId":"9teMare"},"content":"            writeFile();","lastModifiedDate":"2022-01-21"},{"lineNumber":211,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"All tasks have been removed!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":212,"author":{"gitId":"9teMare"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":213,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"No such task!\");","lastModifiedDate":"2022-01-21"},{"lineNumber":214,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":215,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":216,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-21"},{"lineNumber":217,"author":{"gitId":"9teMare"},"content":"    public static void createDirectoryAndFileIfNotExist() {","lastModifiedDate":"2022-01-20"},{"lineNumber":218,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":219,"author":{"gitId":"9teMare"},"content":"            String path \u003d Paths.get(\"\").toAbsolutePath() + \"/data/\";","lastModifiedDate":"2022-01-20"},{"lineNumber":220,"author":{"gitId":"9teMare"},"content":"            File directory \u003d new File(path);","lastModifiedDate":"2022-01-20"},{"lineNumber":221,"author":{"gitId":"9teMare"},"content":"            boolean wasDirectoryCreated \u003d directory.mkdir();","lastModifiedDate":"2022-01-20"},{"lineNumber":222,"author":{"gitId":"9teMare"},"content":"            if (wasDirectoryCreated) {","lastModifiedDate":"2022-01-20"},{"lineNumber":223,"author":{"gitId":"9teMare"},"content":"                System.out.println(\"Created directory \" + directory);","lastModifiedDate":"2022-01-20"},{"lineNumber":224,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":225,"author":{"gitId":"9teMare"},"content":"            File taskFile \u003d new File(path + \"task.txt\");","lastModifiedDate":"2022-01-20"},{"lineNumber":226,"author":{"gitId":"9teMare"},"content":"            boolean wasFileCreated \u003d taskFile.createNewFile();","lastModifiedDate":"2022-01-20"},{"lineNumber":227,"author":{"gitId":"9teMare"},"content":"            if (wasFileCreated) {","lastModifiedDate":"2022-01-20"},{"lineNumber":228,"author":{"gitId":"9teMare"},"content":"                System.out.println(\"Created task.txt under \" + directory);","lastModifiedDate":"2022-01-20"},{"lineNumber":229,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":230,"author":{"gitId":"9teMare"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":231,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Something went wrong during creating directory or creating file\");","lastModifiedDate":"2022-01-20"},{"lineNumber":232,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":233,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":234,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":235,"author":{"gitId":"9teMare"},"content":"    public static void loadFile() {","lastModifiedDate":"2022-01-20"},{"lineNumber":236,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":237,"author":{"gitId":"9teMare"},"content":"            String path \u003d Paths.get(\"\").toAbsolutePath() + \"/data/\";","lastModifiedDate":"2022-01-20"},{"lineNumber":238,"author":{"gitId":"9teMare"},"content":"            File taskFile \u003d new File(path + \"task.txt\");","lastModifiedDate":"2022-01-20"},{"lineNumber":239,"author":{"gitId":"9teMare"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(taskFile);","lastModifiedDate":"2022-01-20"},{"lineNumber":240,"author":{"gitId":"9teMare"},"content":"            Scanner scanner \u003d new Scanner(fileInputStream);","lastModifiedDate":"2022-01-20"},{"lineNumber":241,"author":{"gitId":"9teMare"},"content":"            while(scanner.hasNextLine()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":242,"author":{"gitId":"9teMare"},"content":"                Task taskToAdd \u003d parseTask(scanner.nextLine());","lastModifiedDate":"2022-01-20"},{"lineNumber":243,"author":{"gitId":"9teMare"},"content":"                taskSet.add(taskToAdd);","lastModifiedDate":"2022-01-20"},{"lineNumber":244,"author":{"gitId":"9teMare"},"content":"                tasksArrayList.add(taskToAdd);","lastModifiedDate":"2022-01-20"},{"lineNumber":245,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":246,"author":{"gitId":"9teMare"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":247,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":248,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":249,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":250,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":251,"author":{"gitId":"9teMare"},"content":"    public static void writeFile() throws IOException {","lastModifiedDate":"2022-01-20"},{"lineNumber":252,"author":{"gitId":"9teMare"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath() + \"/data/\";","lastModifiedDate":"2022-01-20"},{"lineNumber":253,"author":{"gitId":"9teMare"},"content":"        File taskFile \u003d new File(path + \"task.txt\");","lastModifiedDate":"2022-01-20"},{"lineNumber":254,"author":{"gitId":"9teMare"},"content":"        FileOutputStream fileOutputStream \u003d new FileOutputStream(taskFile, false);","lastModifiedDate":"2022-01-20"},{"lineNumber":255,"author":{"gitId":"9teMare"},"content":"        for (Task task : tasksArrayList) {","lastModifiedDate":"2022-01-20"},{"lineNumber":256,"author":{"gitId":"9teMare"},"content":"            String taskToWrite \u003d task.toString() + \u0027\\n\u0027;","lastModifiedDate":"2022-01-20"},{"lineNumber":257,"author":{"gitId":"9teMare"},"content":"            fileOutputStream.write(taskToWrite.getBytes(StandardCharsets.UTF_8));","lastModifiedDate":"2022-01-20"},{"lineNumber":258,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":259,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":260,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":261,"author":{"gitId":"9teMare"},"content":"    public static Task parseTask(String taskInString) {","lastModifiedDate":"2022-01-20"},{"lineNumber":262,"author":{"gitId":"9teMare"},"content":"        char type \u003d taskInString.charAt(1);","lastModifiedDate":"2022-01-20"},{"lineNumber":263,"author":{"gitId":"9teMare"},"content":"        boolean isDone \u003d taskInString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-01-22"},{"lineNumber":264,"author":{"gitId":"9teMare"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2022-01-21"},{"lineNumber":265,"author":{"gitId":"9teMare"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":266,"author":{"gitId":"9teMare"},"content":"        LocalDate localDate;","lastModifiedDate":"2022-01-21"},{"lineNumber":267,"author":{"gitId":"9teMare"},"content":"        try {","lastModifiedDate":"2022-01-21"},{"lineNumber":268,"author":{"gitId":"9teMare"},"content":"            if (type \u003d\u003d \u0027D\u0027) { //deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":269,"author":{"gitId":"9teMare"},"content":"                String[] actualTask \u003d taskInString.substring(7).split(\"\\\\(by: \");","lastModifiedDate":"2022-01-20"},{"lineNumber":270,"author":{"gitId":"9teMare"},"content":"                String description \u003d actualTask[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":271,"author":{"gitId":"9teMare"},"content":"                String by \u003d actualTask[1].replaceAll(\"\\\\)\", \"\");","lastModifiedDate":"2022-01-20"},{"lineNumber":272,"author":{"gitId":"9teMare"},"content":"                boolean hasTime \u003d Pattern.compile(\"[A-Za-z]* \\\\d{1,2}, \\\\d{4} \\\\d{4}(AM|PM)\").matcher(by).find();","lastModifiedDate":"2022-01-21"},{"lineNumber":273,"author":{"gitId":"9teMare"},"content":"                if (hasTime) {","lastModifiedDate":"2022-01-21"},{"lineNumber":274,"author":{"gitId":"9teMare"},"content":"                    formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMMM dd, yyyy hhmma\", Locale.ENGLISH);","lastModifiedDate":"2022-01-22"},{"lineNumber":275,"author":{"gitId":"9teMare"},"content":"                    localDateTime \u003d LocalDateTime.parse(by, formatter); //convert from hhmmaa to HHmm","lastModifiedDate":"2022-01-22"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":277,"author":{"gitId":"9teMare"},"content":"                    formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMMM dd, yyyy\", Locale.ENGLISH);","lastModifiedDate":"2022-01-22"},{"lineNumber":278,"author":{"gitId":"9teMare"},"content":"                    localDate \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":279,"author":{"gitId":"9teMare"},"content":"                    localDateTime \u003d LocalDateTime.of(localDate, LocalTime.MAX);","lastModifiedDate":"2022-01-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":281,"author":{"gitId":"9teMare"},"content":"                Deadline deadline \u003d new Deadline(description, localDateTime);","lastModifiedDate":"2022-01-21"},{"lineNumber":282,"author":{"gitId":"9teMare"},"content":"                deadline.isDone \u003d isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":283,"author":{"gitId":"9teMare"},"content":"                return deadline;","lastModifiedDate":"2022-01-20"},{"lineNumber":284,"author":{"gitId":"9teMare"},"content":"            } else if (type \u003d\u003d \u0027E\u0027) { //event","lastModifiedDate":"2022-01-22"},{"lineNumber":285,"author":{"gitId":"9teMare"},"content":"                String[] actualTask \u003d taskInString.substring(7).split(\"\\\\(at: \");","lastModifiedDate":"2022-01-20"},{"lineNumber":286,"author":{"gitId":"9teMare"},"content":"                String description \u003d actualTask[0];","lastModifiedDate":"2022-01-20"},{"lineNumber":287,"author":{"gitId":"9teMare"},"content":"                String at \u003d actualTask[1].replaceAll(\"\\\\)\", \"\");","lastModifiedDate":"2022-01-20"},{"lineNumber":288,"author":{"gitId":"9teMare"},"content":"                boolean hasTime \u003d Pattern.compile(\"[A-Za-z]* \\\\d{1,2}, \\\\d{4} \\\\d{4}(AM|PM)\").matcher(at).find();","lastModifiedDate":"2022-01-21"},{"lineNumber":289,"author":{"gitId":"9teMare"},"content":"                if (hasTime) {","lastModifiedDate":"2022-01-21"},{"lineNumber":290,"author":{"gitId":"9teMare"},"content":"                    formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMMM dd, yyyy hhmma\", Locale.ENGLISH);","lastModifiedDate":"2022-01-22"},{"lineNumber":291,"author":{"gitId":"9teMare"},"content":"                    localDateTime \u003d LocalDateTime.parse(at, formatter); //convert from hhmmaa to HHmm","lastModifiedDate":"2022-01-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2022-01-21"},{"lineNumber":293,"author":{"gitId":"9teMare"},"content":"                    formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMMM dd, yyyy\", Locale.ENGLISH);","lastModifiedDate":"2022-01-22"},{"lineNumber":294,"author":{"gitId":"9teMare"},"content":"                    localDate \u003d LocalDate.parse(at, formatter);","lastModifiedDate":"2022-01-21"},{"lineNumber":295,"author":{"gitId":"9teMare"},"content":"                    localDateTime \u003d LocalDateTime.of(localDate, LocalTime.MAX);","lastModifiedDate":"2022-01-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-21"},{"lineNumber":297,"author":{"gitId":"9teMare"},"content":"                Event event \u003d new Event(description, localDateTime);","lastModifiedDate":"2022-01-21"},{"lineNumber":298,"author":{"gitId":"9teMare"},"content":"                event.isDone \u003d isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":299,"author":{"gitId":"9teMare"},"content":"                return event;","lastModifiedDate":"2022-01-20"},{"lineNumber":300,"author":{"gitId":"9teMare"},"content":"            } else { //todo","lastModifiedDate":"2022-01-22"},{"lineNumber":301,"author":{"gitId":"9teMare"},"content":"                String description \u003d taskInString.substring(7);","lastModifiedDate":"2022-01-20"},{"lineNumber":302,"author":{"gitId":"9teMare"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":303,"author":{"gitId":"9teMare"},"content":"                todo.isDone \u003d isDone;","lastModifiedDate":"2022-01-22"},{"lineNumber":304,"author":{"gitId":"9teMare"},"content":"                return todo;","lastModifiedDate":"2022-01-20"},{"lineNumber":305,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":306,"author":{"gitId":"9teMare"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":307,"author":{"gitId":"9teMare"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-21"},{"lineNumber":308,"author":{"gitId":"9teMare"},"content":"            return null;","lastModifiedDate":"2022-01-20"},{"lineNumber":309,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":310,"author":{"gitId":"9teMare"},"content":"    }","lastModifiedDate":"2022-01-21"},{"lineNumber":311,"author":{"gitId":"9teMare"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":312,"author":{"gitId":"9teMare"},"content":"    public static void taskOnSameDate(String time) {","lastModifiedDate":"2022-01-22"},{"lineNumber":313,"author":{"gitId":"9teMare"},"content":"        boolean correctTimeFormat \u003d Pattern.compile(\"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}( \\\\d{4})?\").matcher(time).find();","lastModifiedDate":"2022-01-22"},{"lineNumber":314,"author":{"gitId":"9teMare"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":315,"author":{"gitId":"9teMare"},"content":"        LocalDate localDate;","lastModifiedDate":"2022-01-22"},{"lineNumber":316,"author":{"gitId":"9teMare"},"content":"        int tasksOnSameDate \u003d 0;","lastModifiedDate":"2022-01-22"},{"lineNumber":317,"author":{"gitId":"9teMare"},"content":"        if (correctTimeFormat) {","lastModifiedDate":"2022-01-22"},{"lineNumber":318,"author":{"gitId":"9teMare"},"content":"            for(Task task: tasksArrayList) {","lastModifiedDate":"2022-01-22"},{"lineNumber":319,"author":{"gitId":"9teMare"},"content":"                boolean hasTime \u003d Pattern.compile(\"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2} \\\\d{4}\").matcher(time).find();","lastModifiedDate":"2022-01-22"},{"lineNumber":320,"author":{"gitId":"9teMare"},"content":"                if (task instanceof Deadline) { //task is a deadline","lastModifiedDate":"2022-01-22"},{"lineNumber":321,"author":{"gitId":"9teMare"},"content":"                    if (hasTime) { //deadline has date and time","lastModifiedDate":"2022-01-22"},{"lineNumber":322,"author":{"gitId":"9teMare"},"content":"                        localDateTime \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":323,"author":{"gitId":"9teMare"},"content":"                        if (((Deadline) task).by.equals(localDateTime)) { //all deadlines with the exact same date and time","lastModifiedDate":"2022-01-22"},{"lineNumber":324,"author":{"gitId":"9teMare"},"content":"                            tasksOnSameDate ++;","lastModifiedDate":"2022-01-22"},{"lineNumber":325,"author":{"gitId":"9teMare"},"content":"                            System.out.println(task.toString().split(\"\\\\(by: \")[0]);","lastModifiedDate":"2022-01-22"},{"lineNumber":326,"author":{"gitId":"9teMare"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":327,"author":{"gitId":"9teMare"},"content":"                    } else { //deadline only has date","lastModifiedDate":"2022-01-22"},{"lineNumber":328,"author":{"gitId":"9teMare"},"content":"                        localDate \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":329,"author":{"gitId":"9teMare"},"content":"                        if (((Deadline) task).by.toLocalDate().equals(localDate)) { //all deadlines with the same date regardless of time","lastModifiedDate":"2022-01-22"},{"lineNumber":330,"author":{"gitId":"9teMare"},"content":"                            tasksOnSameDate ++;","lastModifiedDate":"2022-01-22"},{"lineNumber":331,"author":{"gitId":"9teMare"},"content":"                            System.out.println(task.toString().split(\"\\\\(by: \")[0]);","lastModifiedDate":"2022-01-22"},{"lineNumber":332,"author":{"gitId":"9teMare"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":333,"author":{"gitId":"9teMare"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":334,"author":{"gitId":"9teMare"},"content":"                } else if (task instanceof Event) { //task is an event","lastModifiedDate":"2022-01-22"},{"lineNumber":335,"author":{"gitId":"9teMare"},"content":"                    if (hasTime) { //event has date and time","lastModifiedDate":"2022-01-22"},{"lineNumber":336,"author":{"gitId":"9teMare"},"content":"                        localDateTime \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":337,"author":{"gitId":"9teMare"},"content":"                        if (((Event) task).at.equals(localDateTime)) { //all events with the exact same date and time","lastModifiedDate":"2022-01-22"},{"lineNumber":338,"author":{"gitId":"9teMare"},"content":"                            tasksOnSameDate ++;","lastModifiedDate":"2022-01-22"},{"lineNumber":339,"author":{"gitId":"9teMare"},"content":"                            System.out.println(task.toString().split(\"\\\\(by: \")[0]);","lastModifiedDate":"2022-01-22"},{"lineNumber":340,"author":{"gitId":"9teMare"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":341,"author":{"gitId":"9teMare"},"content":"                    } else { //event only has date","lastModifiedDate":"2022-01-22"},{"lineNumber":342,"author":{"gitId":"9teMare"},"content":"                        localDate \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2022-01-22"},{"lineNumber":343,"author":{"gitId":"9teMare"},"content":"                        if (((Event) task).at.toLocalDate().equals(localDate)) { //all events with the same date regardless of time","lastModifiedDate":"2022-01-22"},{"lineNumber":344,"author":{"gitId":"9teMare"},"content":"                            tasksOnSameDate ++;","lastModifiedDate":"2022-01-22"},{"lineNumber":345,"author":{"gitId":"9teMare"},"content":"                            System.out.println(task.toString().split(\"\\\\(by: \")[0]);","lastModifiedDate":"2022-01-22"},{"lineNumber":346,"author":{"gitId":"9teMare"},"content":"                        }","lastModifiedDate":"2022-01-22"},{"lineNumber":347,"author":{"gitId":"9teMare"},"content":"                    }","lastModifiedDate":"2022-01-22"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-01-22"},{"lineNumber":349,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":350,"author":{"gitId":"9teMare"},"content":"            if (tasksOnSameDate \u003d\u003d 0) { //no tasks found","lastModifiedDate":"2022-01-22"},{"lineNumber":351,"author":{"gitId":"9teMare"},"content":"                System.out.println(\"No task found on \" + time + \"!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":352,"author":{"gitId":"9teMare"},"content":"            } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":353,"author":{"gitId":"9teMare"},"content":"                String taskOrTasks \u003d tasksOnSameDate \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2022-01-22"},{"lineNumber":354,"author":{"gitId":"9teMare"},"content":"                System.out.printf(\"Found %d %s with date/time %s.\\n\", tasksOnSameDate, taskOrTasks, time);","lastModifiedDate":"2022-01-22"},{"lineNumber":355,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-22"},{"lineNumber":356,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":357,"author":{"gitId":"9teMare"},"content":"            System.out.println(\"Invalid date time format! Please follow the format yyyy-M-d HHmm!\");","lastModifiedDate":"2022-01-22"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":362,"author":{"gitId":"9teMare"},"content":"        greet();","lastModifiedDate":"2022-01-20"},{"lineNumber":363,"author":{"gitId":"9teMare"},"content":"        createDirectoryAndFileIfNotExist();","lastModifiedDate":"2022-01-20"},{"lineNumber":364,"author":{"gitId":"9teMare"},"content":"        loadFile();","lastModifiedDate":"2022-01-20"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        simpleTodo();","lastModifiedDate":"2022-01-20"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"9teMare":315,"-":52}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"9teMare"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2022-01-21"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"9teMare"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"9teMare"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"9teMare"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"9teMare"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"9teMare"},"content":"import java.util.Locale;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"9teMare"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"9teMare"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"9teMare"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"9teMare"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"9teMare"},"content":"        LocalDate localDate \u003d at.toLocalDate();","lastModifiedDate":"2022-01-21"},{"lineNumber":22,"author":{"gitId":"9teMare"},"content":"        LocalTime localTime \u003d at.toLocalTime();","lastModifiedDate":"2022-01-21"},{"lineNumber":23,"author":{"gitId":"9teMare"},"content":"        String displayDate \u003d String.format(\"%s, %s %s, %s\",","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"9teMare"},"content":"                localDate.getDayOfWeek().toString().substring(0, 1).toUpperCase() + localDate.getDayOfWeek().toString().substring(1).toLowerCase(),","lastModifiedDate":"2022-01-21"},{"lineNumber":25,"author":{"gitId":"9teMare"},"content":"                localDate.getMonth().toString().substring(0, 1).toUpperCase() + localDate.getMonth().toString().substring(1).toLowerCase(),","lastModifiedDate":"2022-01-21"},{"lineNumber":26,"author":{"gitId":"9teMare"},"content":"                localDate.getDayOfMonth(),","lastModifiedDate":"2022-01-21"},{"lineNumber":27,"author":{"gitId":"9teMare"},"content":"                localDate.getYear());","lastModifiedDate":"2022-01-21"},{"lineNumber":28,"author":{"gitId":"9teMare"},"content":"        String displayTime \u003d \"\";","lastModifiedDate":"2022-01-21"},{"lineNumber":29,"author":{"gitId":"9teMare"},"content":"        if (localTime !\u003d LocalTime.MAX) {","lastModifiedDate":"2022-01-21"},{"lineNumber":30,"author":{"gitId":"9teMare"},"content":"            DateFormat inputFormat \u003d new SimpleDateFormat(\"HHmm\");","lastModifiedDate":"2022-01-21"},{"lineNumber":31,"author":{"gitId":"9teMare"},"content":"            DateFormat outputFormat \u003d new SimpleDateFormat(\"hhmma\", Locale.ENGLISH);","lastModifiedDate":"2022-01-21"},{"lineNumber":32,"author":{"gitId":"9teMare"},"content":"            try {","lastModifiedDate":"2022-01-21"},{"lineNumber":33,"author":{"gitId":"9teMare"},"content":"                DecimalFormat timeFormatter \u003d new DecimalFormat(\"00\");","lastModifiedDate":"2022-01-21"},{"lineNumber":34,"author":{"gitId":"9teMare"},"content":"                String time \u003d timeFormatter.format(localTime.getHour()) + timeFormatter.format(localTime.getMinute());","lastModifiedDate":"2022-01-21"},{"lineNumber":35,"author":{"gitId":"9teMare"},"content":"                displayTime \u003d \" \" + outputFormat.format(inputFormat.parse(time));","lastModifiedDate":"2022-01-21"},{"lineNumber":36,"author":{"gitId":"9teMare"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2022-01-21"},{"lineNumber":37,"author":{"gitId":"9teMare"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-01-21"},{"lineNumber":38,"author":{"gitId":"9teMare"},"content":"            }","lastModifiedDate":"2022-01-21"},{"lineNumber":39,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-21"},{"lineNumber":40,"author":{"gitId":"9teMare"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + displayDate + displayTime + \")\";","lastModifiedDate":"2022-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"9teMare"},"content":"    public boolean equals(Object obj){","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"9teMare"},"content":"        if (obj !\u003d null \u0026\u0026 obj.getClass() \u003d\u003d getClass()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"9teMare"},"content":"            Event event \u003d (Event) obj;","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"9teMare"},"content":"            return (event.description.equals(this.description) \u0026\u0026 event.at.equals(this.at));","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"9teMare"},"content":"            return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"9teMare"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"9teMare"},"content":"        return Objects.hash(description, at);","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"9teMare":41,"-":16}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"import java.util.Objects;","lastModifiedDate":"2022-01-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-01-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-01-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":14,"author":{"gitId":"9teMare"},"content":"    public boolean equals(Object obj){","lastModifiedDate":"2022-01-14"},{"lineNumber":15,"author":{"gitId":"9teMare"},"content":"        if (obj !\u003d null \u0026\u0026 obj.getClass() \u003d\u003d getClass()) {","lastModifiedDate":"2022-01-14"},{"lineNumber":16,"author":{"gitId":"9teMare"},"content":"            Todo todo \u003d (Todo) obj;","lastModifiedDate":"2022-01-14"},{"lineNumber":17,"author":{"gitId":"9teMare"},"content":"            return todo.description.equals(this.description);","lastModifiedDate":"2022-01-14"},{"lineNumber":18,"author":{"gitId":"9teMare"},"content":"        } else {","lastModifiedDate":"2022-01-14"},{"lineNumber":19,"author":{"gitId":"9teMare"},"content":"            return false;","lastModifiedDate":"2022-01-14"},{"lineNumber":20,"author":{"gitId":"9teMare"},"content":"        }","lastModifiedDate":"2022-01-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-01-14"},{"lineNumber":24,"author":{"gitId":"9teMare"},"content":"    public int hashCode() {","lastModifiedDate":"2022-01-14"},{"lineNumber":25,"author":{"gitId":"9teMare"},"content":"        return Objects.hash(description);","lastModifiedDate":"2022-01-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-12"}],"authorContributionMap":{"9teMare":11,"-":16}},{"path":"text-ui-test/data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"[T][ ] read book","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"9teMare":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"9teMare"},"content":"todo read book","lastModifiedDate":"2022-01-15"},{"lineNumber":2,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":3,"author":{"gitId":"9teMare"},"content":"mark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":4,"author":{"gitId":"9teMare"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":5,"author":{"gitId":"9teMare"},"content":"deadline return book /by tomorrow","lastModifiedDate":"2022-01-15"},{"lineNumber":6,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":7,"author":{"gitId":"9teMare"},"content":"mark 2","lastModifiedDate":"2022-01-15"},{"lineNumber":8,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":9,"author":{"gitId":"9teMare"},"content":"event watch lecture /at Friday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":10,"author":{"gitId":"9teMare"},"content":"unmark 1","lastModifiedDate":"2022-01-15"},{"lineNumber":11,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":12,"author":{"gitId":"9teMare"},"content":"delete 2","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"9teMare"},"content":"delete 3","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"9teMare"},"content":"blah","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"9teMare"},"content":"todo","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"9teMare"},"content":"deadline","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"9teMare"},"content":"event","lastModifiedDate":"2022-01-15"},{"lineNumber":18,"author":{"gitId":"9teMare"},"content":"deadline finish project","lastModifiedDate":"2022-01-15"},{"lineNumber":19,"author":{"gitId":"9teMare"},"content":"deadline finish project by tomorrow","lastModifiedDate":"2022-01-15"},{"lineNumber":20,"author":{"gitId":"9teMare"},"content":"event party","lastModifiedDate":"2022-01-15"},{"lineNumber":21,"author":{"gitId":"9teMare"},"content":"event party at","lastModifiedDate":"2022-01-15"},{"lineNumber":22,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":23,"author":{"gitId":"9teMare"},"content":"todo read book","lastModifiedDate":"2022-01-15"},{"lineNumber":24,"author":{"gitId":"9teMare"},"content":"event watch lecture /at Friday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":25,"author":{"gitId":"9teMare"},"content":"delete 2","lastModifiedDate":"2022-01-15"},{"lineNumber":26,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":27,"author":{"gitId":"9teMare"},"content":"event watch lecture /at Friday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":28,"author":{"gitId":"9teMare"},"content":"deadline watch lecture /by Friday 2-4pm","lastModifiedDate":"2022-01-15"},{"lineNumber":29,"author":{"gitId":"9teMare"},"content":"mark 3","lastModifiedDate":"2022-01-15"},{"lineNumber":30,"author":{"gitId":"9teMare"},"content":"list","lastModifiedDate":"2022-01-15"},{"lineNumber":31,"author":{"gitId":"9teMare"},"content":"bye","lastModifiedDate":"2022-01-15"}],"authorContributionMap":{"9teMare":31}}]
